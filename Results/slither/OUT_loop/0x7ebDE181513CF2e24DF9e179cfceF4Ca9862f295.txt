Compilation warnings/errors on ./loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol:
./loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol:316:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^
./loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol:218:5: Warning: Function state mutability can be restricted to view
    function getSender(bytes32[] storage _cache)
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Contract locking ether found in :
	Contract HCurve (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#686-898) has payable functions:
	 - HandlerBase.postProcess() (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#255-266)
	 - HCurve.exchange(address,int256,int256,uint256,uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#692-705)
	 - HCurve.exchangeUnderlying(address,int256,int256,uint256,uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#708-727)
	 - HCurve.swap(address,address,uint256,uint256,uint256[],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#730-751)
	 - HCurve.addLiquidity(address,address,uint256[],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#755-802)
	 - HCurve.addLiquidityZap(address,uint256[],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#806-852)
	 - HCurve.removeLiquidityOneCoin(address,address,uint256,int256,uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#856-870)
	 - HCurve.removeLiquidityOneCoinZap(address,uint256,int256,uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#876-897)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
HCurve.exchange(address,int256,int256,uint256,uint256).swap (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#693) shadows:
	- HCurve.swap(address,address,uint256,uint256,uint256[],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#730-751) (function)
HCurve.exchangeUnderlying(address,int256,int256,uint256,uint256).swap (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#709) shadows:
	- HCurve.swap(address,address,uint256,uint256,uint256[],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#730-751) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
HCurve.addLiquidity(address,address,uint256[],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#755-802) has external calls inside a loop: IERC20(curveSwap.coins(int128(i))).safeApprove(address(curveSwap),amounts[i]) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#766-769)
HCurve.addLiquidity(address,address,uint256[],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#755-802) has external calls inside a loop: IERC20(curveSwap.coins(int128(i_scope_2))).safeApprove(address(curveSwap),0) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#794-797)
HCurve.addLiquidityZap(address,uint256[],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#806-852) has external calls inside a loop: IERC20(curveDeposit.underlying_coins(int128(i))).safeApprove(address(curveDeposit),uamounts[i]) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#816-819)
HCurve.addLiquidityZap(address,uint256[],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#806-852) has external calls inside a loop: IERC20(curveDeposit.underlying_coins(int128(i_scope_2))).safeApprove(address(curveDeposit),0) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#844-847)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
Address.isContract(address) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#309-318) uses assembly
	- INLINE ASM (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#316-317)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#8) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#35) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#79) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#155) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#169) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#230) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#249) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#286) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#360) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#520) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#600) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#678) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#348-354):
	- (success) = recipient.call.value(amount)() (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#352)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#653-672):
	- (success,returndata) = address(token).call(data) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#665)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function ICurveDeposit.underlying_coins(int128) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#40) is not in mixedCase
Function ICurveDeposit.add_liquidity(uint256[2],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#45-48) is not in mixedCase
Parameter ICurveDeposit.add_liquidity(uint256[2],uint256).min_mint_amount (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#47) is not in mixedCase
Function ICurveDeposit.add_liquidity(uint256[3],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#51-54) is not in mixedCase
Parameter ICurveDeposit.add_liquidity(uint256[3],uint256).min_mint_amount (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#53) is not in mixedCase
Function ICurveDeposit.add_liquidity(uint256[4],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#57-60) is not in mixedCase
Parameter ICurveDeposit.add_liquidity(uint256[4],uint256).min_mint_amount (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#59) is not in mixedCase
Function ICurveDeposit.remove_liquidity_one_coin(uint256,int128,uint256,bool) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#63-68) is not in mixedCase
Parameter ICurveDeposit.remove_liquidity_one_coin(uint256,int128,uint256,bool)._token_amount (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#64) is not in mixedCase
Parameter ICurveDeposit.remove_liquidity_one_coin(uint256,int128,uint256,bool).min_uamount (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#66) is not in mixedCase
Parameter ICurveDeposit.remove_liquidity_one_coin(uint256,int128,uint256,bool).donate_dust (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#67) is not in mixedCase
Function ICurveDeposit.calc_withdraw_one_coin(uint256,int128) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#70-73) is not in mixedCase
Parameter ICurveDeposit.calc_withdraw_one_coin(uint256,int128)._token_amount (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#70) is not in mixedCase
Function ICurveSwap.underlying_coins(int128) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#84) is not in mixedCase
Function ICurveSwap.get_dy(int128,int128,uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#86-90) is not in mixedCase
Parameter ICurveSwap.exchange(int128,int128,uint256,uint256).min_dy (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#96) is not in mixedCase
Function ICurveSwap.get_dy_underlying(int128,int128,uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#99-103) is not in mixedCase
Function ICurveSwap.exchange_underlying(int128,int128,uint256,uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#105-110) is not in mixedCase
Parameter ICurveSwap.exchange_underlying(int128,int128,uint256,uint256).min_dy (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#109) is not in mixedCase
Function ICurveSwap.add_liquidity(uint256[2],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#113-114) is not in mixedCase
Parameter ICurveSwap.add_liquidity(uint256[2],uint256).min_mint_amount (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#113) is not in mixedCase
Function ICurveSwap.add_liquidity(uint256[3],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#117-118) is not in mixedCase
Parameter ICurveSwap.add_liquidity(uint256[3],uint256).min_mint_amount (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#117) is not in mixedCase
Function ICurveSwap.add_liquidity(uint256[4],uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#121-122) is not in mixedCase
Parameter ICurveSwap.add_liquidity(uint256[4],uint256).min_mint_amount (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#121) is not in mixedCase
Function ICurveSwap.calc_token_amount(uint256[2],bool) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#124-127) is not in mixedCase
Function ICurveSwap.calc_token_amount(uint256[3],bool) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#129-132) is not in mixedCase
Function ICurveSwap.calc_token_amount(uint256[4],bool) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#134-137) is not in mixedCase
Function ICurveSwap.remove_liquidity_one_coin(uint256,int128,uint256) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#140-144) is not in mixedCase
Parameter ICurveSwap.remove_liquidity_one_coin(uint256,int128,uint256)._token_amount (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#141) is not in mixedCase
Parameter ICurveSwap.remove_liquidity_one_coin(uint256,int128,uint256).min_amount (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#143) is not in mixedCase
Function ICurveSwap.calc_withdraw_one_coin(uint256,int128) (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#146-149) is not in mixedCase
Parameter ICurveSwap.calc_withdraw_one_coin(uint256,int128)._token_amount (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#146) is not in mixedCase
Parameter LibCache.setAddress(bytes32[],address)._cache (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#173) is not in mixedCase
Parameter LibCache.setAddress(bytes32[],address)._input (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#173) is not in mixedCase
Parameter LibCache.set(bytes32[],bytes32)._cache (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#177) is not in mixedCase
Parameter LibCache.set(bytes32[],bytes32)._input (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#177) is not in mixedCase
Parameter LibCache.setHandlerType(bytes32[],uint256)._cache (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#181) is not in mixedCase
Parameter LibCache.setHandlerType(bytes32[],uint256)._input (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#181) is not in mixedCase
Parameter LibCache.setSender(bytes32[],address)._cache (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#186) is not in mixedCase
Parameter LibCache.setSender(bytes32[],address)._input (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#186) is not in mixedCase
Parameter LibCache.getAddress(bytes32[])._cache (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#191) is not in mixedCase
Parameter LibCache.getSig(bytes32[])._cache (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#199) is not in mixedCase
Parameter LibCache.get(bytes32[])._cache (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#204) is not in mixedCase
Parameter LibCache.peek(bytes32[])._cache (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#209) is not in mixedCase
Parameter LibCache.getSender(bytes32[])._cache (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#218) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Config.POSTPROCESS_SIG (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#160) is never used in HCurve (loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol#686-898)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Slither:./loops/0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol analyzed (12 contracts with 46 detectors), 70 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x7ebDE181513CF2e24DF9e179cfceF4Ca9862f295.sol
Tool Runtime = 1.0023035090016492 seconds
#############################################