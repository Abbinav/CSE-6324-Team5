INFO:Detectors:[93m
EIP20NonStandardInterface (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#680-742) has incorrect ERC20 function interface:EIP20NonStandardInterface.transfer(address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#706)
EIP20NonStandardInterface (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#680-742) has incorrect ERC20 function interface:EIP20NonStandardInterface.transferFrom(address,address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#720)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
CToken.accrueInterest() (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1411-1475) uses a dangerous strict equality:
	- assert(bool)(vars.mathErr == MathError.NO_ERROR) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1426)
CToken.balanceOfUnderlying(address) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1179-1184) uses a dangerous strict equality:
	- require(bool)(mErr == MathError.NO_ERROR) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1182)
CToken.borrowBalanceStored(address) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1284-1288) uses a dangerous strict equality:
	- require(bool,string)(err == MathError.NO_ERROR,borrowBalanceStored: borrowBalanceStoredInternal failed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1286)
CToken.borrowFresh(address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1764-1829) uses a dangerous strict equality:
	- require(bool,string)(vars.err == Error.NO_ERROR,borrow transfer out failed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1815)
CToken.borrowRatePerBlock() (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1224-1228) uses a dangerous strict equality:
	- require(bool,string)(opaqueErr == 0,borrowRatePerBlock: interestRateModel.borrowRate failed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1226)
CEther.checkTransferIn(address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2511-2516) uses a dangerous strict equality:
	- require(bool,string)(msg.value == amount,value mismatch) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2514)
CToken.constructor(ComptrollerInterface,InterestRateModel,uint256,string,string,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1017-1045) uses a dangerous strict equality:
	- require(bool,string)(err == uint256(Error.NO_ERROR),Setting comptroller failed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1032)
CToken.constructor(ComptrollerInterface,InterestRateModel,uint256,string,string,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1017-1045) uses a dangerous strict equality:
	- require(bool,string)(err == uint256(Error.NO_ERROR),Setting interest rate model failed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1040)
CarefulMath.divUInt(uint256,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#339-345) uses a dangerous strict equality:
	- b == 0 (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#340)
CEther.doTransferIn(address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2524-2529) uses a dangerous strict equality:
	- require(bool,string)(msg.value == amount,value mismatch) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2527)
CToken.exchangeRateStored() (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1341-1345) uses a dangerous strict equality:
	- require(bool,string)(err == MathError.NO_ERROR,exchangeRateStored: exchangeRateStoredInternal failed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1343)
CToken.exchangeRateStoredInternal() (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1352-1381) uses a dangerous strict equality:
	- totalSupply == 0 (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1353)
CEther.getCashPrior() (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2498-2502) uses a dangerous strict equality:
	- require(bool)(err == MathError.NO_ERROR) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2500)
Exponential.mulExp(Exponential.Exp,Exponential.Exp) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#527-547) uses a dangerous strict equality:
	- assert(bool)(err2 == MathError.NO_ERROR) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#544)
CarefulMath.mulUInt(uint256,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#322-334) uses a dangerous strict equality:
	- a == 0 (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#323)
CToken.redeemFresh(address,uint256,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1638-1734) uses a dangerous strict equality:
	- require(bool,string)(vars.err == Error.NO_ERROR,redeem transfer out failed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1720)
CToken.repayBorrowFresh(address,address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1879-1956) uses a dangerous strict equality:
	- require(bool,string)(vars.err == Error.NO_ERROR,repay borrow transfer in failed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1942)
CEther.requireNoError(uint256,string) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2537-2556) uses a dangerous strict equality:
	- errCode == uint256(Error.NO_ERROR) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2538)
CEther.requireNoError(uint256,string) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2537-2556) uses a dangerous strict equality:
	- require(bool,string)(errCode == uint256(Error.NO_ERROR),string(fullMessage)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2555)
CToken.supplyRatePerBlock() (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1234-1258) uses a dangerous strict equality:
	- require(bool,string)(e0 == 0,supplyRatePerBlock: calculating borrowRate failed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1243)
CToken.supplyRatePerBlock() (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1234-1258) uses a dangerous strict equality:
	- require(bool,string)(e1 == MathError.NO_ERROR,supplyRatePerBlock: calculating underlying failed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1246)
CToken.supplyRatePerBlock() (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1234-1258) uses a dangerous strict equality:
	- require(bool,string)(e2 == MathError.NO_ERROR,supplyRatePerBlock: calculating borrowsPer failed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1249)
CToken.supplyRatePerBlock() (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1234-1258) uses a dangerous strict equality:
	- require(bool,string)(e3 == MathError.NO_ERROR,supplyRatePerBlock: calculating oneMinusReserveFactor failed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1252)
CToken.supplyRatePerBlock() (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1234-1258) uses a dangerous strict equality:
	- require(bool,string)(e4 == MathError.NO_ERROR,supplyRatePerBlock: calculating supplyRate failed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1255)
CToken.transfer(address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1124-1126) uses a dangerous strict equality:
	- transferTokens(msg.sender,msg.sender,dst,amount) == uint256(Error.NO_ERROR) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1125)
CToken.transferFrom(address,address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1135-1137) uses a dangerous strict equality:
	- transferTokens(msg.sender,src,dst,amount) == uint256(Error.NO_ERROR) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1136)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in CToken.liquidateBorrowInternal(address,uint256,CToken) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1966-1981):
	External calls:
	- error = cTokenCollateral.accrueInterest() (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1973)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1980)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1881)
		- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1994)
		- seizeError = cTokenCollateral.seize(liquidator,borrower,seizeTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2042)
		- comptroller.liquidateBorrowVerify(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount,seizeTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2049)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.repayAmount,vars.borrowerIndex) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1953)
	State variables written after the call(s):
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1980)
		- totalBorrows = vars.totalBorrowsNew (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1947)
Reentrancy in CToken.redeemFresh(address,uint256,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1638-1734):
	External calls:
	- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1678)
	State variables written after the call(s):
	- totalSupply = vars.totalSupplyNew (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1723)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
CToken.accrueInterest().vars (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1412) is a local variable never initialized
CToken.redeemFresh(address,uint256,uint256).vars (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1641) is a local variable never initialized
CToken.mintFresh(address,uint256).vars (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1521) is a local variable never initialized
CToken.borrowFresh(address,uint256).vars (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1781) is a local variable never initialized
CToken.repayBorrowFresh(address,address,uint256).vars (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1891) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Reentrancy in CToken.borrowFresh(address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1764-1829):
	External calls:
	- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1766)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1818)
	- accountBorrows[borrower].interestIndex = borrowIndex (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1819)
	- totalBorrows = vars.totalBorrowsNew (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1820)
Reentrancy in CToken.mintFresh(address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1509-1586):
	External calls:
	- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1511)
	State variables written after the call(s):
	- accountTokens[minter] = vars.accountTokensNew (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1576)
	- totalSupply = vars.totalSupplyNew (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1575)
Reentrancy in CToken.redeemFresh(address,uint256,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1638-1734):
	External calls:
	- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1678)
	State variables written after the call(s):
	- accountTokens[redeemer] = vars.accountTokensNew (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1724)
Reentrancy in CToken.repayBorrowFresh(address,address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1879-1956):
	External calls:
	- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1881)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1945)
	- accountBorrows[borrower].interestIndex = borrowIndex (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1946)
	- totalBorrows = vars.totalBorrowsNew (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1947)
Reentrancy in CToken.seize(address,address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2063-2109):
	External calls:
	- allowed = comptroller.seizeAllowed(address(this),msg.sender,liquidator,borrower,seizeTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2065)
	State variables written after the call(s):
	- accountTokens[borrower] = borrowerTokensNew (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2099)
	- accountTokens[liquidator] = liquidatorTokensNew (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2100)
Reentrancy in CToken.transferTokens(address,address,address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1056-1116):
	External calls:
	- allowed = comptroller.transferAllowed(address(this),src,dst,tokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1058)
	State variables written after the call(s):
	- accountTokens[src] = srcTokensNew (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1101)
	- accountTokens[dst] = dstTokensNew (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1102)
	- transferAllowances[src][spender] = allowanceNew (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1106)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in CToken.borrowFresh(address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1764-1829):
	External calls:
	- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1766)
	Event emitted after the call(s):
	- Borrow(borrower,borrowAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1823)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.BORROW_COMPTROLLER_REJECTION,allowed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1768)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1795)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1790)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.BORROW_CASH_NOT_AVAILABLE) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1778)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.BORROW_FRESHNESS_CHECK) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1773)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1800)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CToken) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1992-2052):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1994)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_ZERO) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2016)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.TOKEN_INSUFFICIENT_BALANCE,FailureInfo.LIQUIDATE_SEIZE_TOO_MUCH) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2032)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2021)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.COMPTROLLER_CALCULATION_ERROR,FailureInfo.LIQUIDATE_COMPTROLLER_CALCULATE_AMOUNT_SEIZE_FAILED,amountSeizeError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2027)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.LIQUIDATE_COMPTROLLER_REJECTION,allowed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1996)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_LIQUIDATOR_IS_BORROWER) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2011)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_FRESHNESS_CHECK) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2001)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_COLLATERAL_FRESHNESS_CHECK) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2006)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CToken) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1992-2052):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1994)
	- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2036)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1881)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.repayAmount,vars.borrowerIndex) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1953)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2036)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(TokenErrorReporter.Error(repayBorrowError),FailureInfo.LIQUIDATE_REPAY_BORROW_FRESH_FAILED) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2038)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2036)
	- RepayBorrow(payer,borrower,vars.repayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1950)
		- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2036)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CToken) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1992-2052):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1994)
	- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2036)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1881)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.repayAmount,vars.borrowerIndex) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1953)
	- seizeError = cTokenCollateral.seize(liquidator,borrower,seizeTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2042)
	Event emitted after the call(s):
	- LiquidateBorrow(liquidator,borrower,repayAmount,address(cTokenCollateral),seizeTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2046)
Reentrancy in CToken.liquidateBorrowInternal(address,uint256,CToken) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1966-1981):
	External calls:
	- error = cTokenCollateral.accrueInterest() (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1973)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(TokenErrorReporter.Error(error),FailureInfo.LIQUIDATE_ACCRUE_COLLATERAL_INTEREST_FAILED) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1976)
Reentrancy in CToken.liquidateBorrowInternal(address,uint256,CToken) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1966-1981):
	External calls:
	- error = cTokenCollateral.accrueInterest() (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1973)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1980)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1881)
		- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1994)
		- seizeError = cTokenCollateral.seize(liquidator,borrower,seizeTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2042)
		- comptroller.liquidateBorrowVerify(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount,seizeTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2049)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.repayAmount,vars.borrowerIndex) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1953)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1980)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1980)
	- LiquidateBorrow(liquidator,borrower,repayAmount,address(cTokenCollateral),seizeTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2046)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1980)
	- RepayBorrow(payer,borrower,vars.repayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1950)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1980)
Reentrancy in CToken.mintFresh(address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1509-1586):
	External calls:
	- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1511)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.MATH_ERROR,FailureInfo.MINT_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1550)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.MATH_ERROR,FailureInfo.MINT_EXCHANGE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1540)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.MINT_FRESHNESS_CHECK) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1518)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(vars.err,FailureInfo.MINT_TRANSFER_IN_FAILED) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1571)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.MATH_ERROR,FailureInfo.MINT_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1555)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.MATH_ERROR,FailureInfo.MINT_EXCHANGE_RATE_READ_FAILED,uint256(vars.mathErr)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1535)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(vars.err,FailureInfo.MINT_TRANSFER_IN_NOT_POSSIBLE) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1526)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.MINT_COMPTROLLER_REJECTION,allowed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1513)
	- Mint(minter,mintAmount,vars.mintTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1579)
	- Transfer(address(this),minter,vars.mintTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1580)
Reentrancy in CToken.redeemFresh(address,uint256,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1638-1734):
	External calls:
	- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1678)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.REDEEM_FRESHNESS_CHECK) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1685)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1695)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REDEEM_COMPTROLLER_REJECTION,allowed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1680)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1700)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.REDEEM_TRANSFER_OUT_NOT_POSSIBLE) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1705)
	- Redeem(redeemer,vars.redeemAmount,vars.redeemTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1728)
	- Transfer(redeemer,address(this),vars.redeemTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1727)
Reentrancy in CToken.repayBorrowFresh(address,address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1879-1956):
	External calls:
	- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1881)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REPAY_BORROW_COMPTROLLER_REJECTION,allowed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1883)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1899)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REPAY_BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1927)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(vars.err,FailureInfo.REPAY_BORROW_TRANSFER_IN_NOT_POSSIBLE) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1912)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.REPAY_BORROW_FRESHNESS_CHECK) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1888)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REPAY_BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1922)
	- RepayBorrow(payer,borrower,vars.repayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1950)
Reentrancy in CToken.seize(address,address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2063-2109):
	External calls:
	- allowed = comptroller.seizeAllowed(address(this),msg.sender,liquidator,borrower,seizeTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2065)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.MATH_ERROR,FailureInfo.LIQUIDATE_SEIZE_BALANCE_DECREMENT_FAILED,uint256(mathErr)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2086)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.LIQUIDATE_SEIZE_COMPTROLLER_REJECTION,allowed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2067)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.MATH_ERROR,FailureInfo.LIQUIDATE_SEIZE_BALANCE_INCREMENT_FAILED,uint256(mathErr)) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2091)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_SEIZE_LIQUIDATOR_IS_BORROWER) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2072)
	- Transfer(borrower,liquidator,seizeTokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2103)
Reentrancy in CToken.transferTokens(address,address,address,uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1056-1116):
	External calls:
	- allowed = comptroller.transferAllowed(address(this),src,dst,tokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1058)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.MATH_ERROR,FailureInfo.TRANSFER_NOT_ENOUGH) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1089)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.BAD_INPUT,FailureInfo.TRANSFER_NOT_ALLOWED) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1065)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.MATH_ERROR,FailureInfo.TRANSFER_TOO_MUCH) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1094)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#290)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.TRANSFER_COMPTROLLER_REJECTION,allowed) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1060)
	- Failure(uint256(err),uint256(info),0) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#281)
		- fail(Error.MATH_ERROR,FailureInfo.TRANSFER_NOT_ALLOWED) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1084)
	- Transfer(src,dst,tokens) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#1110)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#12) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#91) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#299) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#388) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#610) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#673) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#747) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#783) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#816) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2391) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Constant Exponential.expScale (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#399) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.halfExpScale (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#400) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.mantissaOne (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#401) is not in UPPER_CASE_WITH_UNDERSCORES
Function CToken._setPendingAdmin(address) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2122-2138) is not in mixedCase
Function CToken._acceptAdmin() (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2145-2165) is not in mixedCase
Function CToken._setComptroller(ComptrollerInterface) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2172-2189) is not in mixedCase
Function CToken._setReserveFactor(uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2196-2204) is not in mixedCase
Function CToken._reduceReserves(uint256) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2241-2249) is not in mixedCase
Function CToken._setInterestRateModel(InterestRateModel) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2311-2319) is not in mixedCase
Constant CToken.isCToken (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#834) is not in UPPER_CASE_WITH_UNDERSCORES
Constant CToken.borrowRateMaxMantissa (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#854) is not in UPPER_CASE_WITH_UNDERSCORES
Constant CToken.reserveFactorMaxMantissa (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#859) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
_setInterestRateModel(InterestRateModel) should be declared external:
	- CToken._setInterestRateModel(InterestRateModel) (loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol#2311-2319)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol analyzed (11 contracts with 46 detectors), 76 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x7b4a7fd41c688a7cb116534e341e44126ef5a0fd.sol
Tool Runtime = 28.616268595000292 seconds
#############################################