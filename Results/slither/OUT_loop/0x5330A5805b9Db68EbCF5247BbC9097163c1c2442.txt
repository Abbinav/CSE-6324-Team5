INFO:Detectors:[91m
PaymentSplitter.release(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#772-785) sends eth to arbitrary user
	Dangerous calls:
	- account.transfer(payment) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#783)
RefundEscrow.beneficiaryWithdraw() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#883-886) sends eth to arbitrary user
	Dangerous calls:
	- _beneficiary.transfer(address(this).balance) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#885)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[92m
ERC20Detailed.constructor(string,string,uint8).name (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#584) shadows:
	- ERC20Detailed.name() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#593-595) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#584) shadows:
	- ERC20Detailed.symbol() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#600-602) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#584) shadows:
	- ERC20Detailed.decimals() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#607-609) (function)
PaymentSplitter.constructor(address[],uint256[]).shares (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#717) shadows:
	- PaymentSplitter.shares(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#750-752) (function)
RefundEscrow.constructor(address).beneficiary (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#832) shadows:
	- RefundEscrow.beneficiary() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#848-850) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#10) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Parameter ERC20Frozenable.frozenAccount(address)._address (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#553) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Reentrancy in PaymentSplitter.release(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#772-785):
	External calls:
	- account.transfer(payment) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#783)
	Event emitted after the call(s):
	- PaymentReleased(account,payment) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#784)
Reentrancy in Escrow.withdraw(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#651-659):
	External calls:
	- payee.transfer(payment) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#656)
	Event emitted after the call(s):
	- Withdrawn(payee,payment) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#658)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4[0m
INFO:Detectors:[92m
Blocks.constructor() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#900-906) uses literals with too many digits:
	- supply = 3000000000 (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#903)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
owner() should be declared external:
	- Ownable.owner() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#34-36)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#60-63)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#69-71)
primary() should be declared external:
	- Secondary.primary() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#114-116)
transferPrimary(address) should be declared external:
	- Secondary.transferPrimary(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#122-126)
totalSupply() should be declared external:
	- ERC20.totalSupply() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#258-260)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#267-269)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#277-279)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#286-289)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#300-303)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#313-317)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#329-332)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#344-347)
burn(uint256) should be declared external:
	- ERC20Burnable.burn(uint256) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#431-433)
burnFrom(address,uint256) should be declared external:
	- ERC20Burnable.burnFrom(address,uint256) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#440-442)
addMinter(address) should be declared external:
	- MinterRole.addMinter(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#506-508)
renounceMinter() should be declared external:
	- MinterRole.renounceMinter() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#510-512)
mint(address,uint256) should be declared external:
	- ERC20Mintable.mint(address,uint256) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#538-541)
frozenAccount(address) should be declared external:
	- ERC20Frozenable.frozenAccount(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#553-555)
freezeAccount(address,bool) should be declared external:
	- ERC20Frozenable.freezeAccount(address,bool) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#557-561)
name() should be declared external:
	- ERC20Detailed.name() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#593-595)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#600-602)
depositsOf(address) should be declared external:
	- Escrow.depositsOf(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#632-634)
withdrawPayments(address) should be declared external:
	- PullPayment.withdrawPayments(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#678-680)
payments(address) should be declared external:
	- PullPayment.payments(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#686-688)
totalShares() should be declared external:
	- PaymentSplitter.totalShares() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#736-738)
totalReleased() should be declared external:
	- PaymentSplitter.totalReleased() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#743-745)
shares(address) should be declared external:
	- PaymentSplitter.shares(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#750-752)
released(address) should be declared external:
	- PaymentSplitter.released(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#757-759)
payee(uint256) should be declared external:
	- PaymentSplitter.payee(uint256) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#764-766)
release(address) should be declared external:
	- PaymentSplitter.release(address) (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#772-785)
state() should be declared external:
	- RefundEscrow.state() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#841-843)
beneficiary() should be declared external:
	- RefundEscrow.beneficiary() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#848-850)
close() should be declared external:
	- RefundEscrow.close() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#865-869)
enableRefunds() should be declared external:
	- RefundEscrow.enableRefunds() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#874-878)
beneficiaryWithdraw() should be declared external:
	- RefundEscrow.beneficiaryWithdraw() (loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol#883-886)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol analyzed (17 contracts with 46 detectors), 49 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x5330A5805b9Db68EbCF5247BbC9097163c1c2442.sol
Tool Runtime = 2.4202211949996126 seconds
#############################################