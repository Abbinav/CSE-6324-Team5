Compilation warnings/errors on ./loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol:
./loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol:732:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[93m
StakingRewards.notifyRewardAmount(uint256) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1384-1424) performs a multiplication on the result of a division:
	-rewardRate = reward.div(rewardsDuration) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1388)
	-leftover = remaining.mul(rewardRate) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1394)
PaletteRewards.palletteEarned(address) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1576-1608) performs a multiplication on the result of a division:
	-pallettes[account].add(block.timestamp.sub(palletteLastUpdateTime[account]).mul(1000000000000000000).div(86400).mul(paletteStaked.div(1000000000000000000))) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1594-1606)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
Reentrancy in StakingFactory.deployKnv(address,address,uint256) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1702-1726):
	External calls:
	- genPool.transferOwnership(msg.sender) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1714)
	State variables written after the call(s):
	- info.stakingRewards = address(genPool) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1718)
	- info.rewardAmount = rewardAmount (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1720)
Reentrancy in StakingRewards.exit() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1370-1376):
	External calls:
	- withdraw(_balances[msg.sender]) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1372)
		- stakingToken.safeTransfer(msg.sender,amount) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1342)
		- (success,returndata) = address(token).call(data) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#934)
	- getReward() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1374)
		- rewardsToken.safeTransfer(msg.sender,reward) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1360)
		- (success,returndata) = address(token).call(data) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#934)
	State variables written after the call(s):
	- getReward() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1374)
		- _notEntered = false (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1120)
		- _notEntered = true (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1132)
	- getReward() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1374)
		- lastUpdateTime = lastTimeRewardApplicable() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1436)
	- getReward() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1374)
		- rewardPerTokenStored = rewardPerToken() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1434)
	- getReward() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1374)
		- rewards[msg.sender] = 0 (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1358)
		- rewards[account] = earned(account) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1440)
	- getReward() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1374)
		- userRewardPerTokenPaid[account] = rewardPerTokenStored (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1442)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in StakingFactory.deployKnv(address,address,uint256) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1702-1726):
	External calls:
	- genPool.transferOwnership(msg.sender) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1714)
	State variables written after the call(s):
	- stakingTokens.push(stakingToken) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1724)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in StakingRewards.exit() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1370-1376):
	External calls:
	- withdraw(_balances[msg.sender]) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1372)
		- stakingToken.safeTransfer(msg.sender,amount) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1342)
		- (success,returndata) = address(token).call(data) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#934)
	- getReward() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1374)
		- rewardsToken.safeTransfer(msg.sender,reward) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1360)
		- (success,returndata) = address(token).call(data) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#934)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1362)
		- getReward() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1374)
Reentrancy in StakingRewards.getReward() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1352-1366):
	External calls:
	- rewardsToken.safeTransfer(msg.sender,reward) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1360)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1362)
Reentrancy in PaletteRewards.redeem(uint256) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1554-1572):
	External calls:
	- _kanvaNft.mint(_msgSender(),card,1,) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1566)
	Event emitted after the call(s):
	- Redeemed(_msgSender(),cards[card]) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1570)
Reentrancy in StakingRewards.stake(uint256) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1312-1328):
	External calls:
	- stakingToken.safeTransferFrom(msg.sender,address(this),amount) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1322)
	Event emitted after the call(s):
	- Staked(msg.sender,amount) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1326)
Reentrancy in StakingRewards.withdraw(uint256) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1332-1348):
	External calls:
	- stakingToken.safeTransfer(msg.sender,amount) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1342)
	Event emitted after the call(s):
	- Withdrawn(msg.sender,amount) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1346)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
StakingRewards.getReward() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1352-1366) uses timestamp for comparisons
	Dangerous comparisons:
	- reward > 0 (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1356)
StakingRewards.notifyRewardAmount(uint256) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1384-1424) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= periodFinish (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1386)
	- require(bool,string)(rewardRate <= balance.div(rewardsDuration),Provided reward too high) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1412)
PaletteRewards.redeem(uint256) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1554-1572) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(pallettes[_msgSender()] >= cards[card],redeem: Not enough points to redeem for card!) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1558)
StakingFactory.constructor(address,uint256) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1654-1670) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_stakingRewardsGenesis >= block.timestamp,constructor: genesis too soon) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1662)
StakingFactory.notifyRewardAmount(address) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1756-1782) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= stakingRewardsGenesis,notifyRewardAmount: not ready) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1758)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Address.isContract(address) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#718-736) uses assembly
	- INLINE ASM (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#732-734)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#10) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#796-808):
	- (success) = recipient.call.value(amount)() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#804)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#910-948):
	- (success,returndata) = address(token).call(data) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#934)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Variable StakingRewards._totalSupply (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1208) is not in mixedCase
Variable StakingRewards._balances (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1210) is not in mixedCase
Variable PaletteRewards._kanvaNft (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1474) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
StakingRewards.rewardsDuration (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1194) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
owner() should be declared external:
	- Ownable.owner() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#268-272)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#320-326)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#338-342)
redeem(uint256) should be declared external:
	- PaletteRewards.redeem(uint256) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1554-1572)
deploy(address,uint256) should be declared external:
	- StakingFactory.deploy(address,uint256) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1682-1698)
deployKnv(address,address,uint256) should be declared external:
	- StakingFactory.deployKnv(address,address,uint256) (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1702-1726)
notifyRewardAmounts() should be declared external:
	- StakingFactory.notifyRewardAmounts() (loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol#1736-1748)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol analyzed (14 contracts with 46 detectors), 31 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x9745c690b1e581349c4e694751d0ae38fe37e32b.sol
Tool Runtime = 1.8222575590007182 seconds
#############################################