Compilation warnings/errors on ./loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol:
./loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol:617:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[91m
LiquidityPoolV2.withdraw(address,IKToken,uint256) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1451-1464) sends eth to arbitrary user
	Dangerous calls:
	- (success) = _to.call.value(amount)() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1460)
LiquidityPoolV2.borrow(address,uint256,bytes) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1473-1495) sends eth to arbitrary user
	Dangerous calls:
	- (success) = msg.sender.call.value(_amount)() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1479)
	- (success) = feePool.call.value(poolFee)() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1492)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
InitializableUpgradeabilityProxy.initialize(address,bytes) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1300-1308) uses delegatecall to a input-controlled function id
	- (success) = _logic.delegatecall(_data) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1305)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#controlled-delegatecall[0m
INFO:Detectors:[91m
ERC20.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#586) shadows:
	- Initializable.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#103)
ReentrancyGuard.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#873) shadows:
	- Initializable.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#103)
PauserRole.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#917) shadows:
	- Initializable.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#103)
Pausable.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#991) shadows:
	- PauserRole.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#917)
	- Initializable.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#103)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing[0m
INFO:Detectors:[93m
LiquidityPoolV2.underlyingBalance(address,address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1515-1522) uses a dangerous strict equality:
	- kBalance == 0 (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1518)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
LiquidityPoolV2.updateDepositFee(uint256) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1378-1381) contains a tautology or contradiction:
	- require(bool,string)(_depositFeeInBips >= 0 && _depositFeeInBips <= FEE_BASE,LiquidityPoolV1: fee should be between 0 and FEE_BASE) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1379)
LiquidityPoolV2.updatePoolFee(uint256) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1390-1393) contains a tautology or contradiction:
	- require(bool,string)(_poolFeeInBips >= 0 && _poolFeeInBips <= FEE_BASE,LiquidityPoolV1: fee should be between 0 and FEE_BASE) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1391)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction[0m
INFO:Detectors:[93m
LiquidityPoolV2.borrow(address,uint256,bytes).success_scope_0 (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1492) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
LiquidityPoolV2.deposit(address,uint256) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1426-1442) ignores return value by kToken.mint(msg.sender,mintAmount) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1438)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
InitializableAdminUpgradeabilityProxy.initialize(address,address,bytes)._admin (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1326) shadows:
	- BaseAdminUpgradeabilityProxy._admin() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1258-1263) (function)
LiquidityPoolV2.deposit(address,uint256).kToken (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1427) shadows:
	- LiquidityPoolV2.kToken(address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1546-1548) (function)
	- ILiquidityPool.kToken(address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#28) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
LiquidityPoolV2.migrate(ILiquidityPool) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1529-1543) has external calls inside a loop: kTokens[token].addMinter(address(_newLP)) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1532)
LiquidityPoolV2.migrate(ILiquidityPool) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1529-1543) has external calls inside a loop: kTokens[token].renounceMinter() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1533)
LiquidityPoolV2.migrate(ILiquidityPool) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1529-1543) has external calls inside a loop: _newLP.register(kTokens[token]) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1534)
LiquidityPoolV2.migrate(ILiquidityPool) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1529-1543) has external calls inside a loop: (success) = address(_newLP).call.value(borrowableBalance(token))() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1538)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in LiquidityPoolV2.borrow(address,uint256,bytes) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1473-1495):
	External calls:
	- ERC20(_token).safeTransfer(msg.sender,_amount) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1477)
	- (success) = msg.sender.call.value(_amount)() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1479)
	- borrower.lend(msg.sender,_data) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1482)
	External calls sending eth:
	- (success) = msg.sender.call.value(_amount)() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1479)
	Event emitted after the call(s):
	- Borrowed(msg.sender,_token,_amount,fee.sub(poolFee)) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1488)
Reentrancy in LiquidityPoolV2.deposit(address,uint256) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1426-1442):
	External calls:
	- ERC20(_token).safeTransferFrom(msg.sender,address(this),_amount) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1432)
	- kToken.mint(msg.sender,mintAmount) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1438)
	Event emitted after the call(s):
	- Deposited(msg.sender,_token,_amount,mintAmount) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1439)
Reentrancy in LiquidityPoolV2.withdraw(address,IKToken,uint256) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1451-1464):
	External calls:
	- _kToken.burnFrom(msg.sender,_kTokenAmount) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1456)
	- ERC20(token).safeTransfer(_to,amount) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1458)
	- (success) = _to.call.value(amount)() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1460)
	External calls sending eth:
	- (success) = _to.call.value(amount)() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1460)
	Event emitted after the call(s):
	- Withdrew(_to,msg.sender,token,amount,_kTokenAmount) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1463)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Initializable.isConstructor() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#90-100) uses assembly
	- INLINE ASM (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#98-99)
Address.isContract(address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#610-619) uses assembly
	- INLINE ASM (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#617-618)
Proxy._delegate(address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1021-1040) uses assembly
	- INLINE ASM (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1022-1040)
OpenZeppelinUpgradesAddress.isContract(address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1076-1087) uses assembly
	- INLINE ASM (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1085-1086)
BaseUpgradeabilityProxy._implementation() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1114-1119) uses assembly
	- INLINE ASM (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1116-1119)
BaseUpgradeabilityProxy._setImplementation(address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1134-1142) uses assembly
	- INLINE ASM (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1139-1142)
BaseAdminUpgradeabilityProxy._admin() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1258-1263) uses assembly
	- INLINE ASM (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1260-1263)
BaseAdminUpgradeabilityProxy._setAdmin(address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1269-1275) uses assembly
	- INLINE ASM (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1272-1275)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#10) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#649-655):
	- (success) = recipient.call.value(amount)() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#653)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#706-725):
	- (success,returndata) = address(token).call(data) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#718)
Low level call in CanReclaimTokens.recoverTokens(address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#819-834):
	- (success) = msg.sender.call.value(address(this).balance)() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#826)
Low level call in UpgradeabilityProxy.constructor(address,bytes) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1159-1166):
	- (success) = _logic.delegatecall(_data) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1163)
Low level call in BaseAdminUpgradeabilityProxy.upgradeToAndCall(address,bytes) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1249-1253):
	- (success) = newImplementation.delegatecall(data) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1251)
Low level call in InitializableUpgradeabilityProxy.initialize(address,bytes) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1300-1308):
	- (success) = _logic.delegatecall(_data) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1305)
Low level call in LiquidityPoolV2.withdraw(address,IKToken,uint256) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1451-1464):
	- (success) = _to.call.value(amount)() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1460)
Low level call in LiquidityPoolV2.borrow(address,uint256,bytes) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1473-1495):
	- (success) = msg.sender.call.value(_amount)() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1479)
	- (success) = feePool.call.value(poolFee)() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1492)
Low level call in LiquidityPoolV2.migrate(ILiquidityPool) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1529-1543):
	- (success) = address(_newLP).call.value(borrowableBalance(token))() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1538)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Variable Initializable.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#103) is not in mixedCase
Variable ERC20.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#586) is not in mixedCase
Parameter KRoles.initialize(address)._operator (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#772) is not in mixedCase
Parameter CanReclaimTokens.initialize(address)._nextOwner (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#809) is not in mixedCase
Parameter CanReclaimTokens.blacklistRecoverableToken(address)._token (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#813) is not in mixedCase
Parameter CanReclaimTokens.recoverTokens(address)._token (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#819) is not in mixedCase
Variable ReentrancyGuard.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#873) is not in mixedCase
Variable PauserRole.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#917) is not in mixedCase
Variable Pausable.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#991) is not in mixedCase
Parameter InitializableUpgradeabilityProxy.initialize(address,bytes)._logic (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1300) is not in mixedCase
Parameter InitializableUpgradeabilityProxy.initialize(address,bytes)._data (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1300) is not in mixedCase
Parameter InitializableAdminUpgradeabilityProxy.initialize(address,address,bytes)._logic (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1326) is not in mixedCase
Parameter InitializableAdminUpgradeabilityProxy.initialize(address,address,bytes)._admin (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1326) is not in mixedCase
Parameter InitializableAdminUpgradeabilityProxy.initialize(address,address,bytes)._data (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1326) is not in mixedCase
Parameter LiquidityPoolV2.initialize(string,address)._VERSION (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1360) is not in mixedCase
Parameter LiquidityPoolV2.initialize(string,address)._borrower (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1360) is not in mixedCase
Parameter LiquidityPoolV2.updateDepositFee(uint256)._depositFeeInBips (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1378) is not in mixedCase
Parameter LiquidityPoolV2.updatePoolFee(uint256)._poolFeeInBips (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1390) is not in mixedCase
Parameter LiquidityPoolV2.updateFeePool(address)._newFeePool (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1400) is not in mixedCase
Parameter LiquidityPoolV2.register(IKToken)._kToken (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1410) is not in mixedCase
Parameter LiquidityPoolV2.deposit(address,uint256)._token (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1426) is not in mixedCase
Parameter LiquidityPoolV2.deposit(address,uint256)._amount (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1426) is not in mixedCase
Parameter LiquidityPoolV2.withdraw(address,IKToken,uint256)._to (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1451) is not in mixedCase
Parameter LiquidityPoolV2.withdraw(address,IKToken,uint256)._kToken (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1451) is not in mixedCase
Parameter LiquidityPoolV2.withdraw(address,IKToken,uint256)._kTokenAmount (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1451) is not in mixedCase
Parameter LiquidityPoolV2.borrow(address,uint256,bytes)._token (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1473) is not in mixedCase
Parameter LiquidityPoolV2.borrow(address,uint256,bytes)._amount (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1473) is not in mixedCase
Parameter LiquidityPoolV2.borrow(address,uint256,bytes)._data (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1473) is not in mixedCase
Parameter LiquidityPoolV2.borrowableBalance(address)._token (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1502) is not in mixedCase
Parameter LiquidityPoolV2.underlyingBalance(address,address)._token (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1515) is not in mixedCase
Parameter LiquidityPoolV2.underlyingBalance(address,address)._owner (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1515) is not in mixedCase
Parameter LiquidityPoolV2.migrate(ILiquidityPool)._newLP (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1529) is not in mixedCase
Parameter LiquidityPoolV2.kToken(address)._token (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1546) is not in mixedCase
Parameter LiquidityPoolV2.calculateWithdrawAmount(IKToken,address,uint256)._kToken (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1554) is not in mixedCase
Parameter LiquidityPoolV2.calculateWithdrawAmount(IKToken,address,uint256)._token (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1554) is not in mixedCase
Parameter LiquidityPoolV2.calculateWithdrawAmount(IKToken,address,uint256)._kTokenAmount (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1554) is not in mixedCase
Parameter LiquidityPoolV2.calculateMintAmount(IKToken,address,uint256)._kToken (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1565) is not in mixedCase
Parameter LiquidityPoolV2.calculateMintAmount(IKToken,address,uint256)._token (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1565) is not in mixedCase
Parameter LiquidityPoolV2.calculateMintAmount(IKToken,address,uint256)._depositAmount (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1565) is not in mixedCase
Parameter LiquidityPoolV2.applyFee(uint256,uint256)._feeInBips (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1583) is not in mixedCase
Parameter LiquidityPoolV2.applyFee(uint256,uint256)._amount (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1583) is not in mixedCase
Parameter LiquidityPoolV2.calculateFee(uint256,uint256)._feeInBips (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1589) is not in mixedCase
Parameter LiquidityPoolV2.calculateFee(uint256,uint256)._amount (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1589) is not in mixedCase
Variable LiquidityPoolV2.VERSION (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1341) is not in mixedCase
Variable LiquidityPoolV2.FEE_BASE (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1346) is not in mixedCase
Variable LiquidityPoolV2.ETHEREUM (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1348) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
ERC20.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#586) is never used in ERC20 (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#386-587)
Pausable.______gap (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#991) is never used in LiquidityPoolV2 (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1334-1592)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
LiquidityPoolV2.ETHEREUM (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1348) should be constant
LiquidityPoolV2.FEE_BASE (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1346) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- ERC20.totalSupply() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#398-400)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#405-407)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#417-420)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#425-427)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#436-439)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#453-457)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#471-474)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#490-493)
addOperator(address) should be declared external:
	- KRoles.addOperator(address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#785-787)
renounceOperator() should be declared external:
	- KRoles.renounceOperator() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#789-791)
addPauser(address) should be declared external:
	- PauserRole.addPauser(address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#899-901)
renouncePauser() should be declared external:
	- PauserRole.renouncePauser() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#903-905)
paused() should be declared external:
	- Pausable.paused() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#955-957)
pause() should be declared external:
	- Pausable.pause() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#978-981)
unpause() should be declared external:
	- Pausable.unpause() (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#986-989)
initialize(address,address,bytes) should be declared external:
	- InitializableAdminUpgradeabilityProxy.initialize(address,address,bytes) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1326-1331)
initialize(string,address) should be declared external:
	- LiquidityPoolV2.initialize(string,address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1360-1369)
underlyingBalance(address,address) should be declared external:
	- LiquidityPoolV2.underlyingBalance(address,address) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1515-1522)
migrate(ILiquidityPool) should be declared external:
	- LiquidityPoolV2.migrate(ILiquidityPool) (loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol#1529-1543)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol analyzed (25 contracts with 46 detectors), 109 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x4c8cc29226f97d92ec2d299bc14edf16bad436b7.sol
Tool Runtime = 2.9783656259969575 seconds
#############################################