INFO:Detectors:[93m
SafeMath.div(uint256,uint256,uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#21-27) performs a multiplication on the result of a division:
	-c = a / b (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#23)
	-c = c * (10 ** decimal) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#25)
ShuttleOneDepositPools._interest(uint256,uint256,uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#346-353) performs a multiplication on the result of a division:
	-fullInt = _intPY / SECPYEAR / 100 (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#349)
	-fullInt = (fullInt * _time) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#350)
ShuttleOneDepositPools._borrow(uint256,address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#402-427) performs a multiplication on the result of a division:
	-amount = (amount / (10 ** 18)) * (10 ** 18) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#403)
ShuttleOneDepositPools._borrow(uint256,address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#402-427) performs a multiplication on the result of a division:
	-amountStable = (amount / (10 ** 18)) * (10 ** decimal) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#405)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529) uses a dangerous strict equality:
	- require(bool)(borrows[idx].status == 1) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#463)
ShuttleOneDepositPools.pricipleAndInterest(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#357-381) uses a dangerous strict equality:
	- borrows[idx].status == 0 (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#362)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in ShuttleOneDepositPools._borrow(uint256,address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#402-427):
	External calls:
	- catToken.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#420)
	- token.transfer(_addr,amountStable) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#421)
	State variables written after the call(s):
	- totalBorrow += amountStable (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#422)
Reentrancy in ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529):
	External calls:
	- token.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#474)
	- token.transferFrom(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#476)
	State variables written after the call(s):
	- borrows[idx].interestPay += interest (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#480)
	- borrows[idx].repayAmount += principle (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#481)
Reentrancy in ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529):
	External calls:
	- token.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#474)
	- token.transferFrom(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#476)
	- catToken.transfer(_addr,catReturn) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#490)
	State variables written after the call(s):
	- borrows[idx].time = now (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#492)
Reentrancy in ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529):
	External calls:
	- token.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#497)
	- token.transferFrom(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#499)
	State variables written after the call(s):
	- borrows[idx].interestPay += interest (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#504)
	- borrows[idx].repayAmount += principle (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#505)
	- borrows[idx].interestPay += amount (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#521)
	- borrows[idx].time = now (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#524)
Reentrancy in ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529):
	External calls:
	- token.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#497)
	- token.transferFrom(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#499)
	- catToken.transfer(_addr,catReturn) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#514)
	State variables written after the call(s):
	- borrows[idx].time = now (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#516)
Reentrancy in ShuttleOneDepositPools.withdraw(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#227-241):
	External calls:
	- token.transfer(msg.sender,amount) == true (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#232)
	State variables written after the call(s):
	- balance[msg.sender] -= amount (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#233)
	- totalSupply -= amount (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#237)
Reentrancy in ShuttleOneDepositPools.withdrawWithInterest(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#264-288):
	External calls:
	- withdraw(principle) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#283)
		- token.transfer(msg.sender,amount) == true (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#232)
	- withdrawInterest(interest) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#285)
		- token.transfer(msg.sender,amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#259)
	State variables written after the call(s):
	- withdrawInterest(interest) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#285)
		- deposits[idx].interest = 0 (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#250)
		- deposits[idx].interest -= amount (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#255)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
ShuttleOneDepositPools.getDepositDataIdx(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#308-315) contains a tautology or contradiction:
	- require(bool)(idx >= 0 && idx < deposits.length) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#309)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction[0m
INFO:Detectors:[93m
ShuttleOneDepositPools.withdrawInterest(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#243-262) ignores return value by token.transfer(msg.sender,amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#259)
ShuttleOneDepositPools._borrow(uint256,address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#402-427) ignores return value by catToken.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#420)
ShuttleOneDepositPools._borrow(uint256,address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#402-427) ignores return value by token.transfer(_addr,amountStable) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#421)
ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529) ignores return value by token.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#474)
ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529) ignores return value by token.transferFrom(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#476)
ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529) ignores return value by catToken.transfer(_addr,catReturn) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#490)
ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529) ignores return value by token.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#497)
ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529) ignores return value by token.transferFrom(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#499)
ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529) ignores return value by catToken.transfer(_addr,catReturn) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#514)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529):
	External calls:
	- token.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#474)
	- token.transferFrom(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#476)
	State variables written after the call(s):
	- totalBorrow -= principle (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#483)
	- totalInterest += interest (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#482)
Reentrancy in ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529):
	External calls:
	- token.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#474)
	- token.transferFrom(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#476)
	- catToken.transfer(_addr,catReturn) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#490)
	State variables written after the call(s):
	- _shareInterest(interest) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#491)
		- deposits[i].interest += (amount * percent) / (10 ** decimal) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#452)
Reentrancy in ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529):
	External calls:
	- token.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#497)
	- token.transferFrom(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#499)
	State variables written after the call(s):
	- _shareInterest(amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#523)
		- deposits[i].interest += (amount * percent) / (10 ** decimal) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#452)
	- totalBorrow -= principle (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#507)
	- totalInterest += interest (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#506)
	- totalInterest += amount (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#522)
Reentrancy in ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529):
	External calls:
	- token.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#497)
	- token.transferFrom(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#499)
	- catToken.transfer(_addr,catReturn) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#514)
	State variables written after the call(s):
	- _shareInterest(interest) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#515)
		- deposits[i].interest += (amount * percent) / (10 ** decimal) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#452)
Reentrancy in ShuttleOneDepositPools.deposit(address,uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#186-224):
	External calls:
	- token.transferFrom(_from,address(this),amount) == true (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#196)
	State variables written after the call(s):
	- balance[_from] += amount (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#197)
	- depositIdx[_from] = idx (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#209)
	- idx = deposits.push(dep) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#208)
	- deposits[idx].startTime = now (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#215)
	- deposits[idx].amount += amount (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#217)
	- totalSupply += amount (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#199)
Reentrancy in ShuttleOneDepositPools.withdraw(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#227-241):
	External calls:
	- token.transfer(msg.sender,amount) == true (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#232)
	State variables written after the call(s):
	- deposits[idx].amount -= amount (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#235)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in ShuttleOneDepositPools._borrow(uint256,address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#402-427):
	External calls:
	- catToken.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#420)
	- token.transfer(_addr,amountStable) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#421)
	Event emitted after the call(s):
	- Borrow(_addr,amountStable,borrowInterest) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#424)
Reentrancy in ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529):
	External calls:
	- token.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#474)
	- token.transferFrom(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#476)
	Event emitted after the call(s):
	- Repayment(_addr,conIdx,amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#478)
Reentrancy in ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529):
	External calls:
	- token.intTransfer(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#497)
	- token.transferFrom(_addr,address(this),amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#499)
	Event emitted after the call(s):
	- Repayment(_addr,conIdx,amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#500)
Reentrancy in ShuttleOneDepositPools.deposit(address,uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#186-224):
	External calls:
	- token.transferFrom(_from,address(this),amount) == true (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#196)
	Event emitted after the call(s):
	- Deposit(_from,amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#198)
Reentrancy in ShuttleOneDepositPools.withdraw(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#227-241):
	External calls:
	- token.transfer(msg.sender,amount) == true (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#232)
	Event emitted after the call(s):
	- Withdraw(msg.sender,amount) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#236)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
ShuttleOneDepositPools.getDepositDataIdx(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#308-315) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(idx >= 0 && idx < deposits.length) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#309)
ShuttleOneDepositPools.getBorrowData(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#328-341) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(condIdx <= borrows.length && condIdx > 0,Error not have this idx) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#329)
ShuttleOneDepositPools.pricipleAndInterest(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#357-381) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(conIdx <= borrows.length && conIdx > 0,Error not have this idx) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#358)
	- borrows[idx].status == 0 (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#362)
	- borrows[idx].repayAmount > borrows[idx].amount (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#367)
ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(conIdx > 0 && conIdx <= borrows.length) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#461)
	- require(bool)(borrows[idx].status == 1) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#463)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Permissions.addPermit(address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#79-83) compares to a boolean constant:
	-require(bool)(permits[_addr] == false) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#80)
Permissions.onlyPermits() (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#70-73) compares to a boolean constant:
	-require(bool)(permits[msg.sender] == true) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#71)
ShuttleOneDepositPools.deposit(address,uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#186-224) compares to a boolean constant:
	-token.transferFrom(_from,address(this),amount) == true (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#196)
ShuttleOneDepositPools.withdraw(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#227-241) compares to a boolean constant:
	-token.transfer(msg.sender,amount) == true (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#232)
ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529) compares to a boolean constant:
	-wrap == true (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#473)
ShuttleOneDepositPools._rePayment(uint256,uint256,address,bool) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#460-529) compares to a boolean constant:
	-wrap == true (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#496)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Parameter Permissions.isPermit(address)._addr (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#75) is not in mixedCase
Parameter Permissions.addPermit(address)._addr (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#79) is not in mixedCase
Parameter Permissions.removePermit(address)._addr (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#87) is not in mixedCase
Parameter ShuttleOneDepositPools.setCatToken(address)._addr (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#167) is not in mixedCase
Parameter ShuttleOneDepositPools.setBorrowInterest(uint256)._newInterst (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#171) is not in mixedCase
Parameter ShuttleOneDepositPools.deposit(address,uint256)._from (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#186) is not in mixedCase
Parameter ShuttleOneDepositPools.borrowWithAddr(uint256,address)._addr (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#434) is not in mixedCase
Parameter ShuttleOneDepositPools.rePaymentWithWrap(uint256,uint256,address)._addr (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#531) is not in mixedCase
Variable ShuttleOneDepositPools.TOKEN_POOLS (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#138) is not in mixedCase
Variable ShuttleOneDepositPools.SECPYEAR (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#343) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
ShuttleOneDepositPools.oneYear (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#143) is never used in ShuttleOneDepositPools (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#97-539)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
ShuttleOneDepositPools.SECPYEAR (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#343) should be constant
ShuttleOneDepositPools.oneYear (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#143) should be constant
ShuttleOneDepositPools.version (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#147) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#44)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#45)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#47)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#49)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#50)
decimals() should be declared external:
	- ERC20.decimals() (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#51)
isPermit(address) should be declared external:
	- Permissions.isPermit(address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#75-77)
addPermit(address) should be declared external:
	- Permissions.addPermit(address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#79-83)
removePermit(address) should be declared external:
	- Permissions.removePermit(address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#87-91)
setCatToken(address) should be declared external:
	- ShuttleOneDepositPools.setCatToken(address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#167-169)
setBorrowInterest(uint256) should be declared external:
	- ShuttleOneDepositPools.setBorrowInterest(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#171-174)
getInterestProfit() should be declared external:
	- ShuttleOneDepositPools.getInterestProfit() (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#176-184)
deposit(address,uint256) should be declared external:
	- ShuttleOneDepositPools.deposit(address,uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#186-224)
withdrawWithInterest(uint256) should be declared external:
	- ShuttleOneDepositPools.withdrawWithInterest(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#264-288)
maxContractUser() should be declared external:
	- ShuttleOneDepositPools.maxContractUser() (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#293-295)
getContractUser() should be declared external:
	- ShuttleOneDepositPools.getContractUser() (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#297-302)
getMaxDeposit() should be declared external:
	- ShuttleOneDepositPools.getMaxDeposit() (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#304-306)
getDepositData(address) should be declared external:
	- ShuttleOneDepositPools.getDepositData(address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#317-321)
getMaxBorrowContract() should be declared external:
	- ShuttleOneDepositPools.getMaxBorrowContract() (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#324-326)
getBorrowData(uint256) should be declared external:
	- ShuttleOneDepositPools.getBorrowData(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#328-341)
supplyInterest() should be declared external:
	- ShuttleOneDepositPools.supplyInterest() (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#384-398)
borrow(uint256) should be declared external:
	- ShuttleOneDepositPools.borrow(uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#429-432)
borrowWithAddr(uint256,address) should be declared external:
	- ShuttleOneDepositPools.borrowWithAddr(uint256,address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#434-436)
rePaymentWithWrap(uint256,uint256,address) should be declared external:
	- ShuttleOneDepositPools.rePaymentWithWrap(uint256,uint256,address) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#531-533)
rePayment(uint256,uint256) should be declared external:
	- ShuttleOneDepositPools.rePayment(uint256,uint256) (loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol#535-537)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol analyzed (4 contracts with 46 detectors), 85 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xe3013029af5f33ec3fc0f3b71508acb775ddc196.sol
Tool Runtime = 1.1371765180010698 seconds
#############################################