INFO:Detectors:[91m
Reentrancy in Liquidity._contributeWithEther(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1086-1113):
	External calls:
	- _recoverPriceDueToManipulation() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1090)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- ITokenVault(vaultAddress).directTransfer(mainToken,converter,returnMain) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1252-1256)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(value)(ethToMainToken,value,1,vaultAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1093-1102)
	External calls sending eth:
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(value)(ethToMainToken,value,1,vaultAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1093-1102)
	State variables written after the call(s):
	- lastReserveBalance = IERC20Token(baseToken).balanceOf(converter) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1110)
Reentrancy in Liquidity._contributeWithEther(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1086-1113):
	External calls:
	- _recoverPriceDueToManipulation() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1090)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- ITokenVault(vaultAddress).directTransfer(mainToken,converter,returnMain) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1252-1256)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(value)(ethToMainToken,value,1,vaultAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1093-1102)
	- checkAppeciationLimit() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1111)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1123)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
		- ITokenVault(vaultAddress).directTransfer(address(mainToken),address(this),_reverseBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1353-1357)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	External calls sending eth:
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(value)(ethToMainToken,value,1,vaultAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1093-1102)
	- checkAppeciationLimit() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1111)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
	State variables written after the call(s):
	- checkAppeciationLimit() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1111)
		- lastReserveBalance = IERC20Token(baseToken).balanceOf(converter) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1165)
Reentrancy in Liquidity._redemption(address[],uint256,address,address) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1446-1501):
	External calls:
	- auctionDay = IAuction(auctionAddress).auctionDay() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1458)
	- _recoverPriceDueToManipulation() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1470)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- ITokenVault(vaultAddress).directTransfer(mainToken,converter,returnMain) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1252-1256)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	- ensureTransferFrom(IERC20Token(mainToken),_caller,address(this),_amount) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1473-1478)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
	- approveTransferFrom(IERC20Token(mainToken),bancorNetwork,_amount) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1480)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,_amount,1,_reciver,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1482-1484)
	External calls sending eth:
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,_amount,1,_reciver,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1482-1484)
	State variables written after the call(s):
	- lastReedeemDay[primaryWallet] = auctionDay (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1486)
Reentrancy in Liquidity._redemption(address[],uint256,address,address) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1446-1501):
	External calls:
	- auctionDay = IAuction(auctionAddress).auctionDay() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1458)
	- _recoverPriceDueToManipulation() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1470)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- ITokenVault(vaultAddress).directTransfer(mainToken,converter,returnMain) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1252-1256)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	- ensureTransferFrom(IERC20Token(mainToken),_caller,address(this),_amount) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1473-1478)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
	- approveTransferFrom(IERC20Token(mainToken),bancorNetwork,_amount) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1480)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,_amount,1,_reciver,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1482-1484)
	- _recoverAfterRedemption(safeSub(_beforeBalance,_afterBalance)) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1497)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- IBancorNetwork(bancorNetwork).convertByPath.value(totalEthAmount)(ethToBaseToken,totalEthAmount,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1390-1397)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1123)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	External calls sending eth:
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,_amount,1,_reciver,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1482-1484)
	- _recoverAfterRedemption(safeSub(_beforeBalance,_afterBalance)) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1497)
		- IBancorNetwork(bancorNetwork).convertByPath.value(totalEthAmount)(ethToBaseToken,totalEthAmount,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1390-1397)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
	State variables written after the call(s):
	- _recoverAfterRedemption(safeSub(_beforeBalance,_afterBalance)) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1497)
		- lastReserveBalance = IERC20Token(baseToken).balanceOf(converter) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1165)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[91m
UpgradeabilityStorage.registry (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#572) is never initialized. It is used in:
	- Upgradeable.initialize() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#603-605)
UpgradeabilityStorage._implementation (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#575) is never initialized. It is used in:
	- UpgradeabilityStorage.implementation() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#581-583)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
SafeMath.safeMul(uint256,uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#179-186) uses a dangerous strict equality:
	- a == 0 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#180)
SafeMath.safeMul(uint256,uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#179-186) uses a dangerous strict equality:
	- assert(bool)(c / a == b) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#184)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Liquidity.recoverPriceVolatility() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1269-1304):
	External calls:
	- _recoverPriceDueToManipulation() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1270)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- ITokenVault(vaultAddress).directTransfer(mainToken,converter,returnMain) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1252-1256)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	- _recoverReserve(isMainToken,volatilty) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1300)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- ITokenVault(vaultAddress).directTransfer(mainToken,converter,returnMain) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1252-1256)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	State variables written after the call(s):
	- baseLinePrice = baseTokenPrice (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1302)
	- _recoverReserve(isMainToken,volatilty) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1300)
		- lastReserveBalance = IERC20Token(baseToken).balanceOf(converter) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1266)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Liquidity.recoverPriceVolatility().volatilty (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1275) is a local variable never initialized
Liquidity._convertWithToken(uint256,address[]).sentBackAddress (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1150) is a local variable never initialized
SafeMath.nthRoot(uint256,uint256,uint256,uint256).x (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#234) is a local variable never initialized
Liquidity.recoverPriceVolatility().isMainToken (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1277) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
Liquidity._convertBaseTokenToEth() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1116-1140) ignores return value by IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
Liquidity._convertWithToken(uint256,address[]) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1144-1167) ignores return value by IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
Liquidity._recoverReserve(bool,uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1246-1267) ignores return value by ITokenVault(vaultAddress).directTransfer(mainToken,converter,returnMain) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1252-1256)
Liquidity._priceRecoveryWithConvertMainToken(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1336-1377) ignores return value by ITokenVault(vaultAddress).directTransfer(address(mainToken),address(this),_reverseBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1353-1357)
Liquidity._recoverAfterRedemption(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1386-1428) ignores return value by IBancorNetwork(bancorNetwork).convertByPath.value(totalEthAmount)(ethToBaseToken,totalEthAmount,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1390-1397)
Liquidity._liquadate(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1546-1603) ignores return value by IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
Liquidity.takeFundFromTagAlong(IERC20Token,uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1619-1635) ignores return value by IContributionTrigger(triggerAddress).contributeTowardLiquidity(_value) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1625-1627)
Liquidity.takeFundFromTagAlong(IERC20Token,uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1619-1635) ignores return value by IContributionTrigger(triggerAddress).transferTokenLiquidity(_token,address(this),_value) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1629-1633)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in Liquidity._contributeWithEther(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1086-1113):
	External calls:
	- _recoverPriceDueToManipulation() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1090)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- ITokenVault(vaultAddress).directTransfer(mainToken,converter,returnMain) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1252-1256)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(value)(ethToMainToken,value,1,vaultAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1093-1102)
	External calls sending eth:
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(value)(ethToMainToken,value,1,vaultAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1093-1102)
	State variables written after the call(s):
	- todayMainReserveContribution = safeAdd(todayMainReserveContribution,value) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1104-1107)
Reentrancy in Liquidity._contributeWithEther(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1086-1113):
	External calls:
	- _recoverPriceDueToManipulation() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1090)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- ITokenVault(vaultAddress).directTransfer(mainToken,converter,returnMain) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1252-1256)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(value)(ethToMainToken,value,1,vaultAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1093-1102)
	- checkAppeciationLimit() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1111)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1123)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
		- ITokenVault(vaultAddress).directTransfer(address(mainToken),address(this),_reverseBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1353-1357)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	External calls sending eth:
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(value)(ethToMainToken,value,1,vaultAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1093-1102)
	- checkAppeciationLimit() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1111)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
	State variables written after the call(s):
	- checkAppeciationLimit() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1111)
		- isAppreciationLimitReached = true (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1178)
Reentrancy in Liquidity._convertWithToken(uint256,address[]) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1144-1167):
	External calls:
	- approveTransferFrom(IERC20Token(_path[0]),bancorNetwork,value) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1148)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
	- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
	- _convertBaseTokenToEth() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1164)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1123)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
	External calls sending eth:
	- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
	- _convertBaseTokenToEth() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1164)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
	State variables written after the call(s):
	- lastReserveBalance = IERC20Token(baseToken).balanceOf(converter) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1165)
Reentrancy in Liquidity._priceRecoveryWithConvertMainToken(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1336-1377):
	External calls:
	- ITokenVault(vaultAddress).directTransfer(address(mainToken),address(this),_reverseBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1353-1357)
	- _convertWithToken(_reverseBalance,mainTokenTobaseToken) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1358)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1123)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
	External calls sending eth:
	- _convertWithToken(_reverseBalance,mainTokenTobaseToken) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1358)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
	State variables written after the call(s):
	- _convertWithToken(_reverseBalance,mainTokenTobaseToken) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1358)
		- lastReserveBalance = IERC20Token(baseToken).balanceOf(converter) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1165)
Reentrancy in Liquidity._priceRecoveryWithConvertMainToken(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1336-1377):
	External calls:
	- _liquadate(safeMul(_tempRelayPercent,PRICE_NOMINATOR)) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1374)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	- _priceRecoveryWithConvertMainToken(_percent) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1375)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1123)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
		- ITokenVault(vaultAddress).directTransfer(address(mainToken),address(this),_reverseBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1353-1357)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	External calls sending eth:
	- _priceRecoveryWithConvertMainToken(_percent) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1375)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
	State variables written after the call(s):
	- _priceRecoveryWithConvertMainToken(_percent) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1375)
		- lastReserveBalance = IERC20Token(baseToken).balanceOf(converter) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1165)
Reentrancy in Liquidity._recoverAfterRedemption(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1386-1428):
	External calls:
	- IBancorNetwork(bancorNetwork).convertByPath.value(totalEthAmount)(ethToBaseToken,totalEthAmount,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1390-1397)
	- _convertWithToken(_amount,baseTokenToMainToken) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1399)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1123)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
	External calls sending eth:
	- IBancorNetwork(bancorNetwork).convertByPath.value(totalEthAmount)(ethToBaseToken,totalEthAmount,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1390-1397)
	- _convertWithToken(_amount,baseTokenToMainToken) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1399)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
	State variables written after the call(s):
	- _convertWithToken(_amount,baseTokenToMainToken) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1399)
		- lastReserveBalance = IERC20Token(baseToken).balanceOf(converter) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1165)
Reentrancy in Liquidity._recoverAfterRedemption(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1386-1428):
	External calls:
	- _liquadate(_tempRelayPercent) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1419)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	- _convertWithToken(_amount,baseTokenToMainToken) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1426)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1123)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
	External calls sending eth:
	- _convertWithToken(_amount,baseTokenToMainToken) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1426)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
	State variables written after the call(s):
	- _convertWithToken(_amount,baseTokenToMainToken) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1426)
		- lastReserveBalance = IERC20Token(baseToken).balanceOf(converter) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1165)
Reentrancy in Liquidity._recoverReserve(bool,uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1246-1267):
	External calls:
	- (returnBase,returnMain) = _liquadate(_liquadateRatio) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1249)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	- ITokenVault(vaultAddress).directTransfer(mainToken,converter,returnMain) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1252-1256)
	- ensureTransferFrom(IERC20Token(baseToken),address(this),converter,returnBase) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1258-1263)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
	State variables written after the call(s):
	- lastReserveBalance = IERC20Token(baseToken).balanceOf(converter) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1266)
Reentrancy in Liquidity.auctionEnded() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1503-1544):
	External calls:
	- auctionDay = auction.auctionDay() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1517)
	State variables written after the call(s):
	- isAppreciationLimitReached = false (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1542)
	- previousMainReserveContribution = todayMainReserveContribution (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1539)
	- todayMainReserveContribution = 0 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1540)
	- tokenAuctionEndPrice = _getCurrentMarketPrice() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1541)
	- virtualReserverDivisor = calculateLiquidityMainReserve(_yesterdayPrice,_dayBeforePrice,_yesterdayContribution,yesterdayMainReserv) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1532-1537)
Reentrancy in Liquidity.contributeTowardMainReserve() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1188-1204):
	External calls:
	- _liquadate(safeMul(relayPercent,PRICE_NOMINATOR)) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1195)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	- _convertBaseTokenToEth() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1196)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1123)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
	- _contributeWithEther(previousMainReserveContribution) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1202)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1123)
		- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(value)(ethToMainToken,value,1,vaultAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1093-1102)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- ITokenVault(vaultAddress).directTransfer(mainToken,converter,returnMain) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1252-1256)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
		- ITokenVault(vaultAddress).directTransfer(address(mainToken),address(this),_reverseBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1353-1357)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	External calls sending eth:
	- _convertBaseTokenToEth() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1196)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
	- _contributeWithEther(previousMainReserveContribution) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1202)
		- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(value)(ethToMainToken,value,1,vaultAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1093-1102)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
	State variables written after the call(s):
	- _contributeWithEther(previousMainReserveContribution) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1202)
		- isAppreciationLimitReached = true (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1178)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in Liquidity._contributeWithEther(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1086-1113):
	External calls:
	- _recoverPriceDueToManipulation() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1090)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- ITokenVault(vaultAddress).directTransfer(mainToken,converter,returnMain) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1252-1256)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(value)(ethToMainToken,value,1,vaultAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1093-1102)
	External calls sending eth:
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(value)(ethToMainToken,value,1,vaultAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1093-1102)
	Event emitted after the call(s):
	- Contribution(address(0),value,returnAmount) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1109)
Reentrancy in Liquidity._redemption(address[],uint256,address,address) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1446-1501):
	External calls:
	- auctionDay = IAuction(auctionAddress).auctionDay() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1458)
	- _recoverPriceDueToManipulation() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1470)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- ITokenVault(vaultAddress).directTransfer(mainToken,converter,returnMain) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1252-1256)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	- ensureTransferFrom(IERC20Token(mainToken),_caller,address(this),_amount) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1473-1478)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
	- approveTransferFrom(IERC20Token(mainToken),bancorNetwork,_amount) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1480)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,_amount,1,_reciver,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1482-1484)
	External calls sending eth:
	- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,_amount,1,_reciver,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1482-1484)
	Event emitted after the call(s):
	- Redemption(address(_path[safeSub(_path.length,1)]),_amount,returnAmount) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1490-1494)
Reentrancy in Liquidity.contributeTowardMainReserve() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1188-1204):
	External calls:
	- _liquadate(safeMul(relayPercent,PRICE_NOMINATOR)) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1195)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	- _convertBaseTokenToEth() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1196)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1123)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
	- _contributeWithEther(previousMainReserveContribution) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1202)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#466)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#453)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#455-458)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1123)
		- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(value)(ethToMainToken,value,1,vaultAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1093-1102)
		- IContributionTrigger(triggerAddress).transferTokenLiquidity(IERC20Token(relayToken),address(this),sellRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1568-1572)
		- ITokenVault(vaultAddress).directTransfer(mainToken,converter,returnMain) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1252-1256)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorConverter(converter).removeLiquidity(sellRelay,relayPath,returnAmountRelay) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1575-1579)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
		- ITokenVault(vaultAddress).directTransfer(address(mainToken),address(this),_reverseBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1353-1357)
		- IEtherToken(baseToken).withdraw(_baseTokenBalance) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1600)
	External calls sending eth:
	- _convertBaseTokenToEth() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1196)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
	- _contributeWithEther(previousMainReserveContribution) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1202)
		- returnAmount = IBancorNetwork(bancorNetwork).convertByPath.value(value)(ethToMainToken,value,1,vaultAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1093-1102)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(baseTokenToEth,_baseTokenBalance,1,address(0),address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1130-1137)
		- IBancorNetwork(bancorNetwork).convertByPath.value(0)(_path,value,1,sentBackAddress,address(0),0) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1155-1162)
	Event emitted after the call(s):
	- Contribution(address(0),value,returnAmount) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1109)
		- _contributeWithEther(previousMainReserveContribution) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1202)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
SafeMath.safeExponent(uint256,uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#204-214) uses assembly
	- INLINE ASM (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#210-213)
Proxy.fallback() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#533-552) uses assembly
	- INLINE ASM (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#537-552)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#8) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#41) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#70) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#176) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#256) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#297) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#442) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#473) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#515) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#562) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#589) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#611) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#635) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#644) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#659) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#683) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#728) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Parameter SafeMath.nthRoot(uint256,uint256,uint256,uint256)._a (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#219) is not in mixedCase
Parameter SafeMath.nthRoot(uint256,uint256,uint256,uint256)._n (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#220) is not in mixedCase
Parameter SafeMath.nthRoot(uint256,uint256,uint256,uint256)._dp (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#221) is not in mixedCase
Parameter SafeMath.nthRoot(uint256,uint256,uint256,uint256)._maxIts (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#222) is not in mixedCase
Parameter ProxyOwnable.initializeOwner(address,address,address)._primaryOwner (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#330) is not in mixedCase
Parameter ProxyOwnable.initializeOwner(address,address,address)._systemAddress (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#331) is not in mixedCase
Parameter ProxyOwnable.initializeOwner(address,address,address)._authorityAddress (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#332) is not in mixedCase
Parameter ProxyOwnable.changeSystemAddress(address)._which (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#389) is not in mixedCase
Parameter ProxyOwnable.changeAuthorityAddress(address)._which (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#411) is not in mixedCase
Parameter TokenTransfer.ensureTransferFrom(IERC20Token,address,address,uint256)._token (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#447) is not in mixedCase
Parameter TokenTransfer.ensureTransferFrom(IERC20Token,address,address,uint256)._from (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#448) is not in mixedCase
Parameter TokenTransfer.ensureTransferFrom(IERC20Token,address,address,uint256)._to (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#449) is not in mixedCase
Parameter TokenTransfer.ensureTransferFrom(IERC20Token,address,address,uint256)._amount (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#450) is not in mixedCase
Parameter TokenTransfer.approveTransferFrom(IERC20Token,address,uint256)._token (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#462) is not in mixedCase
Parameter TokenTransfer.approveTransferFrom(IERC20Token,address,uint256)._spender (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#463) is not in mixedCase
Parameter TokenTransfer.approveTransferFrom(IERC20Token,address,uint256)._amount (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#464) is not in mixedCase
Variable UpgradeabilityStorage._implementation (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#575) is not in mixedCase
Function IWhiteList.address_belongs(address) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#686) is not in mixedCase
Function IWhiteList.main_isTransferAllowed(address,address,address) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#696-700) is not in mixedCase
Function IWhiteList.etn_isTransferAllowed(address,address,address) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#702-706) is not in mixedCase
Function IWhiteList.stock_isTransferAllowed(address,address,address) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#708-712) is not in mixedCase
Function IWhiteList.main_isReceiveAllowed(address) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#718) is not in mixedCase
Function IWhiteList.etn_isReceiveAllowed(address) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#720) is not in mixedCase
Function IWhiteList.stock_isReceiveAllowed(address) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#722) is not in mixedCase
Parameter BancorConverterLiquidity.updateConverter(address)._converter (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#812) is not in mixedCase
Parameter BancorConverterLiquidity.addressOf(bytes32)._contractName (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#821) is not in mixedCase
Parameter BancorConverterLiquidity.etherTokens(address)._address (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#845) is not in mixedCase
Parameter BancorConverterLiquidity.getReturnByPath(address[],uint256)._path (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#850) is not in mixedCase
Parameter BancorConverterLiquidity.getReturnByPath(address[],uint256)._amount (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#850) is not in mixedCase
Parameter RegisteryLiquidity.updateRegistery(address)._address (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#864) is not in mixedCase
Parameter RegisteryLiquidity.getAddressOf(bytes32)._contractName (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#875) is not in mixedCase
Parameter LiquidityUtils.setSideReseverRatio(uint256)._sideReseverRatio (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#932) is not in mixedCase
Parameter LiquidityUtils.setTagAlongRatio(uint256)._tagAlongRatio (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#942) is not in mixedCase
Parameter LiquidityUtils.setAppreciationLimit(uint256)._limit (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#951) is not in mixedCase
Parameter LiquidityUtils.setBaseTokenVolatiltyRatio(uint256)._baseTokenVolatiltyRatio (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#961) is not in mixedCase
Parameter LiquidityUtils.setReductionStartDay(uint256)._reductionStartDay (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#970) is not in mixedCase
Parameter LiquidityUtils.setRelayPercent(uint256)._relayPercent (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#979) is not in mixedCase
Parameter Liquidity.initialize(address,address,address,address,address,address,address,address,address,address,uint256)._converter (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1047) is not in mixedCase
Parameter Liquidity.initialize(address,address,address,address,address,address,address,address,address,address,uint256)._baseToken (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1048) is not in mixedCase
Parameter Liquidity.initialize(address,address,address,address,address,address,address,address,address,address,uint256)._mainToken (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1049) is not in mixedCase
Parameter Liquidity.initialize(address,address,address,address,address,address,address,address,address,address,uint256)._relayToken (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1050) is not in mixedCase
Parameter Liquidity.initialize(address,address,address,address,address,address,address,address,address,address,uint256)._etherToken (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1051) is not in mixedCase
Parameter Liquidity.initialize(address,address,address,address,address,address,address,address,address,address,uint256)._ethRelayToken (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1052) is not in mixedCase
Parameter Liquidity.initialize(address,address,address,address,address,address,address,address,address,address,uint256)._primaryOwner (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1053) is not in mixedCase
Parameter Liquidity.initialize(address,address,address,address,address,address,address,address,address,address,uint256)._systemAddress (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1054) is not in mixedCase
Parameter Liquidity.initialize(address,address,address,address,address,address,address,address,address,address,uint256)._authorityAddress (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1055) is not in mixedCase
Parameter Liquidity.initialize(address,address,address,address,address,address,address,address,address,address,uint256)._registryaddress (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1056) is not in mixedCase
Parameter Liquidity.initialize(address,address,address,address,address,address,address,address,address,address,uint256)._baseLinePrice (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1057) is not in mixedCase
Parameter Liquidity.redemptionFromEscrow(address[],uint256,address)._path (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1431) is not in mixedCase
Parameter Liquidity.redemptionFromEscrow(address[],uint256,address)._amount (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1432) is not in mixedCase
Parameter Liquidity.redemptionFromEscrow(address[],uint256,address)._reciver (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1433) is not in mixedCase
Parameter Liquidity.redemption(address[],uint256)._path (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1439) is not in mixedCase
Parameter Liquidity.redemption(address[],uint256)._amount (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1439) is not in mixedCase
Parameter Liquidity.returnFundToTagAlong(IERC20Token,uint256)._token (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1605) is not in mixedCase
Parameter Liquidity.returnFundToTagAlong(IERC20Token,uint256)._value (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1605) is not in mixedCase
Parameter Liquidity.takeFundFromTagAlong(IERC20Token,uint256)._token (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1619) is not in mixedCase
Parameter Liquidity.takeFundFromTagAlong(IERC20Token,uint256)._value (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1619) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
LiquidityStorage.BANCOR_FORMULA (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#75) is never used in Liquidity (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1040-1660)
AuctionRegisteryContracts.MAIN_TOKEN (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#44) is never used in Liquidity (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1040-1660)
AuctionRegisteryContracts.ETN_TOKEN (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#45) is never used in Liquidity (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1040-1660)
AuctionRegisteryContracts.STOCK_TOKEN (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#46) is never used in Liquidity (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1040-1660)
AuctionRegisteryContracts.AUCTION_PROTECTION (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#49) is never used in Liquidity (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1040-1660)
AuctionRegisteryContracts.LIQUIDITY (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#50) is never used in Liquidity (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1040-1660)
AuctionRegisteryContracts.COMPANY_FUND_WALLET (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#54) is never used in Liquidity (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1040-1660)
AuctionRegisteryContracts.SMART_SWAP (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#55) is never used in Liquidity (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1040-1660)
AuctionRegisteryContracts.SMART_SWAP_P2P (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#56) is never used in Liquidity (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1040-1660)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
UpgradeabilityStorage._implementation (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#575) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
changePrimaryOwner() should be declared external:
	- ProxyOwnable.changePrimaryOwner() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#375-383)
changeSystemAddress(address) should be declared external:
	- ProxyOwnable.changeSystemAddress(address) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#389-405)
changeAuthorityAddress(address) should be declared external:
	- ProxyOwnable.changeAuthorityAddress(address) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#411-424)
acceptAuthorityAddress() should be declared external:
	- ProxyOwnable.acceptAuthorityAddress() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#426-436)
updateConverter(address) should be declared external:
	- BancorConverterLiquidity.updateConverter(address) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#812-819)
setSideReseverRatio(uint256) should be declared external:
	- LiquidityUtils.setSideReseverRatio(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#932-940)
setTagAlongRatio(uint256) should be declared external:
	- LiquidityUtils.setTagAlongRatio(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#942-949)
setAppreciationLimit(uint256) should be declared external:
	- LiquidityUtils.setAppreciationLimit(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#951-959)
setBaseTokenVolatiltyRatio(uint256) should be declared external:
	- LiquidityUtils.setBaseTokenVolatiltyRatio(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#961-968)
setReductionStartDay(uint256) should be declared external:
	- LiquidityUtils.setReductionStartDay(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#970-977)
setRelayPercent(uint256) should be declared external:
	- LiquidityUtils.setRelayPercent(uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#979-987)
initialize(address,address,address,address,address,address,address,address,address,address,uint256) should be declared external:
	- Liquidity.initialize(address,address,address,address,address,address,address,address,address,address,uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1046-1084)
contributeWithEther() should be declared external:
	- Liquidity.contributeWithEther() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1206-1244)
redemptionFromEscrow(address[],uint256,address) should be declared external:
	- Liquidity.redemptionFromEscrow(address[],uint256,address) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1430-1437)
redemption(address[],uint256) should be declared external:
	- Liquidity.redemption(address[],uint256) (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1439-1444)
getCurrencyPrice() should be declared external:
	- Liquidity.getCurrencyPrice() (loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol#1637-1639)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol analyzed (27 contracts with 46 detectors), 137 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x7ffd62c384c863156d6bf4a3c7a99fb4f9d63585.sol
Tool Runtime = 10.766939457000262 seconds
#############################################