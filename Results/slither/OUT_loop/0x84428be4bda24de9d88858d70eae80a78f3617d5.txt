INFO:Detectors:[91m
ERC20.______gap (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#576) shadows:
	- Initializable.______gap (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#68)
Ownable.______gap (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#688) shadows:
	- Initializable.______gap (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#68)
CapperRole.______gap (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#863) shadows:
	- Initializable.______gap (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#68)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing[0m
INFO:Detectors:[93m
Reentrancy in StakingPool.withdrawStake(uint256,bytes) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1298-1332):
	External calls:
	- require(bool,string)(stakingToken.transfer(_msgSender(),_amount),Unable to withdraw stake) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1317-1319)
	State variables written after the call(s):
	- stakeHolders[personalStake.stakedFor].totalStakedFor = stakeHolders[personalStake.stakedFor].totalStakedFor.sub(personalStake.actualAmount) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1321-1322)
	- personalStake.actualAmount = 0 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1324)
	- stakeHolders[_msgSender()].personalStakeIndex ++ (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1325)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
StakingPool.isUserCapEnabledForStakeFor(uint256).stake (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#969) shadows:
	- StakingPool.stake(uint256,bytes) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1138-1144) (function)
	- IERC900.stake(uint256,bytes) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#593) (function)
StakingPool.isUserCapEnabledForStakeFor(uint256).totalStaked (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#979) shadows:
	- StakingPool.totalStaked() (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1204-1206) (function)
	- IERC900.totalStaked() (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#598) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in StakingPool.createStake(address,uint256,uint256,bytes) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1265-1290):
	External calls:
	- canStake(_msgSender(),_amount) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1271)
		- require(bool,string)(stakingToken.transferFrom(_address,address(this),_amount),Stake required) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#961-963)
	- canStake(_msgSender(),_amount) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1271)
		- require(bool,string)(stakingToken.transferFrom(_address,address(this),_amount),Stake required) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#961-963)
	State variables written after the call(s):
	- stakeHolders[_msgSender()].exists = true (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1274)
	- stakeHolders[_address].totalStakedFor = stakeHolders[_address].totalStakedFor.add(_amount) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1277)
	- stakeHolders[_msgSender()].personalStakes.push(Stake(block.timestamp.add(_lockInDuration),_amount,_address)) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1278-1283)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in StakingPool.createStake(address,uint256,uint256,bytes) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1265-1290):
	External calls:
	- canStake(_msgSender(),_amount) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1271)
		- require(bool,string)(stakingToken.transferFrom(_address,address(this),_amount),Stake required) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#961-963)
	- canStake(_msgSender(),_amount) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1271)
		- require(bool,string)(stakingToken.transferFrom(_address,address(this),_amount),Stake required) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#961-963)
	Event emitted after the call(s):
	- Staked(_address,_amount,totalStakedFor(_address),_data) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1285-1289)
Reentrancy in StakingPool.withdrawStake(uint256,bytes) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1298-1332):
	External calls:
	- require(bool,string)(stakingToken.transfer(_msgSender(),_amount),Unable to withdraw stake) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1317-1319)
	Event emitted after the call(s):
	- Unstaked(personalStake.stakedFor,_amount,totalStakedFor(personalStake.stakedFor),_data) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1327-1331)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
StakingPool.unstakeAllUnlocked(bytes) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1176-1189) uses timestamp for comparisons
	Dangerous comparisons:
	- stakeHolders[_msgSender()].personalStakes[i].unlockedTimestamp <= block.timestamp (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1182)
StakingPool.withdrawStake(uint256,bytes) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1298-1332) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(personalStake.unlockedTimestamp <= block.timestamp,The current stake hasn't unlocked yet) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1306-1308)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Initializable.isConstructor() (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#55-65) uses assembly
	- INLINE ASM (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#63-64)
Module.getModuleAddress(string) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#756-770) uses assembly
	- INLINE ASM (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#761-765)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
StakingPool.checkUserCapDisabled() (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1014-1017) compares to a boolean constant:
	-require(bool,string)(isUserCapEnabled() == false,UserCapEnabled) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1015)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#8) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#74) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#106) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#186) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#346) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#582) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#611) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#694) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#714) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#734) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#777) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#817) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#869) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Module.getModuleAddress(string) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#756-770):
	- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#758)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Variable Initializable.______gap (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#68) is not in mixedCase
Variable ERC20.______gap (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#576) is not in mixedCase
Variable Ownable.______gap (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#688) is not in mixedCase
Parameter Module.initialize(address)._pool (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#745) is not in mixedCase
Parameter Module.setPool(address)._pool (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#750) is not in mixedCase
Variable CapperRole.______gap (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#863) is not in mixedCase
Event StakingPoolsetLockInDuration(uint256) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#951) is not in CapWords
Parameter StakingPool.initialize(address,ERC20,uint256)._pool (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1024) is not in mixedCase
Parameter StakingPool.initialize(address,ERC20,uint256)._stakingToken (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1024) is not in mixedCase
Parameter StakingPool.initialize(address,ERC20,uint256)._defaultLockInDuration (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1024) is not in mixedCase
Parameter StakingPool.setDefaultLockInDuration(uint256)._defaultLockInDuration (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1032) is not in mixedCase
Parameter StakingPool.setUserCapEnabled(bool)._userCapEnabled (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1037) is not in mixedCase
Parameter StakingPool.setStakingCapEnabled(bool)._stakingCapEnabled (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1042) is not in mixedCase
Parameter StakingPool.setDefaultUserCap(uint256)._newCap (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1047) is not in mixedCase
Parameter StakingPool.setStakingCap(uint256)._newCap (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1052) is not in mixedCase
Parameter StakingPool.setVipUserEnabled(bool)._vipUserEnabled (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1071) is not in mixedCase
Parameter StakingPool.getPersonalStakeUnlockedTimestamps(address)._address (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1096) is not in mixedCase
Parameter StakingPool.getPersonalStakeActualAmounts(address)._address (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1112) is not in mixedCase
Parameter StakingPool.getPersonalStakeForAddresses(address)._address (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1125) is not in mixedCase
Parameter StakingPool.stake(uint256,bytes)._amount (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1138) is not in mixedCase
Parameter StakingPool.stake(uint256,bytes)._data (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1138) is not in mixedCase
Parameter StakingPool.stakeFor(address,uint256,bytes)._user (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1153) is not in mixedCase
Parameter StakingPool.stakeFor(address,uint256,bytes)._amount (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1153) is not in mixedCase
Parameter StakingPool.stakeFor(address,uint256,bytes)._data (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1153) is not in mixedCase
Parameter StakingPool.unstake(uint256,bytes)._amount (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1170) is not in mixedCase
Parameter StakingPool.unstake(uint256,bytes)._data (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1170) is not in mixedCase
Parameter StakingPool.unstakeAllUnlocked(bytes)._data (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1176) is not in mixedCase
Parameter StakingPool.totalStakedFor(address)._address (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1196) is not in mixedCase
Parameter StakingPool.getPersonalStakes(address)._address (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1232) is not in mixedCase
Parameter StakingPool.createStake(address,uint256,uint256,bytes)._address (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1266) is not in mixedCase
Parameter StakingPool.createStake(address,uint256,uint256,bytes)._amount (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1267) is not in mixedCase
Parameter StakingPool.createStake(address,uint256,uint256,bytes)._lockInDuration (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1268) is not in mixedCase
Parameter StakingPool.createStake(address,uint256,uint256,bytes)._data (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1269) is not in mixedCase
Parameter StakingPool.withdrawStake(uint256,bytes)._amount (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1299) is not in mixedCase
Parameter StakingPool.withdrawStake(uint256,bytes)._data (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1300) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
ERC20.______gap (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#576) is never used in ERC20 (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#376-577)
CapperRole.______gap (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#863) is never used in StakingPool (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#880-1334)
ModuleNames.MODULE_ACCESS (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#721) is never used in StakingPool (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#880-1334)
ModuleNames.MODULE_SAVINGS (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#722) is never used in StakingPool (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#880-1334)
ModuleNames.MODULE_INVESTING (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#723) is never used in StakingPool (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#880-1334)
ModuleNames.MODULE_STAKING (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#724) is never used in StakingPool (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#880-1334)
ModuleNames.MODULE_DCA (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#725) is never used in StakingPool (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#880-1334)
ModuleNames.CONTRACT_RAY (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#728) is never used in StakingPool (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#880-1334)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- ERC20.totalSupply() (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#388-390)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#395-397)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#407-410)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#415-417)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#426-429)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#443-447)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#461-464)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#480-483)
owner() should be declared external:
	- Ownable.owner() (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#640-642)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#666-669)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#675-677)
getModuleAddress(string) should be declared external:
	- Module.getModuleAddress(string) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#756-770)
addCapper(address) should be declared external:
	- CapperRole.addCapper(address) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#845-847)
renounceCapper() should be declared external:
	- CapperRole.renounceCapper() (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#849-851)
initialize(address,ERC20,uint256) should be declared external:
	- StakingPool.initialize(address,ERC20,uint256) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1024-1030)
setDefaultLockInDuration(uint256) should be declared external:
	- StakingPool.setDefaultLockInDuration(uint256) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1032-1035)
setUserCapEnabled(bool) should be declared external:
	- StakingPool.setUserCapEnabled(bool) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1037-1040)
setStakingCapEnabled(bool) should be declared external:
	- StakingPool.setStakingCapEnabled(bool) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1042-1045)
setDefaultUserCap(uint256) should be declared external:
	- StakingPool.setDefaultUserCap(uint256) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1047-1050)
setStakingCap(uint256) should be declared external:
	- StakingPool.setStakingCap(uint256) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1052-1055)
setUserCap(address,uint256) should be declared external:
	- StakingPool.setUserCap(address,uint256) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1057-1060)
setUserCap(address[],uint256[]) should be declared external:
	- StakingPool.setUserCap(address[],uint256[]) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1062-1068)
setVipUserEnabled(bool) should be declared external:
	- StakingPool.setVipUserEnabled(bool) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1071-1074)
setVipUser(address,bool) should be declared external:
	- StakingPool.setVipUser(address,bool) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1076-1079)
iStakingCapEnabled() should be declared external:
	- StakingPool.iStakingCapEnabled() (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1086-1088)
stake(uint256,bytes) should be declared external:
	- StakingPool.stake(uint256,bytes) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1138-1144)
stakeFor(address,uint256,bytes) should be declared external:
	- StakingPool.stakeFor(address,uint256,bytes) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1153-1159)
unstake(uint256,bytes) should be declared external:
	- StakingPool.unstake(uint256,bytes) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1170-1174)
unstakeAllUnlocked(bytes) should be declared external:
	- StakingPool.unstakeAllUnlocked(bytes) (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1176-1189)
token() should be declared external:
	- StakingPool.token() (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1212-1214)
supportsHistory() should be declared external:
	- StakingPool.supportsHistory() (loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol#1221-1223)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x84428be4bda24de9d88858d70eae80a78f3617d5.sol analyzed (13 contracts with 46 detectors), 103 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x84428be4bda24de9d88858d70eae80a78f3617d5.sol
Tool Runtime = 2.441875243999675 seconds
#############################################