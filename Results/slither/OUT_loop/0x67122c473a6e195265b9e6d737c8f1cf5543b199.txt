Compilation warnings/errors on ./loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol:
./loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol:169:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[93m
CreamUSD.f(int256,int256,int256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#291-309) performs a multiplication on the result of a division:
	-_b = _x.mul(cst).div(1e18) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#302)
	-D = _b.mul(_b).sub(c.mul(4)) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#304)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
CreamUSD.addLiquidityExactIn(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#401-420) uses a dangerous strict equality:
	- totalSupply() == 0 (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#405)
CreamUSD.addLiquidityExactOut(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#422-442) uses a dangerous strict equality:
	- totalSupply() == 0 (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#426)
CreamUSD.removeLiquidityExactIn(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#444-458) uses a dangerous strict equality:
	- balance(to) == 0 (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#454)
CreamUSD.removeLiquidityExactOut(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#460-475) uses a dangerous strict equality:
	- balance(to) == 0 (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#471)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in CreamUSD.addLiquidityExactIn(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#401-420):
	External calls:
	- from.safeTransferFrom(msg.sender,address(this),input) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#413)
	State variables written after the call(s):
	- _mint(msg.sender,output) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#414)
		- _totalSupply = _totalSupply.add(amount) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#78)
	- count = count.add(1) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#418)
Reentrancy in CreamUSD.addLiquidityExactOut(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#422-442):
	External calls:
	- from.safeTransferFrom(msg.sender,address(this),input) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#435)
	State variables written after the call(s):
	- _mint(msg.sender,output) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#436)
		- _totalSupply = _totalSupply.add(amount) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#78)
	- count = count.add(1) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#440)
Reentrancy in CreamUSD.removeLiquidityExactIn(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#444-458):
	External calls:
	- to.safeTransfer(msg.sender,output) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#452)
	State variables written after the call(s):
	- count = count.sub(1) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#456)
Reentrancy in CreamUSD.removeLiquidityExactOut(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#460-475):
	External calls:
	- to.safeTransfer(msg.sender,output) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#469)
	State variables written after the call(s):
	- count = count.sub(1) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#473)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
ERC20Detailed.constructor(string,string,uint8).name (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#103) shadows:
	- ERC20Detailed.name() (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#108-110) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#103) shadows:
	- ERC20Detailed.symbol() (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#111-113) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#103) shadows:
	- ERC20Detailed.decimals() (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#114-116) (function)
CreamUSD.normalize1e18(IERC20,uint256)._decimals (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#339) shadows:
	- ERC20Detailed._decimals (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#101) (state variable)
CreamUSD.normalize(IERC20,uint256)._decimals (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#349) shadows:
	- ERC20Detailed._decimals (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#101) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in CreamUSD.addLiquidityExactIn(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#401-420):
	External calls:
	- from.safeTransferFrom(msg.sender,address(this),input) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#413)
	State variables written after the call(s):
	- _mint(msg.sender,output) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#414)
		- _balances[account] = _balances[account].add(amount) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#79)
	- tokens[address(from)] = true (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#417)
Reentrancy in CreamUSD.addLiquidityExactOut(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#422-442):
	External calls:
	- from.safeTransferFrom(msg.sender,address(this),input) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#435)
	State variables written after the call(s):
	- _mint(msg.sender,output) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#436)
		- _balances[account] = _balances[account].add(amount) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#79)
	- tokens[address(from)] = true (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#439)
Reentrancy in CreamUSD.removeLiquidityExactIn(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#444-458):
	External calls:
	- to.safeTransfer(msg.sender,output) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#452)
	State variables written after the call(s):
	- tokens[address(to)] = false (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#455)
Reentrancy in CreamUSD.removeLiquidityExactOut(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#460-475):
	External calls:
	- to.safeTransfer(msg.sender,output) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#469)
	State variables written after the call(s):
	- tokens[address(to)] = false (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#472)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in CreamUSD.addLiquidityExactIn(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#401-420):
	External calls:
	- from.safeTransferFrom(msg.sender,address(this),input) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#413)
	Event emitted after the call(s):
	- Transfer(address(0),account,amount) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#80)
		- _mint(msg.sender,output) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#414)
Reentrancy in CreamUSD.addLiquidityExactOut(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#422-442):
	External calls:
	- from.safeTransferFrom(msg.sender,address(this),input) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#435)
	Event emitted after the call(s):
	- Transfer(address(0),account,amount) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#80)
		- _mint(msg.sender,output) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#436)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
CreamUSD.swapExactAmountIn(IERC20,IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#372-384) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= deadline,expired) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#376)
CreamUSD.swapExactAmountOut(IERC20,IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#386-399) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= deadline,expired) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#390)
CreamUSD.addLiquidityExactIn(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#401-420) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= deadline,expired) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#403)
CreamUSD.addLiquidityExactOut(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#422-442) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= deadline,expired) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#424)
CreamUSD.removeLiquidityExactIn(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#444-458) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= deadline,expired) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#445)
CreamUSD.removeLiquidityExactOut(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#460-475) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= deadline,expired) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#461)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Address.isContract(address) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#165-171) uses assembly
	- INLINE ASM (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#169-170)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
CreamUSD.swapExactAmountIn(IERC20,IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#372-384) compares to a boolean constant:
	-require(bool,string)(coins[address(to)] == true,!coin) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#374)
CreamUSD.swapExactAmountIn(IERC20,IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#372-384) compares to a boolean constant:
	-require(bool,string)(coins[address(from)] == true,!coin) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#373)
CreamUSD.swapExactAmountOut(IERC20,IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#386-399) compares to a boolean constant:
	-require(bool,string)(coins[address(to)] == true,!coin) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#388)
CreamUSD.swapExactAmountOut(IERC20,IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#386-399) compares to a boolean constant:
	-require(bool,string)(coins[address(from)] == true,!coin) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#387)
CreamUSD.addLiquidityExactIn(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#401-420) compares to a boolean constant:
	-require(bool,string)(coins[address(from)] == true,!coin) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#402)
CreamUSD.addLiquidityExactOut(IERC20,uint256,uint256,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#422-442) compares to a boolean constant:
	-require(bool,string)(coins[address(from)] == true,!coin) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#423)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#192-203):
	- (success,returndata) = address(token).call(data) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#196)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter CreamUSD.setGovernance(address)._governance (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#269) is not in mixedCase
Parameter CreamUSD.setNormalizer(address)._normalizer (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#274) is not in mixedCase
Parameter CreamUSD.approveCoins(address)._coin (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#279) is not in mixedCase
Parameter CreamUSD.f(int256,int256,int256)._x (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#291) is not in mixedCase
Parameter CreamUSD.normalize1e18(IERC20,uint256)._amount (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#338) is not in mixedCase
Parameter CreamUSD.normalize(IERC20,uint256)._amount (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#348) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
CreamUSD.slitherConstructorConstantVariables() (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#256-476) uses literals with too many digits:
	- BASE = 100000 (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#285)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
CreamUSD.fee (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#284) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#40-42)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#43-46)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#47-49)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#50-53)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#54-58)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#59-62)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#63-66)
name() should be declared external:
	- ERC20Detailed.name() (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#108-110)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#111-113)
decimals() should be declared external:
	- ERC20Detailed.decimals() (loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol#114-116)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol analyzed (10 contracts with 46 detectors), 54 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x67122c473a6e195265b9e6d737c8f1cf5543b199.sol
Tool Runtime = 1.485310975000175 seconds
#############################################