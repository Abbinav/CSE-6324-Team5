INFO:Detectors:[91m
XetherGames.sendFunds(address,uint256,uint256,uint256,string) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#980-986) sends eth to arbitrary user
	Dangerous calls:
	- beneficiary.send(amount) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#981)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#266-308):
	External calls:
	- sendDividends() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#293)
		- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#259)
	State variables written after the call(s):
	- bet.amount = amount (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#301)
	- bet.modulo = uint32(modulo) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#302)
	- bet.rollUnder = uint8(rollUnder) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#303)
	- bet.placeBlockNumber = uint40(block.number) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#304)
	- bet.mask = uint40(mask) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#305)
	- bet.clientSeed = clientSeed (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#306)
	- bet.gambler = msg.sender (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#307)
	- (mask,rollUnder,bet.locked) = prepareBet(betMask,modulo,amount,commit,clientSeed,msg.sender) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#299)
		- totalDividends += amount * DIVIDENDS_PERCENT / PERCENTAGES_BASE (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#932)
Reentrancy in XetherGames.placeBetRoulette(uint256[],uint256[],uint256,uint256,uint256,bytes32,bytes32) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#310-351):
	External calls:
	- sendDividends() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#331)
		- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#259)
	State variables written after the call(s):
	- (betRoulette.betsCount,betRoulette.locked) = placeBetRouletteProcess(commit,betMask,betAmount) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#334)
		- betRoulette.amount[tmpBetCount] = betAmount[tmpBetCount] / 4 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#378)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 4 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#382)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 4 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#388)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 4 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#394)
		- betRoulette.amount[tmpBetCount] = betAmount[tmpBetCount] / 9 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#410)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 9 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#415)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 9 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#422)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 9 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#429)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 9 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#436)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] * 2 / 9 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#443)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] * 2 / 9 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#450)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 5 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#466)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 5 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#472)
		- betRoulette.amount[tmpBetCount] = betAmount[tmpBetCount] / 5 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#478)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 5 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#485)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 5 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#492)
		- betRoulette.amount[tmpBetCount] = betAmount[tmpBetCount] / 6 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#508)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 6 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#513)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 6 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#520)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 6 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#527)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 6 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#534)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 6 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#541)
		- betRoulette.amount[tmpBetCount] = betAmount[tmpBetCount] (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#564)
	- betRoulette.totalBetAmount = msg.value (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#343)
	- betRoulette.placeBlockNumber = uint40(block.number) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#344)
	- betRoulette.clientSeed = clientSeed (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#345)
	- betRoulette.gambler = msg.sender (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#346)
	- (betRoulette.betsCount,betRoulette.locked) = placeBetRouletteProcess(commit,betMask,betAmount) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#334)
		- totalDividends += amount * DIVIDENDS_PERCENT / PERCENTAGES_BASE (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#965)
Reentrancy in XetherGames.sendDividends() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#256-264):
	External calls:
	- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#259)
	State variables written after the call(s):
	- totalDividends = 0 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#260)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
XetherGames._slotsWinAmount(bytes32,uint256,address) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#776-794) performs a multiplication on the result of a division:
	-winAmount = (amount - houseEdge - jackpotFee) / 100 * SLOTSWinsRatios[wins] (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#792)
XetherGames._slotsWinAmount(bytes32,uint256,address) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#776-794) performs a multiplication on the result of a division:
	-winAmount += (amount - houseEdge - jackpotFee) / 100 * SLOTSWildRatios[wild] (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#793)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
XetherGames.setNewRoulettePercents(uint8) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#163-166) contains a tautology or contradiction:
	- require(bool)(0 <= newRoulettePercent && newRoulettePercent <= 10) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#164)
XetherGames.setNewPlinkoPercents(uint8) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#168-171) contains a tautology or contradiction:
	- require(bool)(0 <= newPlinkoPercent && newPlinkoPercent <= 10) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#169)
XetherGames.placeBetRouletteProcess(uint256,uint256[],uint256[]) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#353-571) contains a tautology or contradiction:
	- 0 <= tmpBetCount (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#366)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction[0m
INFO:Detectors:[93m
XetherGames._slotsCheckWin(bytes32).prevNum (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#798) is a local variable never initialized
XetherGames.settleBetCommon(XetherGames.Bet,uint256).diceWin (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#651) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Reentrancy in XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#266-308):
	External calls:
	- sendDividends() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#293)
		- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#259)
	State variables written after the call(s):
	- (mask,rollUnder,bet.locked) = prepareBet(betMask,modulo,amount,commit,clientSeed,msg.sender) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#299)
		- bonusProgrammAccumulated[gambler] += amount (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#587)
	- (mask,rollUnder,bet.locked) = prepareBet(betMask,modulo,amount,commit,clientSeed,msg.sender) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#299)
		- jackpotSize += uint128(jackpotFee) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#589)
	- (mask,rollUnder,bet.locked) = prepareBet(betMask,modulo,amount,commit,clientSeed,msg.sender) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#299)
		- lockedInBets += uint128(possibleWinAmount) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#588)
	- (mask,rollUnder,bet.locked) = prepareBet(betMask,modulo,amount,commit,clientSeed,msg.sender) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#299)
		- totalAdvertise += amount * ADVERTISE_PERCENT / PERCENTAGES_BASE (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#933)
Reentrancy in XetherGames.placeBetRoulette(uint256[],uint256[],uint256,uint256,uint256,bytes32,bytes32) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#310-351):
	External calls:
	- sendDividends() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#331)
		- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#259)
	State variables written after the call(s):
	- bonusProgrammAccumulated[msg.sender] += msg.value (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#340)
	- jackpotSize += uint128(JACKPOT_FEE) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#348)
	- jackpotSize += 0 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#348)
	- lockedInBets += betRoulette.locked (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#336)
	- (betRoulette.betsCount,betRoulette.locked) = placeBetRouletteProcess(commit,betMask,betAmount) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#334)
		- totalAdvertise += amount * ADVERTISE_PERCENT / PERCENTAGES_BASE (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#966)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#266-308):
	External calls:
	- sendDividends() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#293)
		- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#259)
	Event emitted after the call(s):
	- Commit(commit,clientSeed,amount) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#593)
		- (mask,rollUnder,bet.locked) = prepareBet(betMask,modulo,amount,commit,clientSeed,msg.sender) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#299)
Reentrancy in XetherGames.placeBetRoulette(uint256[],uint256[],uint256,uint256,uint256,bytes32,bytes32) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#310-351):
	External calls:
	- sendDividends() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#331)
		- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#259)
	Event emitted after the call(s):
	- Commit(commit,clientSeed,msg.value) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#350)
Reentrancy in XetherGames.sendDividends() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#256-264):
	External calls:
	- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#259)
	Event emitted after the call(s):
	- PayDividendsSuccess(now,tmpDividends) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#262)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Contract xEtherTokensContractInterface (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#17-19) is not in CapWords
Parameter XetherGames.approveNextOwner(address)._nextOwner (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#135) is not in mixedCase
Parameter XetherGames.changeDividendsLimit(uint256)._newDividendsLimit (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#183) is not in mixedCase
Parameter XetherGames.setMaxProfit(uint256)._maxProfit (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#187) is not in mixedCase
Parameter XetherGames.setMaxProfitPlinko(uint256)._maxProfitPlinko (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#192) is not in mixedCase
Parameter XetherGames.setMaxProfitRoulette(uint256)._maxProfitRoulette (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#197) is not in mixedCase
Parameter XetherGames.setRouletteTableLimit(uint256)._newRouletteTableLimit (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#202) is not in mixedCase
Parameter XetherGames.setComissionState(uint8,uint8)._newRouletteState (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#207) is not in mixedCase
Parameter XetherGames.setComissionState(uint8,uint8)._newPlinkoState (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#207) is not in mixedCase
Variable XetherGames.DIVIDENDS_LIMIT (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#32) is not in mixedCase
Variable XetherGames.DIVIDENDS_PERCENT (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#37) is not in mixedCase
Variable XetherGames.ADVERTISE_PERCENT (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#38) is not in mixedCase
Variable XetherGames.HOUSE_EDGE_PERCENT (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#39) is not in mixedCase
Variable XetherGames.ROULETTE_PERCENT (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#45) is not in mixedCase
Variable XetherGames.PLINKO1Ratios (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#49) is not in mixedCase
Variable XetherGames.PLINKO2Ratios (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#50) is not in mixedCase
Variable XetherGames.PLINKO3Ratios (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#51) is not in mixedCase
Variable XetherGames.PLINKO_PERCENT (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#53) is not in mixedCase
Variable XetherGames.SLOTSWinsRatios (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#57) is not in mixedCase
Variable XetherGames.SLOTSWildRatios (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#58) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Reentrancy in XetherGames.sendFunds(address,uint256,uint256,uint256,string) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#980-986):
	External calls:
	- beneficiary.send(amount) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#981)
	Event emitted after the call(s):
	- Payment(beneficiary,commit,successLogAmount,paymentType) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#982)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4[0m
INFO:Detectors:[92m
XetherGames.slitherConstructorConstantVariables() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#21-1012) uses literals with too many digits:
	- MAX_AMOUNT = 300000000000000000000000 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#27)
XetherGames.slitherConstructorConstantVariables() (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#21-1012) uses literals with too many digits:
	- POPCNT_MULT = 0x0000000000002000000000100000000008000000000400000000020000000001 (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#1000)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
XetherGames.ROULETTE_STAKES_LIMIT (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#42) is never used in XetherGames (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#21-1012)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
XetherGames.luckyNumber (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#35) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
changeDividendsLimit(uint256) should be declared external:
	- XetherGames.changeDividendsLimit(uint256) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#183-185)
setMaxProfit(uint256) should be declared external:
	- XetherGames.setMaxProfit(uint256) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#187-190)
setMaxProfitPlinko(uint256) should be declared external:
	- XetherGames.setMaxProfitPlinko(uint256) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#192-195)
setMaxProfitRoulette(uint256) should be declared external:
	- XetherGames.setMaxProfitRoulette(uint256) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#197-200)
setRouletteTableLimit(uint256) should be declared external:
	- XetherGames.setRouletteTableLimit(uint256) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#202-205)
setComissionState(uint8,uint8) should be declared external:
	- XetherGames.setComissionState(uint8,uint8) (loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#207-210)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x0c073c92e7684031cfc297b83ecc33619e864d18.sol analyzed (2 contracts with 46 detectors), 49 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x0c073c92e7684031cfc297b83ecc33619e864d18.sol
Tool Runtime = 3.0441317900003924 seconds
#############################################