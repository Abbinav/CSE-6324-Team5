INFO:Detectors:[91m
Shelf.title (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1360) shadows:
	- TitleOwned.title (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1284)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing[0m
INFO:Detectors:[93m
TokenLike_1 (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1328-1333) has incorrect ERC20 function interface:TokenLike_1.approve(address,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1332)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
Reentrancy in Shelf.depend(bytes32,address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1389-1402):
	External calls:
	- currency.approve(lender,uint256(0)) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1391)
	- currency.approve(addr,uint256(- 1)) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1392)
	State variables written after the call(s):
	- lender = addr (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1393)
Reentrancy in Shelf.issue(address,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1410-1420):
	External calls:
	- loan = title.issue(msg.sender) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1414)
	State variables written after the call(s):
	- nftlookup[nft] = loan (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1415)
Reentrancy in Shelf.withdraw(uint256,uint256,address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1464-1472):
	External calls:
	- distributor.balance() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1468)
	- owner(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1464)
		- require(bool)(title.ownerOf(loan) == msg.sender) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1289)
	State variables written after the call(s):
	- balances[loan] = safeSub(balances[loan],currencyAmount) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1469)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
ERC721Metadata.constructor(string,string).name (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1169) shadows:
	- ERC721Metadata.name() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1181-1183) (function)
	- IERC721Metadata.name() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1135) (function)
ERC721Metadata.constructor(string,string).symbol (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1169) shadows:
	- ERC721Metadata.symbol() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1189-1191) (function)
	- IERC721Metadata.symbol() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1136) (function)
Title.constructor(string,string).name (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1258) shadows:
	- ERC721Metadata.name() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1181-1183) (function)
	- IERC721Metadata.name() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1135) (function)
Title.constructor(string,string).symbol (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1258) shadows:
	- ERC721Metadata.symbol() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1189-1191) (function)
	- IERC721Metadata.symbol() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1136) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Shelf.borrow(uint256,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1449-1459):
	External calls:
	- subscriber.borrowEvent(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1452)
	- pile.accrue(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1454)
	- ceiling.borrow(loan,currencyAmount) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1455)
	- pile.incDebt(loan,currencyAmount) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1456)
	- owner(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1449)
		- require(bool)(title.ownerOf(loan) == msg.sender) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1289)
	State variables written after the call(s):
	- balance = safeAdd(balance,currencyAmount) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1458)
	- balances[loan] = safeAdd(balances[loan],currencyAmount) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1457)
Reentrancy in Shelf.close(uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1422-1431):
	External calls:
	- require(bool,string)(pile.debt(loan) == 0,loan-has-outstanding-debt) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1423)
	- require(bool,string)(title.ownerOf(loan) == msg.sender || NFTLike_2(registry).ownerOf(tokenId) == msg.sender,not-loan-or-nft-owner) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1426)
	- title.close(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1427)
	State variables written after the call(s):
	- resetLoanBalance(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1430)
		- balance = safeSub(balance,loanBalance) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1541)
	- resetLoanBalance(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1430)
		- balances[loan] = 0 (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1540)
	- nftlookup[nft] = 0 (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1429)
Reentrancy in Shelf.issue(address,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1410-1420):
	External calls:
	- loan = title.issue(msg.sender) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1414)
	State variables written after the call(s):
	- shelf[loan].registry = registry_ (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1416)
	- shelf[loan].tokenId = token_ (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1417)
Reentrancy in Shelf.recover(uint256,address,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1483-1495):
	External calls:
	- pile.accrue(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1484)
	- loanDebt = pile.debt(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1486)
	- require(bool,string)(currency.transferFrom(usr,address(this),currencyAmount),currency-transfer-failed) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1488)
	- ceiling.repay(loan,loanDebt) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1490)
	- pile.decDebt(loan,loanDebt) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1492)
	State variables written after the call(s):
	- resetLoanBalance(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1493)
		- balance = safeSub(balance,loanBalance) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1541)
	- resetLoanBalance(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1493)
		- balances[loan] = 0 (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1540)
Reentrancy in Shelf.withdraw(uint256,uint256,address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1464-1472):
	External calls:
	- distributor.balance() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1468)
	- owner(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1464)
		- require(bool)(title.ownerOf(loan) == msg.sender) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1289)
	State variables written after the call(s):
	- balance = safeSub(balance,currencyAmount) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1470)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in Shelf.borrow(uint256,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1449-1459):
	External calls:
	- owner(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1449)
		- require(bool)(title.ownerOf(loan) == msg.sender) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1289)
	Event emitted after the call(s):
	- LogNote(msg.sig,msg.sender,foo,bar,wad,msg.data) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#488)
		- note() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1449)
Reentrancy in Shelf.lock(uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1513-1518):
	External calls:
	- owner(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1513)
		- require(bool)(title.ownerOf(loan) == msg.sender) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1289)
	Event emitted after the call(s):
	- LogNote(msg.sig,msg.sender,foo,bar,wad,msg.data) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#488)
		- note() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1513)
Reentrancy in Shelf.repay(uint256,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1475-1479):
	External calls:
	- owner(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1475)
		- require(bool)(title.ownerOf(loan) == msg.sender) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1289)
	Event emitted after the call(s):
	- LogNote(msg.sig,msg.sender,foo,bar,wad,msg.data) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#488)
		- note() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1475)
Reentrancy in Shelf.unlock(uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1522-1525):
	External calls:
	- owner(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1522)
		- require(bool)(title.ownerOf(loan) == msg.sender) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1289)
	Event emitted after the call(s):
	- LogNote(msg.sig,msg.sender,foo,bar,wad,msg.data) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#488)
		- note() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1522)
Reentrancy in Shelf.withdraw(uint256,uint256,address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1464-1472):
	External calls:
	- owner(loan) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1464)
		- require(bool)(title.ownerOf(loan) == msg.sender) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1289)
	Event emitted after the call(s):
	- LogNote(msg.sig,msg.sender,foo,bar,wad,msg.data) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#488)
		- note() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1464)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Address.isContract(address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#812-823) uses assembly
	- INLINE ASM (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#821-822)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#9) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Event DSTestlog(string) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#30) is not in CapWords
Event DSTestlogs(bytes) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#31) is not in CapWords
Event DSTestlog_address(address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#33) is not in CapWords
Event DSTestlog_bytes32(bytes32) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#34) is not in CapWords
Event DSTestlog_int(int256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#35) is not in CapWords
Event DSTestlog_uint(uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#36) is not in CapWords
Event DSTestlog_bytes(bytes) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#37) is not in CapWords
Event DSTestlog_string(string) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#38) is not in CapWords
Event DSTestlog_named_address(string,address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#40) is not in CapWords
Event DSTestlog_named_bytes32(string,bytes32) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#41) is not in CapWords
Event DSTestlog_named_decimal_int(string,int256,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#42) is not in CapWords
Event DSTestlog_named_decimal_uint(string,uint256,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#43) is not in CapWords
Event DSTestlog_named_int(string,int256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#44) is not in CapWords
Event DSTestlog_named_uint(string,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#45) is not in CapWords
Event DSTestlog_named_bytes(string,bytes) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#46) is not in CapWords
Event DSTestlog_named_string(string,string) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#47) is not in CapWords
Variable DSTest.IS_TEST (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#49) is not in mixedCase
Modifier DSTest.logs_gas() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#62-67) is not in mixedCase
Parameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1002) is not in mixedCase
Contract TitleLike_1 (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1279-1281) is not in CapWords
Contract NFTLike_2 (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1317-1320) is not in CapWords
Contract TitleLike_2 (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1322-1326) is not in CapWords
Contract TokenLike_1 (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1328-1333) is not in CapWords
Contract PileLike_3 (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1335-1341) is not in CapWords
Contract DistributorLike_2 (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1348-1350) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
DSTest.HEVM_ADDRESS (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#52-53) is never used in DSTest (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#29-445)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
DSTest.IS_TEST (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#49) should be constant
PileLike_3.total (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1336) should be constant
Title.uri (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1256) should be constant
TokenLike_1.totalSupply (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1329) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
rely(address) should be declared external:
	- Auth.rely(address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#514)
deny(address) should be declared external:
	- Auth.deny(address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#515)
safeDiv(uint256,uint256) should be declared external:
	- Math.safeDiv(uint256,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#552-554)
rmul(uint256,uint256) should be declared external:
	- Math.rmul(uint256,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#556-558)
rdiv(uint256,uint256) should be declared external:
	- Math.rdiv(uint256,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#560-563)
balanceOf(address) should be declared external:
	- ERC721.balanceOf(address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#887-891)
	- IERC721.balanceOf(address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#756)
approve(address,uint256) should be declared external:
	- IERC721.approve(address,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#759)
	- ERC721.approve(address,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#913-923)
setApprovalForAll(address,bool) should be declared external:
	- IERC721.setApprovalForAll(address,bool) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#762)
	- ERC721.setApprovalForAll(address,bool) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#943-948)
safeTransferFrom(address,address,uint256) should be declared external:
	- ERC721.safeTransferFrom(address,address,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#986-988)
	- IERC721.safeTransferFrom(address,address,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#766)
onERC721Received(address,address,uint256,bytes) should be declared external:
	- IERC721Receiver.onERC721Received(address,address,uint256,bytes) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#794-795)
issue(address) should be declared external:
	- Title.issue(address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1264-1266)
close(uint256) should be declared external:
	- Title.close(uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1274-1276)
ownerOf(uint256) should be declared external:
	- TitleLike_1.ownerOf(uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1280)
ownerOf(uint256) should be declared external:
	- NFTLike_2.ownerOf(uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1318)
transferFrom(address,address,uint256) should be declared external:
	- NFTLike_2.transferFrom(address,address,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1319)
issue(address) should be declared external:
	- TitleLike_2.issue(address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1323)
close(uint256) should be declared external:
	- TitleLike_2.close(uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1324)
ownerOf(uint256) should be declared external:
	- TitleLike_2.ownerOf(uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1325)
balanceOf(address) should be declared external:
	- TokenLike_1.balanceOf(address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1330)
transferFrom(address,address,uint256) should be declared external:
	- TokenLike_1.transferFrom(address,address,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1331)
approve(address,uint256) should be declared external:
	- TokenLike_1.approve(address,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1332)
debt(uint256) should be declared external:
	- PileLike_3.debt(uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1337)
accrue(uint256) should be declared external:
	- PileLike_3.accrue(uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1338)
incDebt(uint256,uint256) should be declared external:
	- PileLike_3.incDebt(uint256,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1339)
decDebt(uint256,uint256) should be declared external:
	- PileLike_3.decDebt(uint256,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1340)
borrow(uint256,uint256) should be declared external:
	- CeilingLike.borrow(uint256,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1344)
repay(uint256,uint256) should be declared external:
	- CeilingLike.repay(uint256,uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1345)
balance() should be declared external:
	- DistributorLike_2.balance() (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1349)
borrowEvent(uint256) should be declared external:
	- SubscriberLike.borrowEvent(uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1353)
unlockEvent(uint256) should be declared external:
	- SubscriberLike.unlockEvent(uint256) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1354)
claim(uint256,address) should be declared external:
	- Shelf.claim(uint256,address) (loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol#1533-1535)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol analyzed (25 contracts with 46 detectors), 83 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x5b2b43b3676057e38F332De73A9fCf0F8f6Babf7.sol
Tool Runtime = 3.623526136001601 seconds
#############################################