Compilation warnings/errors on ./loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol:
./loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol:612:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[91m
ERC20.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#576) shadows:
	- Initializable.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#68)
Ownable.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#811) shadows:
	- Initializable.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#68)
CapperRole.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1277) shadows:
	- Initializable.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#68)
StakingPoolBase.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1770) shadows:
	- CapperRole.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1277)
	- Ownable.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#811)
	- Initializable.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#68)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing[0m
INFO:Detectors:[93m
Reentrancy in StakingPool.createStake(address,uint256,uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1877-1880):
	External calls:
	- _withdrawRewards(_address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1878)
		- IERC20(token).transfer(user,rwrds) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1871)
	- super.createStake(_address,_amount,_lockInDuration,_data) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1879)
		- require(bool,string)(stakingToken.transferFrom(_address,address(this),_amount),Stake required) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1377-1379)
	State variables written after the call(s):
	- super.createStake(_address,_amount,_lockInDuration,_data) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1879)
		- stakeHolders[_msgSender()].exists = true (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1707)
		- stakeHolders[_address].totalStakedFor = stakeHolders[_address].totalStakedFor.add(_amount) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1710)
		- stakeHolders[_msgSender()].personalStakes.push(Stake(block.timestamp.add(_lockInDuration),_amount,_address)) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1711-1716)
Reentrancy in StakingPoolBase.withdrawStake(uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1732-1768):
	External calls:
	- require(bool,string)(stakingToken.transfer(_msgSender(),_amount),Unable to withdraw stake) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1751-1753)
	State variables written after the call(s):
	- stakeHolders[personalStake.stakedFor].totalStakedFor = stakeHolders[personalStake.stakedFor].totalStakedFor.sub(personalStake.actualAmount) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1755-1756)
	- personalStake.actualAmount = 0 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1758)
	- stakeHolders[_msgSender()].personalStakeIndex ++ (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1759)
Reentrancy in StakingPool.withdrawStake(uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1882-1885):
	External calls:
	- _withdrawRewards(_msgSender()) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1883)
		- IERC20(token).transfer(user,rwrds) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1871)
	- super.withdrawStake(_amount,_data) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1884)
		- require(bool,string)(stakingToken.transfer(_msgSender(),_amount),Unable to withdraw stake) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1751-1753)
	State variables written after the call(s):
	- super.withdrawStake(_amount,_data) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1884)
		- stakeHolders[personalStake.stakedFor].totalStakedFor = stakeHolders[personalStake.stakedFor].totalStakedFor.sub(personalStake.actualAmount) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1755-1756)
		- personalStake.actualAmount = 0 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1758)
		- stakeHolders[_msgSender()].personalStakeIndex ++ (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1759)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
RewardVestingModule._claimRewards(address,address).claimAmount (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1106) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
StakingPool._withdrawRewards(address,address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1861-1875) ignores return value by IERC20(token).transfer(user,rwrds) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1871)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
StakingPoolBase.isUserCapEnabledForStakeFor(uint256).stake (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1385) shadows:
	- StakingPoolBase.stake(uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1570-1576) (function)
	- IERC900.stake(uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1213) (function)
StakingPoolBase.isUserCapEnabledForStakeFor(uint256).totalStaked (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1395) shadows:
	- StakingPoolBase.totalStaked() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1636-1639) (function)
	- IERC900.totalStaked() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1218) (function)
StakingPool.registerRewardToken(address).token (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1813) shadows:
	- StakingPoolBase.token() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1645-1647) (function)
	- IERC900.token() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1219) (function)
StakingPool.isRegisteredRewardToken(address).token (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1823) shadows:
	- StakingPoolBase.token() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1645-1647) (function)
	- IERC900.token() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1219) (function)
StakingPool.rewardBalanceOf(address,address).token (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1838) shadows:
	- StakingPoolBase.token() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1645-1647) (function)
	- IERC900.token() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1219) (function)
StakingPool._withdrawRewards(address,address).token (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1861) shadows:
	- StakingPoolBase.token() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1645-1647) (function)
	- IERC900.token() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1219) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
StakingPool._claimRewardsFromVesting() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1888-1908) has external calls inside a loop: actualBalance = IERC20(rt).balanceOf(address(this)) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1896)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in StakingPool._claimRewardsFromVesting() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1888-1908):
	External calls:
	- rewardVesting.claimRewards() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1889)
	State variables written after the call(s):
	- rewards[rt].distributions.push(RewardDistribution(totalShares,distributionAmount)) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1900-1903)
	- rewards[rt].unclaimed = rewards[rt].unclaimed.add(distributionAmount) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1904)
Reentrancy in StakingPoolBase.createStake(address,uint256,uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1698-1724):
	External calls:
	- canStake(_msgSender(),_amount) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1704)
		- require(bool,string)(stakingToken.transferFrom(_address,address(this),_amount),Stake required) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1377-1379)
	- canStake(_msgSender(),_amount) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1704)
		- require(bool,string)(stakingToken.transferFrom(_address,address(this),_amount),Stake required) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1377-1379)
	State variables written after the call(s):
	- stakeHolders[_msgSender()].exists = true (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1707)
	- stakeHolders[_address].totalStakedFor = stakeHolders[_address].totalStakedFor.add(_amount) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1710)
	- stakeHolders[_msgSender()].personalStakes.push(Stake(block.timestamp.add(_lockInDuration),_amount,_address)) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1711-1716)
	- totalStakedAmount = totalStakedAmount.add(_amount) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1718)
Reentrancy in StakingPoolBase.withdrawStake(uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1732-1768):
	External calls:
	- require(bool,string)(stakingToken.transfer(_msgSender(),_amount),Unable to withdraw stake) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1751-1753)
	State variables written after the call(s):
	- totalStakedAmount = totalStakedAmount.sub(_amount) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1761)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in RewardVestingModule._claimRewards(address,address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1090-1135):
	External calls:
	- IERC20(token).safeTransfer(protocol,claimAmount) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1133)
	Event emitted after the call(s):
	- RewardClaimed(protocol,token,previousClaim,ri.lastClaim,claimAmount) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1134)
Reentrancy in StakingPool._claimRewardsFromVesting() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1888-1908):
	External calls:
	- rewardVesting.claimRewards() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1889)
	Event emitted after the call(s):
	- RewardDistributionCreated(rt,distributionAmount,totalShares) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1905)
Reentrancy in StakingPool._withdrawRewards(address,address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1861-1875):
	External calls:
	- IERC20(token).transfer(user,rwrds) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1871)
	Event emitted after the call(s):
	- RewardWithdraw(user,token,rwrds) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1872)
Reentrancy in StakingPoolBase.createStake(address,uint256,uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1698-1724):
	External calls:
	- canStake(_msgSender(),_amount) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1704)
		- require(bool,string)(stakingToken.transferFrom(_address,address(this),_amount),Stake required) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1377-1379)
	- canStake(_msgSender(),_amount) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1704)
		- require(bool,string)(stakingToken.transferFrom(_address,address(this),_amount),Stake required) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1377-1379)
	Event emitted after the call(s):
	- Staked(_address,_amount,totalStakedFor(_address),_data) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1719-1723)
Reentrancy in StakingPool.createStake(address,uint256,uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1877-1880):
	External calls:
	- _withdrawRewards(_address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1878)
		- IERC20(token).transfer(user,rwrds) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1871)
	- super.createStake(_address,_amount,_lockInDuration,_data) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1879)
		- require(bool,string)(stakingToken.transferFrom(_address,address(this),_amount),Stake required) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1377-1379)
	Event emitted after the call(s):
	- Staked(_address,_amount,totalStakedFor(_address),_data) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1719-1723)
		- super.createStake(_address,_amount,_lockInDuration,_data) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1879)
Reentrancy in StakingPoolBase.withdrawStake(uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1732-1768):
	External calls:
	- require(bool,string)(stakingToken.transfer(_msgSender(),_amount),Unable to withdraw stake) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1751-1753)
	Event emitted after the call(s):
	- Unstaked(personalStake.stakedFor,_amount,totalStakedFor(personalStake.stakedFor),_data) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1763-1767)
Reentrancy in StakingPool.withdrawStake(uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1882-1885):
	External calls:
	- _withdrawRewards(_msgSender()) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1883)
		- IERC20(token).transfer(user,rwrds) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1871)
	- super.withdrawStake(_amount,_data) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1884)
		- require(bool,string)(stakingToken.transfer(_msgSender(),_amount),Unable to withdraw stake) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1751-1753)
	Event emitted after the call(s):
	- Unstaked(personalStake.stakedFor,_amount,totalStakedFor(personalStake.stakedFor),_data) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1763-1767)
		- super.withdrawStake(_amount,_data) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1884)
	- UserCapChanged(_msgSender(),cap) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1426)
		- super.withdrawStake(_amount,_data) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1884)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
RewardVestingModule.registerRewardToken(address,address,uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1036-1048) uses timestamp for comparisons
	Dangerous comparisons:
	- firstEpochStart == 0 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1037)
RewardVestingModule._claimRewards(address,address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1090-1135) uses timestamp for comparisons
	Dangerous comparisons:
	- lastEpoch.end < block.timestamp (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1100)
	- ep.end >= block.timestamp (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1112)
	- ep.end > block.timestamp (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1116)
RewardVestingModule._addReward(address,address,uint256,uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1173-1194) uses timestamp for comparisons
	Dangerous comparisons:
	- epochEnd < block.timestamp (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1181)
	- require(bool,string)(ep.end > block.timestamp,RewardVesting: epoch already finished) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1189)
StakingPoolBase.unstakeAllUnlocked(bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1608-1621) uses timestamp for comparisons
	Dangerous comparisons:
	- stakeHolders[_msgSender()].personalStakes[i].unlockedTimestamp <= block.timestamp (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1614)
StakingPoolBase.withdrawStake(uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1732-1768) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(personalStake.unlockedTimestamp <= block.timestamp,The current stake hasn't unlocked yet) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1740-1742)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Initializable.isConstructor() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#55-65) uses assembly
	- INLINE ASM (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#63-64)
Address.isContract(address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#605-614) uses assembly
	- INLINE ASM (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#612-613)
Module.getModuleAddress(string) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#884-898) uses assembly
	- INLINE ASM (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#889-893)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
StakingPoolBase.checkUserCapDisabled() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1430-1433) compares to a boolean constant:
	-require(bool,string)(isUserCapEnabled() == false,UserCapEnabled) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1431)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#8) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#74) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#106) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#186) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#346) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#582) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#656) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#734) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#817) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#837) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#862) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#905) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#945) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#996) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1202) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1231) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1283) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1776) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#644-650):
	- (success) = recipient.call.value(amount)() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#648)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#709-728):
	- (success,returndata) = address(token).call(data) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#721)
Low level call in Module.getModuleAddress(string) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#884-898):
	- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#886)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Variable Initializable.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#68) is not in mixedCase
Variable ERC20.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#576) is not in mixedCase
Variable Ownable.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#811) is not in mixedCase
Parameter Module.initialize(address)._pool (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#873) is not in mixedCase
Parameter Module.setPool(address)._pool (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#878) is not in mixedCase
Parameter RewardVestingModule.initialize(address)._pool (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1030) is not in mixedCase
Parameter RewardVestingModule.setDefaultEpochLength(uint256)._defaultEpochLength (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1050) is not in mixedCase
Variable CapperRole.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1277) is not in mixedCase
Event StakingPoolBasesetLockInDuration(uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1367) is not in CapWords
Parameter StakingPoolBase.initialize(address,ERC20,uint256)._pool (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1446) is not in mixedCase
Parameter StakingPoolBase.initialize(address,ERC20,uint256)._stakingToken (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1446) is not in mixedCase
Parameter StakingPoolBase.initialize(address,ERC20,uint256)._defaultLockInDuration (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1446) is not in mixedCase
Parameter StakingPoolBase.setDefaultLockInDuration(uint256)._defaultLockInDuration (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1454) is not in mixedCase
Parameter StakingPoolBase.setUserCapEnabled(bool)._userCapEnabled (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1459) is not in mixedCase
Parameter StakingPoolBase.setStakingCapEnabled(bool)._stakingCapEnabled (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1464) is not in mixedCase
Parameter StakingPoolBase.setDefaultUserCap(uint256)._newCap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1469) is not in mixedCase
Parameter StakingPoolBase.setStakingCap(uint256)._newCap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1474) is not in mixedCase
Parameter StakingPoolBase.setVipUserEnabled(bool)._vipUserEnabled (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1493) is not in mixedCase
Parameter StakingPoolBase.getPersonalStakeUnlockedTimestamps(address)._address (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1518) is not in mixedCase
Parameter StakingPoolBase.getPersonalStakeActualAmounts(address)._address (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1534) is not in mixedCase
Parameter StakingPoolBase.getPersonalStakeTotalAmount(address)._address (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1541) is not in mixedCase
Parameter StakingPoolBase.getPersonalStakeForAddresses(address)._address (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1557) is not in mixedCase
Parameter StakingPoolBase.stake(uint256,bytes)._amount (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1570) is not in mixedCase
Parameter StakingPoolBase.stake(uint256,bytes)._data (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1570) is not in mixedCase
Parameter StakingPoolBase.stakeFor(address,uint256,bytes)._user (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1585) is not in mixedCase
Parameter StakingPoolBase.stakeFor(address,uint256,bytes)._amount (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1585) is not in mixedCase
Parameter StakingPoolBase.stakeFor(address,uint256,bytes)._data (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1585) is not in mixedCase
Parameter StakingPoolBase.unstake(uint256,bytes)._amount (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1602) is not in mixedCase
Parameter StakingPoolBase.unstake(uint256,bytes)._data (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1602) is not in mixedCase
Parameter StakingPoolBase.unstakeAllUnlocked(bytes)._data (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1608) is not in mixedCase
Parameter StakingPoolBase.totalStakedFor(address)._address (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1628) is not in mixedCase
Parameter StakingPoolBase.getPersonalStakes(address)._address (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1665) is not in mixedCase
Parameter StakingPoolBase.createStake(address,uint256,uint256,bytes)._address (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1699) is not in mixedCase
Parameter StakingPoolBase.createStake(address,uint256,uint256,bytes)._amount (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1700) is not in mixedCase
Parameter StakingPoolBase.createStake(address,uint256,uint256,bytes)._lockInDuration (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1701) is not in mixedCase
Parameter StakingPoolBase.createStake(address,uint256,uint256,bytes)._data (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1702) is not in mixedCase
Parameter StakingPoolBase.withdrawStake(uint256,bytes)._amount (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1733) is not in mixedCase
Parameter StakingPoolBase.withdrawStake(uint256,bytes)._data (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1734) is not in mixedCase
Variable StakingPoolBase.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1770) is not in mixedCase
Parameter StakingPool.setRewardVesting(address)._rewardVesting (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1809) is not in mixedCase
Parameter StakingPool.createStake(address,uint256,uint256,bytes)._address (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1877) is not in mixedCase
Parameter StakingPool.createStake(address,uint256,uint256,bytes)._amount (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1877) is not in mixedCase
Parameter StakingPool.createStake(address,uint256,uint256,bytes)._lockInDuration (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1877) is not in mixedCase
Parameter StakingPool.createStake(address,uint256,uint256,bytes)._data (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1877) is not in mixedCase
Parameter StakingPool.withdrawStake(uint256,bytes)._amount (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1882) is not in mixedCase
Parameter StakingPool.withdrawStake(uint256,bytes)._data (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1882) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
ERC20.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#576) is never used in ERC20 (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#376-577)
Initializable.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#68) is never used in RewardVestingModule (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1004-1197)
ModuleNames.MODULE_ACCESS (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#844) is never used in RewardVestingModule (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1004-1197)
ModuleNames.MODULE_SAVINGS (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#845) is never used in RewardVestingModule (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1004-1197)
ModuleNames.MODULE_INVESTING (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#846) is never used in RewardVestingModule (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1004-1197)
ModuleNames.MODULE_STAKING (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#847) is never used in RewardVestingModule (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1004-1197)
ModuleNames.MODULE_DCA (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#848) is never used in RewardVestingModule (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1004-1197)
ModuleNames.MODULE_REWARD (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#849) is never used in RewardVestingModule (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1004-1197)
ModuleNames.TOKEN_AKRO (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#852) is never used in RewardVestingModule (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1004-1197)
ModuleNames.TOKEN_ADEL (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#853) is never used in RewardVestingModule (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1004-1197)
ModuleNames.CONTRACT_RAY (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#856) is never used in RewardVestingModule (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1004-1197)
StakingPoolBase.______gap (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1770) is never used in StakingPool (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1782-1910)
ModuleNames.MODULE_ACCESS (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#844) is never used in StakingPool (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1782-1910)
ModuleNames.MODULE_SAVINGS (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#845) is never used in StakingPool (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1782-1910)
ModuleNames.MODULE_INVESTING (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#846) is never used in StakingPool (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1782-1910)
ModuleNames.MODULE_STAKING (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#847) is never used in StakingPool (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1782-1910)
ModuleNames.MODULE_DCA (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#848) is never used in StakingPool (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1782-1910)
ModuleNames.MODULE_REWARD (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#849) is never used in StakingPool (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1782-1910)
ModuleNames.TOKEN_AKRO (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#852) is never used in StakingPool (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1782-1910)
ModuleNames.TOKEN_ADEL (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#853) is never used in StakingPool (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1782-1910)
ModuleNames.CONTRACT_RAY (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#856) is never used in StakingPool (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1782-1910)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- ERC20.totalSupply() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#388-390)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#395-397)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#407-410)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#415-417)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#426-429)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#443-447)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#461-464)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#480-483)
owner() should be declared external:
	- Ownable.owner() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#763-765)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#789-792)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#798-800)
getModuleAddress(string) should be declared external:
	- Module.getModuleAddress(string) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#884-898)
addRewardManager(address) should be declared external:
	- RewardManagerRole.addRewardManager(address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#969-971)
renounceRewardManager() should be declared external:
	- RewardManagerRole.renounceRewardManager() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#973-975)
setDefaultEpochLength(uint256) should be declared external:
	- RewardVestingModule.setDefaultEpochLength(uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1050-1052)
getEpochInfo(address,address,uint256) should be declared external:
	- RewardVestingModule.getEpochInfo(address,address,uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1054-1067)
getLastCreatedEpoch(address,address) should be declared external:
	- RewardVestingModule.getLastCreatedEpoch(address,address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1069-1074)
claimRewards() should be declared external:
	- RewardVestingModule.claimRewards() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1076-1084)
claimRewards(address,address) should be declared external:
	- RewardVestingModule.claimRewards(address,address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1086-1088)
createEpoch(address,address,uint256,uint256) should be declared external:
	- RewardVestingModule.createEpoch(address,address,uint256,uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1137-1149)
addReward(address,address,uint256,uint256) should be declared external:
	- RewardVestingModule.addReward(address,address,uint256,uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1151-1153)
addCapper(address) should be declared external:
	- CapperRole.addCapper(address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1259-1261)
renounceCapper() should be declared external:
	- CapperRole.renounceCapper() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1263-1265)
upgrade() should be declared external:
	- StakingPoolBase.upgrade() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1440-1444)
initialize(address,ERC20,uint256) should be declared external:
	- StakingPoolBase.initialize(address,ERC20,uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1446-1452)
setDefaultLockInDuration(uint256) should be declared external:
	- StakingPoolBase.setDefaultLockInDuration(uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1454-1457)
setUserCapEnabled(bool) should be declared external:
	- StakingPoolBase.setUserCapEnabled(bool) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1459-1462)
setStakingCapEnabled(bool) should be declared external:
	- StakingPoolBase.setStakingCapEnabled(bool) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1464-1467)
setDefaultUserCap(uint256) should be declared external:
	- StakingPoolBase.setDefaultUserCap(uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1469-1472)
setStakingCap(uint256) should be declared external:
	- StakingPoolBase.setStakingCap(uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1474-1477)
setUserCap(address,uint256) should be declared external:
	- StakingPoolBase.setUserCap(address,uint256) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1479-1482)
setUserCap(address[],uint256[]) should be declared external:
	- StakingPoolBase.setUserCap(address[],uint256[]) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1484-1490)
setVipUserEnabled(bool) should be declared external:
	- StakingPoolBase.setVipUserEnabled(bool) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1493-1496)
setVipUser(address,bool) should be declared external:
	- StakingPoolBase.setVipUser(address,bool) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1498-1501)
iStakingCapEnabled() should be declared external:
	- StakingPoolBase.iStakingCapEnabled() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1508-1510)
stake(uint256,bytes) should be declared external:
	- StakingPoolBase.stake(uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1570-1576)
stakeFor(address,uint256,bytes) should be declared external:
	- StakingPoolBase.stakeFor(address,uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1585-1591)
unstake(uint256,bytes) should be declared external:
	- StakingPoolBase.unstake(uint256,bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1602-1606)
unstakeAllUnlocked(bytes) should be declared external:
	- StakingPoolBase.unstakeAllUnlocked(bytes) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1608-1621)
token() should be declared external:
	- StakingPoolBase.token() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1645-1647)
supportsHistory() should be declared external:
	- StakingPoolBase.supportsHistory() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1654-1656)
setRewardVesting(address) should be declared external:
	- StakingPool.setRewardVesting(address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1809-1811)
registerRewardToken(address) should be declared external:
	- StakingPool.registerRewardToken(address) (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1813-1817)
claimRewardsFromVesting() should be declared external:
	- StakingPool.claimRewardsFromVesting() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1819-1821)
supportedRewardTokens() should be declared external:
	- StakingPool.supportedRewardTokens() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1830-1832)
withdrawRewards() should be declared external:
	- StakingPool.withdrawRewards() (loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol#1834-1836)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol analyzed (18 contracts with 46 detectors), 170 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3.sol
Tool Runtime = 6.706935510999756 seconds
#############################################