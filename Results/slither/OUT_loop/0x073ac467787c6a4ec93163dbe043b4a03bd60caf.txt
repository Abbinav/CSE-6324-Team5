Compilation warnings/errors on ./loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol:
./loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol:1999:57: Warning: This declaration shadows an existing declaration.
    function fairShare(uint256 balance, uint256 shares, uint256 totalShares) internal pure returns (uint256) {
                                                        ^-----------------^
./loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol:705:5: The shadowed declaration is here:
    uint256 public totalShares = 0; // total shares across all members
    ^----------------------------^
./loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol:1587:5: Warning: Function state mutability can be restricted to view
    function _didPass(uint256 proposalIndex) internal returns (bool didPass) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Moloch.fairShare(uint256,uint256,uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1999-2023) performs a multiplication on the result of a division:
	-(balance / totalShares) * shares (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#2021)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
Moloch._validateProposalForProcessing(uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1627-1641) uses a dangerous strict equality:
	- require(bool,string)(proposal.flags[1] == false,proposal has already been processed) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1637)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Moloch.submitProposal(address,uint256,uint256,uint256,address,uint256,address,string) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#951-1009):
	External calls:
	- require(bool,string)(IERC20(tributeToken).transferFrom(msg.sender,address(this),tributeOffered),tribute token transfer failed) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#995)
	State variables written after the call(s):
	- unsafeAddToBalance(ESCROW,tributeToken,tributeOffered) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#997)
		- userTokenBalances[user][token] += amount (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1971)
		- userTokenBalances[TOTAL][token] += amount (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1973)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Moloch.submitProposal(address,uint256,uint256,uint256,address,uint256,address,string).flags (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1001) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Moloch.withdrawBalances(address[],uint256[],bool).max (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1753) shadows:
	- Moloch.max(uint256,uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1903-1907) (function)
Moloch.fairShare(uint256,uint256,uint256).totalShares (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1999) shadows:
	- Moloch.totalShares (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#705) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Moloch.sponsorProposal(uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1135-1227):
	External calls:
	- require(bool,string)(IERC20(depositToken).transferFrom(msg.sender,address(this),proposalDeposit),proposal deposit token transfer failed) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1139)
	State variables written after the call(s):
	- proposalQueue.push(proposalId) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1221)
	- proposal.startingPeriod = startingPeriod (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1205)
	- proposal.sponsor = memberAddress (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1211)
	- proposal.flags[0] = true (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1215)
	- proposedToKick[proposal.applicant] = true (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1187)
	- proposedToWhitelist[address(proposal.tributeToken)] = true (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1177)
	- unsafeAddToBalance(ESCROW,depositToken,proposalDeposit) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1141)
		- userTokenBalances[user][token] += amount (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1971)
		- userTokenBalances[TOTAL][token] += amount (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1973)
Reentrancy in Moloch.submitProposal(address,uint256,uint256,uint256,address,uint256,address,string) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#951-1009):
	External calls:
	- require(bool,string)(IERC20(tributeToken).transferFrom(msg.sender,address(this),tributeOffered),tribute token transfer failed) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#995)
	State variables written after the call(s):
	- _submitProposal(applicant,sharesRequested,lootRequested,tributeOffered,tributeToken,paymentRequested,paymentToken,details,flags) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1005)
		- proposalCount += 1 (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1129)
	- _submitProposal(applicant,sharesRequested,lootRequested,tributeOffered,tributeToken,paymentRequested,paymentToken,details,flags) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1005)
		- proposals[proposalCount] = proposal (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1121)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in Moloch._withdrawBalance(address,uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1779-1789):
	External calls:
	- require(bool,string)(IERC20(token).transfer(msg.sender,amount),transfer failed) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1785)
	Event emitted after the call(s):
	- Withdraw(msg.sender,token,amount) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1787)
Reentrancy in Moloch.sponsorProposal(uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1135-1227):
	External calls:
	- require(bool,string)(IERC20(depositToken).transferFrom(msg.sender,address(this),proposalDeposit),proposal deposit token transfer failed) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1139)
	Event emitted after the call(s):
	- SponsorProposal(msg.sender,memberAddress,proposalId,proposalQueue.length.sub(1),startingPeriod) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1225)
Reentrancy in Moloch.submitProposal(address,uint256,uint256,uint256,address,uint256,address,string) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#951-1009):
	External calls:
	- require(bool,string)(IERC20(tributeToken).transferFrom(msg.sender,address(this),tributeOffered),tribute token transfer failed) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#995)
	Event emitted after the call(s):
	- SubmitProposal(applicant,sharesRequested,lootRequested,tributeOffered,tributeToken,paymentRequested,paymentToken,details,flags,proposalCount,msg.sender,memberAddress) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1127)
		- _submitProposal(applicant,sharesRequested,lootRequested,tributeOffered,tributeToken,paymentRequested,paymentToken,details,flags) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1005)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Moloch.sponsorProposal(uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1135-1227) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(proposal.proposer != address(0),proposal must have been proposed) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1149)
	- require(bool,string)(! proposal.flags[0],proposal has already been sponsored) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1151)
	- require(bool,string)(! proposal.flags[3],proposal has been cancelled) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1153)
	- require(bool,string)(members[proposal.applicant].jailed == 0,proposal applicant must not be jailed) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1155)
	- require(bool,string)(! tokenWhitelist[address(proposal.tributeToken)],cannot already have whitelisted the token) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1171)
	- require(bool,string)(! proposedToWhitelist[address(proposal.tributeToken)],already proposed to whitelist) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1173)
	- require(bool,string)(! proposedToKick[proposal.applicant],already proposed to kick) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1185)
Moloch.submitVote(uint256,uint8) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1233-1305) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(getCurrentPeriod() >= proposal.startingPeriod,voting period has not started) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1253)
Moloch._didPass(uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1587-1623) uses timestamp for comparisons
	Dangerous comparisons:
	- didPass = proposal.yesVotes > proposal.noVotes (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1593)
	- (totalShares.add(totalLoot)).mul(dilutionBound) < proposal.maxTotalSharesAndLootAtYesVote (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1599)
Moloch._validateProposalForProcessing(uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1627-1641) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(getCurrentPeriod() >= proposal.startingPeriod.add(votingPeriodLength).add(gracePeriodLength),proposal is not ready to be processed) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1635)
	- require(bool,string)(proposal.flags[1] == false,proposal has already been processed) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1637)
	- require(bool,string)(proposalIndex == 0 || proposals[proposalQueue[proposalIndex.sub(1)]].flags[1],previous proposal must be processed) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1639)
Moloch.hasVotingPeriodExpired(uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1887-1891) uses timestamp for comparisons
	Dangerous comparisons:
	- getCurrentPeriod() >= startingPeriod.add(votingPeriodLength) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1889)
Moloch.max(uint256,uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1903-1907) uses timestamp for comparisons
	Dangerous comparisons:
	- x >= y (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1905)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Moloch._validateProposalForProcessing(uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1627-1641) compares to a boolean constant:
	-require(bool,string)(proposal.flags[1] == false,proposal has already been processed) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1637)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#14) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#129) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#286) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#603) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
submitProposal(address,uint256,uint256,uint256,address,uint256,address,string) should be declared external:
	- Moloch.submitProposal(address,uint256,uint256,uint256,address,uint256,address,string) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#951-1009)
submitWhitelistProposal(address,string) should be declared external:
	- Moloch.submitWhitelistProposal(address,string) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1013-1033)
submitGuildKickProposal(address,string) should be declared external:
	- Moloch.submitGuildKickProposal(address,string) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1037-1059)
sponsorProposal(uint256) should be declared external:
	- Moloch.sponsorProposal(uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1135-1227)
submitVote(uint256,uint8) should be declared external:
	- Moloch.submitVote(uint256,uint8) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1233-1305)
processProposal(uint256) should be declared external:
	- Moloch.processProposal(uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1309-1461)
processWhitelistProposal(uint256) should be declared external:
	- Moloch.processWhitelistProposal(uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1465-1521)
processGuildKickProposal(uint256) should be declared external:
	- Moloch.processGuildKickProposal(uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1525-1583)
ragequit(uint256,uint256) should be declared external:
	- Moloch.ragequit(uint256,uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1655-1659)
ragekick(address) should be declared external:
	- Moloch.ragekick(address) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1725-1741)
withdrawBalance(address,uint256) should be declared external:
	- Moloch.withdrawBalance(address,uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1745-1749)
withdrawBalances(address[],uint256[],bool) should be declared external:
	- Moloch.withdrawBalances(address[],uint256[],bool) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1753-1775)
collectTokens(address) should be declared external:
	- Moloch.collectTokens(address) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1793-1811)
cancelProposal(uint256) should be declared external:
	- Moloch.cancelProposal(uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1817-1837)
updateDelegateKey(address) should be declared external:
	- Moloch.updateDelegateKey(address) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1841-1871)
getProposalQueueLength() should be declared external:
	- Moloch.getProposalQueueLength() (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1919-1923)
getProposalFlags(uint256) should be declared external:
	- Moloch.getProposalFlags(uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1927-1931)
getUserTokenBalance(address,address) should be declared external:
	- Moloch.getUserTokenBalance(address,address) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1935-1939)
getMemberProposalVote(address,uint256) should be declared external:
	- Moloch.getMemberProposalVote(address,uint256) (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1943-1951)
getTokenCount() should be declared external:
	- Moloch.getTokenCount() (loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol#1955-1959)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol analyzed (4 contracts with 46 detectors), 43 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x073ac467787c6a4ec93163dbe043b4a03bd60caf.sol
Tool Runtime = 2.3963007779966574 seconds
#############################################