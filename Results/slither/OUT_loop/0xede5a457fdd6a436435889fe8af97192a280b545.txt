Compilation warnings/errors on ./loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol:
./loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol:431:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^

INFO:Detectors:[93m
IERC20 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#22-54) has incorrect ERC20 function interface:IERC20.transfer(address,uint256) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#24)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
Reentrancy in MithrilLottery.executeReward() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1739-1783):
	External calls:
	- sendToken(userAddress,amount) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1761)
		- token.transfer(to,value) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#985)
	State variables written after the call(s):
	- rewardDict[userAddress] = 0 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1767)
	- rewardExecutedOffset = index + 1 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1771)
Reentrancy in MithrilLottery.executeRewardBatch() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1787-1839):
	External calls:
	- sendToken(userAddress,amount) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1815)
		- token.transfer(to,value) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#985)
	State variables written after the call(s):
	- rewardDict[userAddress] = 0 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1821)
	- rewardExecutedOffset = index + 1 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1825)
Reentrancy in MithrilLottery.executeRewardBatch() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1787-1839):
	External calls:
	- executeReward() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1803)
		- token.transfer(to,value) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#985)
	State variables written after the call(s):
	- status = LotteryStatus.Closed (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1835)
Reentrancy in MithrilLottery.withdrawFirstRemainingPrice() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#763-775):
	External calls:
	- sendToken(teamWalletAddress,remainingFirstVolumnBefore) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#771)
		- token.transfer(to,value) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#985)
	State variables written after the call(s):
	- remainingFirstVolumnBefore = 0 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#773)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
MithrilLottery.setBets(uint256[]).bet (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1079) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
MithrilLottery.addFirstRemainingPrice(uint256) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#991-1013) ignores return value by token.transferFrom(msg.sender,address(this),amount) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1009)
MithrilLottery.setBets(uint256[]) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1017-1117) ignores return value by token.transferFrom(msg.sender,address(this),ticketPrice) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1047)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in MithrilLottery.addFirstRemainingPrice(uint256) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#991-1013):
	External calls:
	- token.transferFrom(msg.sender,address(this),amount) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1009)
	State variables written after the call(s):
	- remainingFirstVolumnBefore += amount (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1011)
Reentrancy in MithrilLottery.setBets(uint256[]) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1017-1117):
	External calls:
	- token.transferFrom(msg.sender,address(this),ticketPrice) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1047)
	State variables written after the call(s):
	- currentRewardVolumn += ticketPrice * 65 / 100 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1053)
Reentrancy in MithrilLottery.setBets(uint256[]) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1017-1117):
	External calls:
	- token.transferFrom(msg.sender,address(this),ticketPrice) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1047)
	- sendToken(address(0x3893b9422Cd5D70a81eDeFfe3d5A1c6A978310BB),ticketPrice * 30 / 100) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1059)
		- token.transfer(to,value) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#985)
	State variables written after the call(s):
	- totalBurnedVolumn += ticketPrice * 30 / 100 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1061)
Reentrancy in MithrilLottery.setBets(uint256[]) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1017-1117):
	External calls:
	- token.transferFrom(msg.sender,address(this),ticketPrice) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1047)
	- sendToken(address(0x3893b9422Cd5D70a81eDeFfe3d5A1c6A978310BB),ticketPrice * 30 / 100) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1059)
		- token.transfer(to,value) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#985)
	- sendToken(teamWalletAddress,ticketPrice * 5 / 100) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1067)
		- token.transfer(to,value) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#985)
	State variables written after the call(s):
	- betNumberDict[bet.id][numbers[index]] = true (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1101)
	- totalBetNum += 1 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1085)
	- userAddressDict[msg.sender] = true (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1113)
	- bets.push(bet) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1093)
	- users.push(msg.sender) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1111)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
MithrilLottery.setBets(uint256[]) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1017-1117) compares to a boolean constant:
	-userAddressDict[msg.sender] != true (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1109)
MithrilLottery.countWinnings(address,uint256) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1161-1187) compares to a boolean constant:
	-betNumberDict[bet.id][SpecialNumber] == true (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1179)
MithrilLottery.countWinnings(address,uint256) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1161-1187) compares to a boolean constant:
	-betNumberDict[bet.id][LuckyNumbers[index]] == true (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1171)
MithrilLottery.countRewardFirstBatch() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1339-1637) compares to a boolean constant:
	-require(bool,string)(winningStageSetFlag == true,Winning stage not set.) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1345)
MithrilLottery.countRewardSecondBatch() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1641-1735) compares to a boolean constant:
	-require(bool,string)(winningStageSetFlag == true,Winning stage not set.) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1647)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#10) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#63) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#196) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#279) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#336) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#429) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Variable MithrilLottery.LuckyNumbers (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#439) is not in mixedCase
Variable MithrilLottery.SpecialNumber (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#441) is not in mixedCase
Variable MithrilLottery.LuckySpecialNumbersCandidate (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#443-449) is not in mixedCase
Variable MithrilLottery.LuckyNumberOpenedNum (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#453) is not in mixedCase
Variable MithrilLottery.BetNumber (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#457) is not in mixedCase
Variable MithrilLottery.REWARD_BATCH_SIZE (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#557) is not in mixedCase
Variable MithrilLottery.RESET_LOTTERY_BATCH_SIZE (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#577) is not in mixedCase
Variable MithrilLottery.COUNT_WINNING_STAGE_BATCH_SIZE (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#585) is not in mixedCase
Variable MithrilLottery.COUNT_REWARD_BATCH_SIZE (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#595) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
MithrilLottery.firstStageWinningPrice (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#463) is never used in MithrilLottery (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#435-1841)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
MithrilLottery.BetNumber (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#457) should be constant
MithrilLottery.COUNT_REWARD_BATCH_SIZE (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#595) should be constant
MithrilLottery.COUNT_WINNING_STAGE_BATCH_SIZE (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#585) should be constant
MithrilLottery.RESET_LOTTERY_BATCH_SIZE (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#577) should be constant
MithrilLottery.REWARD_BATCH_SIZE (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#557) should be constant
MithrilLottery.firstStageWinningPrice (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#463) should be constant
MithrilLottery.ticketPrice (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#461) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
addWhitelistAdmin(address) should be declared external:
	- WhitelistAdminRole.addWhitelistAdmin(address) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#390-394)
renounceWhitelistAdmin() should be declared external:
	- WhitelistAdminRole.renounceWhitelistAdmin() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#398-402)
getPreviousLuckyAddresses(uint256) should be declared external:
	- MithrilLottery.getPreviousLuckyAddresses(uint256) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#667-671)
getTotalRemainingFirstVolumnBefore() should be declared external:
	- MithrilLottery.getTotalRemainingFirstVolumnBefore() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#683-687)
openLuckyNumber(uint256) should be declared external:
	- MithrilLottery.openLuckyNumber(uint256) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#705-751)
setLotteryStatus(MithrilLottery.LotteryStatus) should be declared external:
	- MithrilLottery.setLotteryStatus(MithrilLottery.LotteryStatus) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#755-759)
withdrawFirstRemainingPrice() should be declared external:
	- MithrilLottery.withdrawFirstRemainingPrice() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#763-775)
withdrawPreviousDeposit() should be declared external:
	- MithrilLottery.withdrawPreviousDeposit() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#779-793)
resetLotteryBatch() should be declared external:
	- MithrilLottery.resetLotteryBatch() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#823-951)
addFirstRemainingPrice(uint256) should be declared external:
	- MithrilLottery.addFirstRemainingPrice(uint256) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#991-1013)
setBets(uint256[]) should be declared external:
	- MithrilLottery.setBets(uint256[]) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1017-1117)
getBet(address,uint256) should be declared external:
	- MithrilLottery.getBet(address,uint256) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1121-1125)
getUserBets(address) should be declared external:
	- MithrilLottery.getUserBets(address) (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1129-1141)
getLuckyNumber() should be declared external:
	- MithrilLottery.getLuckyNumber() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1145-1149)
getUsersLength() should be declared external:
	- MithrilLottery.getUsersLength() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1153-1157)
countAndSetWinningStageBatch() should be declared external:
	- MithrilLottery.countAndSetWinningStageBatch() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1247-1335)
countRewardFirstBatch() should be declared external:
	- MithrilLottery.countRewardFirstBatch() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1339-1637)
countRewardSecondBatch() should be declared external:
	- MithrilLottery.countRewardSecondBatch() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1641-1735)
executeRewardBatch() should be declared external:
	- MithrilLottery.executeRewardBatch() (loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol#1787-1839)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xede5a457fdd6a436435889fe8af97192a280b545.sol analyzed (6 contracts with 46 detectors), 60 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xede5a457fdd6a436435889fe8af97192a280b545.sol
Tool Runtime = 2.8932494439977745 seconds
#############################################