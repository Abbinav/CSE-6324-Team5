INFO:Detectors:[93m
FarmPrdzEth30.disburseTokens() (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#470-483) uses a dangerous strict equality:
	- amount == 0 (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#478)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in FarmPrdzEth30.deposit(uint256) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#422-436):
	External calls:
	- updateAccount(msg.sender) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#425)
		- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#386)
	- require(bool,string)(Token(trustedDepositTokenAddress).transferFrom(msg.sender,address(this),amountToDeposit),Insufficient Token Allowance) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#427)
	State variables written after the call(s):
	- depositedTokens[msg.sender] = depositedTokens[msg.sender].add(amountToDeposit) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#429)
Reentrancy in FarmPrdzEth30.updateAccount(address) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#383-393):
	External calls:
	- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#386)
	State variables written after the call(s):
	- lastDivPoints[account] = totalDivPoints (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#392)
Reentrancy in FarmPrdzEth30.withdraw(uint256) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#438-457):
	External calls:
	- updateAccount(msg.sender) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#442)
		- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#386)
	- require(bool,string)(Token(trustedDepositTokenAddress).transfer(owner,fee),Could not transfer fee!) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#447)
	- require(bool,string)(Token(trustedDepositTokenAddress).transfer(msg.sender,amountAfterFee),Could not transfer tokens.) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#449)
	State variables written after the call(s):
	- depositedTokens[msg.sender] = depositedTokens[msg.sender].sub(amountToWithdraw) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#451)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
FarmPrdzEth30.deposit(uint256) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#422-436) ignores return value by holders.add(msg.sender) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#433)
FarmPrdzEth30.withdraw(uint256) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#438-457) ignores return value by holders.remove(msg.sender) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#455)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in FarmPrdzEth30.addContractBalance(uint256) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#377-380):
	External calls:
	- require(bool,string)(Token(trustedRewardTokenAddress).transferFrom(msg.sender,address(this),amount),Cannot add balance!) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#378)
	State variables written after the call(s):
	- contractBalance = contractBalance.add(amount) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#379)
Reentrancy in FarmPrdzEth30.deposit(uint256) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#422-436):
	External calls:
	- updateAccount(msg.sender) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#425)
		- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#386)
	- require(bool,string)(Token(trustedDepositTokenAddress).transferFrom(msg.sender,address(this),amountToDeposit),Insufficient Token Allowance) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#427)
	State variables written after the call(s):
	- depositTime[msg.sender] = now (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#434)
	- totalTokens = totalTokens.add(amountToDeposit) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#430)
Reentrancy in FarmPrdzEth30.updateAccount(address) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#383-393):
	External calls:
	- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#386)
	State variables written after the call(s):
	- lastClaimedTime[account] = now (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#391)
	- totalClaimedRewards = totalClaimedRewards.add(pendingDivs) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#388)
	- totalEarnedTokens[account] = totalEarnedTokens[account].add(pendingDivs) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#387)
Reentrancy in FarmPrdzEth30.withdraw(uint256) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#438-457):
	External calls:
	- updateAccount(msg.sender) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#442)
		- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#386)
	- require(bool,string)(Token(trustedDepositTokenAddress).transfer(owner,fee),Could not transfer fee!) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#447)
	- require(bool,string)(Token(trustedDepositTokenAddress).transfer(msg.sender,amountAfterFee),Could not transfer tokens.) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#449)
	State variables written after the call(s):
	- totalTokens = totalTokens.sub(amountToWithdraw) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#452)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in FarmPrdzEth30.updateAccount(address) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#383-393):
	External calls:
	- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#386)
	Event emitted after the call(s):
	- RewardsTransferred(account,pendingDivs) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#389)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
FarmPrdzEth30.updateAccount(address) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#383-393) uses timestamp for comparisons
	Dangerous comparisons:
	- pendingDivs > 0 (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#385)
	- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#386)
FarmPrdzEth30.canWithdraw(address) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#412-420) uses timestamp for comparisons
	Dangerous comparisons:
	- now.sub(depositTime[account]) > cliffTime (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#413)
FarmPrdzEth30.withdraw(uint256) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#438-457) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(now.sub(depositTime[msg.sender]) > cliffTime,Please wait before withdrawing!) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#440)
FarmPrdzEth30.disburseTokens() (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#470-483) uses timestamp for comparisons
	Dangerous comparisons:
	- contractBalance < amount (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#475)
	- amount == 0 (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#478)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Parameter FarmPrdzEth30.getPendingDivs(address)._holder (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#395) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
FarmPrdzEth30.adminCanClaimAfter (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#337) should be constant
FarmPrdzEth30.cliffTime (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#341) should be constant
FarmPrdzEth30.disburseAmount (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#339) should be constant
FarmPrdzEth30.disburseDuration (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#340) should be constant
FarmPrdzEth30.disbursePercentX100 (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#344) should be constant
FarmPrdzEth30.pointMultiplier (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#375) should be constant
FarmPrdzEth30.totalTokensDisbursed (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#369) should be constant
FarmPrdzEth30.withdrawFeePercentX100 (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#338) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#314-318)
addContractBalance(uint256) should be declared external:
	- FarmPrdzEth30.addContractBalance(uint256) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#377-380)
getNumberOfHolders() should be declared external:
	- FarmPrdzEth30.getNumberOfHolders() (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#408-410)
canWithdraw(address) should be declared external:
	- FarmPrdzEth30.canWithdraw(address) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#412-420)
deposit(uint256) should be declared external:
	- FarmPrdzEth30.deposit(uint256) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#422-436)
withdraw(uint256) should be declared external:
	- FarmPrdzEth30.withdraw(uint256) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#438-457)
claim() should be declared external:
	- FarmPrdzEth30.claim() (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#460-462)
disburseTokens() should be declared external:
	- FarmPrdzEth30.disburseTokens() (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#470-483)
getDepositorsList(uint256,uint256) should be declared external:
	- FarmPrdzEth30.getDepositorsList(uint256,uint256) (loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol#495-520)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xe0bffa7b781e05678017eae5be24b392a048b980.sol analyzed (5 contracts with 46 detectors), 35 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xe0bffa7b781e05678017eae5be24b392a048b980.sol
Tool Runtime = 0.8392198310029926 seconds
#############################################