INFO:Detectors:[93m
TimeLock.withdrawPayment(address) (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#164-175) ignores return value by IERC20(token).transfer(msg.sender,amount) (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#171)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in TimeLock.withdrawPayment(address) (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#164-175):
	External calls:
	- IERC20(token).transfer(msg.sender,amount) (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#171)
	Event emitted after the call(s):
	- Withdrawn(token,msg.sender,amount) (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#173)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
TimeLock.nextScheduleTime() (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#105-113) uses timestamp for comparisons
	Dangerous comparisons:
	- time < now (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#108)
TimeLock.distributePayment(address) (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#149-162) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(now >= schedules[nextScheduleId],Realease time not reached) (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#150)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
TimeLock.addParameters(address[],uint256[],uint256[]) (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#82-96) compares to a boolean constant:
	-require(bool,string)(configured == false,Parameters have already been added) (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#84)
TimeLock.getBeneficiaries() (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#134-137) compares to a boolean constant:
	-require(bool,string)(configured == true,Need to add beneficiaries first) (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#135)
TimeLock.whenNotInitialized() (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#61-64) compares to a boolean constant:
	-require(bool,string)(initialized == false,Vesting has already been initialized) (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#62)
TimeLock.whenInitialized() (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#66-69) compares to a boolean constant:
	-require(bool,string)(initialized == true,Vesting has not been initialized) (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#67)
TimeLock.onlyBeneficiary() (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#71-80) compares to a boolean constant:
	-require(bool,string)(isApproved == true,Only a beneficiary can do this) (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#78)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Parameter TimeLock.addParameters(address[],uint256[],uint256[])._beneficiary (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#82) is not in mixedCase
Parameter TimeLock.addParameters(address[],uint256[],uint256[])._percentages (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#82) is not in mixedCase
Parameter TimeLock.addParameters(address[],uint256[],uint256[])._schedules (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#82) is not in mixedCase
Parameter TimeLock.percentageOf(address)._beneficiary (loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol#139) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:./loops/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol analyzed (3 contracts with 46 detectors), 15 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol
Tool Runtime = 0.6012184879982669 seconds
#############################################