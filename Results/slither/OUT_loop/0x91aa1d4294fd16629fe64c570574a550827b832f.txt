Compilation warnings/errors on ./loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol:
./loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol:506:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^
./loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol:972:9: Warning: Unused local variable.
        uint256 totalEthSwap = 0;
        ^------------------^

INFO:Detectors:[91m
EthPiptSwap.swapEthToPiptByPoolOut(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870-934) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(ethDiff) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#931)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
EthPiptSwap.calcSwapEthToPiptInputs(uint256,address[],uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1037-1078) performs a multiplication on the result of a division:
	-poolRatio = piptTotalSupply.mul(1000000000000000000).div(pipt.getBalance(_tokens[0])).mul(1000000000000000000).div(piptTotalSupply) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1053)
EthPiptSwap.calcSwapEthToPiptInputs(uint256,address[],uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1037-1078) performs a multiplication on the result of a division:
	-poolRatio = piptTotalSupply.mul(1000000000000000000).div(pipt.getBalance(_tokens[0])).mul(1000000000000000000).div(piptTotalSupply) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1053)
	-calculations[i].tokenAmount = poolRatio.mul(pipt.getBalance(_tokens[i])).div(1000000000000000000) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1057)
EthPiptSwap.calcSwapEthToPiptInputs(uint256,address[],uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1037-1078) performs a multiplication on the result of a division:
	-ethInUniswap[i_scope_0] = _ethValue.mul(calculations[i_scope_0].ethAmount.mul(1000000000000000000).div(totalEthRequired)).div(1000000000000000000) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1073)
EthPiptSwap.calcSwapEthToPiptInputs(uint256,address[],uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1037-1078) performs a multiplication on the result of a division:
	-tokensInPipt[i_scope_0] = calculations[i_scope_0].tokenAmount.mul(_ethValue.mul(1000000000000000000).div(totalEthRequired)).div(1000000000000000000) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1074)
EthPiptSwap.calcSwapPiptToEthInputs(uint256,address[]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1080-1107) performs a multiplication on the result of a division:
	-poolRatio = poolAmountInAfterFee.mul(1000000000000000000).div(pipt.totalSupply()) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1097)
	-tokensOutPipt[i] = poolRatio.mul(pipt.getBalance(_tokens[i])).div(1000000000000000000) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1101)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
UniswapV2Library.getAmountsOut(address,uint256,address[]).i (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#294) is a local variable never initialized
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]).ethReserve_scope_0 (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#989) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
EthPiptSwap.swapEthToPiptByPoolOut(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870-934) ignores return value by weth.transfer(address(tokenPair),calculations[i].ethAmount) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#904)
EthPiptSwap.swapEthToPiptByPoolOut(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870-934) ignores return value by TokenInterface(tokens[i]).approve(address(pipt),0) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#910)
EthPiptSwap.swapEthToPiptByPoolOut(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870-934) ignores return value by TokenInterface(tokens[i]).approve(address(pipt),tokensInPipt[i]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#913)
EthPiptSwap.swapEthToPiptByPoolOut(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870-934) ignores return value by pipt.transfer(msg.sender,poolAmountOutAfterFee) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#926)
EthPiptSwap.swapPiptToEth(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#936-965) ignores return value by pipt.transferFrom(msg.sender,address(this),_poolAmountIn) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#947)
EthPiptSwap.swapPiptToEth(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#936-965) ignores return value by pipt.approve(address(pipt),_poolAmountIn) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#949)
EthPiptSwap.swapPiptToEth(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#936-965) ignores return value by TokenInterface(tokens[i]).transfer(address(tokenPair),tokensOutPipt[i]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#955)
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#967-999) ignores return value by TokenInterface(oddTokens[i]).transfer(address(tokenPair),tokenBalance) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#980)
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#967-999) ignores return value by weth.transfer(address(cvpPair),wethBalance) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#992)
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#967-999) ignores return value by cvp.transfer(feePayout,cvpOut) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#996)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
EthPiptSwap.receive() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#853-858) (function) shadows built-in symbol"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
EthPiptSwap.swapEthToPiptByPoolOut(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870-934) has external calls inside a loop: (calculations[i].tokenReserve,calculations[i].ethReserve,None) = tokenPair.getReserves() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#896)
EthPiptSwap.swapEthToPiptByPoolOut(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870-934) has external calls inside a loop: tokensInPipt[i] = ratio.mul(pipt.getBalance(tokens[i])).div(1000000000000000000) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#897)
EthPiptSwap.swapEthToPiptByPoolOut(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870-934) has external calls inside a loop: weth.transfer(address(tokenPair),calculations[i].ethAmount) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#904)
EthPiptSwap.swapEthToPiptByPoolOut(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870-934) has external calls inside a loop: tokenPair.swap(tokensInPipt[i],uint256(0),address(this),new bytes(0)) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#906)
EthPiptSwap.swapEthToPiptByPoolOut(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870-934) has external calls inside a loop: TokenInterface(tokens[i]).approve(address(pipt),0) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#910)
EthPiptSwap.swapEthToPiptByPoolOut(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870-934) has external calls inside a loop: TokenInterface(tokens[i]).approve(address(pipt),tokensInPipt[i]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#913)
EthPiptSwap.swapPiptToEth(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#936-965) has external calls inside a loop: TokenInterface(tokens[i]).transfer(address(tokenPair),tokensOutPipt[i]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#955)
EthPiptSwap.swapPiptToEth(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#936-965) has external calls inside a loop: tokenPair.swap(uint256(0),ethOutUniswap[i],address(this),new bytes(0)) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#956)
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#967-999) has external calls inside a loop: tokenBalance = TokenInterface(oddTokens[i]).balanceOf(address(this)) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#974)
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#967-999) has external calls inside a loop: (tokenReserve,ethReserve) = tokenPair.getReserves() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#977)
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#967-999) has external calls inside a loop: TokenInterface(oddTokens[i]).transfer(address(tokenPair),tokenBalance) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#980)
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#967-999) has external calls inside a loop: tokenPair.swap(uint256(0),wethOut,address(this),new bytes(0)) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#982)
EthPiptSwap.calcSwapEthToPiptInputs(uint256,address[],uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1037-1078) has external calls inside a loop: calculations[i].tokenAmount = poolRatio.mul(pipt.getBalance(_tokens[i])).div(1000000000000000000) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1057)
EthPiptSwap.calcSwapEthToPiptInputs(uint256,address[],uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1037-1078) has external calls inside a loop: (calculations[i].tokenReserve,calculations[i].ethReserve,None) = uniswapPairFor(_tokens[i]).getReserves() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1059)
EthPiptSwap.calcSwapPiptToEthInputs(uint256,address[]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1080-1107) has external calls inside a loop: tokensOutPipt[i] = poolRatio.mul(pipt.getBalance(_tokens[i])).div(1000000000000000000) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1101)
EthPiptSwap.calcSwapPiptToEthInputs(uint256,address[]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1080-1107) has external calls inside a loop: (tokenReserve,ethReserve) = uniswapPairFor(_tokens[i]).getReserves() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1103)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#967-999):
	External calls:
	- weth.transfer(address(cvpPair),wethBalance) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#992)
	- cvpPair.swap(cvpOut,uint256(0),address(this),new bytes(0)) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#994)
	- cvp.transfer(feePayout,cvpOut) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#996)
	Event emitted after the call(s):
	- PayoutCVP(feePayout,wethBalance,cvpOut) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#998)
Reentrancy in EthPiptSwap.swapEthToPiptByPoolOut(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870-934):
	External calls:
	- weth.deposit.value(msg.value)() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#880)
	Event emitted after the call(s):
	- EthToPiptSwap(msg.sender,swapAmount,feeAmount,_poolAmountOut,poolAmountOutFee) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#923)
Reentrancy in EthPiptSwap.swapEthToPiptByPoolOut(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870-934):
	External calls:
	- weth.deposit.value(msg.value)() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#880)
	- pipt.joinPool(_poolAmountOut,tokensInPipt) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#925)
	- pipt.transfer(msg.sender,poolAmountOutAfterFee) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#926)
	- weth.withdraw(ethDiff) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#930)
	External calls sending eth:
	- weth.deposit.value(msg.value)() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#880)
	- msg.sender.transfer(ethDiff) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#931)
	Event emitted after the call(s):
	- OddEth(msg.sender,ethDiff) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#932)
Reentrancy in EthPiptSwap.swapPiptToEth(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#936-965):
	External calls:
	- pipt.transferFrom(msg.sender,address(this),_poolAmountIn) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#947)
	- pipt.approve(address(pipt),_poolAmountIn) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#949)
	- pipt.exitPool(_poolAmountIn,tokensOutPipt) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#951)
	- weth.withdraw(ethOutAmount) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#961)
	External calls sending eth:
	- msg.sender.transfer(ethOutAmount) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#962)
	Event emitted after the call(s):
	- PiptToEthSwap(msg.sender,_poolAmountIn,poolAmountFee,ethOutAmount,ethFeeAmount) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#964)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Address.isContract(address) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#499-508) uses assembly
	- INLINE ASM (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#506-507)
Address._functionCallWithValue(address,bytes,uint256,string) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#592-613) uses assembly
	- INLINE ASM (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#605-609)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#21) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#52) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#131) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#142) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#154) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#210) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#231) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#315) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#476) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#619) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#695) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#721) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#790) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#526-532):
	- (success) = recipient.call.value(amount)() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#530)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#592-613):
	- (success,returndata) = target.call.value(weiValue)(data) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#596)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#171) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#172) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#189) is not in mixedCase
Parameter EthPiptSwap.swapEthToPipt(uint256)._slippage (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#860) is not in mixedCase
Parameter EthPiptSwap.swapEthToPiptByPoolOut(uint256)._poolAmountOut (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870) is not in mixedCase
Parameter EthPiptSwap.swapPiptToEth(uint256)._poolAmountIn (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#936) is not in mixedCase
Parameter EthPiptSwap.setFees(uint256[],uint256[],address,address)._feeLevels (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1002) is not in mixedCase
Parameter EthPiptSwap.setFees(uint256[],uint256[],address,address)._feeAmounts (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1003) is not in mixedCase
Parameter EthPiptSwap.setFees(uint256[],uint256[],address,address)._feePayout (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1004) is not in mixedCase
Parameter EthPiptSwap.setFees(uint256[],uint256[],address,address)._feeManager (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1005) is not in mixedCase
Parameter EthPiptSwap.setTokensSettings(address[],address[],bool[])._tokens (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1019) is not in mixedCase
Parameter EthPiptSwap.setTokensSettings(address[],address[],bool[])._pairs (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1020) is not in mixedCase
Parameter EthPiptSwap.setTokensSettings(address[],address[],bool[])._reapprove (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1021) is not in mixedCase
Parameter EthPiptSwap.setDefaultSlippage(uint256)._defaultSlippage (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1032) is not in mixedCase
Parameter EthPiptSwap.calcSwapEthToPiptInputs(uint256,address[],uint256)._ethValue (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1037) is not in mixedCase
Parameter EthPiptSwap.calcSwapEthToPiptInputs(uint256,address[],uint256)._tokens (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1037) is not in mixedCase
Parameter EthPiptSwap.calcSwapEthToPiptInputs(uint256,address[],uint256)._slippage (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1037) is not in mixedCase
Parameter EthPiptSwap.calcSwapPiptToEthInputs(uint256,address[])._poolAmountIn (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1080) is not in mixedCase
Parameter EthPiptSwap.calcSwapPiptToEthInputs(uint256,address[])._tokens (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1080) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Reentrancy in EthPiptSwap.swapEthToPiptByPoolOut(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#870-934):
	External calls:
	- msg.sender.transfer(ethDiff) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#931)
	External calls sending eth:
	- weth.deposit.value(msg.value)() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#880)
	- msg.sender.transfer(ethDiff) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#931)
	Event emitted after the call(s):
	- OddEth(msg.sender,ethDiff) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#932)
Reentrancy in EthPiptSwap.swapPiptToEth(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#936-965):
	External calls:
	- msg.sender.transfer(ethOutAmount) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#962)
	Event emitted after the call(s):
	- PiptToEthSwap(msg.sender,_poolAmountIn,poolAmountFee,ethOutAmount,ethFeeAmount) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#964)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4[0m
INFO:Detectors:[92m
calcInGivenOut(uint256,uint256,uint256,uint256,uint256,uint256) should be declared external:
	- BPoolInterface.calcInGivenOut(uint256,uint256,uint256,uint256,uint256,uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#32)
deposit() should be declared external:
	- TokenInterface.deposit() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#135)
withdraw(uint256) should be declared external:
	- TokenInterface.withdraw(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#136)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#771-774)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#780-784)
swapPiptToEth(uint256) should be declared external:
	- EthPiptSwap.swapPiptToEth(uint256) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#936-965)
convertOddToCvpAndSendToPayout(address[]) should be declared external:
	- EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#967-999)
getFeeLevels() should be declared external:
	- EthPiptSwap.getFeeLevels() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1121-1123)
getFeeAmounts() should be declared external:
	- EthPiptSwap.getFeeAmounts() (loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol#1125-1127)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x91aa1d4294fd16629fe64c570574a550827b832f.sol analyzed (13 contracts with 46 detectors), 87 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x91aa1d4294fd16629fe64c570574a550827b832f.sol
Tool Runtime = 1.8769654399984574 seconds
#############################################