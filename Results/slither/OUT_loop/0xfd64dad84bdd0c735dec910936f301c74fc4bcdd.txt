INFO:Detectors:[93m
EIP20NonStandardInterface (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#562-578) has incorrect ERC20 function interface:EIP20NonStandardInterface.transfer(address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#568)
EIP20NonStandardInterface (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#562-578) has incorrect ERC20 function interface:EIP20NonStandardInterface.transferFrom(address,address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#570)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
AToken.accrueInterest() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1166-1230) uses a dangerous strict equality:
	- assert(bool)(vars.mathErr == MathError.NO_ERROR) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1181)
AToken.balanceOfUnderlying(address) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#934-939) uses a dangerous strict equality:
	- require(bool)(mErr == MathError.NO_ERROR) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#937)
AToken.borrowBalanceStored(address) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1039-1043) uses a dangerous strict equality:
	- require(bool,string)(err == MathError.NO_ERROR,borrowBalanceStored: borrowBalanceStoredInternal failed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1041)
AToken.borrowFresh(address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1519-1584) uses a dangerous strict equality:
	- require(bool,string)(vars.err == Error.NO_ERROR,borrow transfer out failed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1570)
AToken.borrowRatePerBlock() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#979-983) uses a dangerous strict equality:
	- require(bool,string)(opaqueErr == 0,borrowRatePerBlock: interestRateModel.borrowRate failed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#981)
AEther.checkTransferIn(address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#2267-2272) uses a dangerous strict equality:
	- require(bool,string)(msg.value == amount,value mismatch) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#2270)
CarefulMath.divUInt(uint256,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#48-54) uses a dangerous strict equality:
	- b == 0 (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#49)
AEther.doTransferIn(address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#2280-2285) uses a dangerous strict equality:
	- require(bool,string)(msg.value == amount,value mismatch) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#2283)
AToken.exchangeRateStored() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1096-1100) uses a dangerous strict equality:
	- require(bool,string)(err == MathError.NO_ERROR,exchangeRateStored: exchangeRateStoredInternal failed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1098)
AToken.exchangeRateStoredInternal() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1107-1136) uses a dangerous strict equality:
	- totalSupply == 0 (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1108)
AEther.getCashPrior() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#2233-2237) uses a dangerous strict equality:
	- require(bool)(err == MathError.NO_ERROR) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#2235)
Exponential.mulExp(Exponential.Exp,Exponential.Exp) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#437-457) uses a dangerous strict equality:
	- assert(bool)(err2 == MathError.NO_ERROR) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#454)
CarefulMath.mulUInt(uint256,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#31-43) uses a dangerous strict equality:
	- a == 0 (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#32)
AToken.redeemFresh(address,uint256,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1393-1489) uses a dangerous strict equality:
	- require(bool,string)(vars.err == Error.NO_ERROR,redeem transfer out failed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1475)
AToken.repayBorrowFresh(address,address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1634-1711) uses a dangerous strict equality:
	- require(bool,string)(vars.err == Error.NO_ERROR,repay borrow transfer in failed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1697)
AEther.requireNoError(uint256,string) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#2239-2258) uses a dangerous strict equality:
	- errCode == uint256(Error.NO_ERROR) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#2240)
AEther.requireNoError(uint256,string) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#2239-2258) uses a dangerous strict equality:
	- require(bool,string)(errCode == uint256(Error.NO_ERROR),string(fullMessage)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#2257)
AToken.supplyRatePerBlock() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#989-1013) uses a dangerous strict equality:
	- require(bool,string)(e0 == 0,supplyRatePerBlock: calculating borrowRate failed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#998)
AToken.supplyRatePerBlock() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#989-1013) uses a dangerous strict equality:
	- require(bool,string)(e1 == MathError.NO_ERROR,supplyRatePerBlock: calculating underlying failed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1001)
AToken.supplyRatePerBlock() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#989-1013) uses a dangerous strict equality:
	- require(bool,string)(e2 == MathError.NO_ERROR,supplyRatePerBlock: calculating borrowsPer failed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1004)
AToken.supplyRatePerBlock() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#989-1013) uses a dangerous strict equality:
	- require(bool,string)(e3 == MathError.NO_ERROR,supplyRatePerBlock: calculating oneMinusReserveFactor failed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1007)
AToken.supplyRatePerBlock() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#989-1013) uses a dangerous strict equality:
	- require(bool,string)(e4 == MathError.NO_ERROR,supplyRatePerBlock: calculating supplyRate failed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1010)
AToken.transfer(address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#879-881) uses a dangerous strict equality:
	- transferTokens(msg.sender,msg.sender,dst,amount) == uint256(Error.NO_ERROR) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#880)
AToken.transferFrom(address,address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#890-892) uses a dangerous strict equality:
	- transferTokens(msg.sender,src,dst,amount) == uint256(Error.NO_ERROR) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#891)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in AToken.liquidateBorrowInternal(address,uint256,AToken) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1721-1736):
	External calls:
	- error = aTokenCollateral.accrueInterest() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1728)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1735)
		- allowed = controller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1636)
		- allowed = controller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1749)
		- seizeError = aTokenCollateral.seize(liquidator,borrower,seizeTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1797)
		- controller.liquidateBorrowVerify(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount,seizeTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1804)
		- controller.repayBorrowVerify(address(this),payer,borrower,vars.repayAmount,vars.borrowerIndex) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1708)
	State variables written after the call(s):
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1735)
		- totalBorrows = vars.totalBorrowsNew (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1702)
Reentrancy in AToken.redeemFresh(address,uint256,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1393-1489):
	External calls:
	- allowed = controller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1433)
	State variables written after the call(s):
	- totalSupply = vars.totalSupplyNew (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1478)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
AToken.redeemFresh(address,uint256,uint256).vars (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1396) is a local variable never initialized
AToken.borrowFresh(address,uint256).vars (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1536) is a local variable never initialized
AToken.accrueInterest().vars (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1167) is a local variable never initialized
AToken.mintFresh(address,uint256).vars (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1276) is a local variable never initialized
AToken.repayBorrowFresh(address,address,uint256).vars (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1646) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Reentrancy in AToken.borrowFresh(address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1519-1584):
	External calls:
	- allowed = controller.borrowAllowed(address(this),borrower,borrowAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1521)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1573)
	- accountBorrows[borrower].interestIndex = borrowIndex (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1574)
	- totalBorrows = vars.totalBorrowsNew (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1575)
Reentrancy in AToken.mintFresh(address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1264-1341):
	External calls:
	- allowed = controller.mintAllowed(address(this),minter,mintAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1266)
	State variables written after the call(s):
	- accountTokens[minter] = vars.accountTokensNew (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1331)
	- totalSupply = vars.totalSupplyNew (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1330)
Reentrancy in AToken.redeemFresh(address,uint256,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1393-1489):
	External calls:
	- allowed = controller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1433)
	State variables written after the call(s):
	- accountTokens[redeemer] = vars.accountTokensNew (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1479)
Reentrancy in AToken.repayBorrowFresh(address,address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1634-1711):
	External calls:
	- allowed = controller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1636)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1700)
	- accountBorrows[borrower].interestIndex = borrowIndex (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1701)
	- totalBorrows = vars.totalBorrowsNew (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1702)
Reentrancy in AToken.seize(address,address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1818-1864):
	External calls:
	- allowed = controller.seizeAllowed(address(this),msg.sender,liquidator,borrower,seizeTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1820)
	State variables written after the call(s):
	- accountTokens[borrower] = borrowerTokensNew (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1854)
	- accountTokens[liquidator] = liquidatorTokensNew (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1855)
Reentrancy in AToken.transferTokens(address,address,address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#811-871):
	External calls:
	- allowed = controller.transferAllowed(address(this),src,dst,tokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#813)
	State variables written after the call(s):
	- accountTokens[src] = srcTokensNew (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#856)
	- accountTokens[dst] = dstTokensNew (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#857)
	- transferAllowances[src][spender] = allowanceNew (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#861)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in AToken.borrowFresh(address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1519-1584):
	External calls:
	- allowed = controller.borrowAllowed(address(this),borrower,borrowAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1521)
	Event emitted after the call(s):
	- Borrow(borrower,borrowAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1578)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.BORROW_FRESHNESS_CHECK) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1528)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1550)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.BORROW_CASH_NOT_AVAILABLE) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1533)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1555)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.CONTROLLER_REJECTION,FailureInfo.BORROW_CONTROLLER_REJECTION,allowed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1523)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1545)
Reentrancy in AToken.liquidateBorrowFresh(address,address,uint256,AToken) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1747-1807):
	External calls:
	- allowed = controller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1749)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_LIQUIDATOR_IS_BORROWER) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1766)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.CONTROLLER_REJECTION,FailureInfo.LIQUIDATE_CONTROLLER_REJECTION,allowed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1751)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_FRESHNESS_CHECK) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1756)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_ZERO) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1771)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_COLLATERAL_FRESHNESS_CHECK) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1761)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.TOKEN_INSUFFICIENT_BALANCE,FailureInfo.LIQUIDATE_SEIZE_TOO_MUCH) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1787)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.CONTROLLER_CALCULATION_ERROR,FailureInfo.LIQUIDATE_CONTROLLER_CALCULATE_AMOUNT_SEIZE_FAILED,amountSeizeError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1782)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1776)
Reentrancy in AToken.liquidateBorrowFresh(address,address,uint256,AToken) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1747-1807):
	External calls:
	- allowed = controller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1749)
	- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1791)
		- allowed = controller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1636)
		- controller.repayBorrowVerify(address(this),payer,borrower,vars.repayAmount,vars.borrowerIndex) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1708)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1791)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(TokenErrorReporter.Error(repayBorrowError),FailureInfo.LIQUIDATE_REPAY_BORROW_FRESH_FAILED) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1793)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1791)
	- RepayBorrow(payer,borrower,vars.repayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1705)
		- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1791)
Reentrancy in AToken.liquidateBorrowFresh(address,address,uint256,AToken) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1747-1807):
	External calls:
	- allowed = controller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1749)
	- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1791)
		- allowed = controller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1636)
		- controller.repayBorrowVerify(address(this),payer,borrower,vars.repayAmount,vars.borrowerIndex) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1708)
	- seizeError = aTokenCollateral.seize(liquidator,borrower,seizeTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1797)
	Event emitted after the call(s):
	- LiquidateBorrow(liquidator,borrower,repayAmount,address(aTokenCollateral),seizeTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1801)
Reentrancy in AToken.liquidateBorrowInternal(address,uint256,AToken) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1721-1736):
	External calls:
	- error = aTokenCollateral.accrueInterest() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1728)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(TokenErrorReporter.Error(error),FailureInfo.LIQUIDATE_ACCRUE_COLLATERAL_INTEREST_FAILED) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1731)
Reentrancy in AToken.liquidateBorrowInternal(address,uint256,AToken) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1721-1736):
	External calls:
	- error = aTokenCollateral.accrueInterest() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1728)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1735)
		- allowed = controller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1636)
		- allowed = controller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1749)
		- seizeError = aTokenCollateral.seize(liquidator,borrower,seizeTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1797)
		- controller.liquidateBorrowVerify(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount,seizeTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1804)
		- controller.repayBorrowVerify(address(this),payer,borrower,vars.repayAmount,vars.borrowerIndex) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1708)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1735)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1735)
	- LiquidateBorrow(liquidator,borrower,repayAmount,address(aTokenCollateral),seizeTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1801)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1735)
	- RepayBorrow(payer,borrower,vars.repayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1705)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1735)
Reentrancy in AToken.mintFresh(address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1264-1341):
	External calls:
	- allowed = controller.mintAllowed(address(this),minter,mintAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1266)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(vars.err,FailureInfo.MINT_TRANSFER_IN_NOT_POSSIBLE) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1281)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.CONTROLLER_REJECTION,FailureInfo.MINT_CONTROLLER_REJECTION,allowed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1268)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.MATH_ERROR,FailureInfo.MINT_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1305)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(vars.err,FailureInfo.MINT_TRANSFER_IN_FAILED) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1326)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.MATH_ERROR,FailureInfo.MINT_EXCHANGE_RATE_READ_FAILED,uint256(vars.mathErr)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1290)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.MINT_FRESHNESS_CHECK) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1273)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.MATH_ERROR,FailureInfo.MINT_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1310)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.MATH_ERROR,FailureInfo.MINT_EXCHANGE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1295)
	- Mint(minter,mintAmount,vars.mintTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1334)
	- Transfer(address(this),minter,vars.mintTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1335)
Reentrancy in AToken.redeemFresh(address,uint256,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1393-1489):
	External calls:
	- allowed = controller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1433)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1450)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.REDEEM_TRANSFER_OUT_NOT_POSSIBLE) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1460)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.REDEEM_FRESHNESS_CHECK) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1440)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1455)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.CONTROLLER_REJECTION,FailureInfo.REDEEM_CONTROLLER_REJECTION,allowed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1435)
	- Redeem(redeemer,vars.redeemAmount,vars.redeemTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1483)
	- Transfer(redeemer,address(this),vars.redeemTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1482)
Reentrancy in AToken.repayBorrowFresh(address,address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1634-1711):
	External calls:
	- allowed = controller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1636)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REPAY_BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1677)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(vars.err,FailureInfo.REPAY_BORROW_TRANSFER_IN_NOT_POSSIBLE) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1667)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1654)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.CONTROLLER_REJECTION,FailureInfo.REPAY_BORROW_CONTROLLER_REJECTION,allowed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1638)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.REPAY_BORROW_FRESHNESS_CHECK) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1643)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REPAY_BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1682)
	- RepayBorrow(payer,borrower,vars.repayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1705)
Reentrancy in AToken.seize(address,address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1818-1864):
	External calls:
	- allowed = controller.seizeAllowed(address(this),msg.sender,liquidator,borrower,seizeTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1820)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.CONTROLLER_REJECTION,FailureInfo.LIQUIDATE_SEIZE_CONTROLLER_REJECTION,allowed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1822)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_SEIZE_LIQUIDATOR_IS_BORROWER) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1827)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.MATH_ERROR,FailureInfo.LIQUIDATE_SEIZE_BALANCE_INCREMENT_FAILED,uint256(mathErr)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1846)
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.MATH_ERROR,FailureInfo.LIQUIDATE_SEIZE_BALANCE_DECREMENT_FAILED,uint256(mathErr)) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1841)
	- Transfer(borrower,liquidator,seizeTokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1858)
Reentrancy in AToken.transferTokens(address,address,address,uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#811-871):
	External calls:
	- allowed = controller.transferAllowed(address(this),src,dst,tokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#813)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#231)
		- failOpaque(Error.CONTROLLER_REJECTION,FailureInfo.TRANSFER_CONTROLLER_REJECTION,allowed) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#815)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.MATH_ERROR,FailureInfo.TRANSFER_TOO_MUCH) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#849)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.BAD_INPUT,FailureInfo.TRANSFER_NOT_ALLOWED) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#820)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.MATH_ERROR,FailureInfo.TRANSFER_NOT_ALLOWED) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#839)
	- Failure(uint256(err),uint256(info),0) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#225)
		- fail(Error.MATH_ERROR,FailureInfo.TRANSFER_NOT_ENOUGH) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#844)
	- Transfer(src,dst,tokens) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#865)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Constant Exponential.expScale (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#341) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.halfExpScale (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#342) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.mantissaOne (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#343) is not in UPPER_CASE_WITH_UNDERSCORES
Function AToken._setPendingAdmin(address) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1877-1893) is not in mixedCase
Function AToken._acceptAdmin() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1900-1920) is not in mixedCase
Function AToken._setController(ControllerInterface) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1927-1944) is not in mixedCase
Function AToken._setReserveFactor(uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1951-1959) is not in mixedCase
Function AToken._reduceReserves(uint256) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1996-2004) is not in mixedCase
Function AToken._setInterestRateModel(InterestRateModel) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#2066-2074) is not in mixedCase
Function AToken._setInterestRateModel_init(InterestRateModel) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#2076-2083) is not in mixedCase
Constant AToken.isAToken (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#623) is not in UPPER_CASE_WITH_UNDERSCORES
Constant AToken.borrowRateMaxMantissa (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#643) is not in UPPER_CASE_WITH_UNDERSCORES
Constant AToken.reserveFactorMaxMantissa (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#648) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
AToken.constructor() (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#796-808) uses literals with too many digits:
	- initialExchangeRateMantissa = uint256(200000000000000000000000000) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#800)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
_setController(ControllerInterface) should be declared external:
	- AToken._setController(ControllerInterface) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#1927-1944)
_setInterestRateModel(InterestRateModel) should be declared external:
	- AToken._setInterestRateModel(InterestRateModel) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#2066-2074)
_setInterestRateModel_init(InterestRateModel) should be declared external:
	- AToken._setInterestRateModel_init(InterestRateModel) (loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol#2076-2083)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol analyzed (11 contracts with 46 detectors), 69 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xfd64dad84bdd0c735dec910936f301c74fc4bcdd.sol
Tool Runtime = 26.966546300001937 seconds
#############################################