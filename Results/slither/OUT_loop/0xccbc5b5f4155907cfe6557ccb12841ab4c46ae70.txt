INFO:Detectors:[93m
Mandalorian.transfer(address,uint256) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#143-198) performs a multiplication on the result of a division:
	-myInt2 = fee_J5y(value).div(6).mul(4) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#152)
Mandalorian.transfer(address,uint256) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#143-198) performs a multiplication on the result of a division:
	-myInts[x] = myInt2.div(myInt3).mul(walletsw[x]) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#165)
Mandalorian.transferFrom(address,address,uint256) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#207-262) performs a multiplication on the result of a division:
	-myInt2 = fee_J5y(value).div(6).mul(4) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#217)
Mandalorian.transferFrom(address,address,uint256) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#207-262) performs a multiplication on the result of a division:
	-myInts[x] = myInt2.div(myInt3).mul(walletsw[x]) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#230)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
Contract locking ether found in :
	Contract Mandalorian (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#95-348) has payable functions:
	 - Mandalorian.constructor() (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#124-126)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
ERC20Detailed.constructor(string,string,uint8).name (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#76) shadows:
	- ERC20Detailed.name() (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#82-84) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#76) shadows:
	- ERC20Detailed.symbol() (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#86-88) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#76) shadows:
	- ERC20Detailed.decimals() (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#90-92) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#23) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Function Mandalorian.fee_J5y(uint256) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#139-141) is not in mixedCase
Constant Mandalorian.tokenName (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#109) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Mandalorian.tokenSymbol (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#110) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Mandalorian.tokenDecimals (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#111) is not in UPPER_CASE_WITH_UNDERSCORES
Variable Mandalorian._totalSupply (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#112) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Mandalorian.slitherConstructorVariables() (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#95-348) uses literals with too many digits:
	- _totalSupply = 10000000000000000000000 (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#112)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
Mandalorian.wallet1 (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#100) is never used in Mandalorian (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#95-348)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
Mandalorian.wallet1 (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#100) should be constant
Mandalorian.wallet2 (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#101) should be constant
Mandalorian.walletbp (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#113) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
name() should be declared external:
	- ERC20Detailed.name() (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#82-84)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#86-88)
decimals() should be declared external:
	- ERC20Detailed.decimals() (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#90-92)
totalSupply() should be declared external:
	- Mandalorian.totalSupply() (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#127-129)
balanceOf(address) should be declared external:
	- Mandalorian.balanceOf(address) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#131-133)
allowance(address,address) should be declared external:
	- Mandalorian.allowance(address,address) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#135-137)
transfer(address,uint256) should be declared external:
	- Mandalorian.transfer(address,uint256) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#143-198)
approve(address,uint256) should be declared external:
	- Mandalorian.approve(address,uint256) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#200-205)
transferFrom(address,address,uint256) should be declared external:
	- Mandalorian.transferFrom(address,address,uint256) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#207-262)
increaseAllowance(address,uint256) should be declared external:
	- Mandalorian.increaseAllowance(address,uint256) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#264-268)
decreaseAllowance(address,uint256) should be declared external:
	- Mandalorian.decreaseAllowance(address,uint256) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#270-274)
enableBool1() should be declared external:
	- Mandalorian.enableBool1() (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#300-305)
disableBool3() should be declared external:
	- Mandalorian.disableBool3() (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#307-310)
setwallet3(address) should be declared external:
	- Mandalorian.setwallet3(address) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#312-316)
setMyInt1(uint256) should be declared external:
	- Mandalorian.setMyInt1(uint256) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#318-321)
setWallets2(address) should be declared external:
	- Mandalorian.setWallets2(address) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#323-326)
setWallets2x(address) should be declared external:
	- Mandalorian.setWallets2x(address) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#328-331)
setWallets3(address) should be declared external:
	- Mandalorian.setWallets3(address) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#333-336)
setWallets3x(address) should be declared external:
	- Mandalorian.setWallets3x(address) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#338-341)
setWallet4(address) should be declared external:
	- Mandalorian.setWallet4(address) (loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol#343-346)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol analyzed (4 contracts with 46 detectors), 40 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xccbc5b5f4155907cfe6557ccb12841ab4c46ae70.sol
Tool Runtime = 0.9633603120018961 seconds
#############################################