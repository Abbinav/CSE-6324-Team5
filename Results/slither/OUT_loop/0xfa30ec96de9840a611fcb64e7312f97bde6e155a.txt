INFO:Detectors:[91m
baseProxy.constructor(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#760-765) uses delegatecall to a input-controlled function id
	- (success) = implementation_.delegatecall(abi.encodeWithSignature(initialize())) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#763)
baseProxy.setImplementation(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#769-773) uses delegatecall to a input-controlled function id
	- (success) = implementation_.delegatecall(abi.encodeWithSignature(update())) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#771)
baseProxy.delegateToImplementation(bytes) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#781-789) uses delegatecall to a input-controlled function id
	- (success,returnData) = implementation.delegatecall(data) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#782)
baseProxy.delegateAndReturn() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#821-832) uses delegatecall to a input-controlled function id
	- (success) = implementation.delegatecall(msg.data) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#822)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#controlled-delegatecall[0m
INFO:Detectors:[93m
ManagerProxy (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#845-1102) has incorrect ERC20 function interface:Allowances.approve(address,uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#590-592)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
Reentrancy in ManagerProxy.constructor(address,address,address,address,address,address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#853-930):
	External calls:
	- baseProxy(implementation_) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#855)
		- (success) = implementation_.delegatecall(abi.encodeWithSignature(initialize())) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#763)
	State variables written after the call(s):
	- _FPTCoin = IFPTCoin(FPTCoinAddr) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#860)
	- _collateralPool = ICollateralPool(collateralPoolAddr) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#859)
	- _optionsPool = IOptionsPool(optionsPoolAddr) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#858)
	- _optionsPrice = IOptionsPrice(optionsPriceAddr) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#857)
	- _oracle = IFNXOracle(oracleAddr) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#856)
	- allowances[0x6D14B6A933Bfc473aEDEBC3beD58cA268FEe8b4a] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#862)
	- allowances[0x87A7604C4E9E1CED9990b6D486d652f0194A4c98] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#863)
	- allowances[0x7ea1a45f0657D2Dbd77839a916AB83112bdB5590] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#864)
	- allowances[0x358dba22d19789E01FD6bB528f4E75Bc06b56A79] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#865)
	- allowances[0x91406B5d57893E307f042D71C91e223a7058Eb72] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#866)
	- allowances[0xc89b50171C1F692f5CBC37aC4AF540f9cecEE0Ff] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#867)
	- allowances[0x92e25B14B0B760212D7E831EB8436Fbb93826755] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#868)
	- allowances[0x2D8f8d7737046c1475ED5278a18c4A62968f0CB2] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#869)
	- allowances[0xaAC6A96681cfc81c756Db31D93eafb8237A27Ba8] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#870)
	- allowances[0xB752d7a4E7ebD7B7A7b4DEEFd086571e5e7F5BB8] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#871)
	- allowances[0x8AbD525792015E1eBae2249756729168A3c1866F] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#872)
	- allowances[0x991b9d51e5526D497A576DF82eaa4BEA51EAD16e] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#873)
	- allowances[0xC8e7E9e496DE394969cb377F5Df0E3cdDFB74164] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#874)
	- allowances[0x0B173b9014a0A36aAC51eE4957BC8c7E20686d3F] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#875)
	- allowances[0xb9cE369E36Ab9ea488887ad9483f0ce899ab8fbe] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#876)
	- allowances[0x20C337F68Dc90D830Ac8e379e8823008dc791D56] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#877)
	- allowances[0x10E3163a7354b16ac24e7fCeE593c22E86a0abCa] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#878)
	- allowances[0x669cFbd063C434a5ee51adc78d2292A2D3Fe88E0] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#879)
	- allowances[0x59F1cfc3c485b9693e3F640e1B56Fe83B5e3183a] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#880)
	- allowances[0x4B38bf8A442D01017a6882d52Ef1B13CD069bb0d] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#881)
	- allowances[0x9c8f005ab27AdB94f3d49020A15722Db2Fcd9F27] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#882)
	- allowances[0x2240D781185B93DdD83C5eA78F4E64a9Cb5B0446] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#883)
	- allowances[0xa5B7364926Ac89aBCA15D56738b3EA79B31A0433] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#884)
	- allowances[0xafE53d85Da6b510B4fcc3774373F8880097F3E10] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#885)
	- allowances[0xb604BE9155810e4BA938ce06f8E554D2EB3438fE] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#886)
	- allowances[0xA27D1D94C0B4ce79d49E7c817C688c563D297fF7] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#887)
	- allowances[0x32ACbBa480e4bA2ee3E2c620Bf7A3242631293BE] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#888)
	- allowances[0x7Acfd797725EcCd5D3D60fB5Dd566760D0743098] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#889)
	- allowances[0x0F8f5137C365D01f71a3fb8A4283816FB12A8Efb] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#890)
	- allowances[0x2F160d9b63b5b8255499aB16959231275D4396db] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#891)
	- allowances[0xf85a428D528e89E115E5C91F7347fE9ac2F92d72] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#892)
	- allowances[0xb2c62391CCe67C5EfC1b17D442eBd24c90F6A47C] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#893)
	- allowances[0x10d31b7063cC25F9916B390677DC473B83E84e13] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#894)
	- allowances[0x358dba22d19789E01FD6bB528f4E75Bc06b56A79] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#895)
	- allowances[0xe4A263230d67d30c71634CA462a00174d943A14D] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#896)
	- allowances[0x1493572Bd9Fa9F75b0B81D6Cdd583AD87D6B358F] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#897)
	- allowances[0x025b654306621157aE8208ebC5DD0f311F425ac3] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#898)
	- allowances[0xCE257C6BD7aF256e1C8Dd11057F90b9A1AeD85a4] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#899)
	- allowances[0x7D57B8B8A731Cc1fc1E661842790e1864d5Cf4E8] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#900)
	- allowances[0xe129e34D1bD6AA1370090Cb1596207197A1a0689] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#901)
	- allowances[0xBA096024056bB653c6E28f53C8889BFC3553bAD8] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#902)
	- allowances[0x73DFb4bA8fFF9A975a28FF169157C7B71B9574aE] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#903)
	- allowances[0xddbDc4a3Af9DAa4005c039BE8329c1F03F01EDb9] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#904)
	- allowances[0x4086E0e1B3351D2168B74E7A61C0844b78f765F2] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#905)
	- allowances[0x4ce4fe1B35F11a428DD36A78C56Cb8Cc755f8847] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#906)
	- allowances[0x9e169106D1d406F3d51750835E01e8a34c265957] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#907)
	- allowances[0x7EcB07AdC76b2979fbE45Af13e2B706bA3562d1d] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#908)
	- allowances[0x3B95Df362B1857e6Db3483521057C4587C467531] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#909)
	- allowances[0xe596470D291Cb2D32ec111afC314B07006690c72] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#910)
	- allowances[0x80fd2a2Ed7e42Ec8bD9635285B09C773Da31eF71] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#911)
	- allowances[0xC09ec032769b04b08BDe8ADb608d0aaF903FF9Be] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#912)
	- allowances[0xf5F9AFBC3915075C5C62A995501fae643F5f6857] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#913)
	- allowances[0xf010920E1B098DFA1732d41Fbc895aB6E65E4438] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#914)
	- allowances[0xb37983510f9483A0725bC109d7f19237Aa3212d5] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#915)
	- allowances[0x9531479AA50908c9053144eF99c235abA6168069] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#916)
	- allowances[0x98F6a20f80FbF33153BE7ed1C8C3c10d4d6433DF] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#917)
	- allowances[0x4c8dbbDdC95B7981a7a09dE455ddfc58173CF471] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#918)
	- allowances[0x5acfbbF0aA370F232E341BC0B1a40e996c960e07] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#919)
	- allowances[0x7388B46005646008ada2d6d7DC2830F6C63b9BeD] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#920)
	- allowances[0xBFa43bf6E9FB6d5CC253Ff23c31F2b86a739bB98] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#921)
	- allowances[0x09AEa652006F4088d389c878474e33e9B15986E5] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#922)
	- allowances[0x0fBC222aDF84bEE9169022b28ebc3D32b5C60756] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#923)
	- allowances[0xBD53E948a5630c409b98bFC6112c2891836d5b33] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#924)
	- allowances[0x0eBF4005C35d525240c3237c1C448B88Deca9447] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#925)
	- allowances[0xa1cCC796E2B44e80112c065A4d8F05661E685eD8] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#926)
	- allowances[0x4E60bE84870FE6AE350B563A121042396Abe1eaF] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#927)
	- allowances[0x5286CEde4a0Eda5916d639535aDFbefAd980D6E1] = 1e40 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#928)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
baseProxy.delegateToImplementation(bytes) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#781-789) uses assembly
	- INLINE ASM (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#783-788)
baseProxy.delegateToViewImplementation(bytes) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#798-806) uses assembly
	- INLINE ASM (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#800-805)
baseProxy.delegateToViewAndReturn() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#808-819) uses assembly
	- INLINE ASM (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#811-819)
baseProxy.delegateAndReturn() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#821-832) uses assembly
	- INLINE ASM (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#824-832)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#8) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#87) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#117) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#262) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#320) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#347) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#383) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#420) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#441) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#489) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#517) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#574) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#611) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#690) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#752) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#838) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in baseProxy.constructor(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#760-765):
	- (success) = implementation_.delegatecall(abi.encodeWithSignature(initialize())) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#763)
Low level call in baseProxy.setImplementation(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#769-773):
	- (success) = implementation_.delegatecall(abi.encodeWithSignature(update())) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#771)
Low level call in baseProxy.delegateToImplementation(bytes) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#781-789):
	- (success,returnData) = implementation.delegatecall(data) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#782)
Low level call in baseProxy.delegateToViewImplementation(bytes) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#798-806):
	- (success,returnData) = address(this).staticcall(abi.encodeWithSignature(delegateToImplementation(bytes),data)) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#799)
Low level call in baseProxy.delegateToViewAndReturn() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#808-819):
	- (success) = address(this).staticcall(abi.encodeWithSignature(delegateToImplementation(bytes),msg.data)) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#809)
Low level call in baseProxy.delegateAndReturn() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#821-832):
	- (success) = implementation.delegatecall(msg.data) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#822)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Variable Ownable._owner (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#20) is not in mixedCase
Contract whiteListUint32 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#121-169) is not in CapWords
Contract whiteListUint256 (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#173-213) is not in CapWords
Contract whiteListAddress (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#217-257) is not in CapWords
Constant AddressWhiteList.allPermission (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#271) is not in UPPER_CASE_WITH_UNDERSCORES
Constant AddressWhiteList.allowBuyOptions (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#272) is not in UPPER_CASE_WITH_UNDERSCORES
Constant AddressWhiteList.allowSellOptions (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#273) is not in UPPER_CASE_WITH_UNDERSCORES
Constant AddressWhiteList.allowExerciseOptions (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#274) is not in UPPER_CASE_WITH_UNDERSCORES
Constant AddressWhiteList.allowAddCollateral (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#275) is not in UPPER_CASE_WITH_UNDERSCORES
Constant AddressWhiteList.allowRedeemCollateral (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#276) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter IOptionsPool.createOptions(address,address,uint256,uint256,uint256,uint256).type_ly_exp (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#352) is not in mixedCase
Variable ImportOptionsPool._optionsPool (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#371) is not in mixedCase
Variable ImportOracle._oracle (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#398) is not in mixedCase
Function IOptionsPrice.getOptionsPrice_iv(uint256,uint256,uint256,uint256,uint256,uint8) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#424-425) is not in mixedCase
Variable ImportOptionsPrice._optionsPrice (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#429) is not in mixedCase
Parameter ICollateralPool.transferPaybackBalances(address,uint256,address[],uint256[],uint256[],uint256[]).PremiumBalances (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#468) is not in mixedCase
Parameter ICollateralPool.getCollateralAndPremiumBalances(address,uint256,address[],uint256[],uint256[])._RealBalances (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#470) is not in mixedCase
Variable ImportCollateralPool._collateralPool (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#477) is not in mixedCase
Parameter ImportIFPTCoin.setFPTCoinAddress(address).FPTCoinAddr (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#509) is not in mixedCase
Variable ImportIFPTCoin._FPTCoin (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#505) is not in mixedCase
Parameter ImputRange.isInputAmountInRange(uint256).Amount (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#535) is not in mixedCase
Parameter ImputRange.setInputAmountRange(uint256,uint256)._minAmount (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#565) is not in mixedCase
Parameter ImputRange.setInputAmountRange(uint256,uint256)._maxAmount (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#565) is not in mixedCase
Modifier ImputRange.InRange(uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#527-530) is not in mixedCase
Modifier ImputRange.Smaller(uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#546-549) is not in mixedCase
Modifier ImputRange.Larger(uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#550-553) is not in mixedCase
Parameter Allowances.setValid(bool)._bValid (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#596) is not in mixedCase
Contract baseProxy (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#758-833) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
AddressWhiteList.allowBuyOptions (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#272) is never used in ManagerProxy (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#845-1102)
AddressWhiteList.allowSellOptions (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#273) is never used in ManagerProxy (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#845-1102)
AddressWhiteList.allowExerciseOptions (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#274) is never used in ManagerProxy (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#845-1102)
AddressWhiteList.allowAddCollateral (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#275) is never used in ManagerProxy (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#845-1102)
AddressWhiteList.allowRedeemCollateral (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#276) is never used in ManagerProxy (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#845-1102)
ManagerData.collateralRate (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#709) is never used in ManagerProxy (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#845-1102)
ManagerData.maxPriceRate (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#727) is never used in ManagerProxy (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#845-1102)
ManagerData.minPriceRate (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#728) is never used in ManagerProxy (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#845-1102)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
ManagerData.maxPriceRate (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#727) should be constant
ManagerData.minPriceRate (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#728) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
owner() should be declared external:
	- Ownable.owner() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#35-37)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#61-64)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#70-72)
setHalt(bool) should be declared external:
	- Halt.setHalt(bool) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#106-111)
addWhiteList(address) should be declared external:
	- AddressWhiteList.addWhiteList(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#284-287)
modifyPermission(address,uint256) should be declared external:
	- AddressWhiteList.modifyPermission(address,uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#288-290)
removeWhiteList(address) should be declared external:
	- AddressWhiteList.removeWhiteList(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#295-298)
getWhiteList() should be declared external:
	- AddressWhiteList.getWhiteList() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#302-304)
isEligibleAddress(address) should be declared external:
	- AddressWhiteList.isEligibleAddress(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#309-311)
checkAddressPermission(address,uint256) should be declared external:
	- AddressWhiteList.checkAddressPermission(address,uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#312-314)
getOptionsPoolAddress() should be declared external:
	- ImportOptionsPool.getOptionsPoolAddress() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#372-374)
setOptionsPoolAddress(address) should be declared external:
	- ImportOptionsPool.setOptionsPoolAddress(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#375-377)
getOracleAddress() should be declared external:
	- ImportOracle.getOracleAddress() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#409-411)
setOracleAddress(address) should be declared external:
	- ImportOracle.setOracleAddress(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#412-414)
getOptionsPriceAddress() should be declared external:
	- ImportOptionsPrice.getOptionsPriceAddress() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#430-432)
setOptionsPriceAddress(address) should be declared external:
	- ImportOptionsPrice.setOptionsPriceAddress(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#433-435)
getCollateralPoolAddress() should be declared external:
	- ImportCollateralPool.getCollateralPoolAddress() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#478-480)
setCollateralPoolAddress(address) should be declared external:
	- ImportCollateralPool.setCollateralPoolAddress(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#481-483)
getFPTCoinAddress() should be declared external:
	- ImportIFPTCoin.getFPTCoinAddress() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#506-508)
setFPTCoinAddress(address) should be declared external:
	- ImportIFPTCoin.setFPTCoinAddress(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#509-511)
isInputAmountInRange(uint256) should be declared external:
	- ImputRange.isInputAmountInRange(uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#535-537)
getInputAmountRange() should be declared external:
	- ImputRange.getInputAmountRange() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#557-559)
setInputAmountRange(uint256,uint256) should be declared external:
	- ImputRange.setInputAmountRange(uint256,uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#565-568)
approve(address,uint256) should be declared external:
	- Allowances.approve(address,uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#590-592)
allowance(address) should be declared external:
	- Allowances.allowance(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#593-595)
setValid(bool) should be declared external:
	- Allowances.setValid(bool) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#596-598)
checkAllowance(address,uint256) should be declared external:
	- Allowances.checkAllowance(address,uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#599-601)
getImplementation() should be declared external:
	- baseProxy.getImplementation() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#766-768)
setImplementation(address) should be declared external:
	- baseProxy.setImplementation(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#769-773)
delegateToImplementation(bytes) should be declared external:
	- baseProxy.delegateToImplementation(bytes) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#781-789)
delegateToViewImplementation(bytes) should be declared external:
	- baseProxy.delegateToViewImplementation(bytes) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#798-806)
setCollateralRate(address,uint256) should be declared external:
	- ManagerProxy.setCollateralRate(address,uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#936-938)
getCollateralRate(address) should be declared external:
	- ManagerProxy.getCollateralRate(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#942-944)
getUserPayingUsd(address) should be declared external:
	- ManagerProxy.getUserPayingUsd(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#949-951)
userInputCollateral(address,address) should be declared external:
	- ManagerProxy.userInputCollateral(address,address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#957-959)
getUserTotalWorth(address) should be declared external:
	- ManagerProxy.getUserTotalWorth(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#965-967)
getTokenNetworth() should be declared external:
	- ManagerProxy.getTokenNetworth() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#971-973)
addCollateral(address,uint256) should be declared external:
	- ManagerProxy.addCollateral(address,uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#979-981)
redeemCollateral(uint256,address) should be declared external:
	- ManagerProxy.redeemCollateral(uint256,address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#988-990)
calCollateralWorth(address) should be declared external:
	- ManagerProxy.calCollateralWorth(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#997-999)
getOccupiedCollateral() should be declared external:
	- ManagerProxy.getOccupiedCollateral() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1003-1005)
getAvailableCollateral() should be declared external:
	- ManagerProxy.getAvailableCollateral() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1009-1011)
getLeftCollateral() should be declared external:
	- ManagerProxy.getLeftCollateral() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1015-1017)
getUnlockedCollateral() should be declared external:
	- ManagerProxy.getUnlockedCollateral() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1021-1023)
calOptionsOccupied(uint256,uint256,uint256,uint8) should be declared external:
	- ManagerProxy.calOptionsOccupied(uint256,uint256,uint256,uint8) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1031-1033)
getTotalCollateral() should be declared external:
	- ManagerProxy.getTotalCollateral() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1037-1039)
getRealBalance(address) should be declared external:
	- ManagerProxy.getRealBalance(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1043-1045)
getNetWorthBalance(address) should be declared external:
	- ManagerProxy.getNetWorthBalance(address) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1046-1048)
calculateCollateralRate() should be declared external:
	- ManagerProxy.calculateCollateralRate() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1053-1055)
getPriceRateRange() should be declared external:
	- ManagerProxy.getPriceRateRange() (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1059-1061)
setPriceRateRange(uint256,uint256) should be declared external:
	- ManagerProxy.setPriceRateRange(uint256,uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1065-1067)
buyOption(address,uint256,uint256,uint32,uint256,uint256,uint8) should be declared external:
	- ManagerProxy.buyOption(address,uint256,uint256,uint32,uint256,uint256,uint8) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1078-1081)
sellOption(uint256,uint256) should be declared external:
	- ManagerProxy.sellOption(uint256,uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1087-1089)
exerciseOption(uint256,uint256) should be declared external:
	- ManagerProxy.exerciseOption(uint256,uint256) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1095-1097)
getOptionsPrice(uint256,uint256,uint256,uint32,uint256,uint8) should be declared external:
	- ManagerProxy.getOptionsPrice(uint256,uint256,uint256,uint32,uint256,uint8) (loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol#1098-1101)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol analyzed (23 contracts with 46 detectors), 126 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol
Tool Runtime = 2.902645307000057 seconds
#############################################