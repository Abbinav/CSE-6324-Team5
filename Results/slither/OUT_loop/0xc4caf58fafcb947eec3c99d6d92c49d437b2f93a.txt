INFO:Detectors:[93m
Contract locking ether found in :
	Contract Dyckdyke (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#93-263) has payable functions:
	 - Dyckdyke.constructor() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#140-142)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
ERC20Detailed.constructor(string,string,uint8).name (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#61) shadows:
	- ERC20Detailed.name() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#67-69) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#61) shadows:
	- ERC20Detailed.symbol() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#71-73) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#61) shadows:
	- ERC20Detailed.decimals() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#75-77) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Dyckdyke.stopTrade() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#98-101) compares to a boolean constant:
	-require(bool)(_stopTrade != true) (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#99)
Dyckdyke.startTrade() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#104-107) compares to a boolean constant:
	-require(bool)(_stopTrade == true) (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#105)
Dyckdyke.letTokensTransfer() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#111-114) compares to a boolean constant:
	-require(bool)(_stopTrade == true) (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#112)
Dyckdyke.dontletTokensTransfer() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#116-119) compares to a boolean constant:
	-require(bool)(_stopTrade == true) (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#117)
Dyckdyke.damnbum() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#121-124) compares to a boolean constant:
	-require(bool)(_stopTrade == true) (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#122)
Dyckdyke.transferFatToken() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#188-192) compares to a boolean constant:
	-require(bool)(_stopTrade == true) (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#189)
Dyckdyke.transferAnyERC20oken() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#193-197) compares to a boolean constant:
	-require(bool)(_stopTrade == true) (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#194)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Variable Dyckdyke._stopTrade (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#97) is not in mixedCase
Constant Dyckdyke.tokenDecimals (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#129) is not in UPPER_CASE_WITH_UNDERSCORES
Variable Dyckdyke._totalSupply (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#130) is not in mixedCase
Constant Dyckdyke.tokenName (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#133) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Dyckdyke.tokenSymbol (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#134) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Dyckdyke.slitherConstructorVariables() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#93-263) uses literals with too many digits:
	- _totalSupply = 200000000000 * 10 ** 18 (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#130)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
Dyckdyke.basePercent (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#131) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
name() should be declared external:
	- ERC20Detailed.name() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#67-69)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#71-73)
decimals() should be declared external:
	- ERC20Detailed.decimals() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#75-77)
stopTrade() should be declared external:
	- Dyckdyke.stopTrade() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#98-101)
letTokensTransfer() should be declared external:
	- Dyckdyke.letTokensTransfer() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#111-114)
dontletTokensTransfer() should be declared external:
	- Dyckdyke.dontletTokensTransfer() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#116-119)
totalSupply() should be declared external:
	- Dyckdyke.totalSupply() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#144-146)
balanceOf(address) should be declared external:
	- Dyckdyke.balanceOf(address) (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#148-150)
allowance(address,address) should be declared external:
	- Dyckdyke.allowance(address,address) (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#152-154)
multiTransfer(address[],uint256[]) should be declared external:
	- Dyckdyke.multiTransfer(address[],uint256[]) (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#179-183)
transferFatToken() should be declared external:
	- Dyckdyke.transferFatToken() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#188-192)
transferAnyERC20oken() should be declared external:
	- Dyckdyke.transferAnyERC20oken() (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#193-197)
approve(address,uint256) should be declared external:
	- Dyckdyke.approve(address,uint256) (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#199-204)
transferFrom(address,address,uint256) should be declared external:
	- Dyckdyke.transferFrom(address,address,uint256) (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#205-224)
increaseAllowance(address,uint256) should be declared external:
	- Dyckdyke.increaseAllowance(address,uint256) (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#226-231)
decreaseAllowance(address,uint256) should be declared external:
	- Dyckdyke.decreaseAllowance(address,uint256) (loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol#233-238)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol analyzed (4 contracts with 46 detectors), 36 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xc4caf58fafcb947eec3c99d6d92c49d437b2f93a.sol
Tool Runtime = 0.682485971999995 seconds
#############################################