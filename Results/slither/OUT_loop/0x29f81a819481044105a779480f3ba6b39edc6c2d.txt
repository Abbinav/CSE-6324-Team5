Compilation warnings/errors on ./loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol:
./loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol:436:31: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash:= extcodehash(account) }
                              ^------------------^

INFO:Detectors:[93m
Contract locking ether found in :
	Contract ERC20TOKEN (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#524-694) has payable functions:
	 - ERC20TOKEN.transfer(address,uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#534-538)
	 - ERC20TOKEN.transferFrom(address,address,uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#542-566)
	 - ERC20TOKEN.fallback() (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#608)
	 - ERC20TOKEN.batchSend(address[],uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#612-636)
	 - ERC20TOKEN.approve(address,uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#640-648)
	 - ERC20TOKEN.constructor(string,string,uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#674-692)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in ERC20TOKEN.transferFrom(address,address,uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#542-566):
	External calls:
	- bonusIssue = calc(_from,_to,_value) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#558)
		- allocation = BookBuildManagement(preSaleManager).calcBonus(address(this),masterContract,_value) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#598)
	State variables written after the call(s):
	- balanceOf[_to] += (_value - bonusIssue) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#560)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
ERC20Detailed.constructor(string,string,uint8).name (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#302) shadows:
	- ERC20Detailed.name() (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#314-318) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#302) shadows:
	- ERC20Detailed.symbol() (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#322-326) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#302) shadows:
	- ERC20Detailed.decimals() (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#330-334) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in ERC20TOKEN.transferFrom(address,address,uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#542-566):
	External calls:
	- bonusIssue = calc(_from,_to,_value) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#558)
		- allocation = BookBuildManagement(preSaleManager).calcBonus(address(this),masterContract,_value) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#598)
	Event emitted after the call(s):
	- Transfer(_from,_to,_value) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#562)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Address.isContract(address) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#428-440) uses assembly
	- INLINE ASM (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#436-438)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#96) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#488-510):
	- (success,returndata) = address(token).call(data) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#496)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter ERC20TOKEN.transfer(address,uint256)._to (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#534) is not in mixedCase
Parameter ERC20TOKEN.transfer(address,uint256)._value (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#534) is not in mixedCase
Parameter ERC20TOKEN.transferFrom(address,address,uint256)._from (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#542) is not in mixedCase
Parameter ERC20TOKEN.transferFrom(address,address,uint256)._to (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#542) is not in mixedCase
Parameter ERC20TOKEN.transferFrom(address,address,uint256)._value (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#542) is not in mixedCase
Parameter ERC20TOKEN.calc(address,address,uint256)._from (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#592) is not in mixedCase
Parameter ERC20TOKEN.calc(address,address,uint256)._to (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#592) is not in mixedCase
Parameter ERC20TOKEN.calc(address,address,uint256)._value (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#592) is not in mixedCase
Parameter ERC20TOKEN.batchSend(address[],uint256)._tos (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#612) is not in mixedCase
Parameter ERC20TOKEN.batchSend(address[],uint256)._value (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#612) is not in mixedCase
Parameter ERC20TOKEN.approve(address,uint256)._spender (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#640) is not in mixedCase
Parameter ERC20TOKEN.approve(address,uint256)._value (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#640) is not in mixedCase
Constant ERC20TOKEN.preSaleManager (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#670) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- ERC20.totalSupply() (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#150-154)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#158-162)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#166-172)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#176-180)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#184-190)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#194-202)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#206-212)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#216-222)
name() should be declared external:
	- ERC20Detailed.name() (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#314-318)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#322-326)
decimals() should be declared external:
	- ERC20Detailed.decimals() (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#330-334)
transfer(address,uint256) should be declared external:
	- ERC20TOKEN.transfer(address,uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#534-538)
batchSend(address[],uint256) should be declared external:
	- ERC20TOKEN.batchSend(address[],uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#612-636)
approve(address,uint256) should be declared external:
	- ERC20TOKEN.approve(address,uint256) (loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol#640-648)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x29f81a819481044105a779480f3ba6b39edc6c2d.sol analyzed (9 contracts with 46 detectors), 37 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x29f81a819481044105a779480f3ba6b39edc6c2d.sol
Tool Runtime = 0.799115615998744 seconds
#############################################