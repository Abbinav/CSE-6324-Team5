Compilation warnings/errors on ./loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol:
./loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol:431:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^

INFO:Detectors:[93m
IERC20 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#22-54) has incorrect ERC20 function interface:IERC20.transfer(address,uint256) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#24)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
Reentrancy in MithrilLottery.executeReward() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1687-1731):
	External calls:
	- sendToken(userAddress,amount) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1709)
		- token.transfer(to,value) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#957)
	State variables written after the call(s):
	- rewardDict[userAddress] = 0 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1715)
	- rewardExecutedOffset = index + 1 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1719)
Reentrancy in MithrilLottery.executeRewardBatch() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1735-1787):
	External calls:
	- sendToken(userAddress,amount) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1763)
		- token.transfer(to,value) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#957)
	State variables written after the call(s):
	- rewardDict[userAddress] = 0 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1769)
	- rewardExecutedOffset = index + 1 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1773)
Reentrancy in MithrilLottery.executeRewardBatch() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1735-1787):
	External calls:
	- executeReward() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1751)
		- token.transfer(to,value) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#957)
	State variables written after the call(s):
	- status = LotteryStatus.Closed (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1783)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
MithrilLottery.setBets(uint256[]).bet (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1021) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
MithrilLottery.setBets(uint256[]) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#963-1059) ignores return value by token.transferFrom(msg.sender,address(this),ticketPrice) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#993)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in MithrilLottery.setBets(uint256[]) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#963-1059):
	External calls:
	- token.transferFrom(msg.sender,address(this),ticketPrice) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#993)
	State variables written after the call(s):
	- currentRewardVolumn += ticketPrice * 40 / 100 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#999)
Reentrancy in MithrilLottery.setBets(uint256[]) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#963-1059):
	External calls:
	- token.transferFrom(msg.sender,address(this),ticketPrice) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#993)
	- sendToken(address(0),ticketPrice * 30 / 100) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1005)
		- token.transfer(to,value) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#957)
	State variables written after the call(s):
	- totalBurnedVolumn += ticketPrice * 30 / 100 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1007)
Reentrancy in MithrilLottery.setBets(uint256[]) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#963-1059):
	External calls:
	- token.transferFrom(msg.sender,address(this),ticketPrice) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#993)
	- sendToken(address(0),ticketPrice * 30 / 100) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1005)
		- token.transfer(to,value) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#957)
	- sendToken(teamWalletAddress,ticketPrice * 5 / 100) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1013)
		- token.transfer(to,value) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#957)
	- sendToken(fundationWalletAddress,ticketPrice * 5 / 100) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1015)
		- token.transfer(to,value) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#957)
	State variables written after the call(s):
	- betNumberDict[bet.id][numbers[index]] = true (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1043)
	- totalBetNum += 1 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1027)
	- userAddressDict[msg.sender] = true (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1055)
	- bets.push(bet) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1035)
	- users.push(msg.sender) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1053)
Reentrancy in MithrilLottery.withdrawAll() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#757-773):
	External calls:
	- sendToken(teamWalletAddress,contractBalance) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#763)
		- token.transfer(to,value) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#957)
	State variables written after the call(s):
	- remainingFirstVolumnBefore = 0 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#765)
	- remainingFourthVolumnBefore = 0 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#771)
	- remainingSecondtVolumnBefore = 0 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#767)
	- remainingThirdVolumnBefore = 0 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#769)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
MithrilLottery.setBets(uint256[]) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#963-1059) compares to a boolean constant:
	-userAddressDict[msg.sender] != true (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1051)
MithrilLottery.countWinnings(address,uint256) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1103-1129) compares to a boolean constant:
	-betNumberDict[bet.id][LuckyNumbers[index]] == true (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1113)
MithrilLottery.countWinnings(address,uint256) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1103-1129) compares to a boolean constant:
	-betNumberDict[bet.id][SpecialNumber] == true (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1121)
MithrilLottery.countRewardFirstBatch() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1279-1585) compares to a boolean constant:
	-require(bool,string)(winningStageSetFlag == true,Winning stage not set.) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1285)
MithrilLottery.countRewardSecondBatch() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1589-1683) compares to a boolean constant:
	-require(bool,string)(winningStageSetFlag == true,Winning stage not set.) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1595)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#10) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#63) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#196) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#279) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#336) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#429) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Variable MithrilLottery.LuckyNumbers (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#439) is not in mixedCase
Variable MithrilLottery.SpecialNumber (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#441) is not in mixedCase
Variable MithrilLottery.LuckySpecialNumbersCandidate (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#443-449) is not in mixedCase
Variable MithrilLottery.LuckyNumberOpenedNum (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#453) is not in mixedCase
Variable MithrilLottery.BetNumber (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#457) is not in mixedCase
Variable MithrilLottery.REWARD_BATCH_SIZE (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#559) is not in mixedCase
Variable MithrilLottery.RESET_LOTTERY_BATCH_SIZE (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#579) is not in mixedCase
Variable MithrilLottery.COUNT_WINNING_STAGE_BATCH_SIZE (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#587) is not in mixedCase
Variable MithrilLottery.COUNT_REWARD_BATCH_SIZE (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#597) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
MithrilLottery.countRewardFirstBatch() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1279-1585) uses literals with too many digits:
	- firstStageTotalPrice / firstStageNumber < 1000000000000000000000000 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1521)
MithrilLottery.countRewardFirstBatch() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1279-1585) uses literals with too many digits:
	- firstStagePricePerPerson = 1000000000000000000000000 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1523)
MithrilLottery.slitherConstructorVariables() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#435-1789) uses literals with too many digits:
	- firstStageWinningPrice = 1000000000000000000000000 (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#463)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
MithrilLottery.firstStageWinningPrice (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#463) is never used in MithrilLottery (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#435-1789)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
MithrilLottery.BetNumber (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#457) should be constant
MithrilLottery.COUNT_REWARD_BATCH_SIZE (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#597) should be constant
MithrilLottery.COUNT_WINNING_STAGE_BATCH_SIZE (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#587) should be constant
MithrilLottery.RESET_LOTTERY_BATCH_SIZE (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#579) should be constant
MithrilLottery.REWARD_BATCH_SIZE (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#559) should be constant
MithrilLottery.firstStageWinningPrice (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#463) should be constant
MithrilLottery.ticketPrice (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#461) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
addWhitelistAdmin(address) should be declared external:
	- WhitelistAdminRole.addWhitelistAdmin(address) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#390-394)
renounceWhitelistAdmin() should be declared external:
	- WhitelistAdminRole.renounceWhitelistAdmin() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#398-402)
getPreviousLuckyAddresses(uint256) should be declared external:
	- MithrilLottery.getPreviousLuckyAddresses(uint256) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#669-673)
openLuckyNumber(uint256) should be declared external:
	- MithrilLottery.openLuckyNumber(uint256) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#699-745)
setLotteryStatus(MithrilLottery.LotteryStatus) should be declared external:
	- MithrilLottery.setLotteryStatus(MithrilLottery.LotteryStatus) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#749-753)
withdrawAll() should be declared external:
	- MithrilLottery.withdrawAll() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#757-773)
withdrawPreviousDeposit() should be declared external:
	- MithrilLottery.withdrawPreviousDeposit() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#777-791)
resetLotteryBatch() should be declared external:
	- MithrilLottery.resetLotteryBatch() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#795-923)
setBets(uint256[]) should be declared external:
	- MithrilLottery.setBets(uint256[]) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#963-1059)
getBet(address,uint256) should be declared external:
	- MithrilLottery.getBet(address,uint256) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1063-1067)
getUserBets(address) should be declared external:
	- MithrilLottery.getUserBets(address) (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1071-1083)
getLuckyNumber() should be declared external:
	- MithrilLottery.getLuckyNumber() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1087-1091)
getUsersLength() should be declared external:
	- MithrilLottery.getUsersLength() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1095-1099)
countAndSetWinningStageBatch() should be declared external:
	- MithrilLottery.countAndSetWinningStageBatch() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1189-1275)
countRewardFirstBatch() should be declared external:
	- MithrilLottery.countRewardFirstBatch() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1279-1585)
countRewardSecondBatch() should be declared external:
	- MithrilLottery.countRewardSecondBatch() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1589-1683)
executeRewardBatch() should be declared external:
	- MithrilLottery.executeRewardBatch() (loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol#1735-1787)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x49d6f49c854279633c78905371e5e17e9abd65e7.sol analyzed (6 contracts with 46 detectors), 59 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x49d6f49c854279633c78905371e5e17e9abd65e7.sol
Tool Runtime = 2.8187924229969212 seconds
#############################################