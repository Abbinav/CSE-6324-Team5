Compilation warnings/errors on ./loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol:
./loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol:12:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^
./loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol:586:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^
./loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol:1369:5: Warning: Function state mutability can be restricted to pure
    function _getLiquidationAmounts(
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol:2599:5: Warning: Function state mutability can be restricted to view
    function _getRebate(
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in LoanClosingsBase._closeWithDeposit(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2081-2151):
	External calls:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2108-2113)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2116-2120)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1275-1278)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- IERC20(token).safeTransferFrom(from,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1280-1284)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
		- Address.sendValue(msg.sender,msg.value - principalNeeded) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2346-2349)
	- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2136-2140)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	- _finalizeClose(loanLocal,loanParamsLocal,loanCloseAmount,withdrawAmount,0,CloseTypes.Deposit) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2143-2150)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).getCurrentMargin.selector,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,loanLocal.principal,loanLocal.collateral)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2469-2477)
	External calls sending eth:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2108-2113)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2116-2120)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
	- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2136-2140)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	State variables written after the call(s):
	- _finalizeClose(loanLocal,loanParamsLocal,loanCloseAmount,withdrawAmount,0,CloseTypes.Deposit) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2143-2150)
		- loans[loanLocal.id] = loanLocal (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2525)
Reentrancy in LoanClosingsBase._closeWithSwap(bytes32,address,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2153-2243):
	External calls:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2189-2194)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	External calls sending eth:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2189-2194)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	State variables written after the call(s):
	- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
		- protocolTokenHeld = tokenBalance.sub(withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#946-947)
	- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
		- protocolTokenPaid = protocolTokenPaid.add(rewardAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1161-1162)
Reentrancy in LoanClosingsBase._closeWithSwap(bytes32,address,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2153-2243):
	External calls:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2189-2194)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- vaultWithdraw(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2211-2215)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2228-2232)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	- _finalizeClose(loanLocal,loanParamsLocal,loanCloseAmount,usedCollateral,collateralToLoanSwapRate,CloseTypes.Swap) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2235-2242)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).getCurrentMargin.selector,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,loanLocal.principal,loanLocal.collateral)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2469-2477)
	External calls sending eth:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2189-2194)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2228-2232)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	State variables written after the call(s):
	- _finalizeClose(loanLocal,loanParamsLocal,loanCloseAmount,usedCollateral,collateralToLoanSwapRate,CloseTypes.Swap) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2235-2242)
		- loans[loanLocal.id] = loanLocal (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2525)
Reentrancy in LoanClosingsBase._liquidate(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1821-1935):
	External calls:
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,address(this),loanCloseAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1874-1878)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1275-1278)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- IERC20(token).safeTransferFrom(from,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1280-1284)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
		- Address.sendValue(msg.sender,msg.value - principalNeeded) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2346-2349)
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,loanLocal.borrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1881-1886)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- _withdrawAsset(loanParamsLocal.loanToken,loanLocal.borrower,loanCloseAmount - loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1890-1894)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	- vaultWithdraw(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1900-1904)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _withdrawAsset(seizedToken,receiver,seizedAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1913-1917)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	External calls sending eth:
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,address(this),loanCloseAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1874-1878)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,loanLocal.borrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1881-1886)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- _withdrawAsset(loanParamsLocal.loanToken,loanLocal.borrower,loanCloseAmount - loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1890-1894)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- _withdrawAsset(seizedToken,receiver,seizedAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1913-1917)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	State variables written after the call(s):
	- _closeLoan(loanLocal,loanCloseAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1931-1934)
		- loans[loanLocal.id] = loanLocal (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2525)
Reentrancy in LoanClosingsBase._rollover(bytes32,uint256,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1937-2079):
	External calls:
	- _payInterest(loanLocal.lender,loanParamsLocal.loanToken) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1957-1960)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _settleFeeRewardForInterestExpense(loanInterestLocal,loanLocal.id,loanParamsLocal.loanToken,loanLocal.borrower,block.timestamp) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1965-1971)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- (sourceTokenAmountUsed) = _doCollateralSwap(loanLocal,loanParamsLocal,loanLocal.collateral,interestAmountRequired,true,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2031-2038)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- _payInterestTransfer(loanLocal.lender,loanParamsLocal.loanToken,backInterestOwed) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2045-2049)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _withdrawAsset(loanParamsLocal.collateralToken,msg.sender,gasRebate) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2063-2067)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	External calls sending eth:
	- _withdrawAsset(loanParamsLocal.collateralToken,msg.sender,gasRebate) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2063-2067)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	State variables written after the call(s):
	- loans[loanId] = loanLocal (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2078)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[91m
State.priceFeeds (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#768) is never initialized. It is used in:
	- LoanClosingsBase._liquidate(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1821-1935)
	- LoanClosingsBase._finalizeClose(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256,uint256,uint256,LoanClosingsBase.CloseTypes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2450-2502)
	- LoanClosingsBase._getRebate(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2599-2625)
	- SwapsUser._loanSwap(bytes32,address,address,address,uint256,uint256,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1470-1521)
	- SwapsUser._swapsExpectedReturn(address,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1638-1665)
	- SwapsUser._checkSwapSize(address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1667-1683)
	- FeesHelper._payFeeReward(address,bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1127-1172)
State.swapsImpl (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#769) is never initialized. It is used in:
	- SwapsUser._swapsCall_internal(address[5],uint256[3]) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1614-1636)
	- SwapsUser._swapsExpectedReturn(address,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1638-1665)
State.loanParams (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#774) is never initialized. It is used in:
	- LoanClosingsBase._liquidate(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1821-1935)
	- LoanClosingsBase._rollover(bytes32,uint256,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1937-2079)
	- LoanClosingsBase._closeWithDeposit(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2081-2151)
	- LoanClosingsBase._closeWithSwap(bytes32,address,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2153-2243)
State.delegatedManagers (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#779) is never initialized. It is used in:
	- LoanClosingsBase._checkAuthorized(bytes32,bool,address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2245-2258)
State.liquidationIncentivePercent (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#812) is never initialized. It is used in:
	- LoanClosingsBase._liquidate(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1821-1935)
State.loanPoolToUnderlying (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#814) is never initialized. It is used in:
	- LoanClosingsBase._rollover(bytes32,uint256,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1937-2079)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
LiquidationHelper._getLiquidationAmounts(uint256,uint256,uint256,uint256,uint256,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1369-1424) performs a multiplication on the result of a division:
	-maxLiquidatable = desiredMargin.add(WEI_PERCENT_PRECISION).mul(principal).div(WEI_PERCENT_PRECISION) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1390-1393)
	-maxLiquidatable = maxLiquidatable.mul(WEI_PERCENT_PRECISION).div(desiredMargin.sub(incentivePercent)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1400-1405)
LiquidationHelper._getLiquidationAmounts(uint256,uint256,uint256,uint256,uint256,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1369-1424) performs a multiplication on the result of a division:
	-maxLiquidatable = maxLiquidatable.mul(WEI_PERCENT_PRECISION).div(desiredMargin.sub(incentivePercent)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1400-1405)
	-maxSeizable = maxLiquidatable.mul(incentivePercent.add(WEI_PERCENT_PRECISION)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1411-1415)
LoanClosingsBase._settleInterest(LoanParamsStruct.LoanParams,LoanStruct.Loan,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2528-2597) performs a multiplication on the result of a division:
	-owedPerDayRefund = loanInterestLocal.owedPerDay.mul(closePrincipal).div(loanLocal.principal) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2559-2561)
	-interestRefundToBorrower = interestRefundToBorrower.mul(owedPerDayRefund) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2575-2576)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
LoanClosingsBase._checkAuthorized(bytes32,bool,address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2245-2258) uses a dangerous strict equality:
	- require(bool,string)(msg.sender == _borrower || delegatedManagers[_id][msg.sender],unauthorized) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2253-2257)
LoanClosingsBase._closeLoan(LoanStruct.Loan,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2504-2526) uses a dangerous strict equality:
	- loanCloseAmount == loanLocal.principal (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2512)
LoanClosingsBase._closeWithDeposit(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2081-2151) uses a dangerous strict equality:
	- loanCloseAmount == loanLocal.principal (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2123)
LoanClosingsBase._coverPrincipalWithSwap(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2357-2398) uses a dangerous strict equality:
	- require(bool,string)(sourceTokenAmountUsed == swapAmount,swap error) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2391)
LoanClosingsBase._finalizeClose(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256,uint256,uint256,LoanClosingsBase.CloseTypes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2450-2502) uses a dangerous strict equality:
	- require(bool,string)(closeType == CloseTypes.Deposit || loanLocal.principal == 0 || currentMargin > loanParamsLocal.maintenanceMargin,unhealthy position) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2485-2490)
LiquidationHelper._getLiquidationAmounts(uint256,uint256,uint256,uint256,uint256,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1369-1424) uses a dangerous strict equality:
	- currentMargin > maintenanceMargin || collateralToLoanRate == 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1380)
SwapsUser._swapsCall(address[5],uint256[3],bytes32,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1523-1612) uses a dangerous strict equality:
	- vals[2] == 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1548)
SwapsUser._swapsCall(address[5],uint256[3],bytes32,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1523-1612) uses a dangerous strict equality:
	- vals[1] == 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1575)
SwapsUser._swapsCall(address[5],uint256[3],bytes32,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1523-1612) uses a dangerous strict equality:
	- vals[2] == 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1587)
SwapsUser._swapsCall(address[5],uint256[3],bytes32,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1523-1612) uses a dangerous strict equality:
	- require(bool,string)(sourceTokenAmountUsed == vals[0],swap too large to fill) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1589)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in LoanClosingsBase._rollover(bytes32,uint256,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1937-2079):
	External calls:
	- _payInterest(loanLocal.lender,loanParamsLocal.loanToken) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1957-1960)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _settleFeeRewardForInterestExpense(loanInterestLocal,loanLocal.id,loanParamsLocal.loanToken,loanLocal.borrower,block.timestamp) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1965-1971)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	State variables written after the call(s):
	- lenderInterestLocal.owedPerDay = lenderInterestLocal.owedPerDay.add(owedPerDay) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1993-1994)
	- lenderInterestLocal.owedPerDay = lenderInterestLocal.owedPerDay.sub(loanInterestLocal.owedPerDay) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1995-1996)
	- lenderInterestLocal.owedTotal = lenderInterestLocal.owedTotal.add(interestAmountRequired) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2023-2024)
	- loanInterestLocal.owedPerDay = owedPerDay (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1998)
	- loanInterestLocal.depositTotal = loanInterestLocal.depositTotal.add(interestAmountRequired) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2020-2021)
Reentrancy in LoanClosingsBase._rollover(bytes32,uint256,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1937-2079):
	External calls:
	- _payInterest(loanLocal.lender,loanParamsLocal.loanToken) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1957-1960)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _settleFeeRewardForInterestExpense(loanInterestLocal,loanLocal.id,loanParamsLocal.loanToken,loanLocal.borrower,block.timestamp) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1965-1971)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- (sourceTokenAmountUsed) = _doCollateralSwap(loanLocal,loanParamsLocal,loanLocal.collateral,interestAmountRequired,true,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2031-2038)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	State variables written after the call(s):
	- (sourceTokenAmountUsed) = _doCollateralSwap(loanLocal,loanParamsLocal,loanLocal.collateral,interestAmountRequired,true,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2031-2038)
		- protocolTokenHeld = tokenBalance.sub(withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#946-947)
	- (sourceTokenAmountUsed) = _doCollateralSwap(loanLocal,loanParamsLocal,loanLocal.collateral,interestAmountRequired,true,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2031-2038)
		- protocolTokenPaid = protocolTokenPaid.add(rewardAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1161-1162)
Reentrancy in LoanClosingsBase._rollover(bytes32,uint256,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1937-2079):
	External calls:
	- _payInterest(loanLocal.lender,loanParamsLocal.loanToken) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1957-1960)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _settleFeeRewardForInterestExpense(loanInterestLocal,loanLocal.id,loanParamsLocal.loanToken,loanLocal.borrower,block.timestamp) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1965-1971)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- (sourceTokenAmountUsed) = _doCollateralSwap(loanLocal,loanParamsLocal,loanLocal.collateral,interestAmountRequired,true,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2031-2038)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- _payInterestTransfer(loanLocal.lender,loanParamsLocal.loanToken,backInterestOwed) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2045-2049)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	State variables written after the call(s):
	- _payInterestTransfer(loanLocal.lender,loanParamsLocal.loanToken,backInterestOwed) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2045-2049)
		- lendingFeeTokensHeld[feeToken] = lendingFeeTokensHeld[feeToken].add(lendingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1079-1080)
Reentrancy in LoanClosingsBase._settleInterest(LoanParamsStruct.LoanParams,LoanStruct.Loan,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2528-2597):
	External calls:
	- _payInterest(loanLocal.lender,loanParamsLocal.loanToken) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2536-2539)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _settleFeeRewardForInterestExpense(loanInterestLocal,loanLocal.id,loanParamsLocal.loanToken,loanLocal.borrower,interestTime) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2549-2555)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	State variables written after the call(s):
	- lenderInterestLocal.owedPerDay = lenderInterestLocal.owedPerDay.sub(owedPerDayRefund) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2569-2570)
	- lenderInterestLocal.principalTotal = lenderInterestLocal.principalTotal.sub(closePrincipal) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2588-2589)
	- lenderInterestLocal.owedTotal = owedTotal - interestRefundToBorrower (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2592-2594)
	- lenderInterestLocal.owedTotal = 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2592-2594)
	- loanInterestLocal.owedPerDay = loanInterestLocal.owedPerDay.sub(owedPerDayRefund) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2567-2568)
	- loanInterestLocal.depositTotal = loanInterestLocal.depositTotal.sub(interestRefundToBorrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2581-2582)
	- loanInterestLocal.depositTotal = 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2584)
Reentrancy in SwapsUser._swapsCall(address[5],uint256[3],bytes32,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1523-1612):
	External calls:
	- _payTradingFee(addrs[4],loanId,addrs[0],tradingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1553-1558)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- (destTokenAmountReceived,sourceTokenAmountUsed) = _swapsCall_internal(addrs,vals) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1582-1585)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
	- _payTradingFee(addrs[4],loanId,addrs[1],tradingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1600-1605)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	State variables written after the call(s):
	- _payTradingFee(addrs[4],loanId,addrs[1],tradingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1600-1605)
		- protocolTokenHeld = tokenBalance.sub(withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#946-947)
	- _payTradingFee(addrs[4],loanId,addrs[1],tradingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1600-1605)
		- protocolTokenPaid = protocolTokenPaid.add(rewardAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1161-1162)
	- _payTradingFee(addrs[4],loanId,addrs[1],tradingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1600-1605)
		- tradingFeeTokensHeld[feeToken] = tradingFeeTokensHeld[feeToken].add(tradingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1024-1025)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
FeesHelper._settleFeeRewardForInterestExpense(LoanInterestStruct.LoanInterest,bytes32,address,address,uint256).interestExpenseFee (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1103) is a local variable never initialized
SwapsUser._swapsCall(address[5],uint256[3],bytes32,bool,bytes).tradingFee (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1546) is a local variable never initialized
LoanClosingsBase._rollover(bytes32,uint256,bytes).backInterestOwed (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1975) is a local variable never initialized
LoanClosingsBase._rollover(bytes32,uint256,bytes).backInterestTime (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1974) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
State._setTarget(bytes4,address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#827-839) ignores return value by logicTargetsSet.addBytes32(bytes32(sig)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#835)
State._setTarget(bytes4,address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#827-839) ignores return value by logicTargetsSet.removeBytes32(bytes32(sig)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#837)
GasTokenUser.usesGasToken(address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1714-1740) ignores return value by tokenHolder.freeUpTo(gasCalcValue) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1727-1729)
GasTokenUser.usesGasToken(address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1714-1740) ignores return value by tokenHolder.freeFromUpTo(holder,gasCalcValue) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1731-1734)
LoanClosingsBase._closeLoan(LoanStruct.Loan,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2504-2526) ignores return value by activeLoansSet.removeBytes32(loanLocal.id) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2517)
LoanClosingsBase._closeLoan(LoanStruct.Loan,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2504-2526) ignores return value by lenderLoanSets[loanLocal.lender].removeBytes32(loanLocal.id) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2518)
LoanClosingsBase._closeLoan(LoanStruct.Loan,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2504-2526) ignores return value by borrowerLoanSets[loanLocal.borrower].removeBytes32(loanLocal.id) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2519)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in FeesHelper._payFeeReward(address,bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1127-1172):
	External calls:
	- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
	- (rewardToken,rewardAmount) = _withdrawProtocolToken(user,rewardAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1156-1159)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	State variables written after the call(s):
	- protocolTokenPaid = protocolTokenPaid.add(rewardAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1161-1162)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in LoanClosingsBase._closeWithDeposit(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2081-2151):
	External calls:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2108-2113)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2116-2120)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1275-1278)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- IERC20(token).safeTransferFrom(from,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1280-1284)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
		- Address.sendValue(msg.sender,msg.value - principalNeeded) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2346-2349)
	- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2136-2140)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	External calls sending eth:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2108-2113)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2116-2120)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
	- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2136-2140)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	Event emitted after the call(s):
	- VaultWithdraw(token,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1258-1262)
		- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2136-2140)
	- VaultWithdraw(address(_wethToken),to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1217-1221)
		- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2136-2140)
Reentrancy in LoanClosingsBase._closeWithDeposit(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2081-2151):
	External calls:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2108-2113)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2116-2120)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1275-1278)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- IERC20(token).safeTransferFrom(from,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1280-1284)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
		- Address.sendValue(msg.sender,msg.value - principalNeeded) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2346-2349)
	- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2136-2140)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	- _finalizeClose(loanLocal,loanParamsLocal,loanCloseAmount,withdrawAmount,0,CloseTypes.Deposit) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2143-2150)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).getCurrentMargin.selector,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,loanLocal.principal,loanLocal.collateral)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2469-2477)
	External calls sending eth:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2108-2113)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2116-2120)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
	- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2136-2140)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	Event emitted after the call(s):
	- CloseWithDeposit(loanLocal.borrower,loanLocal.lender,loanLocal.id,msg.sender,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,loanCloseAmount,collateralCloseAmount,collateralToLoanRate,currentMargin) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2661-2672)
		- _finalizeClose(loanLocal,loanParamsLocal,loanCloseAmount,withdrawAmount,0,CloseTypes.Deposit) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2143-2150)
	- CloseWithSwap(loanLocal.borrower,loanLocal.lender,loanLocal.id,loanParamsLocal.collateralToken,loanParamsLocal.loanToken,msg.sender,collateralCloseAmount,loanCloseAmount,collateralToLoanSwapRate,currentMargin) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2684-2695)
		- _finalizeClose(loanLocal,loanParamsLocal,loanCloseAmount,withdrawAmount,0,CloseTypes.Deposit) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2143-2150)
	- Liquidate(loanLocal.borrower,msg.sender,loanLocal.id,loanLocal.lender,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,loanCloseAmount,collateralCloseAmount,collateralToLoanRate,currentMargin) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2697-2708)
		- _finalizeClose(loanLocal,loanParamsLocal,loanCloseAmount,withdrawAmount,0,CloseTypes.Deposit) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2143-2150)
Reentrancy in LoanClosingsBase._closeWithSwap(bytes32,address,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2153-2243):
	External calls:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2189-2194)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	External calls sending eth:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2189-2194)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	Event emitted after the call(s):
	- EarnReward(user,rewardToken,loanId,rewardAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1164-1169)
		- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
	- LoanSwap(loanId,sourceToken,destToken,user,sourceTokenAmountUsed,destTokenAmountReceived) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1513-1520)
		- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
	- PayTradingFee(user,feeToken,loanId,tradingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1027-1032)
		- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
	- VaultWithdraw(token,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1258-1262)
		- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
	- VaultWithdraw(address(_wethToken),to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1217-1221)
		- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
Reentrancy in LoanClosingsBase._closeWithSwap(bytes32,address,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2153-2243):
	External calls:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2189-2194)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- vaultWithdraw(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2211-2215)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	External calls sending eth:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2189-2194)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	Event emitted after the call(s):
	- VaultWithdraw(token,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1258-1262)
		- vaultWithdraw(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2211-2215)
Reentrancy in LoanClosingsBase._closeWithSwap(bytes32,address,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2153-2243):
	External calls:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2189-2194)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- vaultWithdraw(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2211-2215)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2228-2232)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	External calls sending eth:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2189-2194)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2228-2232)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	Event emitted after the call(s):
	- VaultWithdraw(token,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1258-1262)
		- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2228-2232)
	- VaultWithdraw(address(_wethToken),to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1217-1221)
		- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2228-2232)
Reentrancy in LoanClosingsBase._closeWithSwap(bytes32,address,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2153-2243):
	External calls:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2189-2194)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- vaultWithdraw(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2211-2215)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2228-2232)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	- _finalizeClose(loanLocal,loanParamsLocal,loanCloseAmount,usedCollateral,collateralToLoanSwapRate,CloseTypes.Swap) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2235-2242)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).getCurrentMargin.selector,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,loanLocal.principal,loanLocal.collateral)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2469-2477)
	External calls sending eth:
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,receiver) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2189-2194)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- (usedCollateral,withdrawAmount,collateralToLoanSwapRate) = _coverPrincipalWithSwap(loanLocal,loanParamsLocal,swapAmount,loanCloseAmountLessInterest,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2198-2205)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- _withdrawAsset(withdrawToken,receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2228-2232)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	Event emitted after the call(s):
	- CloseWithDeposit(loanLocal.borrower,loanLocal.lender,loanLocal.id,msg.sender,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,loanCloseAmount,collateralCloseAmount,collateralToLoanRate,currentMargin) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2661-2672)
		- _finalizeClose(loanLocal,loanParamsLocal,loanCloseAmount,usedCollateral,collateralToLoanSwapRate,CloseTypes.Swap) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2235-2242)
	- CloseWithSwap(loanLocal.borrower,loanLocal.lender,loanLocal.id,loanParamsLocal.collateralToken,loanParamsLocal.loanToken,msg.sender,collateralCloseAmount,loanCloseAmount,collateralToLoanSwapRate,currentMargin) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2684-2695)
		- _finalizeClose(loanLocal,loanParamsLocal,loanCloseAmount,usedCollateral,collateralToLoanSwapRate,CloseTypes.Swap) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2235-2242)
	- Liquidate(loanLocal.borrower,msg.sender,loanLocal.id,loanLocal.lender,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,loanCloseAmount,collateralCloseAmount,collateralToLoanRate,currentMargin) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2697-2708)
		- _finalizeClose(loanLocal,loanParamsLocal,loanCloseAmount,usedCollateral,collateralToLoanSwapRate,CloseTypes.Swap) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2235-2242)
Reentrancy in LoanClosingsBase._coverPrincipalWithSwap(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2357-2398):
	External calls:
	- (destTokenAmountReceived,sourceTokenAmountUsed,collateralToLoanSwapRate) = _doCollateralSwap(loanLocal,loanParamsLocal,swapAmount,principalNeeded,returnTokenIsCollateral,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2369-2376)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- _withdrawAsset(loanParamsLocal.loanToken,loanLocal.borrower,destTokenAmountReceived - principalNeeded) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2381-2385)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	External calls sending eth:
	- _withdrawAsset(loanParamsLocal.loanToken,loanLocal.borrower,destTokenAmountReceived - principalNeeded) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2381-2385)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	Event emitted after the call(s):
	- VaultWithdraw(token,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1258-1262)
		- _withdrawAsset(loanParamsLocal.loanToken,loanLocal.borrower,destTokenAmountReceived - principalNeeded) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2381-2385)
	- VaultWithdraw(address(_wethToken),to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1217-1221)
		- _withdrawAsset(loanParamsLocal.loanToken,loanLocal.borrower,destTokenAmountReceived - principalNeeded) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2381-2385)
Reentrancy in LoanClosingsBase._finalizeClose(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256,uint256,uint256,LoanClosingsBase.CloseTypes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2450-2502):
	External calls:
	- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).getCurrentMargin.selector,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,loanLocal.principal,loanLocal.collateral)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2469-2477)
	Event emitted after the call(s):
	- CloseWithDeposit(loanLocal.borrower,loanLocal.lender,loanLocal.id,msg.sender,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,loanCloseAmount,collateralCloseAmount,collateralToLoanRate,currentMargin) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2661-2672)
		- _emitClosingEvents(loanParamsLocal,loanLocal,loanCloseAmount,collateralCloseAmount,collateralToLoanRate,collateralToLoanSwapRate,currentMargin,closeType) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2492-2501)
	- CloseWithSwap(loanLocal.borrower,loanLocal.lender,loanLocal.id,loanParamsLocal.collateralToken,loanParamsLocal.loanToken,msg.sender,collateralCloseAmount,loanCloseAmount,collateralToLoanSwapRate,currentMargin) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2684-2695)
		- _emitClosingEvents(loanParamsLocal,loanLocal,loanCloseAmount,collateralCloseAmount,collateralToLoanRate,collateralToLoanSwapRate,currentMargin,closeType) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2492-2501)
	- Liquidate(loanLocal.borrower,msg.sender,loanLocal.id,loanLocal.lender,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,loanCloseAmount,collateralCloseAmount,collateralToLoanRate,currentMargin) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2697-2708)
		- _emitClosingEvents(loanParamsLocal,loanLocal,loanCloseAmount,collateralCloseAmount,collateralToLoanRate,collateralToLoanSwapRate,currentMargin,closeType) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2492-2501)
Reentrancy in LoanClosingsBase._liquidate(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1821-1935):
	External calls:
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,address(this),loanCloseAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1874-1878)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1275-1278)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- IERC20(token).safeTransferFrom(from,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1280-1284)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
		- Address.sendValue(msg.sender,msg.value - principalNeeded) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2346-2349)
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,loanLocal.borrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1881-1886)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	External calls sending eth:
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,address(this),loanCloseAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1874-1878)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,loanLocal.borrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1881-1886)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	Event emitted after the call(s):
	- EarnReward(user,rewardToken,loanId,rewardAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1164-1169)
		- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,loanLocal.borrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1881-1886)
	- PayLendingFee(user,feeToken,lendingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1082-1086)
		- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,loanLocal.borrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1881-1886)
	- VaultWithdraw(token,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1258-1262)
		- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,loanLocal.borrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1881-1886)
	- VaultWithdraw(address(_wethToken),to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1217-1221)
		- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,loanLocal.borrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1881-1886)
Reentrancy in LoanClosingsBase._liquidate(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1821-1935):
	External calls:
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,address(this),loanCloseAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1874-1878)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1275-1278)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- IERC20(token).safeTransferFrom(from,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1280-1284)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
		- Address.sendValue(msg.sender,msg.value - principalNeeded) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2346-2349)
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,loanLocal.borrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1881-1886)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- _withdrawAsset(loanParamsLocal.loanToken,loanLocal.borrower,loanCloseAmount - loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1890-1894)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	External calls sending eth:
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,address(this),loanCloseAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1874-1878)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,loanLocal.borrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1881-1886)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- _withdrawAsset(loanParamsLocal.loanToken,loanLocal.borrower,loanCloseAmount - loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1890-1894)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	Event emitted after the call(s):
	- VaultWithdraw(token,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1258-1262)
		- _withdrawAsset(loanParamsLocal.loanToken,loanLocal.borrower,loanCloseAmount - loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1890-1894)
	- VaultWithdraw(address(_wethToken),to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1217-1221)
		- _withdrawAsset(loanParamsLocal.loanToken,loanLocal.borrower,loanCloseAmount - loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1890-1894)
Reentrancy in LoanClosingsBase._liquidate(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1821-1935):
	External calls:
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,address(this),loanCloseAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1874-1878)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1275-1278)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- IERC20(token).safeTransferFrom(from,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1280-1284)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
		- Address.sendValue(msg.sender,msg.value - principalNeeded) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2346-2349)
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,loanLocal.borrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1881-1886)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- _withdrawAsset(loanParamsLocal.loanToken,loanLocal.borrower,loanCloseAmount - loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1890-1894)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	- vaultWithdraw(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1900-1904)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	External calls sending eth:
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,address(this),loanCloseAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1874-1878)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,loanLocal.borrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1881-1886)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- _withdrawAsset(loanParamsLocal.loanToken,loanLocal.borrower,loanCloseAmount - loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1890-1894)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	Event emitted after the call(s):
	- VaultWithdraw(token,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1258-1262)
		- vaultWithdraw(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1900-1904)
Reentrancy in LoanClosingsBase._liquidate(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1821-1935):
	External calls:
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,address(this),loanCloseAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1874-1878)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1275-1278)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- IERC20(token).safeTransferFrom(from,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1280-1284)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
		- Address.sendValue(msg.sender,msg.value - principalNeeded) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2346-2349)
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,loanLocal.borrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1881-1886)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- _withdrawAsset(loanParamsLocal.loanToken,loanLocal.borrower,loanCloseAmount - loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1890-1894)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	- vaultWithdraw(loanParamsLocal.loanToken,loanLocal.lender,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1900-1904)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _withdrawAsset(seizedToken,receiver,seizedAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1913-1917)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	External calls sending eth:
	- _returnPrincipalWithDeposit(loanParamsLocal.loanToken,address(this),loanCloseAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1874-1878)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- wethToken.deposit.value(principalNeeded)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2335)
	- loanCloseAmountLessInterest = _settleInterestToPrincipal(loanLocal,loanParamsLocal,loanCloseAmount,loanLocal.borrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1881-1886)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- _withdrawAsset(loanParamsLocal.loanToken,loanLocal.borrower,loanCloseAmount - loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1890-1894)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	- _withdrawAsset(seizedToken,receiver,seizedAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1913-1917)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	Event emitted after the call(s):
	- CloseWithDeposit(loanLocal.borrower,loanLocal.lender,loanLocal.id,msg.sender,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,loanCloseAmount,collateralCloseAmount,collateralToLoanRate,currentMargin) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2661-2672)
		- _emitClosingEvents(loanParamsLocal,loanLocal,loanCloseAmount,seizedAmount,collateralToLoanRate,0,currentMargin,CloseTypes.Liquidation) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1920-1929)
	- CloseWithSwap(loanLocal.borrower,loanLocal.lender,loanLocal.id,loanParamsLocal.collateralToken,loanParamsLocal.loanToken,msg.sender,collateralCloseAmount,loanCloseAmount,collateralToLoanSwapRate,currentMargin) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2684-2695)
		- _emitClosingEvents(loanParamsLocal,loanLocal,loanCloseAmount,seizedAmount,collateralToLoanRate,0,currentMargin,CloseTypes.Liquidation) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1920-1929)
	- Liquidate(loanLocal.borrower,msg.sender,loanLocal.id,loanLocal.lender,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,loanCloseAmount,collateralCloseAmount,collateralToLoanRate,currentMargin) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2697-2708)
		- _emitClosingEvents(loanParamsLocal,loanLocal,loanCloseAmount,seizedAmount,collateralToLoanRate,0,currentMargin,CloseTypes.Liquidation) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1920-1929)
	- VaultWithdraw(token,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1258-1262)
		- _withdrawAsset(seizedToken,receiver,seizedAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1913-1917)
	- VaultWithdraw(address(_wethToken),to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1217-1221)
		- _withdrawAsset(seizedToken,receiver,seizedAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1913-1917)
Reentrancy in SwapsUser._loanSwap(bytes32,address,address,address,uint256,uint256,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1470-1521):
	External calls:
	- (destTokenAmountReceived,sourceTokenAmountUsed) = _swapsCall((sourceToken,destToken,address(this),address(this),user),(minSourceTokenAmount,maxSourceTokenAmount,requiredDestTokenAmount),loanId,bypassFee,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1483-1499)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	Event emitted after the call(s):
	- LoanSwap(loanId,sourceToken,destToken,user,sourceTokenAmountUsed,destTokenAmountReceived) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1513-1520)
Reentrancy in FeesHelper._payFeeReward(address,bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1127-1172):
	External calls:
	- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
	- (rewardToken,rewardAmount) = _withdrawProtocolToken(user,rewardAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1156-1159)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	Event emitted after the call(s):
	- EarnReward(user,rewardToken,loanId,rewardAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1164-1169)
Reentrancy in LoanClosingsBase._rollover(bytes32,uint256,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1937-2079):
	External calls:
	- _payInterest(loanLocal.lender,loanParamsLocal.loanToken) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1957-1960)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _settleFeeRewardForInterestExpense(loanInterestLocal,loanLocal.id,loanParamsLocal.loanToken,loanLocal.borrower,block.timestamp) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1965-1971)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	Event emitted after the call(s):
	- EarnReward(user,rewardToken,loanId,rewardAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1164-1169)
		- _settleFeeRewardForInterestExpense(loanInterestLocal,loanLocal.id,loanParamsLocal.loanToken,loanLocal.borrower,block.timestamp) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1965-1971)
Reentrancy in LoanClosingsBase._rollover(bytes32,uint256,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1937-2079):
	External calls:
	- _payInterest(loanLocal.lender,loanParamsLocal.loanToken) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1957-1960)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _settleFeeRewardForInterestExpense(loanInterestLocal,loanLocal.id,loanParamsLocal.loanToken,loanLocal.borrower,block.timestamp) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1965-1971)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- (sourceTokenAmountUsed) = _doCollateralSwap(loanLocal,loanParamsLocal,loanLocal.collateral,interestAmountRequired,true,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2031-2038)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	Event emitted after the call(s):
	- EarnReward(user,rewardToken,loanId,rewardAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1164-1169)
		- (sourceTokenAmountUsed) = _doCollateralSwap(loanLocal,loanParamsLocal,loanLocal.collateral,interestAmountRequired,true,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2031-2038)
	- LoanSwap(loanId,sourceToken,destToken,user,sourceTokenAmountUsed,destTokenAmountReceived) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1513-1520)
		- (sourceTokenAmountUsed) = _doCollateralSwap(loanLocal,loanParamsLocal,loanLocal.collateral,interestAmountRequired,true,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2031-2038)
	- PayTradingFee(user,feeToken,loanId,tradingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1027-1032)
		- (sourceTokenAmountUsed) = _doCollateralSwap(loanLocal,loanParamsLocal,loanLocal.collateral,interestAmountRequired,true,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2031-2038)
Reentrancy in LoanClosingsBase._rollover(bytes32,uint256,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1937-2079):
	External calls:
	- _payInterest(loanLocal.lender,loanParamsLocal.loanToken) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1957-1960)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _settleFeeRewardForInterestExpense(loanInterestLocal,loanLocal.id,loanParamsLocal.loanToken,loanLocal.borrower,block.timestamp) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1965-1971)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- (sourceTokenAmountUsed) = _doCollateralSwap(loanLocal,loanParamsLocal,loanLocal.collateral,interestAmountRequired,true,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2031-2038)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- _payInterestTransfer(loanLocal.lender,loanParamsLocal.loanToken,backInterestOwed) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2045-2049)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	Event emitted after the call(s):
	- PayLendingFee(user,feeToken,lendingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1082-1086)
		- _payInterestTransfer(loanLocal.lender,loanParamsLocal.loanToken,backInterestOwed) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2045-2049)
	- VaultWithdraw(token,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1258-1262)
		- _payInterestTransfer(loanLocal.lender,loanParamsLocal.loanToken,backInterestOwed) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2045-2049)
Reentrancy in LoanClosingsBase._rollover(bytes32,uint256,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1937-2079):
	External calls:
	- _payInterest(loanLocal.lender,loanParamsLocal.loanToken) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1957-1960)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _settleFeeRewardForInterestExpense(loanInterestLocal,loanLocal.id,loanParamsLocal.loanToken,loanLocal.borrower,block.timestamp) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1965-1971)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- (sourceTokenAmountUsed) = _doCollateralSwap(loanLocal,loanParamsLocal,loanLocal.collateral,interestAmountRequired,true,loanDataBytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2031-2038)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- _payInterestTransfer(loanLocal.lender,loanParamsLocal.loanToken,backInterestOwed) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2045-2049)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _withdrawAsset(loanParamsLocal.collateralToken,msg.sender,gasRebate) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2063-2067)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	External calls sending eth:
	- _withdrawAsset(loanParamsLocal.collateralToken,msg.sender,gasRebate) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2063-2067)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	Event emitted after the call(s):
	- Rollover(loanLocal.borrower,msg.sender,loanLocal.id,loanLocal.lender,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,sourceTokenAmountUsed,interestAmountRequired,loanLocal.endTimestamp,gasRebate) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2635-2646)
		- _rolloverEvent(loanLocal,loanParamsLocal,sourceTokenAmountUsed,interestAmountRequired,gasRebate) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2070-2076)
	- VaultWithdraw(token,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1258-1262)
		- _withdrawAsset(loanParamsLocal.collateralToken,msg.sender,gasRebate) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2063-2067)
	- VaultWithdraw(address(_wethToken),to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1217-1221)
		- _withdrawAsset(loanParamsLocal.collateralToken,msg.sender,gasRebate) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2063-2067)
Reentrancy in LoanClosingsBase._settleInterest(LoanParamsStruct.LoanParams,LoanStruct.Loan,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2528-2597):
	External calls:
	- _payInterest(loanLocal.lender,loanParamsLocal.loanToken) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2536-2539)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	- _settleFeeRewardForInterestExpense(loanInterestLocal,loanLocal.id,loanParamsLocal.loanToken,loanLocal.borrower,interestTime) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2549-2555)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	Event emitted after the call(s):
	- EarnReward(user,rewardToken,loanId,rewardAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1164-1169)
		- _settleFeeRewardForInterestExpense(loanInterestLocal,loanLocal.id,loanParamsLocal.loanToken,loanLocal.borrower,interestTime) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2549-2555)
Reentrancy in LoanClosingsBase._settleInterestToPrincipal(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256,address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2260-2315):
	External calls:
	- interestRefundToBorrower = _settleInterest(loanParamsLocal,loanLocal,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2270-2274)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- _withdrawAsset(loanParamsLocal.loanToken,receiver,interestRefundToBorrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2297-2301)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	External calls sending eth:
	- _withdrawAsset(loanParamsLocal.loanToken,receiver,interestRefundToBorrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2297-2301)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	Event emitted after the call(s):
	- VaultWithdraw(token,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1258-1262)
		- _withdrawAsset(loanParamsLocal.loanToken,receiver,interestRefundToBorrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2297-2301)
	- VaultWithdraw(address(_wethToken),to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1217-1221)
		- _withdrawAsset(loanParamsLocal.loanToken,receiver,interestRefundToBorrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2297-2301)
Reentrancy in LoanClosingsBase._settleInterestToPrincipal(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256,address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2260-2315):
	External calls:
	- interestRefundToBorrower = _settleInterest(loanParamsLocal,loanLocal,loanCloseAmountLessInterest) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2270-2274)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- _withdrawAsset(loanParamsLocal.loanToken,receiver,interestRefundToBorrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2297-2301)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
		- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	- vaultWithdraw(loanParamsLocal.loanToken,loanLocal.lender,interestAppliedToPrincipal) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2307-2311)
		- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
	External calls sending eth:
	- _withdrawAsset(loanParamsLocal.loanToken,receiver,interestRefundToBorrower) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2297-2301)
		- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
	Event emitted after the call(s):
	- VaultWithdraw(token,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1258-1262)
		- vaultWithdraw(loanParamsLocal.loanToken,loanLocal.lender,interestAppliedToPrincipal) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2307-2311)
Reentrancy in SwapsUser._swapsCall(address[5],uint256[3],bytes32,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1523-1612):
	External calls:
	- _payTradingFee(addrs[4],loanId,addrs[0],tradingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1553-1558)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	- (destTokenAmountReceived,sourceTokenAmountUsed) = _swapsCall_internal(addrs,vals) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1582-1585)
		- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
	- _payTradingFee(addrs[4],loanId,addrs[1],tradingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1600-1605)
		- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
		- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
		- IERC20(vbzrxTokenAddress).safeTransfer(receiver,withdrawAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#949-952)
	Event emitted after the call(s):
	- EarnReward(user,rewardToken,loanId,rewardAmount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1164-1169)
		- _payTradingFee(addrs[4],loanId,addrs[1],tradingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1600-1605)
	- PayTradingFee(user,feeToken,loanId,tradingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1027-1032)
		- _payTradingFee(addrs[4],loanId,addrs[1],tradingFee) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1600-1605)
Reentrancy in VaultController.vaultDeposit(address,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1225-1244):
	External calls:
	- IERC20(token).safeTransferFrom(from,address(this),value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1232-1236)
	Event emitted after the call(s):
	- VaultDeposit(token,from,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1238-1242)
Reentrancy in VaultController.vaultEtherDeposit(address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1189-1202):
	External calls:
	- _wethToken.deposit.value(value)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1195)
	Event emitted after the call(s):
	- VaultDeposit(address(_wethToken),from,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1197-1201)
Reentrancy in VaultController.vaultEtherWithdraw(address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1204-1223):
	External calls:
	- _wethToken.withdraw(value - balance) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1213)
	- Address.sendValue(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1215)
	Event emitted after the call(s):
	- VaultWithdraw(address(_wethToken),to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1217-1221)
Reentrancy in VaultController.vaultWithdraw(address,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1246-1264):
	External calls:
	- IERC20(token).safeTransfer(to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1253-1256)
	Event emitted after the call(s):
	- VaultWithdraw(token,to,value) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1258-1262)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
InterestUser._payInterest(address,address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1305-1339) uses timestamp for comparisons
	Dangerous comparisons:
	- interestOwedNow > lenderInterestLocal.owedTotal (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1321)
	- interestOwedNow != 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1324)
LoanClosingsBase._liquidate(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1821-1935) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(loanLocal.active,loan is closed) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1833)
	- require(bool,string)(currentMargin <= loanParamsLocal.maintenanceMargin,healthy position) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1843-1846)
	- loanCloseAmount < maxLiquidatable (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1859)
	- loanCloseAmount > maxLiquidatable (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1864)
	- require(bool,string)(loanCloseAmount != 0,nothing to liquidate) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1871)
	- loanCloseAmount > loanCloseAmountLessInterest (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1888)
	- loanCloseAmountLessInterest != 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1897)
	- seizedAmount != 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1909)
LoanClosingsBase._rollover(bytes32,uint256,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1937-2079) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(loanLocal.active,loan is closed) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1944)
	- require(bool,string)(block.timestamp > loanLocal.endTimestamp.sub(3600),healthy position) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1945-1948)
	- require(bool,string)(loanPoolToUnderlying[loanLocal.lender] != address(0),invalid lender) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1949-1952)
	- block.timestamp > loanLocal.endTimestamp (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1976)
	- maxDuration != 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1987)
	- backInterestTime >= maxDuration (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2004)
	- backInterestOwed != 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2042)
LoanClosingsBase._closeWithDeposit(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2081-2151) uses timestamp for comparisons
	Dangerous comparisons:
	- loanCloseAmountLessInterest != 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2115)
	- loanCloseAmount == loanLocal.principal (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2123)
	- withdrawAmount != 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2133)
	- depositAmount > loanLocal.principal (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2104-2106)
LoanClosingsBase._closeWithSwap(bytes32,address,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2153-2243) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(swapAmount != 0,swapAmount == 0) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2166)
	- swapAmount > loanLocal.collateral (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2177)
	- swapAmount != loanLocal.collateral (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2182)
	- require(bool,string)(loanCloseAmount != 0,loanCloseAmount == 0) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2187)
	- loanCloseAmountLessInterest != 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2207)
LoanClosingsBase._checkAuthorized(bytes32,bool,address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2245-2258) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_active,loan is closed) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2252)
	- require(bool,string)(msg.sender == _borrower || delegatedManagers[_id][msg.sender],unauthorized) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2253-2257)
LoanClosingsBase._settleInterestToPrincipal(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256,address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2260-2315) uses timestamp for comparisons
	Dangerous comparisons:
	- loanCloseAmountLessInterest >= interestRefundToBorrower (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2277)
	- interestAppliedToPrincipal != 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2304)
LoanClosingsBase._returnPrincipalWithDeposit(address,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2318-2355) uses timestamp for comparisons
	Dangerous comparisons:
	- principalNeeded != 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2324)
	- require(bool,string)(msg.value >= principalNeeded,not enough ether) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2334)
	- receiver != address(this) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2336)
	- msg.value > principalNeeded (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2344)
LoanClosingsBase._coverPrincipalWithSwap(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2357-2398) uses timestamp for comparisons
	Dangerous comparisons:
	- destTokenAmountReceived > principalNeeded (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2379)
	- require(bool,string)(sourceTokenAmountUsed == swapAmount,swap error) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2391)
	- swapAmount > sourceTokenAmountUsed (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2387-2389)
	- sourceTokenAmountUsed > swapAmount (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2395-2397)
LoanClosingsBase._doCollateralSwap(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2400-2425) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(destTokenAmountReceived >= principalNeeded,insufficient dest amount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2423)
	- require(bool,string)(sourceTokenAmountUsed <= loanLocal.collateral,excessive source amount) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2424)
LoanClosingsBase._withdrawAsset(address,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2428-2448) uses timestamp for comparisons
	Dangerous comparisons:
	- assetAmount != 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2434)
LoanClosingsBase._finalizeClose(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256,uint256,uint256,LoanClosingsBase.CloseTypes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2450-2502) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(closeType == CloseTypes.Deposit || loanLocal.principal == 0 || currentMargin > loanParamsLocal.maintenanceMargin,unhealthy position) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2485-2490)
LoanClosingsBase._closeLoan(LoanStruct.Loan,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2504-2526) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(loanCloseAmount != 0,nothing to close) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2510)
	- loanCloseAmount == loanLocal.principal (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2512)
LoanClosingsBase._settleInterest(LoanParamsStruct.LoanParams,LoanStruct.Loan,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2528-2597) uses timestamp for comparisons
	Dangerous comparisons:
	- interestTime > loanLocal.endTimestamp (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2545)
	- closePrincipal < loanLocal.principal (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2558)
	- closePrincipal < loanLocal.principal (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2580)
	- owedTotal > interestRefundToBorrower (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2592-2594)
LoanClosingsBase._getRebate(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2599-2625) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(maxDrawdown != 0,unhealthy position) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2614)
LoanClosingsBase._emitClosingEvents(LoanParamsStruct.LoanParams,LoanStruct.Loan,uint256,uint256,uint256,uint256,uint256,LoanClosingsBase.CloseTypes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2649-2710) uses timestamp for comparisons
	Dangerous comparisons:
	- currentMargin != 0 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2680)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
EnumerableBytes32Set.addAddress(EnumerableBytes32Set.Bytes32Set,address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#74-83) uses assembly
	- INLINE ASM (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#79-82)
EnumerableBytes32Set.removeAddress(EnumerableBytes32Set.Bytes32Set,address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#105-114) uses assembly
	- INLINE ASM (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#110-113)
EnumerableBytes32Set.containsAddress(EnumerableBytes32Set.Bytes32Set,address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#164-174) uses assembly
	- INLINE ASM (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#170-173)
EnumerableBytes32Set.getAddress(EnumerableBytes32Set.Bytes32Set,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#238-249) uses assembly
	- INLINE ASM (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#245-248)
Address.isContract(address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#579-588) uses assembly
	- INLINE ASM (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#586-587)
FeesHelper._payFeeReward(address,bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1127-1172) uses assembly
	- INLINE ASM (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1148-1154)
LoanClosingsBase._finalizeClose(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256,uint256,uint256,LoanClosingsBase.CloseTypes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2450-2502) uses assembly
	- INLINE ASM (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2478-2485)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#11) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#618-624):
	- (success) = recipient.call.value(amount)() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#622)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#675-694):
	- (success,returndata) = address(token).call(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#687)
Low level call in FeesHelper._payFeeReward(address,bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1127-1172):
	- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).queryReturn.selector,feeToken,bzrxTokenAddress,feeAmount / 2)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1140-1147)
Low level call in SwapsUser._swapsCall_internal(address[5],uint256[3]) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1614-1636):
	- (success,data) = swapsImpl.delegatecall(data) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1632)
Low level call in LoanClosingsBase._finalizeClose(LoanStruct.Loan,LoanParamsStruct.LoanParams,uint256,uint256,uint256,LoanClosingsBase.CloseTypes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2450-2502):
	- (success,data) = _priceFeeds.staticcall(abi.encodeWithSelector(IPriceFeeds(_priceFeeds).getCurrentMargin.selector,loanParamsLocal.loanToken,loanParamsLocal.collateralToken,loanLocal.principal,loanLocal.collateral)) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2469-2477)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Constant Constants.wethToken (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#44) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Constants.bzrxTokenAddress (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#45) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Constants.vbzrxTokenAddress (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#46) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter SafeMath.min256(uint256,uint256)._a (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#553) is not in mixedCase
Parameter SafeMath.min256(uint256,uint256)._b (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#553) is not in mixedCase
Parameter IPriceFeeds.amountInEth(address,uint256).Token (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#876) is not in mixedCase
Function SwapsUser._swapsCall_internal(address[5],uint256[3]) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1614-1636) is not in mixedCase
Constant GasTokenUser.gasToken (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1711) is not in UPPER_CASE_WITH_UNDERSCORES
Constant GasTokenUser.tokenHolder (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1712) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
LoanClosings.slitherConstructorConstantVariables() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2713-2806) uses literals with too many digits:
	- gasToken = ITokenHolderLike(0x0000000000004946c0e9F43F4Dee607b0eF1fA1c) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1711)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
State.userLoanParamSets (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#791) is never used in LoanClosings (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2713-2806)
State.loanPoolsSet (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#816) is never used in LoanClosings (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2713-2806)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
IERC20.decimals (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#22) should be constant
IERC20.name (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#21) should be constant
IERC20.symbol (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#23) should be constant
State.affiliateFeePercent (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#810) should be constant
State.borrowingFeePercent (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#803) should be constant
State.feesController (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#793) should be constant
State.lendingFeePercent (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#795) should be constant
State.maxDisagreement (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#820) should be constant
State.maxSwapSize (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#824) should be constant
State.priceFeeds (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#768) should be constant
State.sourceBufferPercent (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#822) should be constant
State.swapsImpl (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#769) should be constant
State.tradingFeePercent (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#799) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- IERC20.totalSupply() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#24)
balanceOf(address) should be declared external:
	- IERC20.balanceOf(address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#25)
allowance(address,address) should be declared external:
	- IERC20.allowance(address,address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#26)
approve(address,uint256) should be declared external:
	- IERC20.approve(address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#27)
transfer(address,uint256) should be declared external:
	- IERC20.transfer(address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#28)
transferFrom(address,address,uint256) should be declared external:
	- IERC20.transferFrom(address,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#29)
owner() should be declared external:
	- Ownable.owner() (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#340-342)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#363-365)
balanceOf(address) should be declared external:
	- ITokenHolderLike.balanceOf(address) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1704)
freeUpTo(uint256) should be declared external:
	- ITokenHolderLike.freeUpTo(uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1705)
freeFromUpTo(address,uint256) should be declared external:
	- ITokenHolderLike.freeFromUpTo(address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#1706)
closeWithDeposit(bytes32,address,uint256) should be declared external:
	- LoanClosings.closeWithDeposit(bytes32,address,uint256) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2764-2782)
closeWithSwap(bytes32,address,uint256,bool,bytes) should be declared external:
	- LoanClosings.closeWithSwap(bytes32,address,uint256,bool,bytes) (loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol#2784-2805)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x193495072f4beaef219bf6e075dcb3692a673fab.sol analyzed (34 contracts with 46 detectors), 135 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x193495072f4beaef219bf6e075dcb3692a673fab.sol
Tool Runtime = 22.286288177001552 seconds
#############################################