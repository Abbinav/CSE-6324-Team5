INFO:Detectors:[91m
ERC20.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#576) shadows:
	- Initializable.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#68)
ERC20Detailed.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#636) shadows:
	- Initializable.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#68)
MinterRole.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#728) shadows:
	- Initializable.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#68)
ERC20Mintable.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#762) shadows:
	- MinterRole.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#728)
	- ERC20.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#576)
	- Initializable.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#68)
ERC20Burnable.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#795) shadows:
	- ERC20.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#576)
	- Initializable.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#68)
Ownable.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#887) shadows:
	- Initializable.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#68)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing[0m
INFO:Detectors:[92m
ERC20Detailed.initialize(string,string,uint8).name (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#599) shadows:
	- ERC20Detailed.name() (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#608-610) (function)
ERC20Detailed.initialize(string,string,uint8).symbol (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#599) shadows:
	- ERC20Detailed.symbol() (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#616-618) (function)
ERC20Detailed.initialize(string,string,uint8).decimals (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#599) shadows:
	- ERC20Detailed.decimals() (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#632-634) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in PoolToken.burnFrom(address,uint256) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1231-1239):
	External calls:
	- savingsModule = getModuleAddress(MODULE_SAVINGS) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1232)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#957)
	- _burn(from,value) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1235)
		- savings.poolTokenBalanceChanged(account) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1252)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#957)
	Event emitted after the call(s):
	- DistributionCreated(distributionAccumulator,currentTotalSupply) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1156)
		- _burn(from,value) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1235)
	- DistributionsClaimed(account,distributionAmount,fromDistribution,toDistribution) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1140)
		- _burn(from,value) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1235)
	- Transfer(account,address(0),amount) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#541)
		- _burn(from,value) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1235)
	- Transfer(address(0),account,amount) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#522)
		- _burn(from,value) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1235)
	- Transfer(sender,recipient,amount) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#505)
		- _burn(from,value) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1235)
Reentrancy in PoolToken.burnFrom(address,uint256) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1231-1239):
	External calls:
	- savingsModule = getModuleAddress(MODULE_SAVINGS) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1232)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#957)
	- super.burnFrom(from,value) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1237)
		- savings.poolTokenBalanceChanged(account) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1252)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#957)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#562)
		- super.burnFrom(from,value) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1237)
	- DistributionCreated(distributionAccumulator,currentTotalSupply) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1156)
		- super.burnFrom(from,value) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1237)
	- DistributionsClaimed(account,distributionAmount,fromDistribution,toDistribution) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1140)
		- super.burnFrom(from,value) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1237)
	- Transfer(address(0),account,amount) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#522)
		- super.burnFrom(from,value) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1237)
	- Transfer(account,address(0),amount) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#541)
		- super.burnFrom(from,value) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1237)
	- Transfer(sender,recipient,amount) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#505)
		- super.burnFrom(from,value) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1237)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
DistributionToken.isReadyForDistribution() (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1197-1199) uses timestamp for comparisons
	Dangerous comparisons:
	- (distributionAccumulator > 0) && (now >= nextDistributionTimestamp) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1198)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Initializable.isConstructor() (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#55-65) uses assembly
	- INLINE ASM (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#63-64)
Module.getModuleAddress(string) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#955-969) uses assembly
	- INLINE ASM (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#960-964)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#8) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#74) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#106) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#186) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#346) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#582) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#642) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#682) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#734) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#768) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#801) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#810) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#893) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#913) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#933) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#976) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1205) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1268) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Module.getModuleAddress(string) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#955-969):
	- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#957)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Variable Initializable.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#68) is not in mixedCase
Variable ERC20.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#576) is not in mixedCase
Variable ERC20Detailed.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#636) is not in mixedCase
Variable MinterRole.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#728) is not in mixedCase
Variable ERC20Mintable.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#762) is not in mixedCase
Variable ERC20Burnable.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#795) is not in mixedCase
Variable Ownable.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#887) is not in mixedCase
Parameter Module.initialize(address)._pool (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#944) is not in mixedCase
Parameter Module.setPool(address)._pool (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#949) is not in mixedCase
Parameter PoolToken.initialize(address,string,string)._pool (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1218) is not in mixedCase
Parameter PoolToken.setAllowTransfers(bool)._allowTransfers (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1224) is not in mixedCase
Contract PoolToken_CurveFi_SBTC (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1272-1286) is not in CapWords
Parameter PoolToken_CurveFi_SBTC.initialize(address)._pool (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1273) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
ERC20Mintable.______gap (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#762) is never used in PoolToken_CurveFi_SBTC (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1272-1286)
ModuleNames.MODULE_ACCESS (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#920) is never used in PoolToken_CurveFi_SBTC (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1272-1286)
ModuleNames.MODULE_STAKING (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#923) is never used in PoolToken_CurveFi_SBTC (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1272-1286)
ModuleNames.MODULE_DCA (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#924) is never used in PoolToken_CurveFi_SBTC (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1272-1286)
ModuleNames.CONTRACT_RAY (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#927) is never used in PoolToken_CurveFi_SBTC (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1272-1286)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#407-410)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#415-417)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#426-429)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#443-447)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#461-464)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#480-483)
name() should be declared external:
	- ERC20Detailed.name() (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#608-610)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#616-618)
decimals() should be declared external:
	- ERC20Detailed.decimals() (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#632-634)
addMinter(address) should be declared external:
	- MinterRole.addMinter(address) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#710-712)
renounceMinter() should be declared external:
	- MinterRole.renounceMinter() (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#714-716)
mint(address,uint256) should be declared external:
	- ERC20Mintable.mint(address,uint256) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#757-760)
burn(uint256) should be declared external:
	- ERC20Burnable.burn(uint256) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#784-786)
owner() should be declared external:
	- Ownable.owner() (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#839-841)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#865-868)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#874-876)
fullBalanceOf(address) should be declared external:
	- DistributionToken.fullBalanceOf(address) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1054-1059)
calculateUnclaimedDistributions(address) should be declared external:
	- DistributionToken.calculateUnclaimedDistributions(address) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1066-1068)
calculateDistributedAmount(uint256,uint256,uint256) should be declared external:
	- DistributionToken.calculateDistributedAmount(uint256,uint256,uint256) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1077-1081)
nextDistribution() should be declared external:
	- DistributionToken.nextDistribution() (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1083-1085)
setAllowTransfers(bool) should be declared external:
	- PoolToken.setAllowTransfers(bool) (loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol#1224-1226)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol analyzed (18 contracts with 46 detectors), 73 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xe6d3c33178bddab782f68ccdfe0ea5f0c26dea01.sol
Tool Runtime = 8.281616281001334 seconds
#############################################