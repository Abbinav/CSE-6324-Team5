Compilation warnings/errors on ./loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol:
./loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol:268:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[91m
CurveSusdPeak.underlyingCoins (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#521) is never initialized. It is used in:
	- CurveSusdPeak.migrate(address,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#532-563)
	- CurveSusdPeak.mint(uint256[4],uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#570-582)
	- CurveSusdPeak.redeem(uint256,uint256[4]) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#615-629)
	- CurveSusdPeak.redeemInSingleCoin(uint256,uint256,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#631-640)
	- CurveSusdPeak.vars() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#779-801)
CurveSusdPeak.feed (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#522) is never initialized. It is used in:
	- CurveSusdPeak.sCrvToUsd(uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#770-772)
	- CurveSusdPeak.vars() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#779-801)
CurveSusdPeak.curveDeposit (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#524) is never initialized. It is used in:
	- CurveSusdPeak.redeemInSingleCoin(uint256,uint256,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#631-640)
	- CurveSusdPeak.calcRedeemInSingleCoin(uint256,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#751-757)
	- CurveSusdPeak.vars() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#779-801)
CurveSusdPeak.curve (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#525) is never initialized. It is used in:
	- CurveSusdPeak.migrate(address,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#532-563)
	- CurveSusdPeak._mint(uint256[4],uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#584-593)
	- CurveSusdPeak.redeem(uint256,uint256[4]) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#615-629)
	- CurveSusdPeak.calcMint(uint256[4]) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#715-720)
	- CurveSusdPeak.calcRedeem(uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#729-740)
	- CurveSusdPeak.vars() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#779-801)
	- CurveSusdPeak._sCrvToUsd(uint256,uint256[4]) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#805-810)
CurveSusdPeak.curveToken (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#526) is never initialized. It is used in:
	- CurveSusdPeak.migrate(address,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#532-563)
	- CurveSusdPeak.mintWithScrv(uint256,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#600-608)
	- CurveSusdPeak.redeemInScrv(uint256,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#642-648)
	- CurveSusdPeak.stake() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#653-655)
	- CurveSusdPeak.getRewards(address[],address) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#696-706)
	- CurveSusdPeak.calcRedeem(uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#729-740)
	- CurveSusdPeak.sCrvBalance() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#774-777)
	- CurveSusdPeak.vars() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#779-801)
CurveSusdPeak.util (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#527) is never initialized. It is used in:
	- CurveSusdPeak.vars() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#779-801)
CurveSusdPeak.gauge (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#528) is never initialized. It is used in:
	- CurveSusdPeak.migrate(address,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#532-563)
	- CurveSusdPeak.claimRewards() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#708-711)
	- CurveSusdPeak.sCrvBalance() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#774-777)
	- CurveSusdPeak.vars() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#779-801)
	- CurveSusdPeak._secureFunding(uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#812-815)
	- CurveSusdPeak._stake(uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#817-821)
CurveSusdPeak.mintr (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#529) is never initialized. It is used in:
	- CurveSusdPeak.claimRewards() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#708-711)
	- CurveSusdPeak.vars() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#779-801)
CurveSusdPeak.core (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#530) is never initialized. It is used in:
	- CurveSusdPeak.migrate(address,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#532-563)
	- CurveSusdPeak._mint(uint256[4],uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#584-593)
	- CurveSusdPeak.mintWithScrv(uint256,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#600-608)
	- CurveSusdPeak.redeem(uint256,uint256[4]) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#615-629)
	- CurveSusdPeak.redeemInSingleCoin(uint256,uint256,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#631-640)
	- CurveSusdPeak.redeemInScrv(uint256,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#642-648)
	- CurveSusdPeak.calcRedeem(uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#729-740)
	- CurveSusdPeak.calcRedeemWithScrv(uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#742-749)
	- CurveSusdPeak.calcRedeemInSingleCoin(uint256,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#751-757)
	- CurveSusdPeak.vars() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#779-801)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
CurveSusdPeak.calcRedeem(uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#729-740) performs a multiplication on the result of a division:
	-sCrv = usd.mul(1e18).div(exchangeRate) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#735)
	-amounts[i] = curve.balances(int128(i)).mul(sCrv).div(totalSupply) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#738)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
CurveSusdPeak.harvest(bool,uint256)._usdc (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#683) is a local variable never initialized
CurveSusdPeak.harvest(bool,uint256)._usdt (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#669) is a local variable never initialized
CurveSusdPeak.migrate(address,uint256).amounts (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#551) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
CurveSusdPeak.migrate(address,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#532-563) has external calls inside a loop: amounts[i] = IERC20(underlyingCoins[i]).balanceOf((address(this))) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#553)
CurveSusdPeak.redeem(uint256,uint256[4]) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#615-629) has external calls inside a loop: toTransfer = coin.balanceOf(address(this)) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#625)
CurveSusdPeak.getRewards(address[],address) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#696-706) has external calls inside a loop: token.safeTransfer(destination,token.balanceOf(address(this))) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#704)
CurveSusdPeak.calcRedeem(uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#729-740) has external calls inside a loop: amounts[i] = curve.balances(int128(i)).mul(sCrv).div(totalSupply) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#738)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
Address.isContract(address) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#261-270) uses assembly
	- INLINE ASM (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#268-269)
OwnableProxy.owner() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#465-470) uses assembly
	- INLINE ASM (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#467-470)
OwnableProxy._transferOwnership(address) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#488-495) uses assembly
	- INLINE ASM (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#492-495)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#300-306):
	- (success) = recipient.call.value(amount)() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#304)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#348-367):
	- (success,returndata) = address(token).call(data) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#360)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function ICurveDeposit.add_liquidity(uint256[4],uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#396) is not in mixedCase
Parameter ICurveDeposit.add_liquidity(uint256[4],uint256).min_mint_amount (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#396) is not in mixedCase
Function ICurveDeposit.remove_liquidity(uint256,uint256[4]) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#397) is not in mixedCase
Parameter ICurveDeposit.remove_liquidity(uint256,uint256[4]).min_uamounts (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#397) is not in mixedCase
Function ICurveDeposit.remove_liquidity_imbalance(uint256[4],uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#398) is not in mixedCase
Parameter ICurveDeposit.remove_liquidity_imbalance(uint256[4],uint256).max_burn_amount (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#398) is not in mixedCase
Function ICurveDeposit.remove_liquidity_one_coin(uint256,int128,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#399) is not in mixedCase
Parameter ICurveDeposit.remove_liquidity_one_coin(uint256,int128,uint256)._token_amount (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#399) is not in mixedCase
Parameter ICurveDeposit.remove_liquidity_one_coin(uint256,int128,uint256).min_uamount (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#399) is not in mixedCase
Function ICurveDeposit.calc_withdraw_one_coin(uint256,int128) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#400) is not in mixedCase
Parameter ICurveDeposit.calc_withdraw_one_coin(uint256,int128)._token_amount (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#400) is not in mixedCase
Function ICurve.add_liquidity(uint256[4],uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#404) is not in mixedCase
Parameter ICurve.add_liquidity(uint256[4],uint256).min_mint_amount (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#404) is not in mixedCase
Function ICurve.remove_liquidity_imbalance(uint256[4],uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#405) is not in mixedCase
Parameter ICurve.remove_liquidity_imbalance(uint256[4],uint256).max_burn_amount (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#405) is not in mixedCase
Function ICurve.remove_liquidity(uint256,uint256[4]) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#406) is not in mixedCase
Parameter ICurve.remove_liquidity(uint256,uint256[4]).min_amounts (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#406) is not in mixedCase
Function ICurve.calc_token_amount(uint256[4],bool) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#407) is not in mixedCase
Function ICurve.get_virtual_price() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#409) is not in mixedCase
Parameter ICurve.exchange(int128,int128,uint256,uint256).min_dy (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#410) is not in mixedCase
Function ICurve.mock_add_to_balance(uint256[4]) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#412) is not in mixedCase
Function IUtil.get_D(uint256[4]) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#416) is not in mixedCase
Function IGauge.claimable_tokens(address) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#501) is not in mixedCase
Function IGauge.claimable_reward(address) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#502) is not in mixedCase
Function IGauge.claim_rewards() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#504) is not in mixedCase
Variable CurveSusdPeak.ZEROES (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#520) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
CurveSusdPeak.MAX (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#516) is never used in CurveSusdPeak (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#511-822)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
transferOwnership(address) should be declared external:
	- OwnableProxy.transferOwnership(address) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#484-486)
calcMint(uint256[4]) should be declared external:
	- CurveSusdPeak.calcMint(uint256[4]) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#715-720)
calcMintWithScrv(uint256) should be declared external:
	- CurveSusdPeak.calcMintWithScrv(uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#722-727)
calcRedeem(uint256) should be declared external:
	- CurveSusdPeak.calcRedeem(uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#729-740)
calcRedeemWithScrv(uint256) should be declared external:
	- CurveSusdPeak.calcRedeemWithScrv(uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#742-749)
calcRedeemInSingleCoin(uint256,uint256) should be declared external:
	- CurveSusdPeak.calcRedeemInSingleCoin(uint256,uint256) (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#751-757)
vars() should be declared external:
	- CurveSusdPeak.vars() (loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol#779-801)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x41097f634ff8998153644cc04a6016280b0b6406.sol analyzed (16 contracts with 46 detectors), 58 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x41097f634ff8998153644cc04a6016280b0b6406.sol
Tool Runtime = 1.2999008029983088 seconds
#############################################