Compilation warnings/errors on ./loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol:
./loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol:209:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[92m
ERC20Detailed.constructor(string,string,uint8).name (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#142) shadows:
	- ERC20Detailed.name() (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#148-150) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#142) shadows:
	- ERC20Detailed.symbol() (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#152-154) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#142) shadows:
	- ERC20Detailed.decimals() (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#156-158) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
VectorSum.sumAsm(uint256[]) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#32-38) uses assembly
	- INLINE ASM (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#34-37)
Address.isContract(address) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#205-211) uses assembly
	- INLINE ASM (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#209-210)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#10) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#233-244):
	- (success,returndata) = address(token).call(data) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#237)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter VectorSum.sumAsm(uint256[])._data (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#32) is not in mixedCase
Parameter EMTC.addMinter(address)._minter (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#328) is not in mixedCase
Parameter EMTC.removeMinter(address)._minter (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#332) is not in mixedCase
Parameter EMTC.multipleAirdrop(address[],uint256[])._receivers (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#336) is not in mixedCase
Parameter EMTC.multipleAirdrop(address[],uint256[])._values (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#336) is not in mixedCase
Parameter EMTC.setGovernance(address)._governance (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#347) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
ERC20.maxAmount (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#59) should be constant
RaisableErc20.firstRoundMaxStage (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#251) should be constant
RaisableErc20.firstStageETHAmount (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#250) should be constant
RaisableErc20.maxStage (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#249) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
sumAsm(uint256[]) should be declared external:
	- VectorSum.sumAsm(uint256[]) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#32-38)
totalSupply() should be declared external:
	- ERC20.totalSupply() (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#65-67)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#73-76)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#78-80)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#82-85)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#87-91)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#93-96)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#98-101)
name() should be declared external:
	- ERC20Detailed.name() (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#148-150)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#152-154)
addLiquidity() should be declared external:
	- RaisableErc20.addLiquidity() (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#291-300)
mint(address,uint256) should be declared external:
	- EMTC.mint(address,uint256) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#317-320)
mintAirdrop(uint256) should be declared external:
	- EMTC.mintAirdrop(uint256) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#322-326)
addMinter(address) should be declared external:
	- EMTC.addMinter(address) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#328-330)
removeMinter(address) should be declared external:
	- EMTC.removeMinter(address) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#332-334)
multipleAirdrop(address[],uint256[]) should be declared external:
	- EMTC.multipleAirdrop(address[],uint256[]) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#336-345)
setGovernance(address) should be declared external:
	- EMTC.setGovernance(address) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#347-349)
getRaised(uint256) should be declared external:
	- EMTC.getRaised(uint256) (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#351-355)
stopRaise() should be declared external:
	- EMTC.stopRaise() (loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol#356-358)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol analyzed (10 contracts with 46 detectors), 37 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x464131bf3a803566bb2142e36a8ccf0fbb8bda5b.sol
Tool Runtime = 1.0926870740004233 seconds
#############################################