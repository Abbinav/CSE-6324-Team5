INFO:Detectors:[93m
EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281-377) performs a multiplication on the result of a division:
	-_referervalue = invest.div(2) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#337)
	-_value = (_referervalue.mul(_totalInvestingShare)) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#338)
	-_totalInvestingShare = _shareAmount[i].div(qualifiedPoolHolding) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#336)
EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281-377) performs a multiplication on the result of a division:
	-_totalInvestingShare = _shareAmount[i].div(qualifiedPoolHolding) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#336)
	-_walletAmount = invest.mul(_totalInvestingShare) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#357)
EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281-377) performs a multiplication on the result of a division:
	-_totalInvestingShare = _shareAmount[i].div(qualifiedPoolHolding) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#336)
	-userInversement(_useradd,_totalInvestingShare,invest.mul(_totalInvestingShare),now,2) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#370)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
EEEMoney.investOnShare(uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#214-278) uses a dangerous strict equality:
	- referrerID == 0 (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#244)
EEEMoney.investOnShare(uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#214-278) uses a dangerous strict equality:
	- referrerID == 0 (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#247)
EEEMoney.investOnShare(uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#214-278) uses a dangerous strict equality:
	- _referer == address(0) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#256)
EEEMoney.investOnShare(uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#214-278) uses a dangerous strict equality:
	- (_referer == address(0)) || (_referer == oldEEEMoney1.ownerWallet()) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#259)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281-377) has external calls inside a loop: require(bool,string)(_userAddress[i] != oldEEEMoney1.ownerWallet(),old contract ownerWallet) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#291)
EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281-377) has external calls inside a loop: _referer = oldEEEMoney2.userList(referrerID) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#328)
EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281-377) has external calls inside a loop: _referer = oldEEEMoney1.userList(referrerID) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#331)
EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281-377) has external calls inside a loop: (_referer == address(0)) || (_referer == oldEEEMoney1.ownerWallet()) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#333)
EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281-377) has external calls inside a loop: require(bool,string)(address(uint160(_referer)).send(_value),re-inverset referer 50 percentage failed) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#344-347)
EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281-377) has external calls inside a loop: require(bool,string)(address(uint160(_useradd)).send(_walletAmount) && address(uint160(ownerWallet)).send(_adminCommission.add(_gasFee)),user wallet transfer failed) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#362-366)
EEEMoney.getTotalEarnedEther() (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#641-656) has external calls inside a loop: user = oldEEEMoney1.userList(_userIndex) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#647)
EEEMoney.getTotalEarnedEther() (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#641-656) has external calls inside a loop: user = oldEEEMoney2.userList(_userIndex) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#650)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
EEEMoney.regUser(uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#127-208) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(! users[msg.sender].isExist && ! syncIsExist1(msg.sender) && ! syncIsExist2(msg.sender),User exist) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#132-135)
EEEMoney.investOnShare(uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#214-278) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(users[msg.sender].isExist || syncIsExist1(msg.sender) || syncIsExist2(msg.sender),User not exist) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#225)
	- referrerID == 0 (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#244)
	- referrerID == 0 (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#247)
	- _referer == address(0) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#253)
	- _referer == address(0) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#256)
	- (_referer == address(0)) || (_referer == oldEEEMoney1.ownerWallet()) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#259)
	- require(bool,string)(address(uint160(_referer)).send(_value),Transaction failed) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#262-265)
EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281-377) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(users[_userAddress[i]].isExist || syncIsExist1(_userAddress[i]) || syncIsExist2(_userAddress[i]),User not exist) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#289)
	- require(bool,string)((users[_userAddress[i]].created < now) && (syncUserCreated1(_userAddress[i]) < now) && (syncUserCreated2(_userAddress[i]) < now),user is not qualified to withdraw) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#297-302)
EEEMoney.changeOwnerWallet(address) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#405-446) uses timestamp for comparisons
	Dangerous comparisons:
	- i < users[msg.sender].referral.length (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#438)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
EEEMoney.regUser(uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#127-208) uses assembly
	- INLINE ASM (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#149-153)
EEEMoney.investOnShare(uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#214-278) uses assembly
	- INLINE ASM (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#233-237)
EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281-377) uses assembly
	- INLINE ASM (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#308-312)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
EEEMoney.regUser(uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#127-208) compares to a boolean constant:
	-require(bool,string)(lockStatus == false,Contract is locked) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#128-131)
EEEMoney.investOnShare(uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#214-278) compares to a boolean constant:
	-require(bool,string)(lockStatus == false,Contract is locked) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#215-218)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Event EEEMoneyregEvent(address,address,uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#82) is not in CapWords
Event EEEMoneypoolMoneyEvent(address,uint256,uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#83) is not in CapWords
Event EEEMoneysplitOverEvent(address,uint256,uint256,uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#84) is not in CapWords
Event EEEMoneyuserInversement(address,uint256,uint256,uint256,uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#85) is not in CapWords
Event EEEMoneyuserWalletTransferEvent(address,uint256,uint256,uint256,uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#86) is not in CapWords
Event EEEMoneyownerWalletTransferEvent(address,uint256,uint256,uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#87) is not in CapWords
Parameter EEEMoney.regUser(uint256)._referrerID (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#127) is not in mixedCase
Parameter EEEMoney.investOnShare(uint256)._noOfShares (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#214) is not in mixedCase
Parameter EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256)._userAddress (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281) is not in mixedCase
Parameter EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256)._shareAmount (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281) is not in mixedCase
Parameter EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256)._shares (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281) is not in mixedCase
Parameter EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256)._gasFee (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281) is not in mixedCase
Parameter EEEMoney.failSafe(address,uint256)._toUser (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#385) is not in mixedCase
Parameter EEEMoney.failSafe(address,uint256)._amount (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#385) is not in mixedCase
Parameter EEEMoney.contractLock(bool)._lockStatus (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#398) is not in mixedCase
Parameter EEEMoney.changeOwnerWallet(address)._ownerWallet (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#405) is not in mixedCase
Parameter EEEMoney.syncIsExist1(address)._user (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#451) is not in mixedCase
Parameter EEEMoney.syncIsExist2(address)._user (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#469) is not in mixedCase
Parameter EEEMoney.syncID1(address)._user (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#487) is not in mixedCase
Parameter EEEMoney.syncID2(address)._user (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#506) is not in mixedCase
Parameter EEEMoney.syncUserCreated1(address)._user (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#525) is not in mixedCase
Parameter EEEMoney.syncUserCreated2(address)._user (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#544) is not in mixedCase
Parameter EEEMoney.syncReferrerID1(address)._user (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#563) is not in mixedCase
Parameter EEEMoney.syncReferrerID2(address)._user (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#582) is not in mixedCase
Parameter EEEMoney.syncTotalEarned1(address)._user (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#602) is not in mixedCase
Parameter EEEMoney.syncTotalEarned2(address)._user (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#621) is not in mixedCase
Parameter EEEMoney.viewUserReferral(address)._user (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#662) is not in mixedCase
Parameter EEEMoney.syncRefferrals(address)._user (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#667) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Reentrancy in EEEMoney.investOnShare(uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#214-278):
	External calls:
	- require(bool,string)(address(uint160(_referer)).send(_value),Transaction failed) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#262-265)
	State variables written after the call(s):
	- poolMoney = poolMoney.add(_value) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#272)
	- users[_referer].totalEarnedETH = users[_referer].totalEarnedETH.add(_value) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#267)
	- users[msg.sender].directShare = users[msg.sender].directShare.add(_noOfShares) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#269)
	- users[msg.sender].sharesHoldings = users[msg.sender].sharesHoldings.add(_noOfShares) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#270)
	Event emitted after the call(s):
	- poolMoneyEvent(msg.sender,_value,now) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#274)
	- userInversement(msg.sender,_noOfShares,msg.value,now,1) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#275)
Reentrancy in EEEMoney.regUser(uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#127-208):
	External calls:
	- require(bool,string)(address(uint160(referer)).send(_value),Transaction failed) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#195-198)
	State variables written after the call(s):
	- poolMoney = poolMoney.add(_value) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#202)
	- users[referer].totalEarnedETH = users[referer].totalEarnedETH.add(_value) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#200)
	Event emitted after the call(s):
	- poolMoneyEvent(msg.sender,_value,now) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#204)
	- regEvent(msg.sender,referer,now) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#205)
Reentrancy in EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281-377):
	External calls:
	- require(bool,string)(address(uint160(_referer)).send(_value),re-inverset referer 50 percentage failed) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#344-347)
	State variables written after the call(s):
	- poolMoney = poolMoney.add(_value) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#354)
	- users[_referer].totalEarnedETH = users[_referer].totalEarnedETH.add(_value) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#349)
	- users[_useradd].directShare = users[_useradd].directShare.add(_totalInvestingShare) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#351)
	- users[_useradd].sharesHoldings = users[_useradd].sharesHoldings.add(_totalInvestingShare) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#352)
Reentrancy in EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281-377):
	External calls:
	- require(bool,string)(address(uint160(_referer)).send(_value),re-inverset referer 50 percentage failed) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#344-347)
	- require(bool,string)(address(uint160(_useradd)).send(_walletAmount) && address(uint160(ownerWallet)).send(_adminCommission.add(_gasFee)),user wallet transfer failed) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#362-366)
	Event emitted after the call(s):
	- ownerWalletTransferEvent(_useradd,_adminCommission,_gasFee,now) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#373)
	- poolMoneyEvent(_useradd,_value,now) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#371)
	- splitOverEvent(_useradd,_shareAmount[i],_shares[i],now) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#369)
	- userInversement(_useradd,_totalInvestingShare,invest.mul(_totalInvestingShare),now,2) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#370)
	- userWalletTransferEvent(_useradd,_walletAmount,_adminCommission,_gasFee,now) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#372)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4[0m
INFO:Detectors:[92m
EEEMoney.feePercentage (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#72) should be constant
EEEMoney.invest (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#71) should be constant
EEEMoney.qualifiedPoolHolding (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#70) should be constant
EEEMoney.qualify (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#74) should be constant
EEEMoney.signature (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#68) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
regUser(uint256) should be declared external:
	- EEEMoney.regUser(uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#127-208)
investOnShare(uint256) should be declared external:
	- EEEMoney.investOnShare(uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#214-278)
shareWithdraw(address[],uint256[],uint256[],uint256) should be declared external:
	- EEEMoney.shareWithdraw(address[],uint256[],uint256[],uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#281-377)
failSafe(address,uint256) should be declared external:
	- EEEMoney.failSafe(address,uint256) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#385-392)
contractLock(bool) should be declared external:
	- EEEMoney.contractLock(bool) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#398-403)
changeOwnerWallet(address) should be declared external:
	- EEEMoney.changeOwnerWallet(address) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#405-446)
syncID1(address) should be declared external:
	- EEEMoney.syncID1(address) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#487-504)
syncID2(address) should be declared external:
	- EEEMoney.syncID2(address) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#506-523)
getTotalEarnedEther() should be declared external:
	- EEEMoney.getTotalEarnedEther() (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#641-656)
viewUserReferral(address) should be declared external:
	- EEEMoney.viewUserReferral(address) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#662-664)
syncRefferrals(address) should be declared external:
	- EEEMoney.syncRefferrals(address) (loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol#667-669)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol analyzed (2 contracts with 46 detectors), 74 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x623e539cd4108e6cab4458f25517adc48eeb4725.sol
Tool Runtime = 1.360084519998054 seconds
#############################################