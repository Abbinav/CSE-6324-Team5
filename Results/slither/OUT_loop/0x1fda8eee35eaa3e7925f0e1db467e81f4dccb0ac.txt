Compilation warnings/errors on ./loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol:
./loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol:3260:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^
./loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol:2679:9: Warning: This declaration shadows an existing declaration.
        uint256 totalBonded = totalBonded();
        ^-----------------^
./loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol:2589:5: The shadowed declaration is here:
    function totalBonded() public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol:2699:9: Warning: This declaration shadows an existing declaration.
        uint256 balanceOfPhantom = balanceOfPhantom(account);
        ^----------------------^
./loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol:2669:5: The shadowed declaration is here:
    function balanceOfPhantom(address account) public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol:2557:5: Warning: Function state mutability can be restricted to pure
    function usdc() public view returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol:3530:5: Warning: Function state mutability can be restricted to view
    function balanceCheck() private {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Pool.bond(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3368-3398) uses a dangerous strict equality:
	- totalRewarded() == 0 (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3376-3380)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Pool.claim(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3350-3364):
	External calls:
	- dollar().transfer(msg.sender,value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3352)
	State variables written after the call(s):
	- decrementBalanceOfClaimable(msg.sender,value,Pool: insufficient claimable balance) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3354)
		- _state.accounts[account].claimable = _state.accounts[account].claimable.sub(amount,reason) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2877)
		- _state.balance.claimable = _state.balance.claimable.sub(amount,reason) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2879)
Reentrancy in Pool.deposit(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3314-3328):
	External calls:
	- univ2().transferFrom(msg.sender,address(this),value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3316)
	State variables written after the call(s):
	- incrementBalanceOfStaged(msg.sender,value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3318)
		- _state.accounts[account].staged = _state.accounts[account].staged.add(amount) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2847)
		- _state.balance.staged = _state.balance.staged.add(amount) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2849)
Reentrancy in Pool.provide(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3448-3510):
	External calls:
	- (lessUsdc,newUniv2) = addLiquidity(value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3486)
		- IERC20(dollar).transfer(pair,dollarAmount) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3193)
		- IERC20(usdc).transferFrom(msg.sender,pair,usdcAmount) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3195)
		- (usdcAmount,IUniswapV2Pair(pair).mint(address(this))) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3197)
	State variables written after the call(s):
	- incrementBalanceOfBonded(msg.sender,newUniv2) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3496)
		- _state.accounts[account].bonded = _state.accounts[account].bonded.add(amount) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2827)
		- _state.balance.bonded = _state.balance.bonded.add(amount) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2829)
	- incrementBalanceOfPhantom(msg.sender,value.add(newPhantomFromBonded)) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3498)
		- _state.accounts[account].phantom = _state.accounts[account].phantom.add(amount) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2887)
		- _state.balance.phantom = _state.balance.phantom.add(amount) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2889)
Reentrancy in Pool.withdraw(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3332-3346):
	External calls:
	- univ2().transfer(msg.sender,value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3334)
	State variables written after the call(s):
	- decrementBalanceOfStaged(msg.sender,value,Pool: insufficient staged balance) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3336)
		- _state.accounts[account].staged = _state.accounts[account].staged.sub(amount,reason) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2857)
		- _state.balance.staged = _state.balance.staged.sub(amount,reason) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2859)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Liquidity.addLiquidity(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3175-3199) ignores return value by IERC20(dollar).transfer(pair,dollarAmount) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3193)
Liquidity.addLiquidity(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3175-3199) ignores return value by IERC20(usdc).transferFrom(msg.sender,pair,usdcAmount) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3195)
Pool.deposit(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3314-3328) ignores return value by univ2().transferFrom(msg.sender,address(this),value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3316)
Pool.withdraw(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3332-3346) ignores return value by univ2().transfer(msg.sender,value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3334)
Pool.claim(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3350-3364) ignores return value by dollar().transfer(msg.sender,value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3352)
Pool.emergencyWithdraw(address,uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3514-3518) ignores return value by IERC20(token).transfer(address(dao()),value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3516)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
PoolGetters.balanceOfRewarded(address).totalBonded (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2679) shadows:
	- PoolGetters.totalBonded() (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2589-2593) (function)
PoolGetters.balanceOfRewarded(address).balanceOfPhantom (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2699) shadows:
	- PoolGetters.balanceOfPhantom(address) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2669-2673) (function)
Liquidity.addLiquidity(uint256).dollar (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3177) shadows:
	- PoolGetters.dollar() (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2573-2577) (function)
Liquidity.addLiquidity(uint256).usdc (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3177) shadows:
	- PoolGetters.usdc() (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2557-2561) (function)
Pool.constructor(address,address).dollar (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3284) shadows:
	- PoolGetters.dollar() (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2573-2577) (function)
Pool.constructor(address,address).univ2 (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3284) shadows:
	- PoolGetters.univ2() (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2581-2585) (function)
Pool.unbond(uint256).balanceOfBonded (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3408) shadows:
	- PoolGetters.balanceOfBonded(address) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2661-2665) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Pool.claim(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3350-3364):
	External calls:
	- dollar().transfer(msg.sender,value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3352)
	Event emitted after the call(s):
	- Claim(msg.sender,value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3362)
Reentrancy in Pool.deposit(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3314-3328):
	External calls:
	- univ2().transferFrom(msg.sender,address(this),value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3316)
	Event emitted after the call(s):
	- Deposit(msg.sender,value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3326)
Reentrancy in Pool.provide(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3448-3510):
	External calls:
	- (lessUsdc,newUniv2) = addLiquidity(value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3486)
		- IERC20(dollar).transfer(pair,dollarAmount) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3193)
		- IERC20(usdc).transferFrom(msg.sender,pair,usdcAmount) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3195)
		- (usdcAmount,IUniswapV2Pair(pair).mint(address(this))) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3197)
	Event emitted after the call(s):
	- Provide(msg.sender,value,lessUsdc,newUniv2) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3508)
Reentrancy in Pool.withdraw(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3332-3346):
	External calls:
	- univ2().transfer(msg.sender,value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3334)
	Event emitted after the call(s):
	- Withdraw(msg.sender,value) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3344)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Require.stringifyTruncated(bytes32) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#1003-1065) uses assembly
	- INLINE ASM (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#1045-1053)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#3258) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Variable PoolState._state (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2485) is not in mixedCase
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2955) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2957) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2991) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
burn(uint256) should be declared external:
	- IDollar.burn(uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2243)
burnFrom(address,uint256) should be declared external:
	- IDollar.burnFrom(address,uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2245)
mint(address,uint256) should be declared external:
	- IDollar.mint(address,uint256) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2247)
balanceOfStaged(address) should be declared external:
	- PoolGetters.balanceOfStaged(address) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2645-2649)
balanceOfClaimable(address) should be declared external:
	- PoolGetters.balanceOfClaimable(address) (loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol#2653-2657)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol analyzed (17 contracts with 46 detectors), 34 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x1fda8eee35eaa3e7925f0e1db467e81f4dccb0ac.sol
Tool Runtime = 4.872312095998495 seconds
#############################################