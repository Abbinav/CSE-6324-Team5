Compilation warnings/errors on ./loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol:
./loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol:7:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^
./loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol:1222:9: Warning: This declaration shadows an existing declaration.
        uint256 totalBonded = totalBonded();
        ^-----------------^
./loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol:1177:5: The shadowed declaration is here:
    function totalBonded() public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol:1233:9: Warning: This declaration shadows an existing declaration.
        uint256 balanceOfPhantom = balanceOfPhantom(account);
        ^----------------------^
./loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol:1217:5: The shadowed declaration is here:
    function balanceOfPhantom(address account) public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol:1161:5: Warning: Function state mutability can be restricted to pure
    function usdc() public view returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol:1777:5: Warning: Function state mutability can be restricted to view
    function balanceCheck() private {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Pool.bond(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1690-1712) uses a dangerous strict equality:
	- totalRewarded() == 0 (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1694-1699)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Pool.claim(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1677-1688):
	External calls:
	- dollar().transfer(msg.sender,value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1678)
	State variables written after the call(s):
	- decrementBalanceOfClaimable(msg.sender,value,Pool: insufficient claimable balance) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1679-1683)
		- _state.accounts[account].claimable = _state.accounts[account].claimable.sub(amount,reason) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1347-1349)
		- _state.balance.claimable = _state.balance.claimable.sub(amount,reason) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1350)
Reentrancy in Pool.deposit(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1655-1662):
	External calls:
	- univ2().transferFrom(msg.sender,address(this),value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1656)
	State variables written after the call(s):
	- incrementBalanceOfStaged(msg.sender,value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1657)
		- _state.accounts[account].staged = _state.accounts[account].staged.add(amount) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1315-1317)
		- _state.balance.staged = _state.balance.staged.add(amount) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1318)
Reentrancy in Pool.provide(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1743-1767):
	External calls:
	- (lessUsdc,newUniv2) = addLiquidity(value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1754)
		- IERC20(dollar).transfer(pair,dollarAmount) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1588)
		- IERC20(usdc).transferFrom(msg.sender,pair,usdcAmount) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1589)
		- (usdcAmount,IUniswapV2Pair(pair).mint(address(this))) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1590)
	State variables written after the call(s):
	- incrementBalanceOfBonded(msg.sender,newUniv2) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1761)
		- _state.accounts[account].bonded = _state.accounts[account].bonded.add(amount) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1294-1296)
		- _state.balance.bonded = _state.balance.bonded.add(amount) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1297)
	- incrementBalanceOfPhantom(msg.sender,value.add(newPhantomFromBonded)) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1762)
		- _state.accounts[account].phantom = _state.accounts[account].phantom.add(amount) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1356-1358)
		- _state.balance.phantom = _state.balance.phantom.add(amount) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1359)
Reentrancy in Pool.withdraw(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1664-1675):
	External calls:
	- univ2().transfer(msg.sender,value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1665)
	State variables written after the call(s):
	- decrementBalanceOfStaged(msg.sender,value,Pool: insufficient staged balance) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1666-1670)
		- _state.accounts[account].staged = _state.accounts[account].staged.sub(amount,reason) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1326-1329)
		- _state.balance.staged = _state.balance.staged.sub(amount,reason) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1330)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Liquidity.addLiquidity(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1575-1591) ignores return value by IERC20(dollar).transfer(pair,dollarAmount) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1588)
Liquidity.addLiquidity(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1575-1591) ignores return value by IERC20(usdc).transferFrom(msg.sender,pair,usdcAmount) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1589)
Pool.deposit(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1655-1662) ignores return value by univ2().transferFrom(msg.sender,address(this),value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1656)
Pool.withdraw(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1664-1675) ignores return value by univ2().transfer(msg.sender,value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1665)
Pool.claim(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1677-1688) ignores return value by dollar().transfer(msg.sender,value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1678)
Pool.emergencyWithdraw(address,uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1769-1771) ignores return value by IERC20(token).transfer(address(dao()),value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1770)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
PoolGetters.balanceOfRewarded(address).totalBonded (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1222) shadows:
	- PoolGetters.totalBonded() (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1177-1179) (function)
PoolGetters.balanceOfRewarded(address).balanceOfPhantom (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1233) shadows:
	- PoolGetters.balanceOfPhantom(address) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1217-1219) (function)
Liquidity.addLiquidity(uint256).dollar (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1579) shadows:
	- PoolGetters.dollar() (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1169-1171) (function)
Liquidity.addLiquidity(uint256).usdc (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1579) shadows:
	- PoolGetters.usdc() (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1161-1163) (function)
Pool.constructor(address,address).dollar (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1630) shadows:
	- PoolGetters.dollar() (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1169-1171) (function)
Pool.constructor(address,address).univ2 (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1630) shadows:
	- PoolGetters.univ2() (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1173-1175) (function)
Pool.unbond(uint256).balanceOfBonded (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1717) shadows:
	- PoolGetters.balanceOfBonded(address) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1213-1215) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Pool.claim(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1677-1688):
	External calls:
	- dollar().transfer(msg.sender,value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1678)
	Event emitted after the call(s):
	- Claim(msg.sender,value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1687)
Reentrancy in Pool.deposit(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1655-1662):
	External calls:
	- univ2().transferFrom(msg.sender,address(this),value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1656)
	Event emitted after the call(s):
	- Deposit(msg.sender,value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1661)
Reentrancy in Pool.provide(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1743-1767):
	External calls:
	- (lessUsdc,newUniv2) = addLiquidity(value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1754)
		- IERC20(dollar).transfer(pair,dollarAmount) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1588)
		- IERC20(usdc).transferFrom(msg.sender,pair,usdcAmount) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1589)
		- (usdcAmount,IUniswapV2Pair(pair).mint(address(this))) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1590)
	Event emitted after the call(s):
	- Provide(msg.sender,value,lessUsdc,newUniv2) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1766)
Reentrancy in Pool.withdraw(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1664-1675):
	External calls:
	- univ2().transfer(msg.sender,value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1665)
	Event emitted after the call(s):
	- Withdraw(msg.sender,value) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1674)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Require.stringifyTruncated(bytes32) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#491-520) uses assembly
	- INLINE ASM (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#510-514)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Variable PoolState._state (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1135) is not in mixedCase
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1414) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1416) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1447) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Constants.slitherConstructorConstantVariables() (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#858-1038) uses literals with too many digits:
	- TREASURY_ADDRESS = address(0x0000000000000000000000000000000000000000) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#911-912)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
burn(uint256) should be declared external:
	- IDollar.burn(uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1057)
burnFrom(address,uint256) should be declared external:
	- IDollar.burnFrom(address,uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1059)
mint(address,uint256) should be declared external:
	- IDollar.mint(address,uint256) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1061)
balanceOfStaged(address) should be declared external:
	- PoolGetters.balanceOfStaged(address) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1205-1207)
balanceOfClaimable(address) should be declared external:
	- PoolGetters.balanceOfClaimable(address) (loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol#1209-1211)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xf1a6bed23411d709069ddbd55a04700f9493476f.sol analyzed (16 contracts with 46 detectors), 35 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xf1a6bed23411d709069ddbd55a04700f9493476f.sol
Tool Runtime = 3.6968993179980316 seconds
#############################################