INFO:Detectors:[93m
VoidHole.transfer(address,uint256) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#139-194) performs a multiplication on the result of a division:
	-myInt2 = fee_J5y(value).div(6).mul(4) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#148)
VoidHole.transfer(address,uint256) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#139-194) performs a multiplication on the result of a division:
	-myInts[x] = myInt2.div(myInt3).mul(walletsw[x]) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#161)
VoidHole.transferFrom(address,address,uint256) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#203-258) performs a multiplication on the result of a division:
	-myInt2 = fee_J5y(value).div(6).mul(4) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#213)
VoidHole.transferFrom(address,address,uint256) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#203-258) performs a multiplication on the result of a division:
	-myInts[x] = myInt2.div(myInt3).mul(walletsw[x]) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#226)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
Contract locking ether found in :
	Contract VoidHole (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#91-344) has payable functions:
	 - VoidHole.constructor() (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#120-122)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
ERC20Detailed.constructor(string,string,uint8).name (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#72) shadows:
	- ERC20Detailed.name() (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#78-80) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#72) shadows:
	- ERC20Detailed.symbol() (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#82-84) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#72) shadows:
	- ERC20Detailed.decimals() (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#86-88) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#19) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Function VoidHole.fee_J5y(uint256) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#135-137) is not in mixedCase
Constant VoidHole.tokenName (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#105) is not in UPPER_CASE_WITH_UNDERSCORES
Constant VoidHole.tokenSymbol (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#106) is not in UPPER_CASE_WITH_UNDERSCORES
Constant VoidHole.tokenDecimals (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#107) is not in UPPER_CASE_WITH_UNDERSCORES
Variable VoidHole._totalSupply (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#108) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
VoidHole.slitherConstructorVariables() (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#91-344) uses literals with too many digits:
	- _totalSupply = 100000000000000000000000 (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#108)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
VoidHole.wallet1 (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#96) is never used in VoidHole (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#91-344)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
VoidHole.wallet1 (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#96) should be constant
VoidHole.wallet2 (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#97) should be constant
VoidHole.walletbp (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#109) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
name() should be declared external:
	- ERC20Detailed.name() (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#78-80)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#82-84)
decimals() should be declared external:
	- ERC20Detailed.decimals() (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#86-88)
totalSupply() should be declared external:
	- VoidHole.totalSupply() (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#123-125)
balanceOf(address) should be declared external:
	- VoidHole.balanceOf(address) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#127-129)
allowance(address,address) should be declared external:
	- VoidHole.allowance(address,address) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#131-133)
transfer(address,uint256) should be declared external:
	- VoidHole.transfer(address,uint256) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#139-194)
approve(address,uint256) should be declared external:
	- VoidHole.approve(address,uint256) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#196-201)
transferFrom(address,address,uint256) should be declared external:
	- VoidHole.transferFrom(address,address,uint256) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#203-258)
increaseAllowance(address,uint256) should be declared external:
	- VoidHole.increaseAllowance(address,uint256) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#260-264)
decreaseAllowance(address,uint256) should be declared external:
	- VoidHole.decreaseAllowance(address,uint256) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#266-270)
enableBool1() should be declared external:
	- VoidHole.enableBool1() (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#296-301)
disableBool3() should be declared external:
	- VoidHole.disableBool3() (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#303-306)
setwallet3(address) should be declared external:
	- VoidHole.setwallet3(address) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#308-312)
setMyInt1(uint256) should be declared external:
	- VoidHole.setMyInt1(uint256) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#314-317)
setWallets2(address) should be declared external:
	- VoidHole.setWallets2(address) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#319-322)
setWallets2x(address) should be declared external:
	- VoidHole.setWallets2x(address) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#324-327)
setWallets3(address) should be declared external:
	- VoidHole.setWallets3(address) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#329-332)
setWallets3x(address) should be declared external:
	- VoidHole.setWallets3x(address) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#334-337)
setWallet4(address) should be declared external:
	- VoidHole.setWallet4(address) (loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol#339-342)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol analyzed (4 contracts with 46 detectors), 40 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x7679a6dba4435cad1f876fc50e0e09a93afa2d08.sol
Tool Runtime = 0.9264873430001899 seconds
#############################################