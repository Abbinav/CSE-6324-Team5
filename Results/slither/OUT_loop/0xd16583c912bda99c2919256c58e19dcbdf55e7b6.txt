Compilation warnings/errors on ./loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol:
./loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol:585:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[91m
State.priceFeeds (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#767) is never initialized. It is used in:
	- SwapsImplKyber._getSwapTxnData(address,address,address,uint256,uint256,uint256) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#1038-1097)
State.supportedTokens (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#817) is never initialized. It is used in:
	- SwapsImplKyber.dexSwap(address,address,address,address,uint256,uint256,uint256) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#953-1007)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
SwapsImplKyber._getSwapTxnData(address,address,address,uint256,uint256,uint256) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#1038-1097) performs a multiplication on the result of a division:
	-estimatedSourceAmount = requiredDestTokenAmount.mul(sourceToDestPrecision).div(dexExpectedRate(sourceTokenAddress,destTokenAddress,minSourceTokenAmount)) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#1062-1068)
	-estimatedSourceAmount = estimatedSourceAmount.mul(bufferMultiplier).div(WEI_PERCENT_PRECISION) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#1073-1075)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
State._setTarget(bytes4,address) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#826-838) ignores return value by logicTargetsSet.addBytes32(bytes32(sig)) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#834)
State._setTarget(bytes4,address) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#826-838) ignores return value by logicTargetsSet.removeBytes32(bytes32(sig)) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#836)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
EnumerableBytes32Set.addAddress(EnumerableBytes32Set.Bytes32Set,address) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#73-82) uses assembly
	- INLINE ASM (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#78-81)
EnumerableBytes32Set.removeAddress(EnumerableBytes32Set.Bytes32Set,address) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#104-113) uses assembly
	- INLINE ASM (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#109-112)
EnumerableBytes32Set.containsAddress(EnumerableBytes32Set.Bytes32Set,address) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#163-173) uses assembly
	- INLINE ASM (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#169-172)
EnumerableBytes32Set.getAddress(EnumerableBytes32Set.Bytes32Set,uint256) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#237-248) uses assembly
	- INLINE ASM (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#244-247)
Address.isContract(address) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#578-587) uses assembly
	- INLINE ASM (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#585-586)
SwapsImplKyber.dexSwap(address,address,address,address,uint256,uint256,uint256) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#953-1007) uses assembly
	- INLINE ASM (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#995-998)
SwapsImplKyber.dexExpectedRate(address,address,uint256) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#1009-1036) uses assembly
	- INLINE ASM (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#1028-1033)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#11) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#617-623):
	- (success) = recipient.call.value(amount)() (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#621)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#674-693):
	- (success,returndata) = address(token).call(data) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#686)
Low level call in SwapsImplKyber.dexSwap(address,address,address,address,uint256,uint256,uint256) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#953-1007):
	- (success,returnData) = kyberContract.call(txnData) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#992)
Low level call in SwapsImplKyber.dexExpectedRate(address,address,uint256) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#1009-1036):
	- (success,data) = kyberContract.staticcall(abi.encodeWithSelector(0x809a9e55,sourceTokenAddress,destTokenAddress,sourceTokenAmount)) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#1020-1027)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Constant Constants.wethToken (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#43) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Constants.bzrxTokenAddress (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#44) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Constants.vbzrxTokenAddress (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#45) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter SafeMath.min256(uint256,uint256)._a (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#552) is not in mixedCase
Parameter SafeMath.min256(uint256,uint256)._b (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#552) is not in mixedCase
Parameter IPriceFeeds.amountInEth(address,uint256).Token (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#875) is not in mixedCase
Constant SwapsImplKyber.feeWallet (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#950) is not in UPPER_CASE_WITH_UNDERSCORES
Constant SwapsImplKyber.kyberContract (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#951) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Constants.DAYS_IN_A_YEAR (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#40) is never used in SwapsImplKyber (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#947-1098)
Constants.ONE_MONTH (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#41) is never used in SwapsImplKyber (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#947-1098)
State.activeLoansSet (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#786) is never used in SwapsImplKyber (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#947-1098)
State.lenderLoanSets (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#788) is never used in SwapsImplKyber (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#947-1098)
State.borrowerLoanSets (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#789) is never used in SwapsImplKyber (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#947-1098)
State.userLoanParamSets (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#790) is never used in SwapsImplKyber (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#947-1098)
State.loanPoolsSet (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#815) is never used in SwapsImplKyber (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#947-1098)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
IERC20.decimals (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#21) should be constant
IERC20.name (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#20) should be constant
IERC20.symbol (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#22) should be constant
State.affiliateFeePercent (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#809) should be constant
State.borrowingFeePercent (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#802) should be constant
State.feesController (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#792) should be constant
State.lendingFeePercent (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#794) should be constant
State.maxDisagreement (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#819) should be constant
State.maxSwapSize (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#823) should be constant
State.priceFeeds (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#767) should be constant
State.protocolTokenHeld (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#806) should be constant
State.protocolTokenPaid (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#807) should be constant
State.sourceBufferPercent (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#821) should be constant
State.swapsImpl (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#768) should be constant
State.tradingFeePercent (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#798) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- IERC20.totalSupply() (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#23)
balanceOf(address) should be declared external:
	- IERC20.balanceOf(address) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#24)
allowance(address,address) should be declared external:
	- IERC20.allowance(address,address) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#25)
approve(address,uint256) should be declared external:
	- IERC20.approve(address,uint256) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#26)
transfer(address,uint256) should be declared external:
	- IERC20.transfer(address,uint256) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#27)
transferFrom(address,address,uint256) should be declared external:
	- IERC20.transferFrom(address,address,uint256) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#28)
owner() should be declared external:
	- Ownable.owner() (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#339-341)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#362-364)
dexSwap(address,address,address,address,uint256,uint256,uint256) should be declared external:
	- SwapsImplKyber.dexSwap(address,address,address,address,uint256,uint256,uint256) (loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol#953-1007)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol analyzed (21 contracts with 46 detectors), 57 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xd16583c912bda99c2919256c58e19dcbdf55e7b6.sol
Tool Runtime = 1.2589777309985948 seconds
#############################################