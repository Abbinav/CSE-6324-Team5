INFO:Detectors:[93m
FarmPrdzEth96.disburseTokens() (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#477-490) uses a dangerous strict equality:
	- amount == 0 (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#485)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in FarmPrdzEth96.deposit(uint256) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#420-434):
	External calls:
	- updateAccount(msg.sender) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#423)
		- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#390)
	- require(bool,string)(Token(trustedDepositTokenAddress).transferFrom(msg.sender,address(this),amountToDeposit),Insufficient Token Allowance) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#425)
	State variables written after the call(s):
	- depositedTokens[msg.sender] = depositedTokens[msg.sender].add(amountToDeposit) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#427)
Reentrancy in FarmPrdzEth96.updateAccount(address) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#387-397):
	External calls:
	- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#390)
	State variables written after the call(s):
	- lastDivPoints[account] = totalDivPoints (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#396)
Reentrancy in FarmPrdzEth96.withdraw(uint256) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#436-455):
	External calls:
	- updateAccount(msg.sender) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#440)
		- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#390)
	- require(bool,string)(Token(trustedDepositTokenAddress).transfer(owner,fee),Could not transfer fee!) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#445)
	- require(bool,string)(Token(trustedDepositTokenAddress).transfer(msg.sender,amountAfterFee),Could not transfer tokens.) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#447)
	State variables written after the call(s):
	- depositedTokens[msg.sender] = depositedTokens[msg.sender].sub(amountToWithdraw) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#449)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
FarmPrdzEth96.deposit(uint256) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#420-434) ignores return value by holders.add(msg.sender) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#431)
FarmPrdzEth96.withdraw(uint256) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#436-455) ignores return value by holders.remove(msg.sender) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#453)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in FarmPrdzEth96.addContractBalance(uint256) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#381-384):
	External calls:
	- require(bool,string)(Token(trustedRewardTokenAddress).transferFrom(msg.sender,address(this),amount),Cannot add balance!) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#382)
	State variables written after the call(s):
	- contractBalance = contractBalance.add(amount) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#383)
Reentrancy in FarmPrdzEth96.deposit(uint256) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#420-434):
	External calls:
	- updateAccount(msg.sender) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#423)
		- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#390)
	- require(bool,string)(Token(trustedDepositTokenAddress).transferFrom(msg.sender,address(this),amountToDeposit),Insufficient Token Allowance) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#425)
	State variables written after the call(s):
	- depositTime[msg.sender] = now (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#432)
	- totalTokens = totalTokens.add(amountToDeposit) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#428)
Reentrancy in FarmPrdzEth96.updateAccount(address) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#387-397):
	External calls:
	- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#390)
	State variables written after the call(s):
	- lastClaimedTime[account] = now (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#395)
	- totalClaimedRewards = totalClaimedRewards.add(pendingDivs) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#392)
	- totalEarnedTokens[account] = totalEarnedTokens[account].add(pendingDivs) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#391)
Reentrancy in FarmPrdzEth96.withdraw(uint256) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#436-455):
	External calls:
	- updateAccount(msg.sender) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#440)
		- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#390)
	- require(bool,string)(Token(trustedDepositTokenAddress).transfer(owner,fee),Could not transfer fee!) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#445)
	- require(bool,string)(Token(trustedDepositTokenAddress).transfer(msg.sender,amountAfterFee),Could not transfer tokens.) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#447)
	State variables written after the call(s):
	- totalTokens = totalTokens.sub(amountToWithdraw) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#450)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in FarmPrdzEth96.updateAccount(address) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#387-397):
	External calls:
	- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#390)
	Event emitted after the call(s):
	- RewardsTransferred(account,pendingDivs) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#393)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
FarmPrdzEth96.updateAccount(address) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#387-397) uses timestamp for comparisons
	Dangerous comparisons:
	- pendingDivs > 0 (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#389)
	- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#390)
FarmPrdzEth96.withdraw(uint256) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#436-455) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(now.sub(depositTime[msg.sender]) > cliffTime,Please wait before withdrawing!) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#438)
FarmPrdzEth96.canWithdraw(address) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#457-465) uses timestamp for comparisons
	Dangerous comparisons:
	- now.sub(depositTime[account]) > cliffTime (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#458)
FarmPrdzEth96.disburseTokens() (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#477-490) uses timestamp for comparisons
	Dangerous comparisons:
	- contractBalance < amount (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#482)
	- amount == 0 (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#485)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#10) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Parameter FarmPrdzEth96.getPendingDivs(address)._holder (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#402) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
FarmPrdzEth96.adminCanClaimAfter (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#341) should be constant
FarmPrdzEth96.cliffTime (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#345) should be constant
FarmPrdzEth96.disburseAmount (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#343) should be constant
FarmPrdzEth96.disburseDuration (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#344) should be constant
FarmPrdzEth96.disbursePercentX100 (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#348) should be constant
FarmPrdzEth96.pointMultiplier (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#379) should be constant
FarmPrdzEth96.totalTokensDisbursed (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#373) should be constant
FarmPrdzEth96.withdrawFeePercentX100 (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#342) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#318-322)
addContractBalance(uint256) should be declared external:
	- FarmPrdzEth96.addContractBalance(uint256) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#381-384)
getNumberOfHolders() should be declared external:
	- FarmPrdzEth96.getNumberOfHolders() (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#415-417)
deposit(uint256) should be declared external:
	- FarmPrdzEth96.deposit(uint256) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#420-434)
withdraw(uint256) should be declared external:
	- FarmPrdzEth96.withdraw(uint256) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#436-455)
canWithdraw(address) should be declared external:
	- FarmPrdzEth96.canWithdraw(address) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#457-465)
claim() should be declared external:
	- FarmPrdzEth96.claim() (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#467-469)
disburseTokens() should be declared external:
	- FarmPrdzEth96.disburseTokens() (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#477-490)
getDepositorsList(uint256,uint256) should be declared external:
	- FarmPrdzEth96.getDepositorsList(uint256,uint256) (loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol#502-527)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol analyzed (5 contracts with 46 detectors), 35 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x287e3DED4441117Ed742864e71e05C4439189ABC.sol
Tool Runtime = 0.8284626969980309 seconds
#############################################