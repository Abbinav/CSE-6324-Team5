INFO:Detectors:[93m
StakingPool.calculateRewards(uint256,uint256,uint256,bool) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#487-499) performs a multiplication on the result of a division:
	-currentTotal = currentTotal.mul(roi.add(10000) ** 10).div(divFactor) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#491)
	-currentTotal = currentTotal.mul(roi.add(10000) ** totalDays).div(10000 ** totalDays) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#494)
StakingPool.calculateRewards(uint256,uint256,uint256,bool) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#487-499) performs a multiplication on the result of a division:
	-currentTotal = currentTotal.mul(roi.add(10000) ** totalDays).div(10000 ** totalDays) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#494)
	-currentTotal.mul(totalDays).mul(roi).div(10000) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#498)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
StakingPool._isFirstHalf(uint256,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#454-467) uses a dangerous strict equality:
	- _lockupPeriod == 1 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#457)
StakingPool._isFirstHalf(uint256,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#454-467) uses a dangerous strict equality:
	- _lockupPeriod == 2 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#460)
StakingPool._isFirstHalf(uint256,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#454-467) uses a dangerous strict equality:
	- _lockupPeriod == 3 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#463)
StakingPool._setRoi(uint256,uint256,uint256,uint256,uint256,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#719-730) uses a dangerous strict equality:
	- require(bool,string)((_month >= today_month && _year == today_year) || _year > today_year,You can only set it for this month or a future month) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#723)
StakingPool.getPartialRewardsForCompounders(address,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#621-664) uses a dangerous strict equality:
	- initial.month == today.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#628)
StakingPool.getPartialRewardsForCompounders(address,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#621-664) uses a dangerous strict equality:
	- currentMonth == finishes.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#651)
StakingPool.getPartialRewardsForCompounders(address,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#621-664) uses a dangerous strict equality:
	- currentMonth == today.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#656)
StakingPool.getPartialToWidthdrawForNotCompounders(address,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#538-586) uses a dangerous strict equality:
	- initial.month == today.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#545)
StakingPool.getPartialToWidthdrawForNotCompounders(address,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#538-586) uses a dangerous strict equality:
	- currentMonth == finishes.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#568)
StakingPool.getPartialToWidthdrawForNotCompounders(address,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#538-586) uses a dangerous strict equality:
	- currentMonth == today.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#574)
StakingPool.getRoi(uint256,uint256,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#739-769) uses a dangerous strict equality:
	- lockupPeriod == 1 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#741)
StakingPool.getRoi(uint256,uint256,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#739-769) uses a dangerous strict equality:
	- lockupPeriod == 2 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#744)
StakingPool.getRoi(uint256,uint256,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#739-769) uses a dangerous strict equality:
	- lockupPeriod == 3 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#747)
StakingPool.getRoi(uint256,uint256,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#739-769) uses a dangerous strict equality:
	- lockupPeriod == 6 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#750)
StakingPool.getRoi(uint256,uint256,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#739-769) uses a dangerous strict equality:
	- lockupPeriod == 1 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#755)
StakingPool.getRoi(uint256,uint256,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#739-769) uses a dangerous strict equality:
	- lockupPeriod == 2 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#758)
StakingPool.getRoi(uint256,uint256,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#739-769) uses a dangerous strict equality:
	- lockupPeriod == 3 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#761)
StakingPool.getRoi(uint256,uint256,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#739-769) uses a dangerous strict equality:
	- lockupPeriod == 6 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#764)
StakingPool.getTotalToWidthdrawForCompounders(address) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#589-618) uses a dangerous strict equality:
	- currentMonth == finishes.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#610)
StakingPool.getTotalToWidthdrawForNotCompounders(address) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#502-535) uses a dangerous strict equality:
	- currentMonth == finishes.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#523)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in StakingPool.createStake(uint256,uint8,bool,address) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#342-379):
	External calls:
	- require(bool,string)(IERC20(token).transferFrom(msg.sender,address(this),calculateTotalWithDecimals(_amount)),Couldn't take the tokens) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#347)
	State variables written after the call(s):
	- stakes[_referrer].initialAmount += amountToIncrease (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#352)
	- stakes[msg.sender] = stake (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#368)
Reentrancy in StakingPool.finishStake() (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#394-448):
	External calls:
	- require(bool,string)(token.transfer(BURN_ADDRESS,calculateTotalWithDecimals(totalToBurn)),Couldn't burn the tokens) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#432)
	State variables written after the call(s):
	- delete stakes[msg.sender] (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#443)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
StakingPool.finishStake().totalPenalty (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#404) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Reentrancy in StakingPool.createStake(uint256,uint8,bool,address) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#342-379):
	External calls:
	- require(bool,string)(IERC20(token).transferFrom(msg.sender,address(this),calculateTotalWithDecimals(_amount)),Couldn't take the tokens) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#347)
	State variables written after the call(s):
	- totalByLockup[_lockupPeriod] += 1 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#371)
	- totalCompounding = totalCompounding.add(1) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#373)
	- totalNotCompounding = totalNotCompounding.add(1) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#375)
	- totalStaked = totalStaked.add(amountToIncrease) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#353)
	- totalStaked = totalStaked.add(_amount) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#370)
	- totalStakes = totalStakes.add(1) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#369)
Reentrancy in StakingPool.finishStake() (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#394-448):
	External calls:
	- require(bool,string)(token.transfer(BURN_ADDRESS,calculateTotalWithDecimals(totalToBurn)),Couldn't burn the tokens) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#432)
	State variables written after the call(s):
	- totalByLockup[stake.lockupPeriod] = totalByLockup[stake.lockupPeriod].sub(1) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#437)
	- totalCompounding = totalCompounding.sub(1) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#439)
	- totalNotCompounding = totalNotCompounding.sub(1) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#441)
	- totalStaked = totalStaked.sub(stake.initialAmount) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#436)
	- totalStakes = totalStakes.sub(1) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#435)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in StakingPool.createStake(uint256,uint8,bool,address) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#342-379):
	External calls:
	- require(bool,string)(IERC20(token).transferFrom(msg.sender,address(this),calculateTotalWithDecimals(_amount)),Couldn't take the tokens) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#347)
	Event emitted after the call(s):
	- NewStake(msg.sender,_amount,_lockupPeriod,_compound,_referrer) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#378)
	- StakeIncreasedForReferral(_referrer,stakes[_referrer].initialAmount,amountToIncrease) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#351)
Reentrancy in StakingPool.finishStake() (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#394-448):
	External calls:
	- require(bool,string)(token.transfer(BURN_ADDRESS,calculateTotalWithDecimals(totalToBurn)),Couldn't burn the tokens) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#432)
	Event emitted after the call(s):
	- TokensBurnt(msg.sender,totalToBurn) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#433)
Reentrancy in StakingPool.finishStake() (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#394-448):
	External calls:
	- require(bool,string)(token.transfer(BURN_ADDRESS,calculateTotalWithDecimals(totalToBurn)),Couldn't burn the tokens) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#432)
	- require(bool,string)(token.transfer(msg.sender,calculateTotalWithDecimals(totalToTransfer)),Couldn't transfer the tokens) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#445)
	Event emitted after the call(s):
	- StakeFinished(msg.sender,totalToTransfer,totalToDeduct) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#447)
Reentrancy in StakingPool.withdraw() (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#381-392):
	External calls:
	- require(bool,string)(token.transfer(msg.sender,calculateTotalWithDecimals(total)),Couldn't withdraw) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#389)
	Event emitted after the call(s):
	- RewardsWithdrawn(msg.sender,total) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#391)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
StakingPool.createStake(uint256,uint8,bool,address) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#342-379) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(! stakes[msg.sender].exists,You already have a stake) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#343)
	- _referrer != address(0) && stakes[_referrer].exists (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#349)
StakingPool.withdraw() (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#381-392) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(stakes[msg.sender].exists,Invalid stake) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#382)
	- require(bool,string)(! stakes[msg.sender].compound,Compounders can't withdraw before they finish their stake) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#383)
	- require(bool,string)(token.transfer(msg.sender,calculateTotalWithDecimals(total)),Couldn't withdraw) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#389)
StakingPool.finishStake() (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#394-448) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(stakes[msg.sender].exists,Invalid stake) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#395)
	- require(bool,string)(now > finishesOn || ! stake.compound,Can't be finished yet) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#400)
	- now > finishesOn (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#412)
	- require(bool,string)(token.transfer(BURN_ADDRESS,calculateTotalWithDecimals(totalToBurn)),Couldn't burn the tokens) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#432)
	- require(bool,string)(token.transfer(msg.sender,calculateTotalWithDecimals(totalToTransfer)),Couldn't transfer the tokens) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#445)
StakingPool._isFirstHalf(uint256,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#454-467) uses timestamp for comparisons
	Dangerous comparisons:
	- _lockupPeriod == 1 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#457)
	- _createdOn + day.mul(15) > now (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#458)
	- _lockupPeriod == 2 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#460)
	- _createdOn + day.mul(30) > now (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#461)
	- _lockupPeriod == 3 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#463)
	- _createdOn + day.mul(45) > now (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#464)
	- _createdOn + day.mul(90) > now (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#466)
StakingPool.calculateRewards(uint256,uint256,uint256,bool) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#487-499) uses timestamp for comparisons
	Dangerous comparisons:
	- totalDays > 10 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#490)
StakingPool.getTotalToWidthdrawForNotCompounders(address) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#502-535) uses timestamp for comparisons
	Dangerous comparisons:
	- i <= stake.lockupPeriod (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#512)
	- currentMonth > 12 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#515)
	- currentMonth == finishes.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#523)
StakingPool.getPartialToWidthdrawForNotCompounders(address,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#538-586) uses timestamp for comparisons
	Dangerous comparisons:
	- initial.month == today.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#545)
	- i <= stake.lockupPeriod (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#557)
	- currentMonth > 12 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#560)
	- currentMonth == finishes.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#568)
	- currentMonth == today.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#574)
StakingPool.getTotalToWidthdrawForCompounders(address) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#589-618) uses timestamp for comparisons
	Dangerous comparisons:
	- i <= stake.lockupPeriod (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#599)
	- currentMonth > 12 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#602)
	- currentMonth == finishes.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#610)
StakingPool.getPartialRewardsForCompounders(address,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#621-664) uses timestamp for comparisons
	Dangerous comparisons:
	- initial.month == today.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#628)
	- i <= stake.lockupPeriod (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#640)
	- currentMonth > 12 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#643)
	- currentMonth == finishes.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#651)
	- currentMonth == today.month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#656)
StakingPool._getMin(uint8,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#666-672) uses timestamp for comparisons
	Dangerous comparisons:
	- num1 < num2 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#667)
StakingPool._calculateFinishTimestamp(uint256,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#678-688) uses timestamp for comparisons
	Dangerous comparisons:
	- month > 12 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#682)
StakingPool._setRoi(uint256,uint256,uint256,uint256,uint256,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#719-730) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)((_month >= today_month && _year == today_year) || _year > today_year,You can only set it for this month or a future month) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#723)
StakingPool.getRoi(uint256,uint256,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#739-769) uses timestamp for comparisons
	Dangerous comparisons:
	- lockupPeriod == 1 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#741)
	- lockupPeriod == 2 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#744)
	- lockupPeriod == 3 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#747)
	- lockupPeriod == 6 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#750)
	- lockupPeriod == 1 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#755)
	- lockupPeriod == 2 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#758)
	- lockupPeriod == 3 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#761)
	- lockupPeriod == 6 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#764)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#8) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Struct Date._Date (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#12-16) is not in CapWords
Parameter StakingPool.createStake(uint256,uint8,bool,address)._amount (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#342) is not in mixedCase
Parameter StakingPool.createStake(uint256,uint8,bool,address)._lockupPeriod (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#342) is not in mixedCase
Parameter StakingPool.createStake(uint256,uint8,bool,address)._compound (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#342) is not in mixedCase
Parameter StakingPool.createStake(uint256,uint8,bool,address)._referrer (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#342) is not in mixedCase
Parameter StakingPool.calculateTotalWithDecimals(uint256)._amount (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#450) is not in mixedCase
Parameter StakingPool.calcPartialRewardsForInitialMonth(StakingPool.Stake,uint8,Date._Date,bool)._todayDay (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#469) is not in mixedCase
Parameter StakingPool.calcPartialRewardsForInitialMonth(StakingPool.Stake,uint8,Date._Date,bool)._initial (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#469) is not in mixedCase
Parameter StakingPool.calcFullRewardsForInitialMonth(StakingPool.Stake,Date._Date,bool)._initial (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#475) is not in mixedCase
Parameter StakingPool.calcFullRewardsForMonth(uint256,uint256,uint16,uint8,bool)._currentTotal (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#482) is not in mixedCase
Parameter StakingPool.calcFullRewardsForMonth(uint256,uint256,uint16,uint8,bool)._roi (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#482) is not in mixedCase
Parameter StakingPool.calcFullRewardsForMonth(uint256,uint256,uint16,uint8,bool)._year (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#482) is not in mixedCase
Parameter StakingPool.calcFullRewardsForMonth(uint256,uint256,uint16,uint8,bool)._month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#482) is not in mixedCase
Parameter StakingPool.getTotalToWidthdrawForNotCompounders(address)._account (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#502) is not in mixedCase
Parameter StakingPool.getPartialToWidthdrawForNotCompounders(address,uint256)._account (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#538) is not in mixedCase
Parameter StakingPool.getPartialToWidthdrawForNotCompounders(address,uint256)._now (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#538) is not in mixedCase
Parameter StakingPool.getTotalToWidthdrawForCompounders(address)._account (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#589) is not in mixedCase
Parameter StakingPool.getPartialRewardsForCompounders(address,uint256)._account (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#621) is not in mixedCase
Parameter StakingPool.getPartialRewardsForCompounders(address,uint256)._now (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#621) is not in mixedCase
Function StakingPool._isValidLockupPeriod(uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#690-692) is not in mixedCase
Function StakingPool._setValidLockups(bool,bool,bool,bool) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#694-699) is not in mixedCase
Parameter StakingPool._setValidLockups(bool,bool,bool,bool)._isValidLockup1 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#694) is not in mixedCase
Parameter StakingPool._setValidLockups(bool,bool,bool,bool)._isValidLockup2 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#694) is not in mixedCase
Parameter StakingPool._setValidLockups(bool,bool,bool,bool)._isValidLockup3 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#694) is not in mixedCase
Parameter StakingPool._setValidLockups(bool,bool,bool,bool)._isValidLockup6 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#694) is not in mixedCase
Function StakingPool._adminWithdraw() (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#701-705) is not in mixedCase
Function StakingPool._extractDESTSentByMistake(uint256,address) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#707-709) is not in mixedCase
Parameter StakingPool._extractDESTSentByMistake(uint256,address)._sendTo (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#707) is not in mixedCase
Function StakingPool._setMinimumStakeAmount(uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#711-713) is not in mixedCase
Parameter StakingPool._setMinimumStakeAmount(uint256)._minimumStakeAmount (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#711) is not in mixedCase
Function StakingPool._setRoi(uint256,uint256,uint256,uint256,uint256,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#719-730) is not in mixedCase
Parameter StakingPool._setRoi(uint256,uint256,uint256,uint256,uint256,uint256)._month (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#719) is not in mixedCase
Parameter StakingPool._setRoi(uint256,uint256,uint256,uint256,uint256,uint256)._year (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#719) is not in mixedCase
Parameter StakingPool._setRoi(uint256,uint256,uint256,uint256,uint256,uint256)._roi1 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#719) is not in mixedCase
Parameter StakingPool._setRoi(uint256,uint256,uint256,uint256,uint256,uint256)._roi2 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#719) is not in mixedCase
Parameter StakingPool._setRoi(uint256,uint256,uint256,uint256,uint256,uint256)._roi3 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#719) is not in mixedCase
Parameter StakingPool._setRoi(uint256,uint256,uint256,uint256,uint256,uint256)._roi6 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#719) is not in mixedCase
Function StakingPool._setDefaultRoi(uint256,uint256,uint256,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#732-737) is not in mixedCase
Parameter StakingPool._setDefaultRoi(uint256,uint256,uint256,uint256)._roi1 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#732) is not in mixedCase
Parameter StakingPool._setDefaultRoi(uint256,uint256,uint256,uint256)._roi2 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#732) is not in mixedCase
Parameter StakingPool._setDefaultRoi(uint256,uint256,uint256,uint256)._roi3 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#732) is not in mixedCase
Parameter StakingPool._setDefaultRoi(uint256,uint256,uint256,uint256)._roi6 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#732) is not in mixedCase
Variable StakingPool.ZERO_ADDRESS (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#287) is not in mixedCase
Variable StakingPool.BURN_ADDRESS (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#288) is not in mixedCase
Variable StakingPool.DEFAULT_ROI1 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#310) is not in mixedCase
Variable StakingPool.DEFAULT_ROI2 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#311) is not in mixedCase
Variable StakingPool.DEFAULT_ROI3 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#312) is not in mixedCase
Variable StakingPool.DEFAULT_ROI6 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#313) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
StakingPool.slitherConstructorVariables() (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#281-770) uses literals with too many digits:
	- ZERO_ADDRESS = 0x0000000000000000000000000000000000000000 (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#287)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
StakingPool.ZERO_ADDRESS (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#287) should be constant
StakingPool.decimals (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#285) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
getMonth(uint256) should be declared external:
	- Date.getMonth(uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#114-116)
getDay(uint256) should be declared external:
	- Date.getDay(uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#118-120)
toTimestamp(uint16,uint8,uint8) should be declared external:
	- Date.toTimestamp(uint16,uint8,uint8) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#122-163)
owner() should be declared external:
	- Ownable.owner() (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#184-186)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#207-209)
withdraw() should be declared external:
	- StakingPool.withdraw() (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#381-392)
finishStake() should be declared external:
	- StakingPool.finishStake() (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#394-448)
getPartialRewardsForCompounders(address,uint256) should be declared external:
	- StakingPool.getPartialRewardsForCompounders(address,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#621-664)
calculateFinishTimestamp(address) should be declared external:
	- StakingPool.calculateFinishTimestamp(address) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#674-676)
_setValidLockups(bool,bool,bool,bool) should be declared external:
	- StakingPool._setValidLockups(bool,bool,bool,bool) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#694-699)
_adminWithdraw() should be declared external:
	- StakingPool._adminWithdraw() (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#701-705)
_extractDESTSentByMistake(uint256,address) should be declared external:
	- StakingPool._extractDESTSentByMistake(uint256,address) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#707-709)
_setMinimumStakeAmount(uint256) should be declared external:
	- StakingPool._setMinimumStakeAmount(uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#711-713)
_setRoi(uint256,uint256,uint256,uint256,uint256,uint256) should be declared external:
	- StakingPool._setRoi(uint256,uint256,uint256,uint256,uint256,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#719-730)
_setDefaultRoi(uint256,uint256,uint256,uint256) should be declared external:
	- StakingPool._setDefaultRoi(uint256,uint256,uint256,uint256) (loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol#732-737)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol analyzed (5 contracts with 46 detectors), 112 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x52f42e9710676b17c65d7b50a99094bf6e76ebcd.sol
Tool Runtime = 4.663919696002267 seconds
#############################################