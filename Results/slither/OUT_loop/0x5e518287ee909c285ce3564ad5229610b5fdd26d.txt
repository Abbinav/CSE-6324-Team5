INFO:Detectors:[93m
UniswapZAP.getLPTokenPerEthUnit(uint256) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#359-368) performs a multiplication on the result of a division:
	-(amount0,amount1) = (outTokens,ethAmt.div(2)) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#365)
	-liquidity = SafeMath.min(amount0.mul(_totalSupply) / _reserve0,amount1.mul(_totalSupply) / _reserve1) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#367)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
UniswapV2Library.getAmountsOut(address,uint256,address[]).i (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#235) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
UniswapZAP.addLiquidityETHOnly(address) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#302-322) ignores return value by _WETH.transfer(_tokenWETHPair,buyAmount) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#315)
UniswapZAP._addLiquidity(uint256,uint256,address) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#324-356) ignores return value by IUniswapV2Pair(_tokenWETHPair).mint(SwapPool) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#341)
UniswapZAP._addLiquidity(uint256,uint256,address) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#324-356) ignores return value by USP(SwapPool).ZapStake(optimalTokenAmount,to) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#342)
UniswapZAP._addLiquidity(uint256,uint256,address) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#324-356) ignores return value by IERC20(_token).transfer(to,tokenAmount.sub(optimalTokenAmount)) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#349)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
UniswapZAP.receive() (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#280-284) (function) shadows built-in symbol"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
UniswapZAP.addLiquidityETHOnly(address) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#302-322) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(nextEmission() - now >= interval,You can stake after emission) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#305)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#8) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#26) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#27) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#44) is not in mixedCase
Function USP.ZapStake(uint256,address) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#84) is not in mixedCase
Parameter UniswapZAP.initUniswapZAP(address,address,address).WETH (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#266) is not in mixedCase
Parameter UniswapZAP.set(address,address)._addr (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#291) is not in mixedCase
Parameter UniswapZAP.set(address,address)._addr2 (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#291) is not in mixedCase
Variable UniswapZAP._token (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#257) is not in mixedCase
Variable UniswapZAP._tokenWETHPair (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#258) is not in mixedCase
Variable UniswapZAP._WETH (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#259) is not in mixedCase
Variable UniswapZAP.SwapPool (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#261) is not in mixedCase
Variable UniswapZAP.AXIAv3Add (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#262) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
UniswapZAP.initialized (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#260) is never used in UniswapZAP (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#253-398)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
UniswapZAP.initialized (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#260) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
initUniswapZAP(address,address,address) should be declared external:
	- UniswapZAP.initUniswapZAP(address,address,address) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#266-273)
set(address,address) should be declared external:
	- UniswapZAP.set(address,address) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#291-295)
setInterval(uint256) should be declared external:
	- UniswapZAP.setInterval(uint256) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#297-300)
getLPTokenPerEthUnit(uint256) should be declared external:
	- UniswapZAP.getLPTokenPerEthUnit(uint256) (loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol#359-368)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol analyzed (8 contracts with 46 detectors), 28 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x5e518287ee909c285ce3564ad5229610b5fdd26d.sol
Tool Runtime = 0.8462468529978651 seconds
#############################################