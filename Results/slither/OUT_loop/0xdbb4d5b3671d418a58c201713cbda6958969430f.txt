INFO:Detectors:[91m
InfiniteEthereum.payForLevel(uint256,uint256,uint256,uint256) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#140-150) sends eth to arbitrary user
	Dangerous calls:
	- require(bool,string)(address(uint160(referrer)).send(poolPrice[_pool]),Transfer Failed) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#147)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[92m
InfiniteEthereum.poolRegistration(uint256) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#64-104) compares to a boolean constant:
	-require(bool,string)(lockStatus == false,Contract Locked) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#65)
InfiniteEthereum.buyPool(uint256,uint256) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#106-137) compares to a boolean constant:
	-require(bool,string)(lockStatus == false,Contract Locked) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#107)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Parameter InfiniteEthereum.poolRegistration(uint256)._referrerID (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#64) is not in mixedCase
Parameter InfiniteEthereum.buyPool(uint256,uint256)._pool (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#106) is not in mixedCase
Parameter InfiniteEthereum.buyPool(uint256,uint256)._referrerID (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#106) is not in mixedCase
Parameter InfiniteEthereum.payForLevel(uint256,uint256,uint256,uint256)._referrerID (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#140) is not in mixedCase
Parameter InfiniteEthereum.payForLevel(uint256,uint256,uint256,uint256)._userID (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#140) is not in mixedCase
Parameter InfiniteEthereum.payForLevel(uint256,uint256,uint256,uint256)._pool (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#140) is not in mixedCase
Parameter InfiniteEthereum.payForLevel(uint256,uint256,uint256,uint256)._flag (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#140) is not in mixedCase
Parameter InfiniteEthereum.findFreeReferrer(uint256,uint8,uint256)._userID (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#152) is not in mixedCase
Parameter InfiniteEthereum.findFreeReferrer(uint256,uint8,uint256)._pool (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#152) is not in mixedCase
Parameter InfiniteEthereum.findFreeReferrer(uint256,uint8,uint256)._reInvestCount (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#152) is not in mixedCase
Parameter InfiniteEthereum.failSafe(address,uint256)._toUser (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#163) is not in mixedCase
Parameter InfiniteEthereum.failSafe(address,uint256)._amount (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#163) is not in mixedCase
Parameter InfiniteEthereum.updatePrice(uint256,uint256)._pool (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#172) is not in mixedCase
Parameter InfiniteEthereum.updatePrice(uint256,uint256)._price (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#172) is not in mixedCase
Parameter InfiniteEthereum.contractLock(bool)._lockStatus (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#179) is not in mixedCase
Parameter InfiniteEthereum.userPool(uint256,uint8)._userID (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#186) is not in mixedCase
Parameter InfiniteEthereum.userPool(uint256,uint8)._pool (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#186) is not in mixedCase
Parameter InfiniteEthereum.viewUserReferral(uint256,uint256)._pool (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#193) is not in mixedCase
Parameter InfiniteEthereum.viewUserReferral(uint256,uint256)._userID (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#193) is not in mixedCase
Variable InfiniteEthereum.DOWNLINE_LIMIT (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#24) is not in mixedCase
Variable InfiniteEthereum.PoolcurrentID (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#29) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Reentrancy in InfiniteEthereum.buyPool(uint256,uint256) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#106-137):
	External calls:
	- payForLevel(_referrerID,PoolcurrentID[_pool],_pool,1) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#132)
		- require(bool,string)(address(uint160(referrer)).send(poolPrice[_pool]),Transfer Failed) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#147)
	State variables written after the call(s):
	- poolusers[_referrerID].pool[_pool].referrals = new uint256[](0) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#133)
	- poolusers[_referrerID].pool[_pool].reinvestCount ++ (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#134)
Reentrancy in InfiniteEthereum.payForLevel(uint256,uint256,uint256,uint256) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#140-150):
	External calls:
	- require(bool,string)(address(uint160(referrer)).send(poolPrice[_pool]),Transfer Failed) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#147)
	Event emitted after the call(s):
	- BuyPool(_pool,msg.sender,_userID,poolList[_pool][_referrerID],_referrerID,poolPrice[_pool],_flag,now) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#149)
Reentrancy in InfiniteEthereum.poolRegistration(uint256) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#64-104):
	External calls:
	- require(bool,string)(address(uint160(ownerWallet)).send(amount) && address(uint160(poolList[1][_referrerID])).send(amount),Owner wallet and referer transfer failed) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#93)
	Event emitted after the call(s):
	- BuyPool(1,msg.sender,PoolcurrentID[1],poolList[1][_referrerID],_referrerID,amount,0,now) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#95)
	- JoinFee(msg.sender,PoolcurrentID[1],amount,now) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#96)
Reentrancy in InfiniteEthereum.poolRegistration(uint256) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#64-104):
	External calls:
	- payForLevel(_referrerID,PoolcurrentID[1],1,1) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#99)
		- require(bool,string)(address(uint160(referrer)).send(poolPrice[_pool]),Transfer Failed) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#147)
	State variables written after the call(s):
	- poolusers[_referrerID].pool[1].referrals = new uint256[](0) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#100)
	- poolusers[_referrerID].pool[1].reinvestCount ++ (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#101)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4[0m
INFO:Detectors:[92m
InfiniteEthereum.DOWNLINE_LIMIT (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#24) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
poolRegistration(uint256) should be declared external:
	- InfiniteEthereum.poolRegistration(uint256) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#64-104)
buyPool(uint256,uint256) should be declared external:
	- InfiniteEthereum.buyPool(uint256,uint256) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#106-137)
failSafe(address,uint256) should be declared external:
	- InfiniteEthereum.failSafe(address,uint256) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#163-170)
updatePrice(uint256,uint256) should be declared external:
	- InfiniteEthereum.updatePrice(uint256,uint256) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#172-177)
contractLock(bool) should be declared external:
	- InfiniteEthereum.contractLock(bool) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#179-184)
userPool(uint256,uint8) should be declared external:
	- InfiniteEthereum.userPool(uint256,uint8) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#186-190)
viewUserReferral(uint256,uint256) should be declared external:
	- InfiniteEthereum.viewUserReferral(uint256,uint256) (loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol#193-195)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xdbb4d5b3671d418a58c201713cbda6958969430f.sol analyzed (1 contracts with 46 detectors), 38 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xdbb4d5b3671d418a58c201713cbda6958969430f.sol
Tool Runtime = 0.6542021989989735 seconds
#############################################