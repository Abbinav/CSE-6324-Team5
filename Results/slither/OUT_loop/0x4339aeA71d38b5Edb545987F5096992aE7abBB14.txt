Compilation warnings/errors on ./loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol:
./loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol:15:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^

INFO:Detectors:[93m
NewOracleProxy.getChainlinkPrice() (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#297-310) performs a multiplication on the result of a division:
	-price = price.div(10 ** uint256(chainlinkDecimal - oracleDecimal)) (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#304)
	-price = price.mul(10 ** uint256(oracleDecimal - chainlinkDecimal)) (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#306)
NewOracleProxy._getUniswapPrice(address,bool) (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#320-340) performs a multiplication on the result of a division:
	-priceLast = priceLast.mul(reserve1).div(reserve0) (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#334)
	-priceLast = priceLast.mul(reserve0).div(reserve1) (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#337)
NewOracleProxy._getUniswapPrice(address,bool) (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#320-340) performs a multiplication on the result of a division:
	-priceLast = priceLast.mul(reserve0).div(reserve1) (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#337)
	-(price1.div(unit).mul(10 ** 12),priceLast.mul(10 ** 12),uint32(blockTimestampLast % 2 ** 32)) (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#338)
NewOracleProxy.getPrice() (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#342-417) performs a multiplication on the result of a division:
	-uniswapPrice = uniswapPriceCumulative.sub(uniswapPriceCumulativeLast).div(uniswapBlockTimestamp - uniswapBlockTimestampLast) (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#363-364)
	-dexPrice = uniswapPrice (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#368)
	-targetPrice = chainlinkPrice.mul(T0).add(dexPrice.mul(deltaT)).div(deltaT.add(T0)) (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#391)
NewOracleProxy.getPrice() (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#342-417) performs a multiplication on the result of a division:
	-uniswapPrice = uniswapPriceCumulative.sub(uniswapPriceCumulativeLast).div(uniswapBlockTimestamp - uniswapBlockTimestampLast) (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#363-364)
	-dexPrice = uniswapPrice (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#368)
	-targetPrice = chainlinkPrice.mul(T0).add(dexPrice.mul(deltaT)).div(deltaT.add(T0)) (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#403)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[92m
NewOracleProxy._getUniswapPrice(address,bool) (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#320-340) compares to a boolean constant:
	-reverse == false (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#333)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#14) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#108) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#136) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#138) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#164) is not in mixedCase
Variable Ownable._OWNER_ (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#213) is not in mixedCase
Variable Ownable._NEW_OWNER_ (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#214) is not in mixedCase
Variable NewOracleProxy.T0 (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#262) is not in mixedCase
Variable NewOracleProxy.RATIO (loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol#263) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:./loops/0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol analyzed (5 contracts with 46 detectors), 16 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x4339aeA71d38b5Edb545987F5096992aE7abBB14.sol
Tool Runtime = 0.844794204000209 seconds
#############################################