INFO:Detectors:[91m
PV.sendBalanceDeveloper() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#375-380) sends eth to arbitrary user
	Dangerous calls:
	- address(uint160(configs[0].developer)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#378)
PV.sendBalanceFund() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#382-386) sends eth to arbitrary user
	Dangerous calls:
	- address(uint160(configs[0].fund)).transfer(address(this).balance) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#384)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
PV.sendEarning(address,uint256,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#125-179) uses a dangerous strict equality:
	- users[_addr_].grace == false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#148)
PV.sendPaymentsNetwork(uint256,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#225-271) uses a dangerous strict equality:
	- users[_addr_].pay == false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#231)
PV.sendPaymentsNetwork(uint256,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#225-271) uses a dangerous strict equality:
	- users[referrerAddress].pay == false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#256)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
PV.sendEarning(address,uint256,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#125-179) uses timestamp for comparisons
	Dangerous comparisons:
	- now <= users[_addr_].finish (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#126)
	- totalEarning > priceVault (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#132)
	- users[_addr_].repurchase >= priceVault (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#141)
	- users[_addr_].rounds >= totalRounds (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#147)
	- users[_addr_].grace == false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#148)
	- earningSendETH > 0 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#155)
	- totalEarning > (priceVault * 1) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#160)
	- users[_addr_].profit >= (priceVault * 1) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#170)
	- earningSendETH > 0 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#174)
PV.searchUserActive(address,uint256,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#185-201) uses timestamp for comparisons
	Dangerous comparisons:
	- users[_addr].isExist && _count < CountLevels (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#187)
	- _now <= users[_addr].finish (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#188)
PV.searchUserActiveNetwork(address,uint256,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#203-223) uses timestamp for comparisons
	Dangerous comparisons:
	- users[_addr].isExist && _count < CountLevels (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#205)
	- getReferrerActives(_addr,_now) >= 3 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#206)
	- _now <= users[_addr].finish (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#207)
PV.sendPaymentsNetwork(uint256,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#225-271) uses timestamp for comparisons
	Dangerous comparisons:
	- _now <= users[_addr_].finish (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#230)
	- users[_addr_].pay == false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#231)
	- getReferrerActives(referrerAddress,_now) < 3 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#252)
	- _now <= users[referrerAddress].finish (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#255)
	- users[referrerAddress].pay == false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#256)
PV.fallback() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#273-277) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(users[referrer].isExist,Sponsor not Exists) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#275)
PV.Repurchase() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#279-292) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(users[msg.sender].isExist,User not Exists) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#280)
	- require(bool,string)(users[msg.sender].rounds >= 5,User not inactive) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#281)
PV.PayAnotherAccount(uint256,address) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#294-297) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(users[msg.sender].isExist,User Payment not Exists) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#295)
PV.NewUser(uint256,address) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#299-309) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(! users[_user].isExist,User Exists) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#300)
	- require(bool,string)(users[userList[_sponsorID]].isExist,Sponsor not Exists) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#301)
PV.buyVault(address) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#336-347) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(users[_user].isExist,User not Exists) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#337)
	- require(bool,string)(getReferrerActives(_user,now) >= 3,You need 3 direct users actives) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#340)
PV.sendEth(address,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#369-373) uses timestamp for comparisons
	Dangerous comparisons:
	- _amount > 0 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#370)
PV.getUserReferrerLast(address) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#388-394) uses timestamp for comparisons
	Dangerous comparisons:
	- users[_user].referrerID != 0 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#389)
PV.getReferrerActives(address,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#396-411) uses timestamp for comparisons
	Dangerous comparisons:
	- users[_user].referredUsers < 3 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#397)
	- i <= users[_user].referredUsers (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#401)
	- _now <= users[_user].finish (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#402)
PV.getUserStatusReferrers(address,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#419-430) uses timestamp for comparisons
	Dangerous comparisons:
	- t_r >= 3 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#421)
	- _now <= users[_user].finish (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#422)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
PV.bytesToAddress(bytes) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#413-417) uses assembly
	- INLINE ASM (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#414-417)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
PV.init(address,address,address) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#85-100) compares to a boolean constant:
	-require(bool,string)(initialized == false,Error, the contract has already been initialized) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#86)
PV.sendEarning(address,uint256,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#125-179) compares to a boolean constant:
	-users[_addr_].grace == false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#148)
PV.sendPaymentsNetwork(uint256,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#225-271) compares to a boolean constant:
	-users[referrerAddress].pay == false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#256)
PV.sendPaymentsNetwork(uint256,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#225-271) compares to a boolean constant:
	-users[_addr_].pay == false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#231)
PV.createVault(address,uint256,bool) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#311-334) compares to a boolean constant:
	-_check == true (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#312)
PV.sendVaults() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#349-356) compares to a boolean constant:
	-vaultsUsers[i].pay == true && vaultsUsers[i].payment_received < 3 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#352)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Event PVeventNewUser(address,address,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#432) is not in CapWords
Event PVeventBuyVault(address,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#433) is not in CapWords
Parameter PV.setAddrFund(address)._addr (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#73) is not in mixedCase
Parameter PV.setAddrDeveloper(address)._addr (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#77) is not in mixedCase
Parameter PV.changePrice(uint256)._price (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#81) is not in mixedCase
Parameter PV.init(address,address,address)._developer (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#85) is not in mixedCase
Parameter PV.init(address,address,address)._dev_1 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#85) is not in mixedCase
Parameter PV.init(address,address,address)._fund (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#85) is not in mixedCase
Parameter PV.createUser(uint256,address)._sponsorID (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#102) is not in mixedCase
Parameter PV.createUser(uint256,address)._user (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#102) is not in mixedCase
Parameter PV.sendEarning(address,uint256,uint256)._addr_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#125) is not in mixedCase
Parameter PV.sendEarning(address,uint256,uint256)._earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#125) is not in mixedCase
Parameter PV.sendEarning(address,uint256,uint256)._action (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#125) is not in mixedCase
Parameter PV.searchUserActive(address,uint256,uint256)._addr (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#185) is not in mixedCase
Parameter PV.searchUserActive(address,uint256,uint256)._now (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#185) is not in mixedCase
Parameter PV.searchUserActive(address,uint256,uint256)._count (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#185) is not in mixedCase
Parameter PV.searchUserActiveNetwork(address,uint256,uint256)._addr (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#203) is not in mixedCase
Parameter PV.searchUserActiveNetwork(address,uint256,uint256)._now (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#203) is not in mixedCase
Parameter PV.searchUserActiveNetwork(address,uint256,uint256)._count (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#203) is not in mixedCase
Parameter PV.sendPaymentsNetwork(uint256,uint256)._sponsorID (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#225) is not in mixedCase
Parameter PV.sendPaymentsNetwork(uint256,uint256)._now (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#225) is not in mixedCase
Function PV.Repurchase() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#279-292) is not in mixedCase
Function PV.PayAnotherAccount(uint256,address) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#294-297) is not in mixedCase
Parameter PV.PayAnotherAccount(uint256,address)._sponsorID (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#294) is not in mixedCase
Parameter PV.PayAnotherAccount(uint256,address)._user (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#294) is not in mixedCase
Function PV.NewUser(uint256,address) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#299-309) is not in mixedCase
Parameter PV.NewUser(uint256,address)._sponsorID (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#299) is not in mixedCase
Parameter PV.NewUser(uint256,address)._user (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#299) is not in mixedCase
Parameter PV.createVault(address,uint256,bool)._user (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#311) is not in mixedCase
Parameter PV.createVault(address,uint256,bool)._payment (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#311) is not in mixedCase
Parameter PV.createVault(address,uint256,bool)._check (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#311) is not in mixedCase
Parameter PV.buyVault(address)._user (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#336) is not in mixedCase
Parameter PV.sendEth(address,uint256)._user (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#369) is not in mixedCase
Parameter PV.sendEth(address,uint256)._amount (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#369) is not in mixedCase
Parameter PV.getUserReferrerLast(address)._user (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#388) is not in mixedCase
Parameter PV.getReferrerActives(address,uint256)._user (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#396) is not in mixedCase
Parameter PV.getReferrerActives(address,uint256)._now (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#396) is not in mixedCase
Parameter PV.getUserStatusReferrers(address,uint256)._user (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#419) is not in mixedCase
Parameter PV.getUserStatusReferrers(address,uint256)._now (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#419) is not in mixedCase
Variable PV.CountLevels (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#17) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Reentrancy in PV.NewUser(uint256,address) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#299-309):
	External calls:
	- sendBalanceDeveloper() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#305)
		- address(uint160(configs[0].developer)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#378)
	- sendPaymentsNetwork(_sponsorID,now) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#306)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	State variables written after the call(s):
	- sendPaymentsNetwork(_sponsorID,now) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#306)
		- users[_addr_].earnings += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#134)
		- users[_addr_].profit += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#135)
		- users[_addr_].repurchase += _earning_ - earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#136)
		- users[_addr_].repurchase += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#139)
		- users[_addr_].pay = true (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#142)
		- users[_addr_].profit = restEarning (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#143)
		- users[_addr_].repurchase = 0 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#144)
		- users[_addr_].buys += 1 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#145)
		- users[_addr_].rounds ++ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#146)
		- users[_addr_].pay = false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#149)
		- users[_addr_].finish = now + 259200 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#150)
		- users[_addr_].grace = true (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#151)
		- users[_addr_].earnings += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#162)
		- users[_addr_].profit += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#163)
		- users[_addr_].earnings += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#167)
		- users[_addr_].profit += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#168)
		- users[_addr_].pay = false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#171)
		- users[_addr_].repurchase = restEarning (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#172)
Reentrancy in PV.NewUser(uint256,address) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#299-309):
	External calls:
	- sendBalanceDeveloper() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#305)
		- address(uint160(configs[0].developer)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#378)
	- sendPaymentsNetwork(_sponsorID,now) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#306)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	- sendBalanceFund() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#307)
		- address(uint160(configs[0].fund)).transfer(address(this).balance) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#384)
	Event emitted after the call(s):
	- eventNewUser(_user,userList[_sponsorID],now) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#308)
Reentrancy in PV.Repurchase() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#279-292):
	External calls:
	- sendBalanceDeveloper() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#289)
		- address(uint160(configs[0].developer)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#378)
	- sendPaymentsNetwork(users[msg.sender].referrerID,now) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#290)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	State variables written after the call(s):
	- sendPaymentsNetwork(users[msg.sender].referrerID,now) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#290)
		- users[_addr_].earnings += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#134)
		- users[_addr_].profit += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#135)
		- users[_addr_].repurchase += _earning_ - earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#136)
		- users[_addr_].repurchase += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#139)
		- users[_addr_].pay = true (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#142)
		- users[_addr_].profit = restEarning (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#143)
		- users[_addr_].repurchase = 0 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#144)
		- users[_addr_].buys += 1 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#145)
		- users[_addr_].rounds ++ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#146)
		- users[_addr_].pay = false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#149)
		- users[_addr_].finish = now + 259200 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#150)
		- users[_addr_].grace = true (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#151)
		- users[_addr_].earnings += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#162)
		- users[_addr_].profit += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#163)
		- users[_addr_].earnings += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#167)
		- users[_addr_].profit += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#168)
		- users[_addr_].pay = false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#171)
		- users[_addr_].repurchase = restEarning (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#172)
Reentrancy in PV.buyVault(address) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#336-347):
	External calls:
	- sendBalanceDeveloper() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#343)
		- address(uint160(configs[0].developer)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#378)
	- sendVaults() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#344)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	State variables written after the call(s):
	- sendVaults() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#344)
		- numberSecuence ++ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#333)
	- sendVaults() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#344)
		- usersVault[_user] = user_vault_struct (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#319)
		- usersVault[_user].idVault = numberSecuence (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#321)
		- usersVault[_user].total ++ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#322)
	- sendVaults() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#344)
		- vaultsCompleted ++ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#364)
	- sendVaults() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#344)
		- vaultsUsers[i].payment_received ++ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#361)
		- vaultsUsers[i].pay = false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#363)
		- vaultsUsers[numberSecuence] = vault_user_struct (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#332)
Reentrancy in PV.buyVault(address) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#336-347):
	External calls:
	- sendBalanceDeveloper() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#343)
		- address(uint160(configs[0].developer)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#378)
	- sendVaults() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#344)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	- sendBalanceFund() (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#345)
		- address(uint160(configs[0].fund)).transfer(address(this).balance) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#384)
	Event emitted after the call(s):
	- eventBuyVault(_user,now) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#346)
Reentrancy in PV.sendPaymentVault(uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#358-367):
	External calls:
	- sendEth(vaultsUsers[i].user,_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#360)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	State variables written after the call(s):
	- createVault(vaultsUsers[i].user,0,false) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#365)
		- numberSecuence ++ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#333)
	- createVault(vaultsUsers[i].user,0,false) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#365)
		- usersVault[_user] = user_vault_struct (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#319)
		- usersVault[_user].idVault = numberSecuence (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#321)
		- usersVault[_user].total ++ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#322)
	- vaultsCompleted ++ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#364)
	- vaultsUsers[i].payment_received ++ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#361)
	- vaultsUsers[i].pay = false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#363)
	- createVault(vaultsUsers[i].user,0,false) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#365)
		- vaultsUsers[numberSecuence] = vault_user_struct (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#332)
Reentrancy in PV.sendPaymentsNetwork(uint256,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#225-271):
	External calls:
	- sendEarning(_addr_,_earning_,1) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#232)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	- sendEarning(_addr_,_earning_,0) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#239)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	State variables written after the call(s):
	- sendEarning(_addr_,_earning_,0) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#239)
		- users[_addr_].earnings += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#134)
		- users[_addr_].profit += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#135)
		- users[_addr_].repurchase += _earning_ - earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#136)
		- users[_addr_].repurchase += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#139)
		- users[_addr_].pay = true (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#142)
		- users[_addr_].profit = restEarning (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#143)
		- users[_addr_].repurchase = 0 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#144)
		- users[_addr_].buys += 1 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#145)
		- users[_addr_].rounds ++ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#146)
		- users[_addr_].pay = false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#149)
		- users[_addr_].finish = now + 259200 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#150)
		- users[_addr_].grace = true (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#151)
		- users[_addr_].earnings += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#162)
		- users[_addr_].profit += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#163)
		- users[_addr_].earnings += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#167)
		- users[_addr_].profit += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#168)
		- users[_addr_].pay = false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#171)
		- users[_addr_].repurchase = restEarning (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#172)
Reentrancy in PV.sendPaymentsNetwork(uint256,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#225-271):
	External calls:
	- sendEarning(_addr_,_earning_,1) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#232)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	- sendEarning(_addr_,_earning_,0) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#239)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	- sendEarning(referrerAddress,_earning_,1) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#257)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	State variables written after the call(s):
	- sendEarning(referrerAddress,_earning_,1) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#257)
		- users[_addr_].earnings += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#134)
		- users[_addr_].profit += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#135)
		- users[_addr_].repurchase += _earning_ - earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#136)
		- users[_addr_].repurchase += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#139)
		- users[_addr_].pay = true (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#142)
		- users[_addr_].profit = restEarning (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#143)
		- users[_addr_].repurchase = 0 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#144)
		- users[_addr_].buys += 1 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#145)
		- users[_addr_].rounds ++ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#146)
		- users[_addr_].pay = false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#149)
		- users[_addr_].finish = now + 259200 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#150)
		- users[_addr_].grace = true (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#151)
		- users[_addr_].earnings += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#162)
		- users[_addr_].profit += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#163)
		- users[_addr_].earnings += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#167)
		- users[_addr_].profit += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#168)
		- users[_addr_].pay = false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#171)
		- users[_addr_].repurchase = restEarning (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#172)
Reentrancy in PV.sendPaymentsNetwork(uint256,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#225-271):
	External calls:
	- sendEarning(_addr_,_earning_,1) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#232)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	- sendEarning(_addr_,_earning_,0) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#239)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	- sendEarning(referrerAddress,_earning_,1) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#257)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	- sendEarning(referrerAddress,_earning_,0) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#264)
		- address(uint160(_user)).transfer(_amount) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#371)
	State variables written after the call(s):
	- sendEarning(referrerAddress,_earning_,0) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#264)
		- users[_addr_].earnings += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#134)
		- users[_addr_].profit += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#135)
		- users[_addr_].repurchase += _earning_ - earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#136)
		- users[_addr_].repurchase += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#139)
		- users[_addr_].pay = true (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#142)
		- users[_addr_].profit = restEarning (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#143)
		- users[_addr_].repurchase = 0 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#144)
		- users[_addr_].buys += 1 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#145)
		- users[_addr_].rounds ++ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#146)
		- users[_addr_].pay = false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#149)
		- users[_addr_].finish = now + 259200 (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#150)
		- users[_addr_].grace = true (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#151)
		- users[_addr_].earnings += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#162)
		- users[_addr_].profit += earningSendETH (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#163)
		- users[_addr_].earnings += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#167)
		- users[_addr_].profit += _earning_ (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#168)
		- users[_addr_].pay = false (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#171)
		- users[_addr_].repurchase = restEarning (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#172)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4[0m
INFO:Detectors:[92m
PV.totalRounds (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#16) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
getUserStatusReferrers(address,uint256) should be declared external:
	- PV.getUserStatusReferrers(address,uint256) (loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol#419-430)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol analyzed (1 contracts with 46 detectors), 78 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x7729b6278ac7c6c1fcf40d8d505e37488fbc0ec0.sol
Tool Runtime = 1.1713239490018168 seconds
#############################################