Compilation warnings/errors on ./loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol:
./loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol:650:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function add(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol:656:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function mul(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol:653:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function sub(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol:726:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[91m
ERC20Detailed.______gap (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#209) shadows:
	- Initializable.______gap (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#68)
ERC20.______gap (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#632) shadows:
	- Initializable.______gap (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#68)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing[0m
INFO:Detectors:[91m
InDefiEcoPreMining.flashloanFromAddress (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1031) is never initialized. It is used in:
	- InDefiEcoPreMining.withdrawToken(IToken,uint256,address) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1194-1214)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
IToken (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#245-258) has incorrect ERC20 function interface:IToken.approve(address,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#249)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
InDefiEcoPreMining.depositWBTC(address,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1177-1192) ignores return value by IDfFinanceDeposits(dfDeposits).deposit(dfWallet,0,0,amountWBTC,0,0,IDfFinanceDeposits.FlashloanProvider.DYDX,address(0)) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1182-1191)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
ERC20Detailed.initialize(string,string,uint8).name (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#172) shadows:
	- ERC20Detailed.name() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#181-183) (function)
ERC20Detailed.initialize(string,string,uint8).symbol (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#172) shadows:
	- ERC20Detailed.symbol() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#189-191) (function)
ERC20Detailed.initialize(string,string,uint8).decimals (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#172) shadows:
	- ERC20Detailed.decimals() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#205-207) (function)
InDefiEcoPreMining.getInfo(address,address).symbol (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1042) shadows:
	- ERC20Detailed.symbol() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#189-191) (function)
InDefiEcoPreMining.fundsToTokensUsePrice(IToken,uint256,uint256).decimals (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1066) shadows:
	- ERC20Detailed.decimals() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#205-207) (function)
InDefiEcoPreMining.deposit(IToken,uint256).symbol (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1075) shadows:
	- ERC20Detailed.symbol() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#189-191) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
InDefiEcoPreMining.approveTokens(address[]) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1152-1162) has external calls inside a loop: token.allowance(address(this),address(dfTokenizedStrategy)) != uint256(- 1) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1155)
InDefiEcoPreMining.approveTokens(address[]) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1152-1162) has external calls inside a loop: token.allowance(address(this),address(dfDeposits)) != uint256(- 1) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1158)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in InDefiEcoPreMining.deposit(IToken,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1071-1095):
	External calls:
	- token.universalTransferFrom(msg.sender,address(this),amount) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1080)
	State variables written after the call(s):
	- totalCurrentTokens = add(totalCurrentTokens,tokensToMint) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1083)
	- depo.amount = totalAmount + amount (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1089)
	- depo.avgPrice = newAvgPrice (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1090)
	- depo.tokensToMint = add(depo.tokensToMint,tokensToMint) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1091)
	- depo.lastDeposit = uint128(now) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1092)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
InDefiEcoPreMining.deposit(IToken,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1071-1095) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(now < maxDateDeposits) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1072)
InDefiEcoPreMining.releaseTokens(address,address[]) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1097-1116) uses timestamp for comparisons
	Dangerous comparisons:
	- now > depo.lastDeposit + _maxDelayUntilClaimTokens (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1105)
InDefiEcoPreMining.withdraw(address,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1134-1150) uses timestamp for comparisons
	Dangerous comparisons:
	- now < dateFundsUnlocked (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1140)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Initializable.isConstructor() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#55-65) uses assembly
	- INLINE ASM (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#63-64)
Address.isContract(address) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#715-728) uses assembly
	- INLINE ASM (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#726-727)
InDefiEcoPreMining.externalCallToTokenizedStrategy(address,bytes,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1164-1175) uses assembly
	- INLINE ASM (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1167-1175)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#8) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#74) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#154) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#215) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#243) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#263) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#423) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#638) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#647) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#698) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#770) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#852) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#935) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#758-764):
	- (success) = recipient.call.value(amount)() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#762)
Low level call in SafeERC20.callOptionalReturn(IToken,bytes) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#827-846):
	- (success,returndata) = address(token).call(data) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#839)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Variable Initializable.______gap (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#68) is not in mixedCase
Variable ERC20Detailed.______gap (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#209) is not in mixedCase
Variable ERC20.______gap (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#632) is not in mixedCase
Variable ERC20._balances (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#435) is not in mixedCase
Variable ERC20._allowances (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#437) is not in mixedCase
Variable ERC20._totalSupply (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#439) is not in mixedCase
Constant InDefiEcoPreMining.dfTokenizedStrategy (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#997) is not in UPPER_CASE_WITH_UNDERSCORES
Constant InDefiEcoPreMining.dfDeposits (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#998) is not in UPPER_CASE_WITH_UNDERSCORES
Constant InDefiEcoPreMining.totalMaxTokens (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1032) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
UniversalERC20.slitherConstructorConstantVariables() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#859-930) uses literals with too many digits:
	- ZERO_ADDRESS = IToken(0x0000000000000000000000000000000000000000) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#864)
InDefiEcoPreMining.slitherConstructorConstantVariables() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#976-1222) uses literals with too many digits:
	- totalMaxTokens = 20000000 * 1e18 (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1032)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
ERC20.______gap (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#632) is never used in InDefiEcoPreMining (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#976-1222)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
InDefiEcoPreMining.flashloanFromAddress (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1031) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
name() should be declared external:
	- ERC20Detailed.name() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#181-183)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#189-191)
decimals() should be declared external:
	- ERC20Detailed.decimals() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#205-207)
changeOwner(address) should be declared external:
	- Ownable.changeOwner(address) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#230-232)
acceptOwner() should be declared external:
	- Ownable.acceptOwner() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#234-237)
totalSupply() should be declared external:
	- ERC20.totalSupply() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#444-446)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#451-453)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#463-466)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#471-473)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#482-485)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#499-503)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#517-520)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#536-539)
initialize() should be declared external:
	- InDefiEcoPreMining.initialize() (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1000-1010)
getInfo(address,address) should be declared external:
	- InDefiEcoPreMining.getInfo(address,address) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1040-1052)
activateEmergencyWithdrawal(address) should be declared external:
	- InDefiEcoPreMining.activateEmergencyWithdrawal(address) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1059-1062)
deposit(IToken,uint256) should be declared external:
	- InDefiEcoPreMining.deposit(IToken,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1071-1095)
emergencyWithdraw(address) should be declared external:
	- InDefiEcoPreMining.emergencyWithdraw(address) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1118-1132)
withdraw(address,uint256) should be declared external:
	- InDefiEcoPreMining.withdraw(address,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1134-1150)
approveTokens(address[]) should be declared external:
	- InDefiEcoPreMining.approveTokens(address[]) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1152-1162)
externalCallToTokenizedStrategy(address,bytes,uint256) should be declared external:
	- InDefiEcoPreMining.externalCallToTokenizedStrategy(address,bytes,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1164-1175)
depositWBTC(address,uint256) should be declared external:
	- InDefiEcoPreMining.depositWBTC(address,uint256) (loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol#1177-1192)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xca2097908669f8b33ad8510994baf32ed618c39b.sol analyzed (16 contracts with 46 detectors), 71 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xca2097908669f8b33ad8510994baf32ed618c39b.sol
Tool Runtime = 1.971331275999546 seconds
#############################################