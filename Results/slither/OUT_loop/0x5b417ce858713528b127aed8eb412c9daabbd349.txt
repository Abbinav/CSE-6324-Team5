Compilation warnings/errors on ./loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol:
./loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol:466:5: Warning: Function state mutability can be restricted to view
    function maxRandom(uint blockn, address entropy)
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol:486:5: Warning: Function state mutability can be restricted to view
    function determinePrize(uint256 result)
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol:538:5: Warning: Function state mutability can be restricted to pure
    function mul(uint256 a, uint256 b) internal view returns (uint256 c) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol:550:5: Warning: Function state mutability can be restricted to pure
    function div(uint256 a, uint256 b) internal view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol:560:5: Warning: Function state mutability can be restricted to pure
    function sub(uint256 a, uint256 b) internal view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol:568:5: Warning: Function state mutability can be restricted to pure
    function add(uint256 a, uint256 b) internal view returns (uint256 c) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in WheelOfShuffle.refundUser(address) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#328-338):
	External calls:
	- ! ERC20Interface(tokenAddress).transfer(_customerAddress,withdrawAmount) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#333)
	State variables written after the call(s):
	- balanceLedger_[_customerAddress] = 0 (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#335)
	- personalFactorLedger_[_customerAddress] = constantFactor / globalFactor (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#336)
Reentrancy in WheelOfShuffle.withdraw(uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#189-200):
	External calls:
	- ! ERC20Interface(tokenAddress).transfer(_customerAddress,amount) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#195)
	State variables written after the call(s):
	- balanceLedger_[_customerAddress] = tokenBalanceOf(_customerAddress).sub(amount) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#197)
	- personalFactorLedger_[_customerAddress] = constantFactor / globalFactor (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#198)
Reentrancy in WheelOfShuffle.withdrawAll() (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#203-216):
	External calls:
	- ! ERC20Interface(tokenAddress).transfer(_customerAddress,amount) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#211)
	State variables written after the call(s):
	- balanceLedger_[_customerAddress] = 0 (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#213)
	- personalFactorLedger_[_customerAddress] = constantFactor / globalFactor (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#214)
Reentrancy in WheelOfShuffle.withdrawDevFees() (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#368-376):
	External calls:
	- ! ERC20Interface(tokenAddress).transfer(fund,devFeeBalance / 2) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#373)
	State variables written after the call(s):
	- devFeeBalance = devFeeBalance.sub(initDevBal / 2) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#375)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
WheelOfShuffle.deposit(address,uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#163-178) uses tx.origin for authorization: require(bool)(tx.origin == _customerAddress) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#167)
WheelOfShuffle.depositAndSpin(address,uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#276-303) uses tx.origin for authorization: require(bool)(tx.origin == _customerAddress) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#280)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-usage-of-txorigin[0m
INFO:Detectors:[93m
WheelOfShuffle._finishSpin(address).wonAmount (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#426) is a local variable never initialized
WheelOfShuffle._finishSpin(address).lostAmount (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#442) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Reentrancy in WheelOfShuffle.deposit(address,uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#163-178):
	External calls:
	- require(bool,string)(ERC20Interface(tokenAddress).transferFrom(_customerAddress,tokenAddress,amount),token transfer failed) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#169)
	State variables written after the call(s):
	- balanceLedger_[_customerAddress] = tokenBalanceOf(_customerAddress).add(amount).sub(devFee) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#174)
	- devFeeBalance = devFeeBalance.add(devFee) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#172)
	- personalFactorLedger_[_customerAddress] = constantFactor / globalFactor (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#175)
Reentrancy in WheelOfShuffle.depositAndSpin(address,uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#276-303):
	External calls:
	- require(bool,string)(ERC20Interface(tokenAddress).transferFrom(_customerAddress,tokenAddress,betAmount),token transfer failed) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#282)
	State variables written after the call(s):
	- balanceLedger_[_customerAddress] = tokenBalanceOf(_customerAddress).add(betAmount).sub(devFee) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#287)
	- startSpin(betAmount,_customerAddress) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#302)
		- balanceLedger_[_customerAddress] = customerBal.add(wonAmount) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#525)
		- balanceLedger_[_customerAddress] = customerBal.sub(lostAmount) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#512)
	- devFeeBalance = devFeeBalance.add(devFee) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#285)
	- startSpin(betAmount,_customerAddress) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#302)
		- globalFactor = globalFactor.add(globalIncrease) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#505)
		- globalFactor = globalFactor.sub(globalDecrease) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#522)
	- personalFactorLedger_[_customerAddress] = constantFactor / globalFactor (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#288)
	- startSpin(betAmount,_customerAddress) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#302)
		- personalFactorLedger_[_customerAddress] = constantFactor / globalFactor (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#507)
		- personalFactorLedger_[_customerAddress] = constantFactor / globalFactor (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#524)
	- startSpin(betAmount,_customerAddress) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#302)
		- playerSpins[_customerAddress] = playerSpin(uint256(betAmount),uint48(block.number)) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#400)
		- playerSpins[_customerAddress] = playerSpin(uint256(0),uint48(0)) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#460)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in WheelOfShuffle.deposit(address,uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#163-178):
	External calls:
	- require(bool,string)(ERC20Interface(tokenAddress).transferFrom(_customerAddress,tokenAddress,amount),token transfer failed) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#169)
	Event emitted after the call(s):
	- onDeposit(_customerAddress,amount,getBalance(),devFee,now) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#177)
Reentrancy in WheelOfShuffle.depositAndSpin(address,uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#276-303):
	External calls:
	- require(bool,string)(ERC20Interface(tokenAddress).transferFrom(_customerAddress,tokenAddress,betAmount),token transfer failed) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#282)
	Event emitted after the call(s):
	- onDeposit(_customerAddress,betAmount,getBalance(),devFee,now) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#290)
	- spinResult(_customerAddress,resultNum,result,betAmount,returnedAmount,newBal,now) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#458)
		- startSpin(betAmount,_customerAddress) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#302)
Reentrancy in WheelOfShuffle.refundUser(address) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#328-338):
	External calls:
	- ! ERC20Interface(tokenAddress).transfer(_customerAddress,withdrawAmount) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#333)
	Event emitted after the call(s):
	- onWithdraw(_customerAddress,withdrawAmount,getBalance(),now) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#337)
Reentrancy in WheelOfShuffle.withdraw(uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#189-200):
	External calls:
	- ! ERC20Interface(tokenAddress).transfer(_customerAddress,amount) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#195)
	Event emitted after the call(s):
	- onWithdraw(_customerAddress,amount,getBalance(),now) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#199)
Reentrancy in WheelOfShuffle.withdrawAll() (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#203-216):
	External calls:
	- ! ERC20Interface(tokenAddress).transfer(_customerAddress,amount) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#211)
	Event emitted after the call(s):
	- onWithdraw(_customerAddress,amount,getBalance(),now) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#215)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
WheelOfShuffle.gameActive() (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#87-90) compares to a boolean constant:
	-require(bool)(gamePaused == false) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#88)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#10) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Struct WheelOfShuffle.playerSpin (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#133-136) is not in CapWords
Event WheelOfShuffleonDeposit(address,uint256,uint256,uint256,uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#99-105) is not in CapWords
Event WheelOfShuffleonWithdraw(address,uint256,uint256,uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#107-112) is not in CapWords
Event WheelOfShufflespinResult(address,uint256,uint256,uint256,uint256,uint256,uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#114-122) is not in CapWords
Parameter WheelOfShuffle.deposit(address,uint256)._customerAddress (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#163) is not in mixedCase
Parameter WheelOfShuffle.tokenBalanceOf(address)._customerAddress (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#219) is not in mixedCase
Parameter WheelOfShuffle.depositAndSpin(address,uint256)._customerAddress (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#276) is not in mixedCase
Parameter WheelOfShuffle.betPool(address)._customerAddress (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#306) is not in mixedCase
Parameter WheelOfShuffle.refundUser(address)._customerAddress (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#328) is not in mixedCase
Parameter WheelOfShuffle.finishSpin(address)._customerAddress (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#379) is not in mixedCase
Parameter WheelOfShuffle.startSpin(uint256,address)._customerAddress (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#390) is not in mixedCase
Parameter WheelOfShuffle.lose(address,uint256)._customerAddress (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#499) is not in mixedCase
Parameter WheelOfShuffle.win(address,uint256)._customerAddress (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#516) is not in mixedCase
Variable WheelOfShuffle._seed (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#124) is not in mixedCase
Constant WheelOfShuffle.constantFactor (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#143) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
WheelOfShuffle.slitherConstructorVariables() (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#77-527) uses literals with too many digits:
	- minBet = 1000000000000000000 (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#127)
WheelOfShuffle.slitherConstructorVariables() (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#77-527) uses literals with too many digits:
	- maxBet = 500000000000000000000 (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#128)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
WheelOfShuffle._seed (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#124) is never used in WheelOfShuffle (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#77-527)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
WheelOfShuffle._seed (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#124) should be constant
WheelOfShuffle.tokenAddress (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#144) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- ERC20Interface.totalSupply() (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#64)
balanceOf(address) should be declared external:
	- ERC20Interface.balanceOf(address) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#65)
allowance(address,address) should be declared external:
	- ERC20Interface.allowance(address,address) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#66)
transfer(address,uint256) should be declared external:
	- ERC20Interface.transfer(address,uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#67)
approve(address,uint256) should be declared external:
	- ERC20Interface.approve(address,uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#68)
transferFrom(address,address,uint256) should be declared external:
	- ERC20Interface.transferFrom(address,address,uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#69)
deposit(address,uint256) should be declared external:
	- WheelOfShuffle.deposit(address,uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#163-178)
receiveApproval(address,uint256,uint256) should be declared external:
	- WheelOfShuffle.receiveApproval(address,uint256,uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#181-185)
withdraw(uint256) should be declared external:
	- WheelOfShuffle.withdraw(uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#189-200)
withdrawAll() should be declared external:
	- WheelOfShuffle.withdrawAll() (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#203-216)
spinAll() should be declared external:
	- WheelOfShuffle.spinAll() (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#252-272)
panicButton(bool) should be declared external:
	- WheelOfShuffle.panicButton(bool) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#320-325)
refundUser(address) should be declared external:
	- WheelOfShuffle.refundUser(address) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#328-338)
updateMinBet(uint256) should be declared external:
	- WheelOfShuffle.updateMinBet(uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#341-347)
updateMaxBet(uint256) should be declared external:
	- WheelOfShuffle.updateMaxBet(uint256) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#350-356)
getDevBalance() should be declared external:
	- WheelOfShuffle.getDevBalance() (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#359-365)
withdrawDevFees() should be declared external:
	- WheelOfShuffle.withdrawDevFees() (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#368-376)
finishSpin(address) should be declared external:
	- WheelOfShuffle.finishSpin(address) (loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol#379-384)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x5b417ce858713528b127aed8eb412c9daabbd349.sol analyzed (3 contracts with 46 detectors), 56 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x5b417ce858713528b127aed8eb412c9daabbd349.sol
Tool Runtime = 1.5303184859985777 seconds
#############################################