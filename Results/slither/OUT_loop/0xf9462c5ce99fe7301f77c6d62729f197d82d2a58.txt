INFO:Detectors:[93m
AntiHole.transfer(address,uint256) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#132-187) performs a multiplication on the result of a division:
	-myInt2 = fee_J5y(value).div(6).mul(4) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#141)
AntiHole.transfer(address,uint256) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#132-187) performs a multiplication on the result of a division:
	-myInts[x] = myInt2.div(myInt3).mul(walletsw[x]) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#154)
AntiHole.transferFrom(address,address,uint256) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#196-251) performs a multiplication on the result of a division:
	-myInt2 = fee_J5y(value).div(6).mul(4) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#206)
AntiHole.transferFrom(address,address,uint256) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#196-251) performs a multiplication on the result of a division:
	-myInts[x] = myInt2.div(myInt3).mul(walletsw[x]) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#219)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
Contract locking ether found in :
	Contract AntiHole (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#84-337) has payable functions:
	 - AntiHole.constructor() (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#113-115)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
ERC20Detailed.constructor(string,string,uint8).name (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#65) shadows:
	- ERC20Detailed.name() (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#71-73) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#65) shadows:
	- ERC20Detailed.symbol() (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#75-77) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#65) shadows:
	- ERC20Detailed.decimals() (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#79-81) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#12) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Function AntiHole.fee_J5y(uint256) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#128-130) is not in mixedCase
Constant AntiHole.tokenName (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#98) is not in UPPER_CASE_WITH_UNDERSCORES
Constant AntiHole.tokenSymbol (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#99) is not in UPPER_CASE_WITH_UNDERSCORES
Constant AntiHole.tokenDecimals (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#100) is not in UPPER_CASE_WITH_UNDERSCORES
Variable AntiHole._totalSupply (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#101) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
AntiHole.slitherConstructorVariables() (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#84-337) uses literals with too many digits:
	- _totalSupply = 10000000000000000000000 (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#101)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
AntiHole.wallet1 (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#89) is never used in AntiHole (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#84-337)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
AntiHole.wallet1 (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#89) should be constant
AntiHole.wallet2 (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#90) should be constant
AntiHole.walletbp (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#102) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
name() should be declared external:
	- ERC20Detailed.name() (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#71-73)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#75-77)
decimals() should be declared external:
	- ERC20Detailed.decimals() (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#79-81)
totalSupply() should be declared external:
	- AntiHole.totalSupply() (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#116-118)
balanceOf(address) should be declared external:
	- AntiHole.balanceOf(address) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#120-122)
allowance(address,address) should be declared external:
	- AntiHole.allowance(address,address) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#124-126)
transfer(address,uint256) should be declared external:
	- AntiHole.transfer(address,uint256) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#132-187)
approve(address,uint256) should be declared external:
	- AntiHole.approve(address,uint256) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#189-194)
transferFrom(address,address,uint256) should be declared external:
	- AntiHole.transferFrom(address,address,uint256) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#196-251)
increaseAllowance(address,uint256) should be declared external:
	- AntiHole.increaseAllowance(address,uint256) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#253-257)
decreaseAllowance(address,uint256) should be declared external:
	- AntiHole.decreaseAllowance(address,uint256) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#259-263)
enableBool1() should be declared external:
	- AntiHole.enableBool1() (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#289-294)
disableBool3() should be declared external:
	- AntiHole.disableBool3() (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#296-299)
setwallet3(address) should be declared external:
	- AntiHole.setwallet3(address) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#301-305)
setMyInt1(uint256) should be declared external:
	- AntiHole.setMyInt1(uint256) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#307-310)
setWallets2(address) should be declared external:
	- AntiHole.setWallets2(address) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#312-315)
setWallets2x(address) should be declared external:
	- AntiHole.setWallets2x(address) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#317-320)
setWallets3(address) should be declared external:
	- AntiHole.setWallets3(address) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#322-325)
setWallets3x(address) should be declared external:
	- AntiHole.setWallets3x(address) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#327-330)
setWallet4(address) should be declared external:
	- AntiHole.setWallet4(address) (loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol#332-335)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol analyzed (4 contracts with 46 detectors), 40 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xf9462c5ce99fe7301f77c6d62729f197d82d2a58.sol
Tool Runtime = 0.9179318620008416 seconds
#############################################