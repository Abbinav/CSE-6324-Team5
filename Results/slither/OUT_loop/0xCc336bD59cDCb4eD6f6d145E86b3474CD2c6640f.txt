Compilation warnings/errors on ./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:9:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2280:9: Warning: This declaration shadows an existing declaration.
        uint256 totalBonded = totalBonded();
        ^-----------------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2235:5: The shadowed declaration is here:
    function totalBonded() public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2290:9: Warning: This declaration shadows an existing declaration.
        uint256 balanceOfPhantom = balanceOfPhantom(account);
        ^----------------------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2275:5: The shadowed declaration is here:
    function balanceOfPhantom(address account) public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2983:9: Warning: This declaration shadows an existing declaration.
        uint256 totalSupply = totalSupply();
        ^-----------------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2922:5: The shadowed declaration is here:
    function totalSupply() public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3059:33: Warning: This declaration shadows an existing declaration.
    function outstandingCoupons(uint256 epoch) public view returns (uint256) {
                                ^-----------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3032:5: The shadowed declaration is here:
    function epoch() public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3063:32: Warning: This declaration shadows an existing declaration.
    function couponsExpiration(uint256 epoch) public view returns (uint256) {
                               ^-----------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3032:5: The shadowed declaration is here:
    function epoch() public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3067:30: Warning: This declaration shadows an existing declaration.
    function expiringCoupons(uint256 epoch) public view returns (uint256) {
                             ^-----------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3032:5: The shadowed declaration is here:
    function epoch() public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3071:37: Warning: This declaration shadows an existing declaration.
    function expiringCouponsAtIndex(uint256 epoch, uint256 i)
                                    ^-----------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3032:5: The shadowed declaration is here:
    function epoch() public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3079:28: Warning: This declaration shadows an existing declaration.
    function totalBondedAt(uint256 epoch) public view returns (uint256) {
                           ^-----------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3032:5: The shadowed declaration is here:
    function epoch() public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3083:30: Warning: This declaration shadows an existing declaration.
    function bootstrappingAt(uint256 epoch) public view returns (bool) {
                             ^-----------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3032:5: The shadowed declaration is here:
    function epoch() public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2926:24: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function allowance(address owner, address spender)
                       ^-----------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2926:39: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function allowance(address owner, address spender)
                                      ^-------------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3159:23: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function transfer(address recipient, uint256 amount)
                      ^---------------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3159:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function transfer(address recipient, uint256 amount)
                                         ^------------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3166:22: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function approve(address spender, uint256 amount) external returns (bool) {
                     ^-------------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3166:39: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function approve(address spender, uint256 amount) external returns (bool) {
                                      ^------------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3171:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
        address sender,
        ^------------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3172:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
        address recipient,
        ^---------------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3173:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
        uint256 amount
        ^------------^
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2106:5: Warning: Function state mutability can be restricted to pure
    function usdc() internal view returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2219:5: Warning: Function state mutability can be restricted to pure
    function usdc() public view returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2659:5: Warning: Function state mutability can be restricted to view
    function balanceCheck() private {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2906:5: Warning: Function state mutability can be restricted to pure
    function name() public view returns (string memory) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2910:5: Warning: Function state mutability can be restricted to pure
    function symbol() public view returns (string memory) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2914:5: Warning: Function state mutability can be restricted to pure
    function decimals() public view returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2926:5: Warning: Function state mutability can be restricted to pure
    function allowance(address owner, address spender)
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3083:5: Warning: Function state mutability can be restricted to pure
    function bootstrappingAt(uint256 epoch) public view returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3159:5: Warning: Function state mutability can be restricted to pure
    function transfer(address recipient, uint256 amount)
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3166:5: Warning: Function state mutability can be restricted to pure
    function approve(address spender, uint256 amount) external returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3170:5: Warning: Function state mutability can be restricted to pure
    function transferFrom(
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Upgradeable.upgradeTo(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2851-2860) uses delegatecall to a input-controlled function id
	- (success,reason) = newImplementation.delegatecall(abi.encodeWithSignature(initialize())) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2854-2856)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#controlled-delegatecall[0m
INFO:Detectors:[93m
Pool.bond(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2569-2590) uses a dangerous strict equality:
	- totalRewarded() == 0 (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2573-2577)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Pool.claim(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2556-2567):
	External calls:
	- dollar().transfer(msg.sender,value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2557)
	State variables written after the call(s):
	- decrementBalanceOfClaimable(msg.sender,value,Pool: insufficient claimable balance) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2558-2562)
		- _state.accounts[account].claimable = _state.accounts[account].claimable.sub(amount,reason) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2403-2405)
		- _state.balance.claimable = _state.balance.claimable.sub(amount,reason) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2406)
Reentrancy in Pool.deposit(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2534-2541):
	External calls:
	- univ2().transferFrom(msg.sender,address(this),value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2535)
	State variables written after the call(s):
	- incrementBalanceOfStaged(msg.sender,value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2536)
		- _state.accounts[account].staged = _state.accounts[account].staged.add(amount) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2371-2373)
		- _state.balance.staged = _state.balance.staged.add(amount) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2374)
Reentrancy in Pool.provide(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2623-2649):
	External calls:
	- (lessUsdc,newUniv2) = addLiquidity(value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2634)
		- IERC20(dollar).transfer(pair,dollarAmount) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2469)
		- IERC20(usdc).transferFrom(msg.sender,pair,usdcAmount) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2470)
		- (usdcAmount,IUniswapV2Pair(pair).mint(address(this))) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2471)
	State variables written after the call(s):
	- incrementBalanceOfBonded(msg.sender,newUniv2) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2643)
		- _state.accounts[account].bonded = _state.accounts[account].bonded.add(amount) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2350-2352)
		- _state.balance.bonded = _state.balance.bonded.add(amount) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2353)
	- incrementBalanceOfPhantom(msg.sender,value.add(newPhantomFromBonded)) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2644)
		- _state.accounts[account].phantom = _state.accounts[account].phantom.add(amount) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2412-2414)
		- _state.balance.phantom = _state.balance.phantom.add(amount) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2415)
Reentrancy in Pool.withdraw(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2543-2554):
	External calls:
	- univ2().transfer(msg.sender,value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2544)
	State variables written after the call(s):
	- decrementBalanceOfStaged(msg.sender,value,Pool: insufficient staged balance) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2545-2549)
		- _state.accounts[account].staged = _state.accounts[account].staged.sub(amount,reason) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2382-2385)
		- _state.balance.staged = _state.balance.staged.sub(amount,reason) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2386)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
FixedPoint.mul(FixedPoint.uq112x112,uint256).z (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1852) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
Liquidity.addLiquidity(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2457-2472) ignores return value by IERC20(dollar).transfer(pair,dollarAmount) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2469)
Liquidity.addLiquidity(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2457-2472) ignores return value by IERC20(usdc).transferFrom(msg.sender,pair,usdcAmount) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2470)
Pool.deposit(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2534-2541) ignores return value by univ2().transferFrom(msg.sender,address(this),value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2535)
Pool.withdraw(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2543-2554) ignores return value by univ2().transfer(msg.sender,value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2544)
Pool.claim(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2556-2567) ignores return value by dollar().transfer(msg.sender,value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2557)
Pool.emergencyWithdraw(address,uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2651-2653) ignores return value by IERC20(token).transfer(address(dao()),value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2652)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
ERC20Detailed.constructor(string,string,uint8).name (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#752) shadows:
	- ERC20Detailed.name() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#761-763) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#752) shadows:
	- ERC20Detailed.symbol() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#769-771) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#752) shadows:
	- ERC20Detailed.decimals() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#785-787) (function)
Oracle.initializeOracle().pair (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2048) shadows:
	- Oracle.pair() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2110-2112) (function)
	- IOracle.pair() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1974) (function)
PoolGetters.balanceOfRewarded(address).totalBonded (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2280) shadows:
	- PoolGetters.totalBonded() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2235-2237) (function)
PoolGetters.balanceOfRewarded(address).balanceOfPhantom (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2290) shadows:
	- PoolGetters.balanceOfPhantom(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2275-2277) (function)
Liquidity.addLiquidity(uint256).dollar (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2461) shadows:
	- PoolGetters.dollar() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2227-2229) (function)
Liquidity.addLiquidity(uint256).usdc (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2461) shadows:
	- PoolGetters.usdc() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2219-2221) (function)
Pool.constructor(address,address).dollar (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2509) shadows:
	- PoolGetters.dollar() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2227-2229) (function)
Pool.constructor(address,address).univ2 (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2509) shadows:
	- PoolGetters.univ2() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2231-2233) (function)
Pool.unbond(uint256).balanceOfBonded (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2595) shadows:
	- PoolGetters.balanceOfBonded(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2271-2273) (function)
Getters.balanceOfBonded(address).totalSupply (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2983) shadows:
	- Getters.totalSupply() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2922-2924) (function)
Getters.balanceOfCoupons(address,uint256).epoch (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2990) shadows:
	- Getters.epoch() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3032-3034) (function)
Getters.outstandingCoupons(uint256).epoch (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3059) shadows:
	- Getters.epoch() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3032-3034) (function)
Getters.couponsExpiration(uint256).epoch (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3063) shadows:
	- Getters.epoch() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3032-3034) (function)
Getters.expiringCoupons(uint256).epoch (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3067) shadows:
	- Getters.epoch() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3032-3034) (function)
Getters.expiringCouponsAtIndex(uint256,uint256).epoch (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3071) shadows:
	- Getters.epoch() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3032-3034) (function)
Getters.totalBondedAt(uint256).epoch (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3079) shadows:
	- Getters.epoch() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3032-3034) (function)
Getters.bootstrappingAt(uint256).epoch (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3083) shadows:
	- Getters.epoch() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3032-3034) (function)
Setters.incrementBalanceOfCoupons(address,uint256,uint256).epoch (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3263) shadows:
	- Getters.epoch() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3032-3034) (function)
Setters.decrementBalanceOfCoupons(address,uint256,uint256,string).epoch (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3278) shadows:
	- Getters.epoch() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3032-3034) (function)
Setters.initializeCouponsExpiration(uint256,uint256).epoch (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3330) shadows:
	- Getters.epoch() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3032-3034) (function)
Setters.eliminateOutstandingCoupons(uint256).epoch (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3337) shadows:
	- Getters.epoch() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3032-3034) (function)
Deployer1.implement(address).implementation (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3480) shadows:
	- Getters.implementation() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3127-3132) (function)
Deployer2.implement(address).implementation (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3491) shadows:
	- Getters.implementation() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3127-3132) (function)
Deployer3.implement(address).implementation (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3503) shadows:
	- Getters.implementation() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3127-3132) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Oracle.setup() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2016-2029):
	External calls:
	- _pair = IUniswapV2Pair(IUniswapV2Factory(UNISWAP_FACTORY).createPair(_dollar,usdc())) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2017-2019)
	State variables written after the call(s):
	- _index = 0 (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2022)
	- _index = 1 (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2022)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in Pool.claim(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2556-2567):
	External calls:
	- dollar().transfer(msg.sender,value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2557)
	Event emitted after the call(s):
	- Claim(msg.sender,value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2566)
Reentrancy in Pool.deposit(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2534-2541):
	External calls:
	- univ2().transferFrom(msg.sender,address(this),value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2535)
	Event emitted after the call(s):
	- Deposit(msg.sender,value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2540)
Reentrancy in Pool.provide(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2623-2649):
	External calls:
	- (lessUsdc,newUniv2) = addLiquidity(value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2634)
		- IERC20(dollar).transfer(pair,dollarAmount) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2469)
		- IERC20(usdc).transferFrom(msg.sender,pair,usdcAmount) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2470)
		- (usdcAmount,IUniswapV2Pair(pair).mint(address(this))) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2471)
	Event emitted after the call(s):
	- Provide(msg.sender,value,lessUsdc,newUniv2) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2648)
Reentrancy in Upgradeable.upgradeTo(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2851-2860):
	External calls:
	- (success,reason) = newImplementation.delegatecall(abi.encodeWithSignature(initialize())) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2854-2856)
	Event emitted after the call(s):
	- Upgraded(newImplementation) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2859)
Reentrancy in Pool.withdraw(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2543-2554):
	External calls:
	- univ2().transfer(msg.sender,value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2544)
	Event emitted after the call(s):
	- Withdraw(msg.sender,value) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2553)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Permittable.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1614-1645) uses timestamp for comparisons
	Dangerous comparisons:
	- Require.that(now <= deadline,FILE,Expired) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1642)
UniswapV2OracleLibrary.currentCumulativePrices(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1896-1915) uses timestamp for comparisons
	Dangerous comparisons:
	- blockTimestampLast != blockTimestamp (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1906)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Require.stringifyTruncated(bytes32) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1117-1148) uses assembly
	- INLINE ASM (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1138-1142)
LibEIP712.hashEIP712Domain(string,string,uint256,address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1305-1345) uses assembly
	- INLINE ASM (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1326-1344)
LibEIP712.hashEIP712Message(bytes32,bytes32) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1352-1376) uses assembly
	- INLINE ASM (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1364-1375)
OpenZeppelinUpgradesAddress.isContract(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2707-2718) uses assembly
	- INLINE ASM (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2716-2717)
Upgradeable.setImplementation(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2866-2877) uses assembly
	- INLINE ASM (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2874-2877)
Getters.implementation() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3127-3132) uses assembly
	- INLINE ASM (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3129-3132)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#8) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Upgradeable.upgradeTo(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2851-2860):
	- (success,reason) = newImplementation.delegatecall(abi.encodeWithSignature(initialize())) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2854-2856)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Variable Permittable.EIP712_DOMAIN_SEPARATOR (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1601) is not in mixedCase
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1759) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1760) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1777) is not in mixedCase
Struct FixedPoint.uq112x112 (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1819-1821) is not in CapWords
Struct FixedPoint.uq144x112 (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1825-1827) is not in CapWords
Variable Oracle._dao (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2000) is not in mixedCase
Variable Oracle._dollar (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2001) is not in mixedCase
Variable Oracle._initialized (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2003) is not in mixedCase
Variable Oracle._pair (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2004) is not in mixedCase
Variable Oracle._index (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2005) is not in mixedCase
Variable Oracle._cumulative (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2006) is not in mixedCase
Variable Oracle._timestamp (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2007) is not in mixedCase
Variable Oracle._reserve (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2009) is not in mixedCase
Variable PoolState._state (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2194) is not in mixedCase
Variable State._state (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2808) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Constants.slitherConstructorConstantVariables() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1394-1576) uses literals with too many digits:
	- TREASURY_ADDRESS = address(0x0000000000000000000000000000000000000000) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1448-1450)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- ERC20.totalSupply() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#527-529)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#534-536)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#546-549)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#565-568)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#582-586)
	- Dollar.transferFrom(address,address,uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1708-1725)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#600-603)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#619-622)
burn(uint256) should be declared external:
	- ERC20Burnable.burn(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#727-729)
burnFrom(address,uint256) should be declared external:
	- ERC20Burnable.burnFrom(address,uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#734-736)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#769-771)
decimals() should be declared external:
	- ERC20Detailed.decimals() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#785-787)
addMinter(address) should be declared external:
	- MinterRole.addMinter(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#846-848)
renounceMinter() should be declared external:
	- MinterRole.renounceMinter() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#850-852)
burn(uint256) should be declared external:
	- IDollar.burn(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1664)
burnFrom(address,uint256) should be declared external:
	- IDollar.burnFrom(address,uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1666)
mint(address,uint256) should be declared external:
	- Dollar.mint(address,uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1699-1706)
	- IDollar.mint(address,uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1668)
setup() should be declared external:
	- IOracle.setup() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1970)
	- Oracle.setup() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2016-2029)
capture() should be declared external:
	- Oracle.capture() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2038-2045)
	- IOracle.capture() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#1972)
balanceOfStaged(address) should be declared external:
	- PoolGetters.balanceOfStaged(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2263-2265)
balanceOfClaimable(address) should be declared external:
	- PoolGetters.balanceOfClaimable(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2267-2269)
initialize() should be declared external:
	- Deployer2.initialize() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3486-3489)
	- Deployer3.initialize() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3497-3501)
	- Deployer1.initialize() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3476-3478)
	- Upgradeable.initialize() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2845)
name() should be declared external:
	- Getters.name() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2906-2908)
symbol() should be declared external:
	- Getters.symbol() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2910-2912)
decimals() should be declared external:
	- Getters.decimals() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2914-2916)
pool() should be declared external:
	- Getters.pool() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2946-2948)
totalStaged() should be declared external:
	- Getters.totalStaged() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2954-2956)
totalRedeemable() should be declared external:
	- Getters.totalRedeemable() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2962-2964)
totalCoupons() should be declared external:
	- Getters.totalCoupons() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2966-2968)
totalNet() should be declared external:
	- Getters.totalNet() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2970-2972)
balanceOfStaged(address) should be declared external:
	- Getters.balanceOfStaged(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2978-2980)
balanceOfBonded(address) should be declared external:
	- Getters.balanceOfBonded(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2982-2988)
balanceOfCoupons(address,uint256) should be declared external:
	- Getters.balanceOfCoupons(address,uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#2990-2999)
fluidUntil(address) should be declared external:
	- Getters.fluidUntil(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3012-3014)
lockedUntil(address) should be declared external:
	- Getters.lockedUntil(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3016-3018)
allowanceCoupons(address,address) should be declared external:
	- Getters.allowanceCoupons(address,address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3020-3026)
epochTime() should be declared external:
	- Getters.epochTime() (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3036-3041)
couponsExpiration(uint256) should be declared external:
	- Getters.couponsExpiration(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3063-3065)
expiringCoupons(uint256) should be declared external:
	- Getters.expiringCoupons(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3067-3069)
expiringCouponsAtIndex(uint256,uint256) should be declared external:
	- Getters.expiringCouponsAtIndex(uint256,uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3071-3077)
totalBondedAt(uint256) should be declared external:
	- Getters.totalBondedAt(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3079-3081)
bootstrappingAt(uint256) should be declared external:
	- Getters.bootstrappingAt(uint256) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3083-3085)
recordedVote(address,address) should be declared external:
	- Getters.recordedVote(address,address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3091-3097)
votesFor(address) should be declared external:
	- Getters.votesFor(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3115-3117)
isNominated(address) should be declared external:
	- Getters.isNominated(address) (loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol#3119-3121)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol analyzed (44 contracts with 46 detectors), 117 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol
Tool Runtime = 28.60012722600004 seconds
#############################################