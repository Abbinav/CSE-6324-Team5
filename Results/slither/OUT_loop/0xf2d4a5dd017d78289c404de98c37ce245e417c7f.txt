INFO:Detectors:[93m
Contract locking ether found in :
	Contract PazziToken (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#78-314) has payable functions:
	 - PazziToken.fallback() (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#201-203)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
PazziToken.releaseToken() (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#251-260) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp >= vaultReleaseTime[msg.sender]) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#253)
PazziToken.releateTokenTo(address) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#262-271) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp >= vaultReleaseTime[to]) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#264)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
PazziToken.transfer(address,uint256) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#148-154) compares to a boolean constant:
	-require(bool)(isBlacklisted(msg.sender) == false) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#149)
PazziToken.approve(address,uint256) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#165-170) compares to a boolean constant:
	-require(bool)(isBlacklisted(msg.sender) == false) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#166)
PazziToken.transferFrom(address,address,uint256) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#182-189) compares to a boolean constant:
	-require(bool)(isBlacklisted(msg.sender) == false) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#183)
PazziToken.mint(address,uint256) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#208-215) compares to a boolean constant:
	-require(bool)(isBlacklisted(to) == false) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#209)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Parameter Owned.transferOwnership(address)._newOwner (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#66) is not in mixedCase
Parameter PazziToken.setIsLocked(bool)._isLocked (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#108) is not in mixedCase
Variable PazziToken._totalSupply (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#82) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Owned.newOwner (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#53) should be constant
PazziToken.decimals (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#81) should be constant
PazziToken.name (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#79) should be constant
PazziToken.startDate (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#83) should be constant
PazziToken.symbol (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#80) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- ERC20Interface.totalSupply() (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#36)
	- PazziToken.totalSupply() (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#116-118)
balanceOf(address) should be declared external:
	- ERC20Interface.balanceOf(address) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#37)
	- PazziToken.balanceOf(address) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#124-126)
transfer(address,uint256) should be declared external:
	- ERC20Interface.transfer(address,uint256) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#39)
	- PazziToken.transfer(address,uint256) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#148-154)
approve(address,uint256) should be declared external:
	- ERC20Interface.approve(address,uint256) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#40)
	- PazziToken.approve(address,uint256) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#165-170)
transferFrom(address,address,uint256) should be declared external:
	- ERC20Interface.transferFrom(address,address,uint256) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#41)
	- PazziToken.transferFrom(address,address,uint256) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#182-189)
transferOwnership(address) should be declared external:
	- Owned.transferOwnership(address) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#66-70)
setIsLocked(bool) should be declared external:
	- PazziToken.setIsLocked(bool) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#108-110)
addBlacklist(address) should be declared external:
	- PazziToken.addBlacklist(address) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#139-142)
mint(address,uint256) should be declared external:
	- PazziToken.mint(address,uint256) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#208-215)
burn(uint256) should be declared external:
	- PazziToken.burn(uint256) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#228-231)
burnFrom(address,uint256) should be declared external:
	- PazziToken.burnFrom(address,uint256) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#236-240)
tokenToVault(address,uint256,uint256) should be declared external:
	- PazziToken.tokenToVault(address,uint256,uint256) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#242-249)
releaseToken() should be declared external:
	- PazziToken.releaseToken() (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#251-260)
releateTokenTo(address) should be declared external:
	- PazziToken.releateTokenTo(address) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#262-271)
getVaultAmountFrom(address) should be declared external:
	- PazziToken.getVaultAmountFrom(address) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#295-297)
getVaultAmount() should be declared external:
	- PazziToken.getVaultAmount() (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#299-301)
getVaultReleaseTimeFrom(address) should be declared external:
	- PazziToken.getVaultReleaseTimeFrom(address) (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#303-305)
getVaultReleaseTime() should be declared external:
	- PazziToken.getVaultReleaseTime() (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#307-309)
getVaultList() should be declared external:
	- PazziToken.getVaultList() (loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol#311-313)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol analyzed (4 contracts with 46 detectors), 36 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol
Tool Runtime = 0.7481145040001138 seconds
#############################################