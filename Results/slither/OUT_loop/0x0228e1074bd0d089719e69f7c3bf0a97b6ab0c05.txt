Compilation warnings/errors on ./loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol:
./loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol:398:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^
./loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol:835:9: Warning: Unused local variable.
        uint256 totalEthSwap = 0;
        ^------------------^

INFO:Detectors:[91m
EthPiptSwap.swapEthToPiptByInputs(uint256[],uint256[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#764-828) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(ethDiff) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#825)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
EthPiptSwap.getEthAndTokensIn(uint256,address[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#900-940) performs a multiplication on the result of a division:
	-poolRatio = piptTotalSupply.mul(1000000000000000000).div(pipt.getBalance(_tokens[0])).mul(1000000000000000000).div(piptTotalSupply) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#916)
EthPiptSwap.getEthAndTokensIn(uint256,address[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#900-940) performs a multiplication on the result of a division:
	-poolRatio = piptTotalSupply.mul(1000000000000000000).div(pipt.getBalance(_tokens[0])).mul(1000000000000000000).div(piptTotalSupply) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#916)
	-calculations[i].tokenShare = poolRatio.mul(pipt.getBalance(_tokens[i])).div(1000000000000000000) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#919)
EthPiptSwap.getEthAndTokensIn(uint256,address[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#900-940) performs a multiplication on the result of a division:
	-ethInUniswap[i_scope_0] = _ethValue.mul(calculations[i_scope_0].ethRequired.mul(1000000000000000000).div(totalEthRequired)).div(1000000000000000000) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#935)
EthPiptSwap.getEthAndTokensIn(uint256,address[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#900-940) performs a multiplication on the result of a division:
	-tokensInPipt[i_scope_0] = calculations[i_scope_0].tokenShare.mul(_ethValue.mul(1000000000000000000).div(totalEthRequired)).div(1000000000000000000) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#936)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]).ethReserve_scope_0 (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#852) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
EthPiptSwap.swapEthToPiptByInputs(uint256[],uint256[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#764-828) ignores return value by weth.transfer(address(tokenPair),ethInUniswap[i]) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#798)
EthPiptSwap.swapEthToPiptByInputs(uint256[],uint256[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#764-828) ignores return value by TokenInterface(tokens[i]).approve(address(pipt),0) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#804)
EthPiptSwap.swapEthToPiptByInputs(uint256[],uint256[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#764-828) ignores return value by TokenInterface(tokens[i]).approve(address(pipt),tokensInPipt[i]) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#807)
EthPiptSwap.swapEthToPiptByInputs(uint256[],uint256[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#764-828) ignores return value by pipt.transfer(msg.sender,poolAmountOutAfterFee) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#820)
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#830-862) ignores return value by TokenInterface(oddTokens[i]).transfer(address(tokenPair),tokenBalance) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#843)
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#830-862) ignores return value by weth.transfer(address(cvpPair),wethBalance) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#855)
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#830-862) ignores return value by cvp.transfer(feePayout,cvpOut) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#859)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
EthPiptSwap.receive() (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#743-748) (function) shadows built-in symbol"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
EthPiptSwap.swapEthToPiptByInputs(uint256[],uint256[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#764-828) has external calls inside a loop: (tokenReserve,ethReserve) = tokenPair.getReserves() (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#794)
EthPiptSwap.swapEthToPiptByInputs(uint256[],uint256[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#764-828) has external calls inside a loop: tokensInPipt[i] = ratio.mul(pipt.getBalance(tokens[i])).div(1000000000000000000) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#795)
EthPiptSwap.swapEthToPiptByInputs(uint256[],uint256[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#764-828) has external calls inside a loop: weth.transfer(address(tokenPair),ethInUniswap[i]) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#798)
EthPiptSwap.swapEthToPiptByInputs(uint256[],uint256[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#764-828) has external calls inside a loop: tokenPair.swap(tokensInPipt[i],uint256(0),address(this),new bytes(0)) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#800)
EthPiptSwap.swapEthToPiptByInputs(uint256[],uint256[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#764-828) has external calls inside a loop: TokenInterface(tokens[i]).approve(address(pipt),0) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#804)
EthPiptSwap.swapEthToPiptByInputs(uint256[],uint256[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#764-828) has external calls inside a loop: TokenInterface(tokens[i]).approve(address(pipt),tokensInPipt[i]) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#807)
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#830-862) has external calls inside a loop: tokenBalance = TokenInterface(oddTokens[i]).balanceOf(address(this)) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#837)
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#830-862) has external calls inside a loop: (tokenReserve,ethReserve) = tokenPair.getReserves() (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#840)
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#830-862) has external calls inside a loop: TokenInterface(oddTokens[i]).transfer(address(tokenPair),tokenBalance) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#843)
EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#830-862) has external calls inside a loop: tokenPair.swap(uint256(0),wethOut,address(this),new bytes(0)) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#845)
EthPiptSwap.getEthAndTokensIn(uint256,address[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#900-940) has external calls inside a loop: calculations[i].tokenShare = poolRatio.mul(pipt.getBalance(_tokens[i])).div(1000000000000000000) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#919)
EthPiptSwap.getEthAndTokensIn(uint256,address[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#900-940) has external calls inside a loop: (calculations[i].tokenReserve,calculations[i].ethReserve,None) = uniswapPairFor(_tokens[i]).getReserves() (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#921)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#830-862):
	External calls:
	- weth.transfer(address(cvpPair),wethBalance) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#855)
	- cvpPair.swap(cvpOut,uint256(0),address(this),new bytes(0)) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#857)
	- cvp.transfer(feePayout,cvpOut) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#859)
	Event emitted after the call(s):
	- PayoutCVP(feePayout,wethBalance,cvpOut) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#861)
Reentrancy in EthPiptSwap.swapEthToPiptByInputs(uint256[],uint256[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#764-828):
	External calls:
	- weth.deposit.value(msg.value)() (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#781)
	Event emitted after the call(s):
	- EthToPiptSwap(msg.sender,swapAmount,feeAmount,poolAmountOut,poolAmountOutFee) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#817)
Reentrancy in EthPiptSwap.swapEthToPiptByInputs(uint256[],uint256[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#764-828):
	External calls:
	- weth.deposit.value(msg.value)() (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#781)
	- pipt.joinPool(poolAmountOut,tokensInPipt) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#819)
	- pipt.transfer(msg.sender,poolAmountOutAfterFee) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#820)
	- weth.withdraw(ethDiff) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#824)
	External calls sending eth:
	- weth.deposit.value(msg.value)() (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#781)
	- msg.sender.transfer(ethDiff) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#825)
	Event emitted after the call(s):
	- OddEth(msg.sender,ethDiff) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#826)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Address.isContract(address) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#391-400) uses assembly
	- INLINE ASM (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#398-399)
Address._functionCallWithValue(address,bytes,uint256,string) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#484-505) uses assembly
	- INLINE ASM (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#497-501)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#21) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#49) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#128) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#139) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#151) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#207) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#368) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#511) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#587) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#613) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#682) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#418-424):
	- (success) = recipient.call.value(amount)() (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#422)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#484-505):
	- (success,returndata) = target.call.value(weiValue)(data) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#488)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#168) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#169) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#186) is not in mixedCase
Parameter EthPiptSwap.swapEthToPipt(uint256)._slippage (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#750) is not in mixedCase
Parameter EthPiptSwap.setFees(uint256[],uint256[],address,address)._feeLevels (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#865) is not in mixedCase
Parameter EthPiptSwap.setFees(uint256[],uint256[],address,address)._feeAmounts (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#866) is not in mixedCase
Parameter EthPiptSwap.setFees(uint256[],uint256[],address,address)._feePayout (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#867) is not in mixedCase
Parameter EthPiptSwap.setFees(uint256[],uint256[],address,address)._feeManager (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#868) is not in mixedCase
Parameter EthPiptSwap.setTokensSettings(address[],address[],bool[])._tokens (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#882) is not in mixedCase
Parameter EthPiptSwap.setTokensSettings(address[],address[],bool[])._pairs (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#883) is not in mixedCase
Parameter EthPiptSwap.setTokensSettings(address[],address[],bool[])._reapprove (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#884) is not in mixedCase
Parameter EthPiptSwap.setDefaultSlippage(uint256)._defaultSlippage (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#895) is not in mixedCase
Parameter EthPiptSwap.getEthAndTokensIn(uint256,address[],uint256)._ethValue (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#900) is not in mixedCase
Parameter EthPiptSwap.getEthAndTokensIn(uint256,address[],uint256)._tokens (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#900) is not in mixedCase
Parameter EthPiptSwap.getEthAndTokensIn(uint256,address[],uint256)._slippage (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#900) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Reentrancy in EthPiptSwap.swapEthToPiptByInputs(uint256[],uint256[],uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#764-828):
	External calls:
	- msg.sender.transfer(ethDiff) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#825)
	External calls sending eth:
	- weth.deposit.value(msg.value)() (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#781)
	- msg.sender.transfer(ethDiff) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#825)
	Event emitted after the call(s):
	- OddEth(msg.sender,ethDiff) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#826)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4[0m
INFO:Detectors:[92m
calcInGivenOut(uint256,uint256,uint256,uint256,uint256,uint256) should be declared external:
	- BPoolInterface.calcInGivenOut(uint256,uint256,uint256,uint256,uint256,uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#29)
deposit() should be declared external:
	- TokenInterface.deposit() (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#132)
withdraw(uint256) should be declared external:
	- TokenInterface.withdraw(uint256) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#133)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#663-666)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#672-676)
convertOddToCvpAndSendToPayout(address[]) should be declared external:
	- EthPiptSwap.convertOddToCvpAndSendToPayout(address[]) (loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol#830-862)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol analyzed (11 contracts with 46 detectors), 67 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05.sol
Tool Runtime = 1.4195179419984925 seconds
#############################################