Compilation warnings/errors on ./loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol:
./loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol:268:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[91m
CurveSusdPeak.underlyingCoins (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#525) is never initialized. It is used in:
	- CurveSusdPeak.mint(uint256[4],uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#541-553)
	- CurveSusdPeak.redeem(uint256,uint256[4]) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#586-600)
	- CurveSusdPeak.redeemInSingleCoin(uint256,uint256,uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#602-611)
	- CurveSusdPeak.replenishApprovals(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#648-654)
	- CurveSusdPeak.vars() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#726-748)
CurveSusdPeak.curveDeposit (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#528) is never initialized. It is used in:
	- CurveSusdPeak.redeemInSingleCoin(uint256,uint256,uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#602-611)
	- CurveSusdPeak.replenishApprovals(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#648-654)
	- CurveSusdPeak.calcRedeemInSingleCoin(uint256,uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#694-700)
	- CurveSusdPeak.vars() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#726-748)
CurveSusdPeak.curve (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#529) is never initialized. It is used in:
	- CurveSusdPeak._mint(uint256[4],uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#555-564)
	- CurveSusdPeak.redeem(uint256,uint256[4]) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#586-600)
	- CurveSusdPeak.replenishApprovals(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#648-654)
	- CurveSusdPeak.calcMint(uint256[4]) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#658-663)
	- CurveSusdPeak.calcRedeem(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#672-683)
	- CurveSusdPeak.vars() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#726-748)
	- CurveSusdPeak._sCrvToUsd(uint256,uint256[4]) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#752-757)
CurveSusdPeak.curveToken (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#530) is never initialized. It is used in:
	- CurveSusdPeak.mintWithScrv(uint256,uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#571-579)
	- CurveSusdPeak.redeemInScrv(uint256,uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#613-619)
	- CurveSusdPeak.stake() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#624-626)
	- CurveSusdPeak.replenishApprovals(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#648-654)
	- CurveSusdPeak.calcRedeem(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#672-683)
	- CurveSusdPeak.sCrvBalance() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#721-724)
	- CurveSusdPeak.vars() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#726-748)
CurveSusdPeak.util (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#531) is never initialized. It is used in:
	- CurveSusdPeak.vars() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#726-748)
CurveSusdPeak.gauge (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#532) is never initialized. It is used in:
	- CurveSusdPeak.claimRewards() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#644-646)
	- CurveSusdPeak.replenishApprovals(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#648-654)
	- CurveSusdPeak.sCrvBalance() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#721-724)
	- CurveSusdPeak.vars() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#726-748)
	- CurveSusdPeak._secureFunding(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#759-762)
	- CurveSusdPeak._stake(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#774-778)
CurveSusdPeak.mintr (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#533) is never initialized. It is used in:
	- CurveSusdPeak.claimRewards() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#644-646)
	- CurveSusdPeak.vars() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#726-748)
CurveSusdPeak.core (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#534) is never initialized. It is used in:
	- CurveSusdPeak._mint(uint256[4],uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#555-564)
	- CurveSusdPeak.mintWithScrv(uint256,uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#571-579)
	- CurveSusdPeak.redeem(uint256,uint256[4]) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#586-600)
	- CurveSusdPeak.redeemInSingleCoin(uint256,uint256,uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#602-611)
	- CurveSusdPeak.redeemInScrv(uint256,uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#613-619)
	- CurveSusdPeak.updateFeed(uint256[]) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#628-636)
	- CurveSusdPeak.calcRedeem(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#672-683)
	- CurveSusdPeak.calcRedeemWithScrv(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#685-692)
	- CurveSusdPeak.calcRedeemInSingleCoin(uint256,uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#694-700)
	- CurveSusdPeak.vars() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#726-748)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
CurveSusdPeak.calcRedeem(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#672-683) performs a multiplication on the result of a division:
	-sCrv = usd.mul(1e18).div(exchangeRate) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#678)
	-amounts[i] = curve.balances(int128(i)).mul(sCrv).div(totalSupply) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#681)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[92m
CurveSusdPeak.redeem(uint256,uint256[4]) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#586-600) has external calls inside a loop: toTransfer = coin.balanceOf(address(this)) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#596)
CurveSusdPeak.calcRedeem(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#672-683) has external calls inside a loop: amounts[i] = curve.balances(int128(i)).mul(sCrv).div(totalSupply) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#681)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
Address.isContract(address) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#261-270) uses assembly
	- INLINE ASM (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#268-269)
OwnableProxy.owner() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#469-474) uses assembly
	- INLINE ASM (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#471-474)
OwnableProxy._transferOwnership(address) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#492-499) uses assembly
	- INLINE ASM (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#496-499)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#300-306):
	- (success) = recipient.call.value(amount)() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#304)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#348-367):
	- (success,returndata) = address(token).call(data) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#360)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function ICurveDeposit.add_liquidity(uint256[4],uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#396) is not in mixedCase
Parameter ICurveDeposit.add_liquidity(uint256[4],uint256).min_mint_amount (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#396) is not in mixedCase
Function ICurveDeposit.remove_liquidity_imbalance(uint256[4],uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#397) is not in mixedCase
Parameter ICurveDeposit.remove_liquidity_imbalance(uint256[4],uint256).max_burn_amount (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#397) is not in mixedCase
Function ICurveDeposit.remove_liquidity_one_coin(uint256,int128,uint256,bool) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#398) is not in mixedCase
Parameter ICurveDeposit.remove_liquidity_one_coin(uint256,int128,uint256,bool)._token_amount (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#398) is not in mixedCase
Parameter ICurveDeposit.remove_liquidity_one_coin(uint256,int128,uint256,bool).min_uamount (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#398) is not in mixedCase
Parameter ICurveDeposit.remove_liquidity_one_coin(uint256,int128,uint256,bool).donate_dust (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#398) is not in mixedCase
Function ICurveDeposit.calc_withdraw_one_coin(uint256,int128) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#399) is not in mixedCase
Parameter ICurveDeposit.calc_withdraw_one_coin(uint256,int128)._token_amount (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#399) is not in mixedCase
Function ICurve.add_liquidity(uint256[4],uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#403) is not in mixedCase
Parameter ICurve.add_liquidity(uint256[4],uint256).min_mint_amount (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#403) is not in mixedCase
Function ICurve.remove_liquidity_imbalance(uint256[4],uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#404) is not in mixedCase
Parameter ICurve.remove_liquidity_imbalance(uint256[4],uint256).max_burn_amount (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#404) is not in mixedCase
Function ICurve.remove_liquidity(uint256,uint256[4]) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#405) is not in mixedCase
Parameter ICurve.remove_liquidity(uint256,uint256[4]).min_amounts (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#405) is not in mixedCase
Function ICurve.calc_token_amount(uint256[4],bool) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#406) is not in mixedCase
Function ICurve.get_virtual_price() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#408) is not in mixedCase
Function ICurve.mock_add_to_balance(uint256[4]) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#411) is not in mixedCase
Function IUtil.get_D(uint256[4]) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#415) is not in mixedCase
Function IGauge.claimable_tokens(address) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#505) is not in mixedCase
Function IGauge.claimable_reward(address) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#506) is not in mixedCase
Function IGauge.claim_rewards() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#508) is not in mixedCase
Parameter CurveSusdPeak.updateFeed(uint256[])._feed (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#628) is not in mixedCase
Parameter CurveSusdPeak.portfolioValueWithFeed(uint256[])._feed (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#717) is not in mixedCase
Variable CurveSusdPeak.ZEROES (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#524) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
CurveSusdPeak.MAX (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#520) is never used in CurveSusdPeak (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#515-779)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
transferOwnership(address) should be declared external:
	- OwnableProxy.transferOwnership(address) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#488-490)
replenishApprovals(uint256) should be declared external:
	- CurveSusdPeak.replenishApprovals(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#648-654)
calcMint(uint256[4]) should be declared external:
	- CurveSusdPeak.calcMint(uint256[4]) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#658-663)
calcMintWithScrv(uint256) should be declared external:
	- CurveSusdPeak.calcMintWithScrv(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#665-670)
calcRedeem(uint256) should be declared external:
	- CurveSusdPeak.calcRedeem(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#672-683)
calcRedeemWithScrv(uint256) should be declared external:
	- CurveSusdPeak.calcRedeemWithScrv(uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#685-692)
calcRedeemInSingleCoin(uint256,uint256) should be declared external:
	- CurveSusdPeak.calcRedeemInSingleCoin(uint256,uint256) (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#694-700)
vars() should be declared external:
	- CurveSusdPeak.vars() (loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol#726-748)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol analyzed (16 contracts with 46 detectors), 53 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol
Tool Runtime = 1.1357255420007277 seconds
#############################################