Compilation warnings/errors on ./loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol:
./loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol:586:50: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function stake(uint256 amount, uint256 time, bytes calldata data) external {
                                                 ^-----------------^
./loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol:596:67: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function stakeFor(address user, uint256 amount, uint256 time, bytes calldata data) external {
                                                                  ^-----------------^
./loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol:653:38: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function unstake(uint256 amount, bytes calldata data) external {
                                     ^-----------------^
./loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol:663:44: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function unstakeAtIndex(uint256 index, bytes calldata data) external {
                                           ^-----------------^

INFO:Detectors:[93m
TokenSpring._unstake(uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#689-775) performs a multiplication on the result of a division:
	-newAmount = lastStake.stakingShares.mul(totalStaked()).div(totalStakingShares) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#713)
	-penaltyAmount = penaltyAmount.add(stakeTimeSecCalculated.sub(stakeTimeSec).mul(newAmount).div(stakeTimeSecCalculated).div(2)) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#732)
TokenSpring._unstakeAtIndex(uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#784-864) performs a multiplication on the result of a division:
	-totalAmount = lastStake.stakingShares.mul(totalStaked()).div(totalStakingShares) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#805)
	-penaltyAmount = penaltyAmount.add(stakeTimeSecCalculated.sub(stakeTimeSec).mul(totalAmount).div(stakeTimeSecCalculated).div(2)) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#817)
TokenSpring._unstakeAtIndex(uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#784-864) performs a multiplication on the result of a division:
	-totalAmount = lastStake.stakingShares.mul(totalStaked()).div(totalStakingShares) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#805)
	-totals.stakingShares = totals.stakingShares.sub(totalStakingShares.mul(totalAmount).div(totalStaked())) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#831)
TokenSpring._unstakeAtIndex(uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#784-864) performs a multiplication on the result of a division:
	-totalAmount = lastStake.stakingShares.mul(totalStaked()).div(totalStakingShares) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#805)
	-totalStakingShares = totalStakingShares.sub(totalStakingShares.mul(totalAmount).div(totalStaked())) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#835)
TokenSpring.computeNewReward(uint256,uint256,uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#880-900) performs a multiplication on the result of a division:
	-newRewardTokens = totalUnlocked().mul(stakingShareSeconds).div(_totalStakingShareSeconds) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#884-887)
	-bonusedReward = startBonus.add(oneHundredPct.sub(startBonus).mul(stakeTimeSec).div(bonusPeriodSec)).mul(newRewardTokens).div(oneHundredPct) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#894-898)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
Reentrancy in TokenSpring._stakeFor(address,address,uint256,uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#608-645):
	External calls:
	- require(bool,string)(_stakingPool.token().transferFrom(staker,address(_stakingPool),amount),TokenSpring: transfer into staking pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#638-639)
	- updateAccounting(expiryTime,mintedStakingShares) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#642)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenSpring: transfer out of locked pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1106-1107)
	State variables written after the call(s):
	- updateAccounting(expiryTime,mintedStakingShares) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#642)
		- totals.stakingShareSeconds = totals.stakingShareSeconds.add(newUserStakingShareSeconds) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#955-957)
Reentrancy in TokenSpring.lockTokens(uint256,uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1058-1083):
	External calls:
	- unlockTokens() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1064)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenSpring: transfer out of locked pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1106-1107)
	State variables written after the call(s):
	- totalLockedShares = totalLockedShares.add(mintedLockedShares) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1078)
	- unlockSchedules.push(schedule) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1076)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
TokenSpring.lockTokens(uint256,uint256).schedule (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1071) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Reentrancy in TokenSpring._unstake(uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#689-775):
	External calls:
	- unlockTokens() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#691)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenSpring: transfer out of locked pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1106-1107)
	State variables written after the call(s):
	- _totalStakingShareSeconds = _totalStakingShareSeconds.sub(stakingShareSecondsToBurn) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#745)
	- accountStakes.length -- (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#738)
	- totals.stakingShareSeconds = totals.stakingShareSeconds.sub(stakingShareSecondsToBurn) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#741)
	- totals.stakingShares = totals.stakingShares.sub(totalStakingShares.mul(totalAmount).div(totalStaked())) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#742)
	- totalStakingShares = totalStakingShares.sub(totalStakingShares.mul(totalAmount).div(totalStaked())) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#746)
Reentrancy in TokenSpring._unstakeAtIndex(uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#784-864):
	External calls:
	- unlockTokens() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#785)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenSpring: transfer out of locked pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1106-1107)
	State variables written after the call(s):
	- _totalStakingShareSeconds = _totalStakingShareSeconds.sub(stakingShareSecondsToBurn) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#834)
	- accountStakes[i] = accountStakes[i + 1] (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#825)
	- accountStakes.length -- (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#828)
	- totals.stakingShareSeconds = totals.stakingShareSeconds.sub(stakingShareSecondsToBurn) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#830)
	- totals.stakingShares = totals.stakingShares.sub(totalStakingShares.mul(totalAmount).div(totalStaked())) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#831)
	- totalStakingShares = totalStakingShares.sub(totalStakingShares.mul(totalAmount).div(totalStaked())) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#835)
Reentrancy in TokenSpring.updateAccounting(uint256,uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#937-971):
	External calls:
	- unlockTokens() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#940)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenSpring: transfer out of locked pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1106-1107)
	State variables written after the call(s):
	- _totalStakingShareSeconds = _totalStakingShareSeconds.add(newStakingShareSeconds) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#947)
	- totals.stakingShareSeconds = totals.stakingShareSeconds.add(newUserStakingShareSeconds) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#955-957)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in TokenSpring._stakeFor(address,address,uint256,uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#608-645):
	External calls:
	- require(bool,string)(_stakingPool.token().transferFrom(staker,address(_stakingPool),amount),TokenSpring: transfer into staking pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#638-639)
	- updateAccounting(expiryTime,mintedStakingShares) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#642)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenSpring: transfer out of locked pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1106-1107)
	Event emitted after the call(s):
	- Staked(beneficiary,amount,totalStakedFor(beneficiary),expiryTime,) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#644)
	- TokensUnlocked(unlockedTokens,totalLocked()) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1108)
		- updateAccounting(expiryTime,mintedStakingShares) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#642)
Reentrancy in TokenSpring._unstake(uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#689-775):
	External calls:
	- unlockTokens() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#691)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenSpring: transfer out of locked pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1106-1107)
	- require(bool,string)(_unlockedPool.transfer(msg.sender,rewardAmount),TokenSpring: transfer out of unlocked pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#755-756)
	- require(bool,string)(_stakingPool.transfer(msg.sender,amountMinusPenalty),TokenSpring: transfer out of staking pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#760-761)
	- require(bool,string)(_stakingPool.transfer(penaltyAddress,penaltyAmount),TokenSpring: transfer into staking pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#765-766)
	Event emitted after the call(s):
	- TokensClaimed(msg.sender,rewardAmount) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#770)
	- Unstaked(msg.sender,amountMinusPenalty,totalStakedFor(msg.sender),penaltyAmount,) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#769)
Reentrancy in TokenSpring._unstakeAtIndex(uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#784-864):
	External calls:
	- unlockTokens() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#785)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenSpring: transfer out of locked pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1106-1107)
	- require(bool,string)(_unlockedPool.transfer(msg.sender,rewardAmount),TokenSpring: transfer out of unlocked pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#844-845)
	- require(bool,string)(_stakingPool.transfer(msg.sender,amountMinusPenalty),TokenSpring: transfer out of staking pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#849-850)
	- require(bool,string)(_stakingPool.transfer(penaltyAddress,penaltyAmount),TokenSpring: transfer into staking pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#854-855)
	Event emitted after the call(s):
	- TokensClaimed(msg.sender,rewardAmount) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#859)
	- Unstaked(msg.sender,amountMinusPenalty,totalStakedFor(msg.sender),penaltyAmount,) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#858)
Reentrancy in TokenSpring.lockTokens(uint256,uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1058-1083):
	External calls:
	- unlockTokens() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1064)
		- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenSpring: transfer out of locked pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1106-1107)
	- require(bool,string)(_lockedPool.token().transferFrom(msg.sender,address(_lockedPool),amount),TokenSpring: transfer into locked pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1080-1081)
	Event emitted after the call(s):
	- TokensLocked(amount,durationSec,totalLocked()) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1082)
Reentrancy in TokenSpring.unlockTokens() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1090-1112):
	External calls:
	- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenSpring: transfer out of locked pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1106-1107)
	Event emitted after the call(s):
	- TokensUnlocked(unlockedTokens,totalLocked()) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1108)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
TokenSpring._unstake(uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#689-775) uses timestamp for comparisons
	Dangerous comparisons:
	- lastStake.lockTimestampSec > now (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#730)
	- require(bool,string)(totalAmount >= penaltyAmount,TokenSpring: penalty amount exceeds amount being redeemed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#750)
	- penaltyAmount > 0 (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#763)
	- require(bool,string)(_stakingPool.transfer(penaltyAddress,penaltyAmount),TokenSpring: transfer into staking pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#765-766)
TokenSpring._unstakeAtIndex(uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#784-864) uses timestamp for comparisons
	Dangerous comparisons:
	- lastStake.lockTimestampSec > now (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#815)
	- require(bool,string)(totalAmount >= penaltyAmount,TokenSpring: penalty amount exceeds amount being redeemed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#839)
	- require(bool,string)(_stakingPool.transfer(msg.sender,amountMinusPenalty),TokenSpring: transfer out of staking pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#849-850)
	- penaltyAmount > 0 (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#852)
	- require(bool,string)(_stakingPool.transfer(penaltyAddress,penaltyAmount),TokenSpring: transfer into staking pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#854-855)
TokenSpring.updateAccounting(uint256,uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#937-971) uses timestamp for comparisons
	Dangerous comparisons:
	- (_totalStakingShareSeconds > 0) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#959-961)
TokenSpring.getAccounting() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#982-1002) uses timestamp for comparisons
	Dangerous comparisons:
	- (_totalStakingShareSeconds > 0) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#990-992)
TokenSpring.lockTokens(uint256,uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1058-1083) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(unlockSchedules.length < _maxUnlockSchedules,TokenSpring: reached maximum unlock schedules) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1059-1060)
TokenSpring.unlockTokens() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1090-1112) uses timestamp for comparisons
	Dangerous comparisons:
	- totalLockedShares == 0 (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1094)
	- unlockedTokens > 0 (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1105)
	- require(bool,string)(_lockedPool.transfer(address(_unlockedPool),unlockedTokens),TokenSpring: transfer out of locked pool failed) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1106-1107)
TokenSpring.unlockScheduleShares(uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1121-1142) uses timestamp for comparisons
	Dangerous comparisons:
	- now >= schedule.endAtSec (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1130)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#8) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#168) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#248) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#279) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#358) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#387) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#415) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
owner() should be declared external:
	- Ownable.owner() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#306-308)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#332-335)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#341-343)
balance() should be declared external:
	- TokenPool.balance() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#403-405)
getDistributionToken() should be declared external:
	- TokenSpring.getDistributionToken() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#576-579)
unstakeQuery(uint256) should be declared external:
	- TokenSpring.unstakeQuery(uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#671-673)
unstakeAtIndexQuery(uint256) should be declared external:
	- TokenSpring.unstakeAtIndexQuery(uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#679-681)
getAccounting() should be declared external:
	- TokenSpring.getAccounting() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#982-1002)
getContractAtIndex(address,uint256) should be declared external:
	- TokenSpring.getContractAtIndex(address,uint256) (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1009-1028)
unlockScheduleCount() should be declared external:
	- TokenSpring.unlockScheduleCount() (loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol#1047-1049)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x87b9382164968b2a17d324986b455bd4d76f19c7.sol analyzed (7 contracts with 46 detectors), 41 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x87b9382164968b2a17d324986b455bd4d76f19c7.sol
Tool Runtime = 1.626862725999672 seconds
#############################################