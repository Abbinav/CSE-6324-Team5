INFO:Detectors:[93m
IUSDTToken (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#17-21) has incorrect ERC20 function interface:IUSDTToken.transferFrom(address,address,uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#18)
IUSDTToken (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#17-21) has incorrect ERC20 function interface:IUSDTToken.transfer(address,uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
WDXStacking.safeDivision(uint256,uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#81-86) uses a dangerous strict equality:
	- assert(bool)(a == b * c + a % b) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#84)
WDXStacking.safeMultiply(uint256,uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#71-79) uses a dangerous strict equality:
	- a == 0 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#72)
WDXStacking.safeMultiply(uint256,uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#71-79) uses a dangerous strict equality:
	- assert(bool)(c / a == b) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#76)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in WDXStacking.buyStatus(uint8,address[]) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#147-163):
	External calls:
	- usdtTokenContract.transferFrom(msg.sender,address(this),residue) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#159)
	State variables written after the call(s):
	- stakes[address(msg.sender)].status = status (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#161)
Reentrancy in WDXStacking.getFromStaking(uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#212-231):
	External calls:
	- tokenContract.transfer(address(msg.sender),numberOfTokens) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#225)
	State variables written after the call(s):
	- stakes[address(msg.sender)].last_withdrawal_time = now (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#227)
	- stakes[address(msg.sender)].amount = stakes[address(msg.sender)].amount - numberOfTokens (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#228)
	- stakes[address(msg.sender)].week_withdrawal_amount += usd_amount (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#229)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
WDXStacking.sendToStaking(uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#165-192) ignores return value by tokenContract.transferFrom(msg.sender,address(this),numberOfTokens) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#172)
WDXStacking.getFromStaking(uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#212-231) ignores return value by tokenContract.transfer(address(msg.sender),numberOfTokens) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#225)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
WDXStacking.buyStatus(uint8,address[]) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#147-163) has external calls inside a loop: usdtTokenContract.transferFrom(msg.sender,address(referrals[i]),amount_to_send) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#155)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in WDXStacking.sendToStaking(uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#165-192):
	External calls:
	- tokenContract.transferFrom(msg.sender,address(this),numberOfTokens) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#172)
	State variables written after the call(s):
	- computeAmount() (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#174)
		- stakes[address(msg.sender)].last_compute_time = now (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#134)
		- stakes[address(msg.sender)].last_percent = profit_percent (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#135)
		- i < duration_from_last_compute (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#139)
		- stakes[address(msg.sender)].amount += profit (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#141)
		- stakes[address(msg.sender)].pure_profit += profit (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#142)
	- stakes[address(msg.sender)].amount = stakes[address(msg.sender)].amount + numberOfTokens (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#175)
	- stakes[address(msg.sender)] = Stake(now,numberOfTokens,now,0,now,now,0,0,stakes[address(msg.sender)].status) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#178-190)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
WDXStacking.safeMultiply(uint256,uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#71-79) uses timestamp for comparisons
	Dangerous comparisons:
	- a == 0 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#72)
	- assert(bool)(c / a == b) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#76)
WDXStacking.safeDivision(uint256,uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#81-86) uses timestamp for comparisons
	Dangerous comparisons:
	- assert(bool)(a == b * c + a % b) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#84)
WDXStacking.computeAmount() (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#88-145) uses timestamp for comparisons
	Dangerous comparisons:
	- duration_from_last_compute < 1 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#95)
	- stake_duration >= 1 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#101)
	- stake_duration >= 3 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#104)
	- stake_duration >= 6 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#107)
	- stake_duration >= 12 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#110)
	- stake_duration >= 18 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#113)
	- stake_amount >= 100000000000000000000000 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#117)
	- stake_amount >= 200000000000000000000000 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#120)
	- stake_amount >= 1000000000000000000000000 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#123)
	- stake_amount >= 2000000000000000000000000 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#126)
	- i < duration_from_last_compute (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#139)
WDXStacking.buyStatus(uint8,address[]) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#147-163) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(status > stakes[address(msg.sender)].status,Status already bought. Or attemption to buy lower status) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#148)
	- residue > 0 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#158)
WDXStacking.sendToStaking(uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#165-192) uses timestamp for comparisons
	Dangerous comparisons:
	- stakes[address(msg.sender)].amount > 0 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#173)
WDXStacking.set_valid_amount_by_status(uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#194-210) uses timestamp for comparisons
	Dangerous comparisons:
	- now - stakes[address(msg.sender)].week_starts_at > week (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#199)
	- stakes[address(msg.sender)].week_withdrawal_amount + usd_amount > statuses[status].limit (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#205)
	- require(bool,string)(usd_amount > 0,Limit is exceeded) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#208)
WDXStacking.getFromStaking(uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#212-231) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(numberOfTokens > 0,You need to get at least some tokens) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#213)
	- require(bool,string)(stakes[address(msg.sender)].amount > 0,You need deposit amount) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#214)
	- numberOfTokens > stakes[address(msg.sender)].amount (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#221)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Function WDXStacking.set_valid_amount_by_status(uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#194-210) is not in mixedCase
Variable WDXStacking.wdx_price (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#26) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
WDXStacking.constructor(IERC20Token,IUSDTToken) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#54-68) uses literals with too many digits:
	- statuses[0] = Status(0,10000000,1) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#60)
WDXStacking.constructor(IERC20Token,IUSDTToken) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#54-68) uses literals with too many digits:
	- statuses[1] = Status(100000000,50000000,2) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#61)
WDXStacking.constructor(IERC20Token,IUSDTToken) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#54-68) uses literals with too many digits:
	- statuses[2] = Status(300000000,150000000,3) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#62)
WDXStacking.constructor(IERC20Token,IUSDTToken) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#54-68) uses literals with too many digits:
	- statuses[3] = Status(1000000000,500000000,5) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#63)
WDXStacking.constructor(IERC20Token,IUSDTToken) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#54-68) uses literals with too many digits:
	- statuses[4] = Status(3000000000,1500000000,7) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#64)
WDXStacking.constructor(IERC20Token,IUSDTToken) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#54-68) uses literals with too many digits:
	- statuses[5] = Status(10000000000,5000000000,10) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#65)
WDXStacking.constructor(IERC20Token,IUSDTToken) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#54-68) uses literals with too many digits:
	- wdx_price = 1000000 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#67)
WDXStacking.computeAmount() (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#88-145) uses literals with too many digits:
	- stake_amount >= 100000000000000000000000 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#117)
WDXStacking.computeAmount() (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#88-145) uses literals with too many digits:
	- stake_amount >= 200000000000000000000000 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#120)
WDXStacking.computeAmount() (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#88-145) uses literals with too many digits:
	- stake_amount >= 1000000000000000000000000 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#123)
WDXStacking.computeAmount() (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#88-145) uses literals with too many digits:
	- stake_amount >= 2000000000000000000000000 (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#126)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
buyStatus(uint8,address[]) should be declared external:
	- WDXStacking.buyStatus(uint8,address[]) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#147-163)
sendToStaking(uint256) should be declared external:
	- WDXStacking.sendToStaking(uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#165-192)
getUSDT() should be declared external:
	- WDXStacking.getUSDT() (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#233-238)
updateWDXPrice(uint256) should be declared external:
	- WDXStacking.updateWDXPrice(uint256) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#240-243)
setStatusByAdmin(uint8,address) should be declared external:
	- WDXStacking.setStatusByAdmin(uint8,address) (loops/0xef47223f77d726826c866f56e3a6000914289702.sol#245-248)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xef47223f77d726826c866f56e3a6000914289702.sol analyzed (3 contracts with 46 detectors), 38 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xef47223f77d726826c866f56e3a6000914289702.sol
Tool Runtime = 0.7825572939982521 seconds
#############################################