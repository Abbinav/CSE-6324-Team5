Compilation warnings/errors on ./loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol:
./loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol:268:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[93m
CurveSusdPeak.calcRedeem(uint256) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#741-752) performs a multiplication on the result of a division:
	-sCrv = usd.mul(1e18).div(exchangeRate) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#747)
	-amounts[i] = curve.balances(int128(i)).mul(sCrv).div(totalSupply) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#750)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
CurveSusdPeak._sCrvToUsd(uint256,uint256[4]) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#821-840) uses a dangerous strict equality:
	- sCrvTotalSupply == 0 || sCrvBal == 0 (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#826)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
CurveSusdPeak.harvest(bool,uint256)._usdc (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#687) is a local variable never initialized
CurveSusdPeak.harvest(bool,uint256)._usdt (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#673) is a local variable never initialized
CurveSusdPeak._sCrvToUsd(uint256,uint256[4]).balances (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#829) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
CurveSusdPeak.redeem(uint256,uint256[4]) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#609-623) has external calls inside a loop: toTransfer = coin.balanceOf(address(this)) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#619)
CurveSusdPeak.getRewards(address[],address) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#700-710) has external calls inside a loop: token.safeTransfer(destination,token.balanceOf(address(this))) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#708)
CurveSusdPeak.calcRedeem(uint256) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#741-752) has external calls inside a loop: amounts[i] = curve.balances(int128(i)).mul(sCrv).div(totalSupply) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#750)
CurveSusdPeak._sCrvToUsd(uint256,uint256[4]) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#821-840) has external calls inside a loop: balances[i] = curve.balances(int128(i)).mul(_feed[i]) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#831)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
Address.isContract(address) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#261-270) uses assembly
	- INLINE ASM (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#268-269)
OwnableProxy.owner() (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#469-474) uses assembly
	- INLINE ASM (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#471-474)
OwnableProxy._transferOwnership(address) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#492-499) uses assembly
	- INLINE ASM (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#496-499)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#300-306):
	- (success) = recipient.call.value(amount)() (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#304)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#348-367):
	- (success,returndata) = address(token).call(data) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#360)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function ICurveDeposit.add_liquidity(uint256[4],uint256) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#396) is not in mixedCase
Parameter ICurveDeposit.add_liquidity(uint256[4],uint256).min_mint_amount (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#396) is not in mixedCase
Function ICurveDeposit.remove_liquidity_imbalance(uint256[4],uint256) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#397) is not in mixedCase
Parameter ICurveDeposit.remove_liquidity_imbalance(uint256[4],uint256).max_burn_amount (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#397) is not in mixedCase
Function ICurveDeposit.remove_liquidity_one_coin(uint256,int128,uint256) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#398) is not in mixedCase
Parameter ICurveDeposit.remove_liquidity_one_coin(uint256,int128,uint256)._token_amount (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#398) is not in mixedCase
Parameter ICurveDeposit.remove_liquidity_one_coin(uint256,int128,uint256).min_uamount (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#398) is not in mixedCase
Function ICurveDeposit.calc_withdraw_one_coin(uint256,int128) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#399) is not in mixedCase
Parameter ICurveDeposit.calc_withdraw_one_coin(uint256,int128)._token_amount (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#399) is not in mixedCase
Function ICurve.add_liquidity(uint256[4],uint256) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#403) is not in mixedCase
Parameter ICurve.add_liquidity(uint256[4],uint256).min_mint_amount (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#403) is not in mixedCase
Function ICurve.remove_liquidity_imbalance(uint256[4],uint256) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#404) is not in mixedCase
Parameter ICurve.remove_liquidity_imbalance(uint256[4],uint256).max_burn_amount (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#404) is not in mixedCase
Function ICurve.remove_liquidity(uint256,uint256[4]) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#405) is not in mixedCase
Parameter ICurve.remove_liquidity(uint256,uint256[4]).min_amounts (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#405) is not in mixedCase
Function ICurve.calc_token_amount(uint256[4],bool) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#406) is not in mixedCase
Function ICurve.get_virtual_price() (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#408) is not in mixedCase
Function ICurve.mock_add_to_balance(uint256[4]) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#411) is not in mixedCase
Function IUtil.get_D(uint256[4]) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#415) is not in mixedCase
Function IGauge.claimable_tokens(address) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#505) is not in mixedCase
Function IGauge.claimable_reward(address) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#506) is not in mixedCase
Function IGauge.claim_rewards() (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#508) is not in mixedCase
Parameter CurveSusdPeak.initialize(ICurveDeposit,ICurve,IERC20,ICore,IUtil,IGauge,IMintr,address[4])._curveDeposit (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#537) is not in mixedCase
Parameter CurveSusdPeak.initialize(ICurveDeposit,ICurve,IERC20,ICore,IUtil,IGauge,IMintr,address[4])._curve (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#538) is not in mixedCase
Parameter CurveSusdPeak.initialize(ICurveDeposit,ICurve,IERC20,ICore,IUtil,IGauge,IMintr,address[4])._curveToken (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#539) is not in mixedCase
Parameter CurveSusdPeak.initialize(ICurveDeposit,ICurve,IERC20,ICore,IUtil,IGauge,IMintr,address[4])._core (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#540) is not in mixedCase
Parameter CurveSusdPeak.initialize(ICurveDeposit,ICurve,IERC20,ICore,IUtil,IGauge,IMintr,address[4])._util (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#541) is not in mixedCase
Parameter CurveSusdPeak.initialize(ICurveDeposit,ICurve,IERC20,ICore,IUtil,IGauge,IMintr,address[4])._gauge (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#542) is not in mixedCase
Parameter CurveSusdPeak.initialize(ICurveDeposit,ICurve,IERC20,ICore,IUtil,IGauge,IMintr,address[4])._mintr (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#543) is not in mixedCase
Parameter CurveSusdPeak.initialize(ICurveDeposit,ICurve,IERC20,ICore,IUtil,IGauge,IMintr,address[4])._underlyingCoins (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#544) is not in mixedCase
Parameter CurveSusdPeak.updateFeed(uint256[])._feed (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#651) is not in mixedCase
Parameter CurveSusdPeak.portfolioValueWithFeed(uint256[])._feed (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#786) is not in mixedCase
Variable CurveSusdPeak.ZEROES (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#524) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
transferOwnership(address) should be declared external:
	- OwnableProxy.transferOwnership(address) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#488-490)
initialize(ICurveDeposit,ICurve,IERC20,ICore,IUtil,IGauge,IMintr,address[4]) should be declared external:
	- CurveSusdPeak.initialize(ICurveDeposit,ICurve,IERC20,ICore,IUtil,IGauge,IMintr,address[4]) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#536-557)
calcMint(uint256[4]) should be declared external:
	- CurveSusdPeak.calcMint(uint256[4]) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#727-732)
calcMintWithScrv(uint256) should be declared external:
	- CurveSusdPeak.calcMintWithScrv(uint256) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#734-739)
calcRedeem(uint256) should be declared external:
	- CurveSusdPeak.calcRedeem(uint256) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#741-752)
calcRedeemWithScrv(uint256) should be declared external:
	- CurveSusdPeak.calcRedeemWithScrv(uint256) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#754-761)
calcRedeemInSingleCoin(uint256,uint256) should be declared external:
	- CurveSusdPeak.calcRedeemInSingleCoin(uint256,uint256) (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#763-769)
vars() should be declared external:
	- CurveSusdPeak.vars() (loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol#795-817)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol analyzed (16 contracts with 46 detectors), 57 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xf01e3a1f7bca16145afd03538bd7a28f249fc366.sol
Tool Runtime = 1.350942896999186 seconds
#############################################