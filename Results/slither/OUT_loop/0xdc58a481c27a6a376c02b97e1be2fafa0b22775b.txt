INFO:Detectors:[93m
YFVVIPVoteV2.averageVotingValue(address,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#339-372) performs a multiplication on the result of a division:
	-empowermentFactor = averageVotingValueByBitsX100(stakeGovernancePool,VIP_3_VOTE_ITEM,leftBitRange,rightBitRange) / 20 (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#347)
	-stakingAvgValue = uint64(totalWeightedStakingVotingValue.mul(empowermentFactor).div(totalStakingPower)) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#367)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
YFVVIPVoteV2.emergencyERC20Drain(ERC20,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#379-382) ignores return value by token.transfer(governance,amount) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#381)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
YFVVIPVoteV2.averageVotingValueX100(address,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#272-283) has external calls inside a loop: totalStakingPower = totalStakingPower.add(rewards.stakingPower(voter)) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#279)
YFVVIPVoteV2.averageVotingValueX100(address,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#272-283) has external calls inside a loop: totalWeightedVotingValue = totalWeightedVotingValue.add(rewards.stakingPower(voter).mul(voter2VotingValue[poolAddress][votingItem][voter])) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#280)
YFVVIPVoteV2.averageVotingValueByBitsX100(address,uint256,uint8,uint8) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#286-299) has external calls inside a loop: totalStakingPower = totalStakingPower.add(rewards.stakingPower(voter)) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#294)
YFVVIPVoteV2.averageVotingValueByBitsX100(address,uint256,uint8,uint8) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#286-299) has external calls inside a loop: totalWeightedVotingValue = totalWeightedVotingValue.add(rewards.stakingPower(voter).mul(votingValueByBits)) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#296)
YFVVIPVoteV2.averageVotingValue(address,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#339-372) has external calls inside a loop: totalFarmingPower = totalFarmingPower.add(farmingPool.stakingPower(voter)) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#360)
YFVVIPVoteV2.averageVotingValue(address,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#339-372) has external calls inside a loop: totalStakingPower = totalStakingPower.add(stakingPool.stakingPower(voter)) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#361)
YFVVIPVoteV2.averageVotingValue(address,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#339-372) has external calls inside a loop: totalWeightedFarmingVotingValue = totalWeightedFarmingVotingValue.add(farmingPool.stakingPower(voter).mul(votingValueByBits)) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#363)
YFVVIPVoteV2.averageVotingValue(address,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#339-372) has external calls inside a loop: totalWeightedStakingVotingValue = totalWeightedStakingVotingValue.add(stakingPool.stakingPower(voter).mul(votingValueByBits)) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#364)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
YFVVIPVoteV2.setVotingConfig(address,uint256,uint64,uint64,uint256,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#236-245) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(endtime > block.timestamp,Endtime has passed) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#240)
YFVVIPVoteV2.isVotable(address,address,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#258-269) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < votingStarttimes[poolAddress][votingItem] (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#259)
	- block.timestamp > votingEndtimes[poolAddress][votingItem] (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#260)
YFVVIPVoteV2.vote(address,uint256,uint64) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#319-337) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= votingStarttimes[poolAddress][votingItem],voting is not open yet) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#320)
	- require(bool,string)(block.timestamp <= votingEndtimes[poolAddress][votingItem],voting is closed) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#321)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#8) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Parameter YFVVIPVoteV2.setGovernance(address)._governance (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#226) is not in mixedCase
Parameter YFVVIPVoteV2.setOperator(address)._operator (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#231) is not in mixedCase
Parameter YFVVIPVoteV2.setStakeGovernancePool(address)._stakeGovernancePool (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#247) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
setGovernance(address) should be declared external:
	- YFVVIPVoteV2.setGovernance(address) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#226-229)
setOperator(address) should be declared external:
	- YFVVIPVoteV2.setOperator(address) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#231-234)
setVotingConfig(address,uint256,uint64,uint64,uint256,uint256) should be declared external:
	- YFVVIPVoteV2.setVotingConfig(address,uint256,uint64,uint64,uint256,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#236-245)
setStakeGovernancePool(address) should be declared external:
	- YFVVIPVoteV2.setStakeGovernancePool(address) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#247-250)
setPoolVotingValueBitRanges(address,uint8,uint8) should be declared external:
	- YFVVIPVoteV2.setPoolVotingValueBitRanges(address,uint8,uint8) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#252-256)
averageVotingValueX100(address,uint256) should be declared external:
	- YFVVIPVoteV2.averageVotingValueX100(address,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#272-283)
verifyOfflineVote(address,uint256,uint64,uint256,address,uint8,bytes32,bytes32) should be declared external:
	- YFVVIPVoteV2.verifyOfflineVote(address,uint256,uint64,uint256,address,uint8,bytes32,bytes32) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#301-304)
replaceVoter(address,uint256,uint8,address) should be declared external:
	- YFVVIPVoteV2.replaceVoter(address,uint256,uint8,address) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#307-317)
vote(address,uint256,uint64) should be declared external:
	- YFVVIPVoteV2.vote(address,uint256,uint64) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#319-337)
votingValueGovernance(address,uint256,uint16) should be declared external:
	- YFVVIPVoteV2.votingValueGovernance(address,uint256,uint16) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#374-376)
totalSupply() should be declared external:
	- ERC20.totalSupply() (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#390)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#391)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#392)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#393)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#394)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol#395)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol analyzed (4 contracts with 46 detectors), 34 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol
Tool Runtime = 0.8959395579986449 seconds
#############################################