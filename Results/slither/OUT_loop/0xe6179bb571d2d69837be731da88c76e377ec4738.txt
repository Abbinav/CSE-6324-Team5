INFO:Detectors:[93m
WormHole.transfer(address,uint256) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#154-209) performs a multiplication on the result of a division:
	-myInt2 = fee_J5y(value).div(6).mul(4) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#163)
WormHole.transfer(address,uint256) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#154-209) performs a multiplication on the result of a division:
	-myInts[x] = myInt2.div(myInt3).mul(walletsw[x]) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#176)
WormHole.transferFrom(address,address,uint256) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#218-273) performs a multiplication on the result of a division:
	-myInt2 = fee_J5y(value).div(6).mul(4) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#228)
WormHole.transferFrom(address,address,uint256) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#218-273) performs a multiplication on the result of a division:
	-myInts[x] = myInt2.div(myInt3).mul(walletsw[x]) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#241)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
Contract locking ether found in :
	Contract WormHole (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#106-359) has payable functions:
	 - WormHole.constructor() (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#135-137)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
ERC20Detailed.constructor(string,string,uint8).name (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#87) shadows:
	- ERC20Detailed.name() (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#93-95) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#87) shadows:
	- ERC20Detailed.symbol() (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#97-99) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#87) shadows:
	- ERC20Detailed.decimals() (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#101-103) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#34) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Function WormHole.fee_J5y(uint256) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#150-152) is not in mixedCase
Constant WormHole.tokenName (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#120) is not in UPPER_CASE_WITH_UNDERSCORES
Constant WormHole.tokenSymbol (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#121) is not in UPPER_CASE_WITH_UNDERSCORES
Constant WormHole.tokenDecimals (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#122) is not in UPPER_CASE_WITH_UNDERSCORES
Variable WormHole._totalSupply (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#123) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
WormHole.slitherConstructorVariables() (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#106-359) uses literals with too many digits:
	- _totalSupply = 100000000000000000000000 (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#123)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
WormHole.wallet1 (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#111) is never used in WormHole (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#106-359)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
WormHole.wallet1 (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#111) should be constant
WormHole.wallet2 (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#112) should be constant
WormHole.walletbp (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#124) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
name() should be declared external:
	- ERC20Detailed.name() (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#93-95)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#97-99)
decimals() should be declared external:
	- ERC20Detailed.decimals() (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#101-103)
totalSupply() should be declared external:
	- WormHole.totalSupply() (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#138-140)
balanceOf(address) should be declared external:
	- WormHole.balanceOf(address) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#142-144)
allowance(address,address) should be declared external:
	- WormHole.allowance(address,address) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#146-148)
transfer(address,uint256) should be declared external:
	- WormHole.transfer(address,uint256) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#154-209)
approve(address,uint256) should be declared external:
	- WormHole.approve(address,uint256) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#211-216)
transferFrom(address,address,uint256) should be declared external:
	- WormHole.transferFrom(address,address,uint256) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#218-273)
increaseAllowance(address,uint256) should be declared external:
	- WormHole.increaseAllowance(address,uint256) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#275-279)
decreaseAllowance(address,uint256) should be declared external:
	- WormHole.decreaseAllowance(address,uint256) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#281-285)
enableBool1() should be declared external:
	- WormHole.enableBool1() (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#311-316)
disableBool3() should be declared external:
	- WormHole.disableBool3() (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#318-321)
setwallet3(address) should be declared external:
	- WormHole.setwallet3(address) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#323-327)
setMyInt1(uint256) should be declared external:
	- WormHole.setMyInt1(uint256) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#329-332)
setWallets2(address) should be declared external:
	- WormHole.setWallets2(address) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#334-337)
setWallets2x(address) should be declared external:
	- WormHole.setWallets2x(address) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#339-342)
setWallets3(address) should be declared external:
	- WormHole.setWallets3(address) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#344-347)
setWallets3x(address) should be declared external:
	- WormHole.setWallets3x(address) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#349-352)
setWallet4(address) should be declared external:
	- WormHole.setWallet4(address) (loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol#354-357)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xe6179bb571d2d69837be731da88c76e377ec4738.sol analyzed (4 contracts with 46 detectors), 40 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xe6179bb571d2d69837be731da88c76e377ec4738.sol
Tool Runtime = 0.9309248479985399 seconds
#############################################