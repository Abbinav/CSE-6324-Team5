INFO:Detectors:[93m
LPStaker.calculateReward(uint128) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#122-167) performs a multiplication on the result of a division:
	-x3 = (((17042 * temp1 * rd) / tDepositedTokensSquared) * rd) / int256(tDepositedTokens) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#162)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
Reentrancy in LPStaker.depositWithBonus(uint128,bool) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#176-184):
	External calls:
	- deposit(amount) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#177)
		- require(bool,string)(depositToken.transferFrom(msg.sender,address(this),amount),transfer unsuccessful) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#204)
	State variables written after the call(s):
	- ss.bonusBalance += amount (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#182)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in LPStaker.depositWithBonus(uint128,bool) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#176-184):
	External calls:
	- deposit(amount) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#177)
		- require(bool,string)(depositToken.transferFrom(msg.sender,address(this),amount),transfer unsuccessful) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#204)
	State variables written after the call(s):
	- totalBonusDeposits += amount (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#183)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
LPStaker.deposit(uint128) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#186-205) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp < 1604707200,deposits no longer accepted) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#187)
LPStaker.withdraw(address) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#207-226) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(ss.lockedUntil < block.timestamp,still locked) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#209)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#8) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Parameter LPStaker.depositWithBonus(uint128,bool).is_chr (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#176) is not in mixedCase
Constant LPStaker.initialDepositedTokens (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#98) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LPStaker.initialAllocatedReward (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#99) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LPStaker.maxAllocatedReward (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#100) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LPStaker.usdt_auction (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#117) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LPStaker.chr_auction (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#118) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
LPStaker.calculateReward(uint128) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#122-167) uses literals with too many digits:
	- boughtTokens = (741101126592248 * tAllocatedReward) / (1000000000000000) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#141)
LPStaker.calculateReward(uint128) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#122-167) uses literals with too many digits:
	- res = (x1 - x2 + x3) / 1000000 (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#163)
LPStaker.withdraw(address) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#207-226) uses literals with too many digits:
	- reward += uint64((2500 * 1000000 * bonusBalance) / totalBonusDeposits) (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#220)
LPStaker.slitherConstructorConstantVariables() (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#89-227) uses literals with too many digits:
	- initialDepositedTokens = 20000 * 1000000 (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#98)
LPStaker.slitherConstructorConstantVariables() (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#89-227) uses literals with too many digits:
	- initialAllocatedReward = 1930 * 1000000 (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#99)
LPStaker.slitherConstructorConstantVariables() (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#89-227) uses literals with too many digits:
	- maxAllocatedReward = 10000 * 1000000 (loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol#100)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Slither:./loops/0x88f042fdea1d94ccd7b848686f9f529552085110.sol analyzed (3 contracts with 46 detectors), 19 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x88f042fdea1d94ccd7b848686f9f529552085110.sol
Tool Runtime = 0.5911643100007495 seconds
#############################################