Compilation warnings/errors on ./loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol:
./loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol:552:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[91m
ERC20.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1567) shadows:
	- Initializable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1033)
ERC20Detailed.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1686) shadows:
	- Initializable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1033)
MinterRole.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1868) shadows:
	- Initializable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1033)
ERC20Mintable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1935) shadows:
	- MinterRole.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1868)
	- ERC20.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1567)
	- Initializable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1033)
ERC20Burnable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2000) shadows:
	- ERC20.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1567)
	- Initializable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1033)
Ownable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2182) shadows:
	- Initializable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1033)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing[0m
INFO:Detectors:[93m
Reentrancy in VaultProtocol.decreaseOnHoldDeposit(address,address,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4374-4404):
	External calls:
	- vaultSavings = IVaultSavings(getModuleAddress(MODULE_VAULT)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4382)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
	- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[ind],_amount)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4390)
	State variables written after the call(s):
	- balancesOnHold[_user][ind] = balancesOnHold[_user][ind].sub(_amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4392)
Reentrancy in VaultProtocol.decreaseOnHoldDeposit(address,address,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4374-4404):
	External calls:
	- vaultSavings = IVaultSavings(getModuleAddress(MODULE_VAULT)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4382)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
	- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[ind],balancesOnHold[_user][ind])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4398)
	State variables written after the call(s):
	- balancesOnHold[_user][ind] = 0 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4400)
Reentrancy in VaultProtocol.operatorActionOneCoin(address,address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3896-3992):
	External calls:
	- processOnHoldDeposit(ind) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3914)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
		- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[coinNum],balancesOnHold[_user][coinNum])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4358)
	- IERC20(_token).safeApprove(address(_strategy),totalDeposit) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3956)
	- IDefiStrategy(_strategy).handleDeposit(_token,totalDeposit) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3966)
	- IDefiStrategy(_strategy).withdraw(address(this),_token,totalWithdraw) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3976)
	State variables written after the call(s):
	- claimableTokens[ind] = claimableTokens[ind].add(totalWithdraw) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3982)
Reentrancy in VaultProtocol.processOnHoldDeposit() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4296-4334):
	External calls:
	- vaultSavings = IVaultSavings(getModuleAddress(MODULE_VAULT)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4298)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
	- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[j],balancesOnHold[_user][j])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4318)
	State variables written after the call(s):
	- balancesOnHold[_user][j] = 0 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4320)
Reentrancy in VaultProtocol.processOnHoldDeposit(uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4338-4370):
	External calls:
	- vaultSavings = IVaultSavings(getModuleAddress(MODULE_VAULT)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4342)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
	- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[coinNum],balancesOnHold[_user][coinNum])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4358)
	State variables written after the call(s):
	- balancesOnHold[_user][coinNum] = 0 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4360)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
VaultProtocol.requestToClaim(address,uint256).amountToWithdraw (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4432) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
ERC20Detailed.initialize(string,string,uint8).name (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1612) shadows:
	- ERC20Detailed.name() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1630-1634) (function)
ERC20Detailed.initialize(string,string,uint8).symbol (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1612) shadows:
	- ERC20Detailed.symbol() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1646-1650) (function)
ERC20Detailed.initialize(string,string,uint8).decimals (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1612) shadows:
	- ERC20Detailed.decimals() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1678-1682) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
VaultProtocol.operatorAction(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3778-3892) has external calls inside a loop: depositAmounts[i_scope_0] = IERC20(registeredVaultTokens[i_scope_0]).balanceOf(address(this)).sub(claimableTokens[i_scope_0]) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3840)
VaultProtocol.normalizedBalance() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4068-4080) has external calls inside a loop: total = total.add(IDefiStrategy(strategies[i]).normalizedBalance()) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4074)
VaultProtocol.normalizedVaultBalance() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4084-4098) has external calls inside a loop: balance = IERC20(registeredVaultTokens[i]).balanceOf(address(this)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4090)
VaultProtocol.processOnHoldDeposit() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4296-4334) has external calls inside a loop: vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[j],balancesOnHold[_user][j])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4318)
VaultProtocol.processOnHoldDeposit(uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4338-4370) has external calls inside a loop: vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[coinNum],balancesOnHold[_user][coinNum])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4358)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in VaultProtocol.claimRequested(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3742-3768):
	External calls:
	- IERC20(token).safeTransfer(_user,amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3756)
	State variables written after the call(s):
	- claimableTokens[i] = claimableTokens[i].sub(amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3758)
Reentrancy in VaultProtocol.operatorAction(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3778-3892):
	External calls:
	- processOnHoldDeposit() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3788)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
		- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[j],balancesOnHold[_user][j])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4318)
	State variables written after the call(s):
	- amountToWithdraw = requestToClaim(_user,j) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3810)
		- balancesRequested[_user][_ind] = 0 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4476)
	- amountToWithdraw = requestToClaim(_user,j) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3810)
		- balancesToClaim[_user] = new uint256[](supportedTokensCount()) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4416)
		- balancesToClaim[_user][ind] = balancesToClaim[_user][ind].add(_amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4420)
	- amountToWithdraw = requestToClaim(_user,j) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3810)
		- claimableTokens[_ind] = claimableTokens[_ind].add(amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4452)
		- claimableTokens[_ind] = claimableTokens[_ind].add(tokenBalance) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4460)
Reentrancy in VaultProtocol.operatorAction(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3778-3892):
	External calls:
	- processOnHoldDeposit() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3788)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
		- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[j],balancesOnHold[_user][j])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4318)
	- IDefiStrategy(_strategy).handleDeposit(registeredVaultTokens,depositAmounts) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3864)
	- IDefiStrategy(_strategy).withdraw(address(this),withdrawAmounts) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3874)
	State variables written after the call(s):
	- claimableTokens[i_scope_1] = claimableTokens[i_scope_1].add(withdrawAmounts[i_scope_1]) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3882)
Reentrancy in VaultProtocol.operatorActionOneCoin(address,address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3896-3992):
	External calls:
	- processOnHoldDeposit(ind) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3914)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
		- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[coinNum],balancesOnHold[_user][coinNum])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4358)
	State variables written after the call(s):
	- amountToWithdraw = requestToClaim(_user,ind) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3932)
		- balancesRequested[_user][_ind] = 0 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4476)
	- amountToWithdraw = requestToClaim(_user,ind) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3932)
		- balancesToClaim[_user] = new uint256[](supportedTokensCount()) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4416)
		- balancesToClaim[_user][ind] = balancesToClaim[_user][ind].add(_amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4420)
	- amountToWithdraw = requestToClaim(_user,ind) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3932)
		- claimableTokens[_ind] = claimableTokens[_ind].add(amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4452)
		- claimableTokens[_ind] = claimableTokens[_ind].add(tokenBalance) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4460)
	- lastProcessedRequests[ind] = usersRequested.length (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3944)
Reentrancy in VaultProtocol.processOnHoldDeposit(uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4338-4370):
	External calls:
	- vaultSavings = IVaultSavings(getModuleAddress(MODULE_VAULT)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4342)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
	State variables written after the call(s):
	- lastProcessedDeposits[coinNum] = usersDeposited.length (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4368)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in VaultProtocol.claimRequested(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3742-3768):
	External calls:
	- IERC20(token).safeTransfer(_user,amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3756)
	Event emitted after the call(s):
	- Claimed(address(this),_user,token,amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3760)
Reentrancy in VaultProtocol.depositToVault(address,address,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3562-3610):
	External calls:
	- vaultSavings = IVaultSavings(getModuleAddress(MODULE_VAULT)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3600)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
	- IOperableToken(vaultPoolToken).increaseOnHoldValue(_user,CalcUtils.normalizeAmount(_token,_amount)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3604)
	Event emitted after the call(s):
	- DepositToVault(_user,_token,_amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3608)
Reentrancy in VaultProtocol.operatorAction(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3778-3892):
	External calls:
	- processOnHoldDeposit() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3788)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
		- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[j],balancesOnHold[_user][j])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4318)
	- IDefiStrategy(_strategy).handleDeposit(registeredVaultTokens,depositAmounts) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3864)
	Event emitted after the call(s):
	- DepositByOperator(totalDeposit) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3866)
Reentrancy in VaultProtocol.operatorAction(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3778-3892):
	External calls:
	- processOnHoldDeposit() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3788)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
		- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[j],balancesOnHold[_user][j])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4318)
	- IDefiStrategy(_strategy).handleDeposit(registeredVaultTokens,depositAmounts) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3864)
	- IDefiStrategy(_strategy).withdraw(address(this),withdrawAmounts) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3874)
	Event emitted after the call(s):
	- WithdrawByOperator(totalWithdraw) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3876)
	- WithdrawRequestsResolved(totalDeposit,totalWithdraw) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3888)
Reentrancy in VaultProtocol.operatorActionOneCoin(address,address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3896-3992):
	External calls:
	- processOnHoldDeposit(ind) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3914)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
		- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[coinNum],balancesOnHold[_user][coinNum])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4358)
	- IERC20(_token).safeApprove(address(_strategy),totalDeposit) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3956)
	- IDefiStrategy(_strategy).handleDeposit(_token,totalDeposit) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3966)
	Event emitted after the call(s):
	- DepositByOperator(totalDeposit) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3968)
Reentrancy in VaultProtocol.operatorActionOneCoin(address,address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3896-3992):
	External calls:
	- processOnHoldDeposit(ind) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3914)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
		- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[coinNum],balancesOnHold[_user][coinNum])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4358)
	- IERC20(_token).safeApprove(address(_strategy),totalDeposit) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3956)
	- IDefiStrategy(_strategy).handleDeposit(_token,totalDeposit) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3966)
	- IDefiStrategy(_strategy).withdraw(address(this),_token,totalWithdraw) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3976)
	Event emitted after the call(s):
	- WithdrawByOperator(totalWithdraw) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3978)
	- WithdrawRequestsResolved(totalDeposit,totalWithdraw) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3986)
Reentrancy in VaultProtocol.registerStrategy(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3514-3524):
	External calls:
	- IDefiStrategy(_strategy).setVault(address(this)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3518)
	Event emitted after the call(s):
	- StrategyRegistered(address(this),_strategy,IDefiStrategy(_strategy).getStrategyId()) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3522)
Reentrancy in VaultProtocol.withdrawFromVault(address,address,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3632-3694):
	External calls:
	- decreaseOnHoldDeposit(_user,_token,_amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3660)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
		- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[ind],_amount)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4390)
		- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[ind],balancesOnHold[_user][ind])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4398)
	- IERC20(_token).safeTransfer(_user,_amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3664)
	Event emitted after the call(s):
	- WithdrawFromVault(_user,_token,_amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3668)
Reentrancy in VaultProtocol.withdrawFromVault(address,address,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3632-3694):
	External calls:
	- decreaseOnHoldDeposit(_user,_token,_amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3686)
		- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
		- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[ind],_amount)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4390)
		- vaultPoolToken.decreaseOnHoldValue(_user,CalcUtils.normalizeAmount(registeredVaultTokens[ind],balancesOnHold[_user][ind])) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4398)
	Event emitted after the call(s):
	- WithdrawRequestCreated(_user,_token,_amount) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3690)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
DistributionToken.isReadyForDistribution() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2814-2818) uses timestamp for comparisons
	Dangerous comparisons:
	- (distributionAccumulator > 0) && (now >= nextDistributionTimestamp) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2816)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Address.isContract(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#538-556) uses assembly
	- INLINE ASM (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#552-554)
Initializable.isConstructor() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1007-1027) uses assembly
	- INLINE ASM (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1023-1025)
Module.getModuleAddress(string) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2331-2359) uses assembly
	- INLINE ASM (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2341-2349)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#14) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#173) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#492) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#639) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#794) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#913) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1044) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1107) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1578) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1697) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1776) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1879) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1946) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2011) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2028) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2193) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2232) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2287) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2372) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2829) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2952) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2973) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3108) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3171) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3228) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3329) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3396) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#616-628):
	- (success) = recipient.call.value(amount)() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#624)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#745-783):
	- (success,returndata) = address(token).call(data) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#769)
Low level call in Module.getModuleAddress(string) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2331-2359):
	- (success,result) = pool.staticcall(abi.encodeWithSignature(get(string),module)) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2335)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Variable Initializable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1033) is not in mixedCase
Variable ERC20.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1567) is not in mixedCase
Variable ERC20Detailed.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1686) is not in mixedCase
Variable MinterRole.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1868) is not in mixedCase
Variable ERC20Mintable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1935) is not in mixedCase
Variable ERC20Burnable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2000) is not in mixedCase
Variable Ownable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2182) is not in mixedCase
Parameter Module.initialize(address)._pool (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2309) is not in mixedCase
Parameter Module.setPool(address)._pool (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2319) is not in mixedCase
Parameter PoolToken.initialize(address,string,string)._pool (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2855) is not in mixedCase
Parameter PoolToken.setAllowTransfers(bool)._allowTransfers (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2867) is not in mixedCase
Parameter VaultPoolToken.increaseOnHoldValue(address,uint256)._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3013) is not in mixedCase
Parameter VaultPoolToken.increaseOnHoldValue(address,uint256)._amount (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3013) is not in mixedCase
Parameter VaultPoolToken.decreaseOnHoldValue(address,uint256)._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3023) is not in mixedCase
Parameter VaultPoolToken.decreaseOnHoldValue(address,uint256)._amount (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3023) is not in mixedCase
Parameter VaultPoolToken.onHoldBalanceOf(address)._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3051) is not in mixedCase
Parameter VaultProtocol.initialize(address,address[])._pool (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3478) is not in mixedCase
Parameter VaultProtocol.registerStrategy(address)._strategy (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3514) is not in mixedCase
Parameter VaultProtocol.setQuickWithdrawStrategy(address)._strategy (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3528) is not in mixedCase
Parameter VaultProtocol.setRemainder(uint256,uint256)._amount (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3538) is not in mixedCase
Parameter VaultProtocol.setRemainder(uint256,uint256)._index (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3538) is not in mixedCase
Parameter VaultProtocol.depositToVault(address,address,uint256)._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3562) is not in mixedCase
Parameter VaultProtocol.depositToVault(address,address,uint256)._token (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3562) is not in mixedCase
Parameter VaultProtocol.depositToVault(address,address,uint256)._amount (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3562) is not in mixedCase
Parameter VaultProtocol.depositToVault(address,address[],uint256[])._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3614) is not in mixedCase
Parameter VaultProtocol.depositToVault(address,address[],uint256[])._tokens (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3614) is not in mixedCase
Parameter VaultProtocol.depositToVault(address,address[],uint256[])._amounts (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3614) is not in mixedCase
Parameter VaultProtocol.withdrawFromVault(address,address,uint256)._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3632) is not in mixedCase
Parameter VaultProtocol.withdrawFromVault(address,address,uint256)._token (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3632) is not in mixedCase
Parameter VaultProtocol.withdrawFromVault(address,address,uint256)._amount (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3632) is not in mixedCase
Parameter VaultProtocol.withdrawFromVault(address,address[],uint256[])._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3698) is not in mixedCase
Parameter VaultProtocol.withdrawFromVault(address,address[],uint256[])._tokens (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3698) is not in mixedCase
Parameter VaultProtocol.withdrawFromVault(address,address[],uint256[])._amounts (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3698) is not in mixedCase
Parameter VaultProtocol.quickWithdraw(address,address[],uint256[])._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3716) is not in mixedCase
Parameter VaultProtocol.quickWithdraw(address,address[],uint256[])._tokens (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3716) is not in mixedCase
Parameter VaultProtocol.quickWithdraw(address,address[],uint256[])._amounts (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3716) is not in mixedCase
Parameter VaultProtocol.claimRequested(address)._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3742) is not in mixedCase
Parameter VaultProtocol.operatorAction(address)._strategy (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3778) is not in mixedCase
Parameter VaultProtocol.operatorActionOneCoin(address,address)._strategy (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3896) is not in mixedCase
Parameter VaultProtocol.operatorActionOneCoin(address,address)._token (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3896) is not in mixedCase
Parameter VaultProtocol.normalizedBalance(address)._strategy (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4058) is not in mixedCase
Parameter VaultProtocol.totalClaimableAmount(address)._token (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4102) is not in mixedCase
Parameter VaultProtocol.claimableAmount(address,address)._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4114) is not in mixedCase
Parameter VaultProtocol.claimableAmount(address,address)._token (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4114) is not in mixedCase
Parameter VaultProtocol.amountOnHold(address,address)._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4122) is not in mixedCase
Parameter VaultProtocol.amountOnHold(address,address)._token (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4122) is not in mixedCase
Parameter VaultProtocol.amountRequested(address,address)._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4130) is not in mixedCase
Parameter VaultProtocol.amountRequested(address,address)._token (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4130) is not in mixedCase
Parameter VaultProtocol.getRemainder(uint256)._index (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4152) is not in mixedCase
Parameter VaultProtocol.isStrategyRegistered(address)._strategy (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4178) is not in mixedCase
Parameter VaultProtocol.isTokenRegistered(address)._token (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4204) is not in mixedCase
Parameter VaultProtocol.tokenRegisteredInd(address)._token (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4226) is not in mixedCase
Parameter VaultProtocol.tokenAmount(mapping(address => uint256[]),address,address)._amounts (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4254) is not in mixedCase
Parameter VaultProtocol.tokenAmount(mapping(address => uint256[]),address,address)._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4254) is not in mixedCase
Parameter VaultProtocol.tokenAmount(mapping(address => uint256[]),address,address)._token (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4254) is not in mixedCase
Parameter VaultProtocol.tokenInfo(address,address[])._token (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4270) is not in mixedCase
Parameter VaultProtocol.decreaseOnHoldDeposit(address,address,uint256)._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4374) is not in mixedCase
Parameter VaultProtocol.decreaseOnHoldDeposit(address,address,uint256)._token (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4374) is not in mixedCase
Parameter VaultProtocol.decreaseOnHoldDeposit(address,address,uint256)._amount (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4374) is not in mixedCase
Parameter VaultProtocol.addClaim(address,address,uint256)._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4408) is not in mixedCase
Parameter VaultProtocol.addClaim(address,address,uint256)._token (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4408) is not in mixedCase
Parameter VaultProtocol.addClaim(address,address,uint256)._amount (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4408) is not in mixedCase
Parameter VaultProtocol.requestToClaim(address,uint256)._user (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4426) is not in mixedCase
Parameter VaultProtocol.requestToClaim(address,uint256)._ind (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4426) is not in mixedCase
Parameter VaultProtocol.handleRemainders(uint256,uint256)._amount (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4518) is not in mixedCase
Parameter VaultProtocol.handleRemainders(uint256,uint256)._ind (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4518) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
ERC20Mintable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1935) is never used in VaultPoolToken (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2981-3099)
ModuleNames.MODULE_ACCESS (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2246) is never used in VaultPoolToken (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2981-3099)
ModuleNames.MODULE_SAVINGS (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2248) is never used in VaultPoolToken (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2981-3099)
ModuleNames.MODULE_INVESTING (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2250) is never used in VaultPoolToken (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2981-3099)
ModuleNames.MODULE_STAKING_AKRO (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2252) is never used in VaultPoolToken (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2981-3099)
ModuleNames.MODULE_STAKING_ADEL (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2254) is never used in VaultPoolToken (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2981-3099)
ModuleNames.MODULE_DCA (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2256) is never used in VaultPoolToken (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2981-3099)
ModuleNames.MODULE_REWARD (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2258) is never used in VaultPoolToken (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2981-3099)
ModuleNames.MODULE_REWARD_DISTR (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2260) is never used in VaultPoolToken (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2981-3099)
ModuleNames.MODULE_VAULT (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2262) is never used in VaultPoolToken (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2981-3099)
ModuleNames.TOKEN_AKRO (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2268) is never used in VaultPoolToken (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2981-3099)
ModuleNames.TOKEN_ADEL (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2270) is never used in VaultPoolToken (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2981-3099)
ModuleNames.CONTRACT_RAY (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2276) is never used in VaultPoolToken (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2981-3099)
Initializable.______gap (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1033) is never used in VaultProtocol (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3420-4534)
ModuleNames.MODULE_ACCESS (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2246) is never used in VaultProtocol (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3420-4534)
ModuleNames.MODULE_SAVINGS (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2248) is never used in VaultProtocol (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3420-4534)
ModuleNames.MODULE_INVESTING (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2250) is never used in VaultProtocol (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3420-4534)
ModuleNames.MODULE_STAKING_AKRO (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2252) is never used in VaultProtocol (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3420-4534)
ModuleNames.MODULE_STAKING_ADEL (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2254) is never used in VaultProtocol (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3420-4534)
ModuleNames.MODULE_DCA (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2256) is never used in VaultProtocol (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3420-4534)
ModuleNames.MODULE_REWARD (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2258) is never used in VaultProtocol (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3420-4534)
ModuleNames.MODULE_REWARD_DISTR (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2260) is never used in VaultProtocol (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3420-4534)
ModuleNames.TOKEN_AKRO (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2268) is never used in VaultProtocol (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3420-4534)
ModuleNames.TOKEN_ADEL (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2270) is never used in VaultProtocol (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3420-4534)
ModuleNames.CONTRACT_RAY (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2276) is never used in VaultProtocol (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3420-4534)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1229-1235)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1245-1249)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1267-1273)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1301-1309)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1337-1343)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1375-1381)
name() should be declared external:
	- ERC20Detailed.name() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1630-1634)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1646-1650)
decimals() should be declared external:
	- ERC20Detailed.decimals() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1678-1682)
addMinter(address) should be declared external:
	- MinterRole.addMinter(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1832-1836)
renounceMinter() should be declared external:
	- MinterRole.renounceMinter() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1840-1844)
mint(address,uint256) should be declared external:
	- ERC20Mintable.mint(address,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1925-1931)
burn(uint256) should be declared external:
	- ERC20Burnable.burn(uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#1978-1982)
owner() should be declared external:
	- Ownable.owner() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2086-2090)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2138-2144)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2156-2160)
fullBalanceOf(address) should be declared external:
	- VaultPoolToken.fullBalanceOf(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3061-3069)
	- DistributionToken.fullBalanceOf(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2528-2538)
calculateUnclaimedDistributions(address) should be declared external:
	- DistributionToken.calculateUnclaimedDistributions(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2552-2556)
calculateDistributedAmount(uint256,uint256,uint256) should be declared external:
	- DistributionToken.calculateDistributedAmount(uint256,uint256,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2574-2582)
nextDistribution() should be declared external:
	- DistributionToken.nextDistribution() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2586-2590)
setAllowTransfers(bool) should be declared external:
	- PoolToken.setAllowTransfers(bool) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#2867-2871)
increaseOnHoldValue(address,uint256) should be declared external:
	- VaultPoolToken.increaseOnHoldValue(address,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3013-3019)
decreaseOnHoldValue(address,uint256) should be declared external:
	- VaultPoolToken.decreaseOnHoldValue(address,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3023-3047)
onHoldBalanceOf(address) should be declared external:
	- VaultPoolToken.onHoldBalanceOf(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3051-3055)
supportedVaults() should be declared external:
	- IVaultSavings.supportedVaults() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3144)
isVaultRegistered(address) should be declared external:
	- IVaultSavings.isVaultRegistered(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3146)
addDefiOperator(address) should be declared external:
	- DefiOperatorRole.addDefiOperator(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3276-3280)
renounceDefiOperator() should be declared external:
	- DefiOperatorRole.renounceDefiOperator() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3284-3288)
initialize(address,address[]) should be declared external:
	- VaultProtocol.initialize(address,address[]) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3478-3510)
registerStrategy(address) should be declared external:
	- VaultProtocol.registerStrategy(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3514-3524)
setQuickWithdrawStrategy(address) should be declared external:
	- VaultProtocol.setQuickWithdrawStrategy(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3528-3534)
setRemainder(uint256,uint256) should be declared external:
	- VaultProtocol.setRemainder(uint256,uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3538-3544)
setAvailableEnabled(bool) should be declared external:
	- VaultProtocol.setAvailableEnabled(bool) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3548-3552)
depositToVault(address,address[],uint256[]) should be declared external:
	- VaultProtocol.depositToVault(address,address[],uint256[]) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3614-3628)
withdrawFromVault(address,address[],uint256[]) should be declared external:
	- VaultProtocol.withdrawFromVault(address,address[],uint256[]) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3698-3712)
quickWithdraw(address,address[],uint256[]) should be declared external:
	- VaultProtocol.quickWithdraw(address,address[],uint256[]) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3716-3738)
claimRequested(address) should be declared external:
	- VaultProtocol.claimRequested(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3742-3768)
operatorAction(address) should be declared external:
	- VaultProtocol.operatorAction(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3778-3892)
operatorActionOneCoin(address,address) should be declared external:
	- VaultProtocol.operatorActionOneCoin(address,address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3896-3992)
clearOnHoldDeposits() should be declared external:
	- VaultProtocol.clearOnHoldDeposits() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#3996-4020)
clearWithdrawRequests() should be declared external:
	- VaultProtocol.clearWithdrawRequests() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4024-4046)
normalizedBalance(address) should be declared external:
	- VaultProtocol.normalizedBalance(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4058-4064)
normalizedBalance() should be declared external:
	- VaultProtocol.normalizedBalance() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4068-4080)
normalizedVaultBalance() should be declared external:
	- VaultProtocol.normalizedVaultBalance() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4084-4098)
totalClaimableAmount(address) should be declared external:
	- VaultProtocol.totalClaimableAmount(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4102-4110)
claimableAmount(address,address) should be declared external:
	- VaultProtocol.claimableAmount(address,address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4114-4118)
amountOnHold(address,address) should be declared external:
	- VaultProtocol.amountOnHold(address,address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4122-4126)
amountRequested(address,address) should be declared external:
	- VaultProtocol.amountRequested(address,address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4130-4134)
quickWithdrawStrategy() should be declared external:
	- VaultProtocol.quickWithdrawStrategy() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4144-4148)
getRemainder(uint256) should be declared external:
	- VaultProtocol.getRemainder(uint256) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4152-4158)
supportedTokens() should be declared external:
	- VaultProtocol.supportedTokens() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4162-4166)
registeredStrategies() should be declared external:
	- VaultProtocol.registeredStrategies() (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4196-4200)
isTokenRegistered(address) should be declared external:
	- VaultProtocol.isTokenRegistered(address) (loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol#4204-4222)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol analyzed (27 contracts with 46 detectors), 213 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x7cc0851af6dd95814897ebbae29c839101ede5a3.sol
Tool Runtime = 21.568789466000453 seconds
#############################################