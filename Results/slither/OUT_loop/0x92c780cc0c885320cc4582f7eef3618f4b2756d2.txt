INFO:Detectors:[93m
Ethertime.getPeriodBorders(uint256,uint256,uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1250-1280) performs a multiplication on the result of a division:
	-n = n.div(period) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1266)
	-delta = n.mul(period) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1270)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
Ethertime.finalizeLotteries() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#498-526) uses a dangerous strict equality:
	- block.number.sub(blockNumber) == 1 (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#512)
Ethertime.finalizeNotEmptyLottery(Ethertime.Lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1346-1372) uses a dangerous strict equality:
	- lottery.prizeType == LotteryPrizeType.Three (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1358)
Ethertime.getActualLotteryId(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#976-1014) uses a dangerous strict equality:
	- lottery.status == LotteryStatus.Finished (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#994)
Ethertime.getActualLotteryId(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#976-1014) uses a dangerous strict equality:
	- lottery.childId == None (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#996)
Ethertime.getFinishedLotteryInfo(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#844-892) uses a dangerous strict equality:
	- require(bool)(lottery.status == LotteryStatus.Finished) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#872)
Ethertime.getWinPlayers(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#936-974) uses a dangerous strict equality:
	- require(bool)(lottery.status == LotteryStatus.Finished && lottery.isPayedOut == true) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#948)
Ethertime.getWinningsCount(Ethertime.Lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1428-1490) uses a dangerous strict equality:
	- lottery.prizeType == LotteryPrizeType.First (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1446)
Ethertime.getWinningsCount(Ethertime.Lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1428-1490) uses a dangerous strict equality:
	- lottery.prizeType == LotteryPrizeType.All (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1450)
Ethertime.getWinningsCount(Ethertime.Lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1428-1490) uses a dangerous strict equality:
	- lottery.prizeType == LotteryPrizeType.T10 (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1454)
Ethertime.getWinningsCount(Ethertime.Lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1428-1490) uses a dangerous strict equality:
	- lottery.prizeType == LotteryPrizeType.T30 (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1460)
Ethertime.getWinningsCount(Ethertime.Lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1428-1490) uses a dangerous strict equality:
	- lottery.prizeType == LotteryPrizeType.T50 (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1468)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Ethertime.removeAdmin(address).index (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1132) is a local variable never initialized
Ethertime.getWinningsCount(Ethertime.Lottery).result (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1440) is a local variable never initialized
Ethertime.removeLotteryIdFromArray(uint256,uint256[]).index (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1400) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Ethertime.distributeDividend() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#356-382) has external calls inside a loop: addr.transfer(sum) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#374)
Ethertime.payOutLotteryPrizes(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#528-604) has external calls inside a loop: addr.transfer(prize) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#566)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
Ethertime.buyTicket(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#462-496) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(actualLotteryId != None) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#470)
Ethertime.finalizeLotteries() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#498-526) uses timestamp for comparisons
	Dangerous comparisons:
	- _lotteries[lotteryId].end < now (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#504)
Ethertime.createOrder(address,uint256,uint256,uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#622-666) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(expiredDate > now) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#642)
Ethertime.confirmOrder(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#668-716) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(order.expiredDate > now) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#676)
Ethertime.fallback() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#718-750) uses timestamp for comparisons
	Dangerous comparisons:
	- msg.value >= openLotteryPrice && openLotteryPrice > price (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#730)
Ethertime.getFinishedLotteryInfo(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#844-892) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(lottery.status == LotteryStatus.Finished) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#872)
Ethertime.getWinPlayers(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#936-974) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(lottery.status == LotteryStatus.Finished && lottery.isPayedOut == true) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#948)
Ethertime.getActualLotteryId(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#976-1014) uses timestamp for comparisons
	Dangerous comparisons:
	- lottery.status == LotteryStatus.Finished (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#994)
	- lottery.childId == None (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#996)
Ethertime.addPlayerToLottery(Ethertime.Lottery,uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1156-1176) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(lottery.begin <= now && lottery.end >= now) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1158)
Ethertime.createChildLottery(Ethertime.Lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1178-1248) uses timestamp for comparisons
	Dangerous comparisons:
	- end < now (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1190)
Ethertime.getPeriodBorders(uint256,uint256,uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1250-1280) uses timestamp for comparisons
	Dangerous comparisons:
	- end < currentTime (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1260)
Ethertime.getWinNumber(Ethertime.Lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1516-1546) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(lottery.end < now) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1526)
Ethertime.getActualLotteryPrice(Ethertime.Lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1562-1600) uses timestamp for comparisons
	Dangerous comparisons:
	- lottery.begin <= now && now < b1 (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1582)
	- b1 <= now && now < b2 (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1586)
	- b2 <= now && now < b3 (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1590)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Ethertime.payOutLotteryPrizes(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#528-604) compares to a boolean constant:
	-require(bool)(lottery.status == LotteryStatus.Finished && lottery.isPayedOut == false) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#532)
Ethertime.getWinPlayers(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#936-974) compares to a boolean constant:
	-require(bool)(lottery.status == LotteryStatus.Finished && lottery.isPayedOut == true) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#948)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#10) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Constant Ethertime.None (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#74) is not in UPPER_CASE_WITH_UNDERSCORES
Variable Ethertime._lastLotteryId (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#188) is not in mixedCase
Variable Ethertime._openLotteries (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#194) is not in mixedCase
Variable Ethertime._unpayedLotteries (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#196) is not in mixedCase
Variable Ethertime._lastOrderId (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#202) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Reentrancy in Ethertime.buyTicket(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#462-496):
	External calls:
	- finalizeLotteries() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#466)
		- addr.transfer(sum) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1342)
	State variables written after the call(s):
	- lottery.pot = lottery.pot.add(actualPrice.sub(feeSum)) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#484)
	- addPlayerToLottery(lottery,actualPrice) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#480)
		- _players[lottery.id].push(player) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1174)
	- _reservedFee[lottery.id] = _reservedFee[lottery.id].add(feeSum) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#486)
	- incUniquePlayersCount(lottery.id,msg.sender) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#478)
		- _uniquePlayersCount[lotteryId] = _uniquePlayersCount[lotteryId].add(1) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1392)
Reentrancy in Ethertime.buyTicket(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#462-496):
	External calls:
	- finalizeLotteries() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#466)
		- addr.transfer(sum) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1342)
	- msg.sender.transfer(remainder) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#492)
	Event emitted after the call(s):
	- BuyTicketEvent(msg.sender,actualLotteryId) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#494)
Reentrancy in Ethertime.confirmOrder(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#668-716):
	External calls:
	- distributeDividend() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#690)
		- addr.transfer(sum) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#374)
	State variables written after the call(s):
	- removeAdmin(order.admin) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#698)
		- _admins[i_scope_0] = _admins[i_scope_0.add(1)] (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1148)
		- _admins.length -- (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1152)
	- _adminsParts[order.admin] = _adminsParts[order.admin].sub(order.part) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#692)
	- _adminsParts[msg.sender] = _adminsParts[msg.sender].add(order.part) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#694)
Reentrancy in Ethertime.confirmOrder(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#668-716):
	External calls:
	- distributeDividend() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#690)
		- addr.transfer(sum) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#374)
	- addr.transfer(order.sum) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#704)
	- msg.sender.transfer(remainder) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#710)
	State variables written after the call(s):
	- order.status = OrderStatus.Closed (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#712)
	Event emitted after the call(s):
	- ConfirmOrderEvent(order.id) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#714)
Reentrancy in Ethertime.distributeDividend() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#356-382):
	External calls:
	- addr.transfer(sum) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#374)
	Event emitted after the call(s):
	- DividendEvent(addr,sum) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#376)
Reentrancy in Ethertime.finalizeLottery(Ethertime.Lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1282-1304):
	External calls:
	- finalizeOnePlayerLottery(lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1294)
		- addr.transfer(sum) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1342)
	State variables written after the call(s):
	- afterFinalizeLottery(lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1302)
		- _lastLotteryId = _lastLotteryId.add(1) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1194)
	- afterFinalizeLottery(lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1302)
		- _lotteries[_lastLotteryId] = Lottery(_lastLotteryId,parentLottery.name,msg.sender,parentLottery.price,begin,end,parentLottery.number.add(1),0,LotteryStatus.Open,parentLottery.prizeType,parentLottery.id,None,parentLottery.isContinued,0,0,0x0,parentLottery.withDiscount,None,false,0,0) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1196-1240)
	- afterFinalizeLottery(lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1302)
		- _openLotteries.push(_lastLotteryId) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1244)
	Event emitted after the call(s):
	- FinishedLotteryEvent(lottery.id) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1316)
		- afterFinalizeLottery(lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1302)
	- NewLotteryEvent(_lastLotteryId) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1246)
		- afterFinalizeLottery(lottery) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1302)
Reentrancy in Ethertime.payOutLotteryPrizes(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#528-604):
	External calls:
	- addr.transfer(prize) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#566)
	Event emitted after the call(s):
	- WinPrizeEvent(addr,prize,lottery.id) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#568)
Reentrancy in Ethertime.transferAdminPart(address,uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#324-354):
	External calls:
	- distributeDividend() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#334)
		- addr.transfer(sum) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#374)
	State variables written after the call(s):
	- _admins.push(addr) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#338)
	- removeAdmin(msg.sender) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#348)
		- _admins[i_scope_0] = _admins[i_scope_0.add(1)] (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1148)
		- _admins.length -- (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1152)
	- _adminsParts[msg.sender] = _adminsParts[msg.sender].sub(part) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#342)
	- _adminsParts[addr] = _adminsParts[addr].add(part) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#344)
	Event emitted after the call(s):
	- TransferAdminPartEvent(msg.sender,addr,part) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#352)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4[0m
INFO:Detectors:[92m
transferOwnership(address) should be declared external:
	- Ethertime.transferOwnership(address) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#316-322)
transferAdminPart(address,uint256) should be declared external:
	- Ethertime.transferAdminPart(address,uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#324-354)
createLottery(string,uint256,uint256,uint256,Ethertime.LotteryPrizeType,bool) should be declared external:
	- Ethertime.createLottery(string,uint256,uint256,uint256,Ethertime.LotteryPrizeType,bool) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#384-460)
payOutLotteryPrizes(uint256) should be declared external:
	- Ethertime.payOutLotteryPrizes(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#528-604)
deleteLottery(uint256) should be declared external:
	- Ethertime.deleteLottery(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#606-620)
createOrder(address,uint256,uint256,uint256) should be declared external:
	- Ethertime.createOrder(address,uint256,uint256,uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#622-666)
confirmOrder(uint256) should be declared external:
	- Ethertime.confirmOrder(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#668-716)
getOwner() should be declared external:
	- Ethertime.getOwner() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#752-756)
getTotalFee() should be declared external:
	- Ethertime.getTotalFee() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#758-762)
getAdmins() should be declared external:
	- Ethertime.getAdmins() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#764-768)
getAdminPartByAddress(address) should be declared external:
	- Ethertime.getAdminPartByAddress(address) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#770-774)
getLotteryInfo(uint256) should be declared external:
	- Ethertime.getLotteryInfo(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#776-842)
getFinishedLotteryInfo(uint256) should be declared external:
	- Ethertime.getFinishedLotteryInfo(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#844-892)
getLotteryPlayers(uint256) should be declared external:
	- Ethertime.getLotteryPlayers(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#894-934)
getWinPlayers(uint256) should be declared external:
	- Ethertime.getWinPlayers(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#936-974)
getOpenedLotteries() should be declared external:
	- Ethertime.getOpenedLotteries() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1016-1028)
getUnpayedLotteries() should be declared external:
	- Ethertime.getUnpayedLotteries() (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1030-1042)
getUniquePlayersCount(uint256) should be declared external:
	- Ethertime.getUniquePlayersCount(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1044-1060)
getOrderInfo(uint256) should be declared external:
	- Ethertime.getOrderInfo(uint256) (loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol#1062-1104)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol analyzed (2 contracts with 46 detectors), 66 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x92c780cc0c885320cc4582f7eef3618f4b2756d2.sol
Tool Runtime = 2.2506496319983853 seconds
#############################################