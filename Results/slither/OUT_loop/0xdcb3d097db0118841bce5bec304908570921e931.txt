Compilation warnings/errors on ./loops/0xdcb3d097db0118841bce5bec304908570921e931.sol:
./loops/0xdcb3d097db0118841bce5bec304908570921e931.sol:1628:57: Warning: This declaration shadows an existing declaration.
    function fairShare(uint256 balance, uint256 shares, uint256 totalShares) internal pure returns (uint256) {
                                                        ^-----------------^
./loops/0xdcb3d097db0118841bce5bec304908570921e931.sol:330:5: The shadowed declaration is here:
    uint256 public totalShares = 0; // total shares across all members
    ^----------------------------^
./loops/0xdcb3d097db0118841bce5bec304908570921e931.sol:1218:5: Warning: Function state mutability can be restricted to view
    function _didPass(uint256 proposalIndex) internal returns (bool didPass) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Moloch.fairShare(uint256,uint256,uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1628-1652) performs a multiplication on the result of a division:
	-(balance / totalShares) * shares (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1650)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
Moloch._validateProposalForProcessing(uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1258-1272) uses a dangerous strict equality:
	- require(bool,string)(proposal.flags[1] == false,proposal has already been processed) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1268)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Moloch.submitProposal(address,uint256,uint256,uint256,address,uint256,address,string) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#582-640):
	External calls:
	- require(bool,string)(IERC20(tributeToken).transferFrom(msg.sender,address(this),tributeOffered),tribute token transfer failed) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#626)
	State variables written after the call(s):
	- unsafeAddToBalance(ESCROW,tributeToken,tributeOffered) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#628)
		- userTokenBalances[user][token] += amount (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1600)
		- userTokenBalances[TOTAL][token] += amount (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1602)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Moloch.submitProposal(address,uint256,uint256,uint256,address,uint256,address,string).flags (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#632) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Moloch.withdrawBalances(address[],uint256[],bool).max (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1384) shadows:
	- Moloch.max(uint256,uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1532-1536) (function)
Moloch.fairShare(uint256,uint256,uint256).totalShares (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1628) shadows:
	- Moloch.totalShares (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#330) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Moloch.sponsorProposal(uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#766-858):
	External calls:
	- require(bool,string)(IERC20(depositToken).transferFrom(msg.sender,address(this),proposalDeposit),proposal deposit token transfer failed) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#770)
	State variables written after the call(s):
	- proposalQueue.push(proposalId) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#852)
	- proposal.startingPeriod = startingPeriod (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#836)
	- proposal.sponsor = memberAddress (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#842)
	- proposal.flags[0] = true (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#846)
	- proposedToKick[proposal.applicant] = true (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#818)
	- proposedToWhitelist[address(proposal.tributeToken)] = true (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#808)
	- unsafeAddToBalance(ESCROW,depositToken,proposalDeposit) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#772)
		- userTokenBalances[user][token] += amount (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1600)
		- userTokenBalances[TOTAL][token] += amount (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1602)
Reentrancy in Moloch.submitProposal(address,uint256,uint256,uint256,address,uint256,address,string) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#582-640):
	External calls:
	- require(bool,string)(IERC20(tributeToken).transferFrom(msg.sender,address(this),tributeOffered),tribute token transfer failed) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#626)
	State variables written after the call(s):
	- _submitProposal(applicant,sharesRequested,lootRequested,tributeOffered,tributeToken,paymentRequested,paymentToken,details,flags) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#636)
		- proposalCount += 1 (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#760)
	- _submitProposal(applicant,sharesRequested,lootRequested,tributeOffered,tributeToken,paymentRequested,paymentToken,details,flags) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#636)
		- proposals[proposalCount] = proposal (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#752)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in Moloch._withdrawBalance(address,uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1410-1420):
	External calls:
	- require(bool,string)(IERC20(token).transfer(msg.sender,amount),transfer failed) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1416)
	Event emitted after the call(s):
	- Withdraw(msg.sender,token,amount) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1418)
Reentrancy in Moloch.sponsorProposal(uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#766-858):
	External calls:
	- require(bool,string)(IERC20(depositToken).transferFrom(msg.sender,address(this),proposalDeposit),proposal deposit token transfer failed) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#770)
	Event emitted after the call(s):
	- SponsorProposal(msg.sender,memberAddress,proposalId,proposalQueue.length.sub(1),startingPeriod) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#856)
Reentrancy in Moloch.submitProposal(address,uint256,uint256,uint256,address,uint256,address,string) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#582-640):
	External calls:
	- require(bool,string)(IERC20(tributeToken).transferFrom(msg.sender,address(this),tributeOffered),tribute token transfer failed) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#626)
	Event emitted after the call(s):
	- SubmitProposal(applicant,sharesRequested,lootRequested,tributeOffered,tributeToken,paymentRequested,paymentToken,details,flags,proposalCount,msg.sender,memberAddress) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#758)
		- _submitProposal(applicant,sharesRequested,lootRequested,tributeOffered,tributeToken,paymentRequested,paymentToken,details,flags) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#636)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Moloch.sponsorProposal(uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#766-858) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(proposal.proposer != address(0),proposal must have been proposed) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#780)
	- require(bool,string)(! proposal.flags[0],proposal has already been sponsored) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#782)
	- require(bool,string)(! proposal.flags[3],proposal has been cancelled) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#784)
	- require(bool,string)(members[proposal.applicant].jailed == 0,proposal applicant must not be jailed) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#786)
	- require(bool,string)(! tokenWhitelist[address(proposal.tributeToken)],cannot already have whitelisted the token) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#802)
	- require(bool,string)(! proposedToWhitelist[address(proposal.tributeToken)],already proposed to whitelist) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#804)
	- require(bool,string)(! proposedToKick[proposal.applicant],already proposed to kick) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#816)
Moloch.submitVote(uint256,uint8) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#864-936) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(getCurrentPeriod() >= proposal.startingPeriod,voting period has not started) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#884)
Moloch._didPass(uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1218-1254) uses timestamp for comparisons
	Dangerous comparisons:
	- didPass = proposal.yesVotes > proposal.noVotes (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1224)
	- (totalShares.add(totalLoot)).mul(dilutionBound) < proposal.maxTotalSharesAndLootAtYesVote (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1230)
Moloch._validateProposalForProcessing(uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1258-1272) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(getCurrentPeriod() >= proposal.startingPeriod.add(votingPeriodLength).add(gracePeriodLength),proposal is not ready to be processed) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1266)
	- require(bool,string)(proposal.flags[1] == false,proposal has already been processed) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1268)
	- require(bool,string)(proposalIndex == 0 || proposals[proposalQueue[proposalIndex.sub(1)]].flags[1],previous proposal must be processed) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1270)
Moloch.hasVotingPeriodExpired(uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1518-1522) uses timestamp for comparisons
	Dangerous comparisons:
	- getCurrentPeriod() >= startingPeriod.add(votingPeriodLength) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1520)
Moloch.max(uint256,uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1532-1536) uses timestamp for comparisons
	Dangerous comparisons:
	- x >= y (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1534)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Moloch._validateProposalForProcessing(uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1258-1272) compares to a boolean constant:
	-require(bool,string)(proposal.flags[1] == false,proposal has already been processed) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1268)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#10) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Parameter Moloch.init(address[],address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256[])._summoner (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#476) is not in mixedCase
Parameter Moloch.init(address[],address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256[])._approvedTokens (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#478) is not in mixedCase
Parameter Moloch.init(address[],address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256[])._periodDuration (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#480) is not in mixedCase
Parameter Moloch.init(address[],address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256[])._votingPeriodLength (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#482) is not in mixedCase
Parameter Moloch.init(address[],address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256[])._gracePeriodLength (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#484) is not in mixedCase
Parameter Moloch.init(address[],address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256[])._proposalDeposit (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#486) is not in mixedCase
Parameter Moloch.init(address[],address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256[])._dilutionBound (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#488) is not in mixedCase
Parameter Moloch.init(address[],address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256[])._processingReward (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#490) is not in mixedCase
Parameter Moloch.init(address[],address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256[])._summonerShares (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#492) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
submitProposal(address,uint256,uint256,uint256,address,uint256,address,string) should be declared external:
	- Moloch.submitProposal(address,uint256,uint256,uint256,address,uint256,address,string) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#582-640)
submitWhitelistProposal(address,string) should be declared external:
	- Moloch.submitWhitelistProposal(address,string) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#644-664)
submitGuildKickProposal(address,string) should be declared external:
	- Moloch.submitGuildKickProposal(address,string) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#668-690)
sponsorProposal(uint256) should be declared external:
	- Moloch.sponsorProposal(uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#766-858)
submitVote(uint256,uint8) should be declared external:
	- Moloch.submitVote(uint256,uint8) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#864-936)
processProposal(uint256) should be declared external:
	- Moloch.processProposal(uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#940-1092)
processWhitelistProposal(uint256) should be declared external:
	- Moloch.processWhitelistProposal(uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1096-1152)
processGuildKickProposal(uint256) should be declared external:
	- Moloch.processGuildKickProposal(uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1156-1214)
ragequit(uint256,uint256) should be declared external:
	- Moloch.ragequit(uint256,uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1286-1290)
ragekick(address) should be declared external:
	- Moloch.ragekick(address) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1356-1372)
withdrawBalance(address,uint256) should be declared external:
	- Moloch.withdrawBalance(address,uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1376-1380)
withdrawBalances(address[],uint256[],bool) should be declared external:
	- Moloch.withdrawBalances(address[],uint256[],bool) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1384-1406)
collectTokens(address) should be declared external:
	- Moloch.collectTokens(address) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1424-1442)
cancelProposal(uint256) should be declared external:
	- Moloch.cancelProposal(uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1448-1468)
updateDelegateKey(address) should be declared external:
	- Moloch.updateDelegateKey(address) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1472-1502)
getProposalQueueLength() should be declared external:
	- Moloch.getProposalQueueLength() (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1548-1552)
getProposalFlags(uint256) should be declared external:
	- Moloch.getProposalFlags(uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1556-1560)
getUserTokenBalance(address,address) should be declared external:
	- Moloch.getUserTokenBalance(address,address) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1564-1568)
getMemberProposalVote(address,uint256) should be declared external:
	- Moloch.getMemberProposalVote(address,uint256) (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1572-1580)
getTokenCount() should be declared external:
	- Moloch.getTokenCount() (loops/0xdcb3d097db0118841bce5bec304908570921e931.sol#1584-1588)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0xdcb3d097db0118841bce5bec304908570921e931.sol analyzed (4 contracts with 46 detectors), 49 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xdcb3d097db0118841bce5bec304908570921e931.sol
Tool Runtime = 2.358608398997603 seconds
#############################################