INFO:Detectors:[93m
Reentrancy in VaultTimely.deposit(uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#410-422):
	External calls:
	- require(bool,string)(Token(trustedDepositTokenAddress).transferFrom(msg.sender,address(this),amountToDeposit),Insufficient Token Allowance) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#412)
	- updateAccount(msg.sender) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#414)
		- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#370)
	State variables written after the call(s):
	- depositedTokens[msg.sender] = depositedTokens[msg.sender].add(amountToDeposit) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#416)
Reentrancy in VaultTimely.emergencyWithdraw(uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#447-465):
	External calls:
	- require(bool,string)(Token(trustedDepositTokenAddress).transfer(owner,fee),Could not transfer fee!) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#457)
	- require(bool,string)(Token(trustedDepositTokenAddress).transfer(msg.sender,amountAfterFee),Could not transfer tokens.) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#458)
	State variables written after the call(s):
	- depositedTokens[msg.sender] = depositedTokens[msg.sender].sub(amountToWithdraw) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#460)
Reentrancy in VaultTimely.updateAccount(address) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#367-376):
	External calls:
	- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#370)
	State variables written after the call(s):
	- lastClaimedTime[account] = now (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#375)
Reentrancy in VaultTimely.withdraw(uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#424-443):
	External calls:
	- updateAccount(msg.sender) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#430)
		- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#370)
	- require(bool,string)(Token(trustedDepositTokenAddress).transfer(owner,fee),Could not transfer fee!) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#435)
	- require(bool,string)(Token(trustedDepositTokenAddress).transfer(msg.sender,amountAfterFee),Could not transfer tokens.) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#436)
	State variables written after the call(s):
	- depositedTokens[msg.sender] = depositedTokens[msg.sender].sub(amountToWithdraw) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#438)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
VaultTimely.deposit(uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#410-422) ignores return value by holders.add(msg.sender) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#419)
VaultTimely.withdraw(uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#424-443) ignores return value by holders.remove(msg.sender) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#441)
VaultTimely.emergencyWithdraw(uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#447-465) ignores return value by holders.remove(msg.sender) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#463)
VaultTimely.transferAnyERC20Tokens(address,address,uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#501-507) ignores return value by Token(_tokenAddr).transfer(_to,_amount) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#506)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in VaultTimely.deposit(uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#410-422):
	External calls:
	- require(bool,string)(Token(trustedDepositTokenAddress).transferFrom(msg.sender,address(this),amountToDeposit),Insufficient Token Allowance) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#412)
	- updateAccount(msg.sender) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#414)
		- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#370)
	State variables written after the call(s):
	- depositTime[msg.sender] = now (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#420)
Reentrancy in VaultTimely.updateAccount(address) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#367-376):
	External calls:
	- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#370)
	State variables written after the call(s):
	- totalClaimedRewards = totalClaimedRewards.add(pendingDivs) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#372)
	- totalEarnedTokens[account] = totalEarnedTokens[account].add(pendingDivs) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#371)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in VaultTimely.deposit(uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#410-422):
	External calls:
	- require(bool,string)(Token(trustedDepositTokenAddress).transferFrom(msg.sender,address(this),amountToDeposit),Insufficient Token Allowance) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#412)
	- updateAccount(msg.sender) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#414)
		- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#370)
	Event emitted after the call(s):
	- RewardsTransferred(account,pendingDivs) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#373)
		- updateAccount(msg.sender) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#414)
Reentrancy in VaultTimely.updateAccount(address) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#367-376):
	External calls:
	- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#370)
	Event emitted after the call(s):
	- RewardsTransferred(account,pendingDivs) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#373)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
VaultTimely.updateAccount(address) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#367-376) uses timestamp for comparisons
	Dangerous comparisons:
	- pendingDivs > 0 (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#369)
	- require(bool,string)(Token(trustedRewardTokenAddress).transfer(account,pendingDivs),Could not transfer tokens.) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#370)
VaultTimely.getPendingDivs(address) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#378-403) uses timestamp for comparisons
	Dangerous comparisons:
	- _now > vaultEndTime (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#384)
	- lastClaimedTime[_holder] >= _now (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#388)
VaultTimely.transferAnyERC20Tokens(address,address,uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#501-507) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)((_tokenAddr != trustedRewardTokenAddress) || (now > adminClaimableTime),Admin cannot Transfer out Reward Tokens yet!) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#504)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Parameter VaultTimely.getPendingDivs(address)._holder (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#378) is not in mixedCase
Parameter VaultTimely.transferAnyERC20Tokens(address,address,uint256)._tokenAddr (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#501) is not in mixedCase
Parameter VaultTimely.transferAnyERC20Tokens(address,address,uint256)._to (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#501) is not in mixedCase
Parameter VaultTimely.transferAnyERC20Tokens(address,address,uint256)._amount (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#501) is not in mixedCase
Constant VaultTimely.trustedDepositTokenAddress (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#333) is not in UPPER_CASE_WITH_UNDERSCORES
Constant VaultTimely.trustedRewardTokenAddress (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#335) is not in UPPER_CASE_WITH_UNDERSCORES
Constant VaultTimely.rewardInterval (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#338) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
VaultTimely.adminCanClaimAfter (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#347) should be constant
VaultTimely.cliffTime (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#339) should be constant
VaultTimely.rewardRatePercentX100 (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#337) should be constant
VaultTimely.vaultDuration (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#344) should be constant
VaultTimely.withdrawFeePercentX100 (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#340) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#314-318)
getNumberOfHolders() should be declared external:
	- VaultTimely.getNumberOfHolders() (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#405-407)
deposit(uint256) should be declared external:
	- VaultTimely.deposit(uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#410-422)
withdraw(uint256) should be declared external:
	- VaultTimely.withdraw(uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#424-443)
emergencyWithdraw(uint256) should be declared external:
	- VaultTimely.emergencyWithdraw(uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#447-465)
claim() should be declared external:
	- VaultTimely.claim() (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#467-469)
getDepositorsList(uint256,uint256) should be declared external:
	- VaultTimely.getDepositorsList(uint256,uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#471-496)
transferAnyERC20Tokens(address,address,uint256) should be declared external:
	- VaultTimely.transferAnyERC20Tokens(address,address,uint256) (loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol#501-507)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol analyzed (5 contracts with 46 detectors), 37 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x85ca1aac35474d7712ac31c3fc598ac0bd063551.sol
Tool Runtime = 0.8022762330001569 seconds
#############################################