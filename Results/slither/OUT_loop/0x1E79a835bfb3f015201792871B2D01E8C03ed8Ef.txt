INFO:Detectors:[92m
TOKENERC20._transfer(address,address,uint256) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#100-122) compares to a boolean constant:
	-require(bool,string)(LockList[_from] == false,ERC20: Sender Locked !) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#107)
TOKENERC20._transfer(address,address,uint256) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#100-122) compares to a boolean constant:
	-require(bool,string)(LockList[msg.sender] == false,ERC20: Caller Locked !) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#106)
TOKENERC20._transfer(address,address,uint256) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#100-122) compares to a boolean constant:
	-require(bool,string)(LockList[_to] == false,ERC20: Receipient Locked !) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#108)
TOKENERC20._transfer(address,address,uint256) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#100-122) compares to a boolean constant:
	-require(bool,string)(TransferAllowed == true,ERC20: Transfer enabled false !) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#109)
TOKENERC20.burn(uint256) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#160-174) compares to a boolean constant:
	-require(bool,string)(LockList[msg.sender] == false,ERC20: User Locked !) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#161)
TOKENERC20.burnFrom(address,uint256) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#186-206) compares to a boolean constant:
	-require(bool,string)(LockList[Account] == false,ERC20: Owner Locked !) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#188)
TOKENERC20.burnFrom(address,uint256) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#186-206) compares to a boolean constant:
	-require(bool,string)(LockList[msg.sender] == false,ERC20: User Locked !) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#187)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Contract owned (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#37-53) is not in CapWords
Contract tokenRecipient (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#55) is not in CapWords
Parameter TOKENERC20.transfer(address,uint256)._to (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#153) is not in mixedCase
Parameter TOKENERC20.transfer(address,uint256)._value (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#153) is not in mixedCase
Parameter TOKENERC20.burn(uint256)._value (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#160) is not in mixedCase
Parameter TOKENERC20.burnFrom(address,uint256).Account (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#186) is not in mixedCase
Parameter TOKENERC20.burnFrom(address,uint256)._value (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#186) is not in mixedCase
Parameter TOKENERC20.transferFrom(address,address,uint256)._from (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#218) is not in mixedCase
Parameter TOKENERC20.transferFrom(address,address,uint256)._to (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#218) is not in mixedCase
Parameter TOKENERC20.transferFrom(address,address,uint256)._value (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#218) is not in mixedCase
Parameter TOKENERC20.approve(address,uint256)._spender (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#235) is not in mixedCase
Parameter TOKENERC20.approve(address,uint256)._value (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#235) is not in mixedCase
Parameter TOKENERC20.approveAndCall(address,uint256,bytes)._spender (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#258) is not in mixedCase
Parameter TOKENERC20.approveAndCall(address,uint256,bytes)._value (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#258) is not in mixedCase
Parameter TOKENERC20.approveAndCall(address,uint256,bytes)._extraData (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#258) is not in mixedCase
Parameter TOKENERC20.allowance(address,address)._owner (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#268) is not in mixedCase
Parameter TOKENERC20.allowance(address,address)._spender (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#268) is not in mixedCase
Variable TOKENERC20.LockList (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#88) is not in mixedCase
Variable TOKENERC20.LockedTokens (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#89) is not in mixedCase
Variable TOKENERC20.TransferAllowed (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#90) is not in mixedCase
Function AriaCoin.UserLock(address,bool) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#294-296) is not in mixedCase
Parameter AriaCoin.UserLock(address,bool).Account (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#294) is not in mixedCase
Function AriaCoin.LockTokens(address,uint256) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#306-308) is not in mixedCase
Parameter AriaCoin.LockTokens(address,uint256).Account (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#306) is not in mixedCase
Function AriaCoin.UnLockTokens(address) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#310-312) is not in mixedCase
Parameter AriaCoin.UnLockTokens(address).Account (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#310) is not in mixedCase
Parameter AriaCoin.mint(uint256)._value (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#322) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
AriaCoin.constructor() (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#279-283) uses literals with too many digits:
	- TOKENERC20(10000000000 * 1 ** uint256(decimals),Aria Coin,ACN) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#279-282)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
TOKENERC20.decimals (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#65) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
transferOwnership(address) should be declared external:
	- owned.transferOwnership(address) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#49-52)
burn(uint256) should be declared external:
	- TOKENERC20.burn(uint256) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#160-174)
burnFrom(address,uint256) should be declared external:
	- TOKENERC20.burnFrom(address,uint256) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#186-206)
transferFrom(address,address,uint256) should be declared external:
	- TOKENERC20.transferFrom(address,address,uint256) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#218-224)
approveAndCall(address,uint256,bytes) should be declared external:
	- TOKENERC20.approveAndCall(address,uint256,bytes) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#258-266)
allowance(address,address) should be declared external:
	- TOKENERC20.allowance(address,address) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#268-270)
UserLock(address,bool) should be declared external:
	- AriaCoin.UserLock(address,bool) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#294-296)
LockTokens(address,uint256) should be declared external:
	- AriaCoin.LockTokens(address,uint256) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#306-308)
UnLockTokens(address) should be declared external:
	- AriaCoin.UnLockTokens(address) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#310-312)
mint(uint256) should be declared external:
	- AriaCoin.mint(uint256) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#322-329)
dropToken(address[],uint256[]) should be declared external:
	- AriaCoin.dropToken(address[],uint256[]) (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#343-356)
enableTokenTransfer() should be declared external:
	- AriaCoin.enableTokenTransfer() (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#362-365)
disableTokenTransfer() should be declared external:
	- AriaCoin.disableTokenTransfer() (loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol#367-370)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol analyzed (5 contracts with 46 detectors), 51 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x1E79a835bfb3f015201792871B2D01E8C03ed8Ef.sol
Tool Runtime = 0.8059397609977168 seconds
#############################################