Compilation warnings/errors on ./loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol:
./loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol:272:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[93m
Reentrancy in Core.mint(uint256,address) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#598-616):
	External calls:
	- dusd.mint(account,dusdAmount) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#613)
	- checkAndNotifyDeficit() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#600)
		- stakeLPToken.notify(supply.sub(totalAssets)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#546)
		- stakeLPToken.notify(0) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#550)
	State variables written after the call(s):
	- totalAssets = totalAssets.add(usdDelta) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#614)
Reentrancy in Core.redeem(uint256,address) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#624-639):
	External calls:
	- dusd.burn(account,dusdAmount) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#636)
	- checkAndNotifyDeficit() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#626)
		- stakeLPToken.notify(supply.sub(totalAssets)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#546)
		- stakeLPToken.notify(0) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#550)
	State variables written after the call(s):
	- totalAssets = totalAssets.sub(usd) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#637)
Reentrancy in Core.rewardDistributionCheckpoint(bool) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#652-674):
	External calls:
	- _updateFeed(false) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#658)
		- _totalAssets = _totalAssets.add(IPeak(peaksAddresses[i_scope_0]).updateFeed(prices)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#843)
	- checkAndNotifyDeficit() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#655)
		- stakeLPToken.notify(supply.sub(totalAssets)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#546)
		- stakeLPToken.notify(0) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#550)
	State variables written after the call(s):
	- _updateFeed(false) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#658)
		- totalAssets = _totalAssets (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#845)
Reentrancy in Core.rewardDistributionCheckpoint(bool) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#652-674):
	External calls:
	- _updateFeed(false) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#658)
		- _totalAssets = _totalAssets.add(IPeak(peaksAddresses[i_scope_0]).updateFeed(prices)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#843)
	- dusd.mint(address(stakeLPToken),periodIncome) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#666)
	- checkAndNotifyDeficit() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#655)
		- stakeLPToken.notify(supply.sub(totalAssets)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#546)
		- stakeLPToken.notify(0) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#550)
	State variables written after the call(s):
	- unclaimedRewards = unclaimedRewards.add(_colBuffer) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#672)
Reentrancy in Core.syncSystem() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#645-650):
	External calls:
	- _updateFeed(false) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#649)
		- _totalAssets = _totalAssets.add(IPeak(peaksAddresses[i_scope_0]).updateFeed(prices)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#843)
	- checkAndNotifyDeficit() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#647)
		- stakeLPToken.notify(supply.sub(totalAssets)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#546)
		- stakeLPToken.notify(0) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#550)
	State variables written after the call(s):
	- _updateFeed(false) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#649)
		- totalAssets = _totalAssets (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#845)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Core.totalSystemAssets() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#724-738) has external calls inside a loop: _totalAssets = _totalAssets.add(IPeak(peaksAddresses[i]).portfolioValueWithFeed(_feed)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#734-736)
Core._updateFeed(bool) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#815-846) has external calls inside a loop: _totalAssets = _totalAssets.add(IPeak(peaksAddresses[i_scope_0]).portfolioValue()) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#836)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Core.mint(uint256,address) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#598-616):
	External calls:
	- checkAndNotifyDeficit() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#600)
		- stakeLPToken.notify(supply.sub(totalAssets)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#546)
		- stakeLPToken.notify(0) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#550)
	State variables written after the call(s):
	- peaks[msg.sender].amount = tvl (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#612)
Reentrancy in Core.redeem(uint256,address) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#624-639):
	External calls:
	- checkAndNotifyDeficit() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#626)
		- stakeLPToken.notify(supply.sub(totalAssets)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#546)
		- stakeLPToken.notify(0) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#550)
	State variables written after the call(s):
	- peaks[msg.sender].amount = peak.amount.sub(peak.amount.min(dusdAmount)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#634)
Reentrancy in Core.rewardDistributionCheckpoint(bool) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#652-674):
	External calls:
	- _updateFeed(false) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#658)
		- _totalAssets = _totalAssets.add(IPeak(peaksAddresses[i_scope_0]).updateFeed(prices)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#843)
	- checkAndNotifyDeficit() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#655)
		- stakeLPToken.notify(supply.sub(totalAssets)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#546)
		- stakeLPToken.notify(0) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#550)
	State variables written after the call(s):
	- unclaimedRewards = unclaimedRewards.add(periodIncome) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#669)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in Core.mint(uint256,address) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#598-616):
	External calls:
	- dusd.mint(account,dusdAmount) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#613)
	- checkAndNotifyDeficit() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#600)
		- stakeLPToken.notify(supply.sub(totalAssets)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#546)
		- stakeLPToken.notify(0) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#550)
	Event emitted after the call(s):
	- Mint(account,dusdAmount) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#615)
Reentrancy in Core.redeem(uint256,address) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#624-639):
	External calls:
	- dusd.burn(account,dusdAmount) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#636)
	- checkAndNotifyDeficit() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#626)
		- stakeLPToken.notify(supply.sub(totalAssets)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#546)
		- stakeLPToken.notify(0) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#550)
	Event emitted after the call(s):
	- Redeem(account,dusdAmount) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#638)
Reentrancy in Core.rewardDistributionCheckpoint(bool) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#652-674):
	External calls:
	- _updateFeed(false) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#658)
		- _totalAssets = _totalAssets.add(IPeak(peaksAddresses[i_scope_0]).updateFeed(prices)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#843)
	- checkAndNotifyDeficit() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#655)
		- stakeLPToken.notify(supply.sub(totalAssets)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#546)
		- stakeLPToken.notify(0) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#550)
	Event emitted after the call(s):
	- FeedUpdated(_feed) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#826)
		- _updateFeed(false) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#658)
Reentrancy in Core.syncSystem() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#645-650):
	External calls:
	- _updateFeed(false) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#649)
		- _totalAssets = _totalAssets.add(IPeak(peaksAddresses[i_scope_0]).updateFeed(prices)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#843)
	- checkAndNotifyDeficit() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#647)
		- stakeLPToken.notify(supply.sub(totalAssets)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#546)
		- stakeLPToken.notify(0) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#550)
	Event emitted after the call(s):
	- FeedUpdated(_feed) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#826)
		- _updateFeed(false) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#649)
Reentrancy in Core.whitelistPeak(address,uint256[],uint256,bool) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#762-784):
	External calls:
	- _updateFeed(true) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#781)
		- _totalAssets = _totalAssets.add(IPeak(peaksAddresses[i_scope_0]).updateFeed(prices)) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#843)
	Event emitted after the call(s):
	- PeakWhitelisted(peak) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#783)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Address.isContract(address) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#265-274) uses assembly
	- INLINE ASM (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#272-273)
OwnableProxy.owner() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#466-471) uses assembly
	- INLINE ASM (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#468-471)
OwnableProxy._transferOwnership(address) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#489-496) uses assembly
	- INLINE ASM (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#493-496)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#10) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#304-310):
	- (success) = recipient.call.value(amount)() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#308)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#352-371):
	- (success,returndata) = address(token).call(data) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#364)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter Core.initialize(IDUSD,IStakeLPToken,IOracle,uint256,uint256)._dusd (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#566) is not in mixedCase
Parameter Core.initialize(IDUSD,IStakeLPToken,IOracle,uint256,uint256)._stakeLPToken (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#567) is not in mixedCase
Parameter Core.initialize(IDUSD,IStakeLPToken,IOracle,uint256,uint256)._oracle (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#568) is not in mixedCase
Parameter Core.initialize(IDUSD,IStakeLPToken,IOracle,uint256,uint256)._redeemFactor (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#569) is not in mixedCase
Parameter Core.initialize(IDUSD,IStakeLPToken,IOracle,uint256,uint256)._colBuffer (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#570) is not in mixedCase
Parameter Core.dusdToUsd(uint256,bool)._dusd (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#677) is not in mixedCase
Parameter Core.whitelistPeak(address,uint256[],uint256,bool)._systemCoins (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#764) is not in mixedCase
Parameter Core.setFee(uint256,uint256)._redeemFactor (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#801) is not in mixedCase
Parameter Core.setFee(uint256,uint256)._colBuffer (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#801) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
transferOwnership(address) should be declared external:
	- OwnableProxy.transferOwnership(address) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#485-487)
initialize(IDUSD,IStakeLPToken,IOracle,uint256,uint256) should be declared external:
	- Core.initialize(IDUSD,IStakeLPToken,IOracle,uint256,uint256) (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#565-589)
syncSystem() should be declared external:
	- Core.syncSystem() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#645-650)
currentSystemState() should be declared external:
	- Core.currentSystemState() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#703-713)
lastPeriodIncome() should be declared external:
	- Core.lastPeriodIncome() (loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol#716-722)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x4f6990b63500ae3b1cd0b689756503199c10149c.sol analyzed (13 contracts with 46 detectors), 36 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x4f6990b63500ae3b1cd0b689756503199c10149c.sol
Tool Runtime = 1.241733231003309 seconds
#############################################