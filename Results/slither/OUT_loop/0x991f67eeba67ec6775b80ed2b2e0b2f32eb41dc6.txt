INFO:Detectors:[93m
OptionsOccupiedCal._addOptionsCollateral(OptionsData.OptionsInfo) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1150-1158) uses a dangerous strict equality:
	- info.optType == 0 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1153)
OptionsOccupiedCal._burnOptionsCollateral(OptionsData.OptionsInfo,uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1165-1173) uses a dangerous strict equality:
	- info.optType == 0 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1168)
OptionsBase._getOptionsPayback(uint8,uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#863-869) uses a dangerous strict equality:
	- (optType == 0) == (strikePrice > underlyingPrice) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#864)
OptionsBase._getOptionsPayback(uint8,uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#863-869) uses a dangerous strict equality:
	- (optType == 0) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#867)
OptionsBase._getOptionsWorth(uint8,uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#994-1000) uses a dangerous strict equality:
	- (optType == 0) == (strikePrice > underlyingPrice) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#995)
OptionsBase.calOptionsCollateral(OptionsData.OptionsInfo,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#980-987) uses a dangerous strict equality:
	- option.expiration <= now || option.amount == 0 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#981)
OptionsBase.getExerciseWorth(uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#846-856) uses a dangerous strict equality:
	- tokenPayback == 0 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#852)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
OptionsBase.checkOwner(OptionsData.OptionsInfo,address).owner (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#890) shadows:
	- Ownable.owner() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#35-37) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
OptionsBase.getOptionInfoList(uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#709-730) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(from < allOptions.length,input from is overflow) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#711)
	- require(bool,string)(size > 0,input size is zero) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#712)
	- from + size > allOptions.length (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#713)
	- i < size (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#721)
OptionsBase.getOptionsLimitTimeById(uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#758-761) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(optionsId > 0 && optionsId <= allOptions.length,option id is not exist) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#759)
OptionsBase.getOptionsExtraById(uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#774-779) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(optionsId > 0 && optionsId <= allOptions.length,option id is not exist) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#775)
OptionsBase.getExerciseWorth(uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#846-856) uses timestamp for comparisons
	Dangerous comparisons:
	- tokenPayback == 0 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#852)
OptionsBase._getOptionsPayback(uint8,uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#863-869) uses timestamp for comparisons
	Dangerous comparisons:
	- (optType == 0) == (strikePrice > underlyingPrice) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#864)
	- (optType == 0) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#867)
OptionsBase._getOptionsById(uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#874-877) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(id > 0 && id <= allOptions.length,option id is not exist) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#875)
OptionsBase.checkEligible(OptionsData.OptionsInfo) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#882-884) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(info.expiration > now,option is expired) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#883)
OptionsBase.checkSufficient(OptionsData.OptionsInfo,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#898-900) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(info.amount >= amount,option amount is insufficient) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#899)
OptionsBase.getFirstOption(uint256,uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#958-974) uses timestamp for comparisons
	Dangerous comparisons:
	- info.expiration < now || info.amount == 0 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#967)
OptionsBase.calOptionsCollateral(OptionsData.OptionsInfo,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#980-987) uses timestamp for comparisons
	Dangerous comparisons:
	- option.expiration <= now || option.amount == 0 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#981)
OptionsOccupiedCal.setCollateralPhase(uint256,uint256,uint256,int256,int256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1093-1105) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(beginOption <= allOptions.length,beginOption calculate Error) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1095)
OptionsNetWorthCal.setSharedState(uint256,int256[],address[]) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1213-1223) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(newFirstOption <= allOptions.length,newFirstOption calculate Error) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1214)
OptionsNetWorthCal._calculateSharedPayment(uint256,uint256,address[]) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1253-1272) uses timestamp for comparisons
	Dangerous comparisons:
	- timeValue < optionEx.fullPrice (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1263)
	- require(bool,string)(timeValue <= 1e40,option time shared value calculate error) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1267)
OptionsNetWorthCal._calRangeOptionsFall(uint256,uint256,address[],uint256[]) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1325-1342) uses timestamp for comparisons
	Dangerous comparisons:
	- info.expiration < now || info.amount == 0 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1330)
	- curValue != 0 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1335)
OptionsNetWorthCal._calCurtimeCallateralFall(OptionsData.OptionsInfo,uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1349-1359) uses timestamp for comparisons
	Dangerous comparisons:
	- info.expiration <= now || amount == 0 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1350)
	- require(bool,string)(curValue >= - 1e40 && curValue <= 1e40,options fall calculate error) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1357)
OptionsNetWorthCal._calculateCurrentPrice(uint256,uint256,uint256,uint256,uint256,uint8) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1392-1398) uses timestamp for comparisons
	Dangerous comparisons:
	- expiration > now (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1393)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#8) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#87) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#122) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#159) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#304) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#349) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#367) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#388) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#455) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#512) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#552) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#626) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#655) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1015) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1180) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1404) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Variable Ownable._owner (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#20) is not in mixedCase
Variable ImportOracle._oracle (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#137) is not in mixedCase
Contract whiteListUint32 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#163-211) is not in CapWords
Contract whiteListUint256 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#215-255) is not in CapWords
Contract whiteListAddress (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#259-299) is not in CapWords
Variable ImportVolatility._volatility (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#355) is not in mixedCase
Function IOptionsPrice.getOptionsPrice_iv(uint256,uint256,uint256,uint256,uint256,uint8) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#371-372) is not in mixedCase
Variable ImportOptionsPrice._optionsPrice (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#376) is not in mixedCase
Parameter ImputRange.isInputAmountInRange(uint256).Amount (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#473) is not in mixedCase
Parameter ImputRange.setInputAmountRange(uint256,uint256)._minAmount (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#503) is not in mixedCase
Parameter ImputRange.setInputAmountRange(uint256,uint256)._maxAmount (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#503) is not in mixedCase
Modifier ImputRange.InRange(uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#465-468) is not in mixedCase
Modifier ImputRange.Smaller(uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#484-487) is not in mixedCase
Modifier ImputRange.Larger(uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#488-491) is not in mixedCase
Contract timeLimitation (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#515-547) is not in CapWords
Parameter timeLimitation.setTimeLimitation(uint256)._limitation (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#527) is not in mixedCase
Modifier timeLimitation.OutLimitation(uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#543-546) is not in mixedCase
Constant OptionsData.calDecimals (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#586) is not in UPPER_CASE_WITH_UNDERSCORES
Contract tuple64 (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#627-650) is not in CapWords
Parameter OptionsPool.createOptions(address,address,uint256,uint256,uint256,uint256).type_ly_exp (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1444) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
owner() should be declared external:
	- Ownable.owner() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#35-37)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#61-64)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#70-72)
setManager(address) should be declared external:
	- Managerable.setManager(address) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#104-109)
getManager() should be declared external:
	- Managerable.getManager() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#114-116)
getOracleAddress() should be declared external:
	- ImportOracle.getOracleAddress() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#148-150)
setOracleAddress(address) should be declared external:
	- ImportOracle.setOracleAddress(address) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#151-153)
addUnderlyingAsset(uint32) should be declared external:
	- UnderlyingAssets.addUnderlyingAsset(uint32) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#318-320)
removeUnderlyingAssets(uint32) should be declared external:
	- UnderlyingAssets.removeUnderlyingAssets(uint32) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#325-327)
getUnderlyingAssets() should be declared external:
	- UnderlyingAssets.getUnderlyingAssets() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#331-333)
getVolatilityAddress() should be declared external:
	- ImportVolatility.getVolatilityAddress() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#356-358)
setVolatilityAddress(address) should be declared external:
	- ImportVolatility.setVolatilityAddress(address) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#359-361)
getOptionsPriceAddress() should be declared external:
	- ImportOptionsPrice.getOptionsPriceAddress() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#377-379)
setOptionsPriceAddress(address) should be declared external:
	- ImportOptionsPrice.setOptionsPriceAddress(address) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#380-382)
addOperator(address) should be declared external:
	- Operator.addOperator(address) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#419-421)
setOperator(uint256,address) should be declared external:
	- Operator.setOperator(uint256,address) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#426-428)
removeOperator(address) should be declared external:
	- Operator.removeOperator(address) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#433-435)
getOperator() should be declared external:
	- Operator.getOperator() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#440-442)
setOperators(address[]) should be declared external:
	- Operator.setOperators(address[]) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#447-449)
isInputAmountInRange(uint256) should be declared external:
	- ImputRange.isInputAmountInRange(uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#473-475)
getInputAmountRange() should be declared external:
	- ImputRange.getInputAmountRange() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#495-497)
setInputAmountRange(uint256,uint256) should be declared external:
	- ImputRange.setInputAmountRange(uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#503-506)
setTimeLimitation(uint256) should be declared external:
	- timeLimitation.setTimeLimitation(uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#527-529)
getTimeLimitation() should be declared external:
	- timeLimitation.getTimeLimitation() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#533-535)
getUserOptionsID(address) should be declared external:
	- OptionsBase.getUserOptionsID(address) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#677-679)
getOptionInfoLength() should be declared external:
	- OptionsBase.getOptionInfoLength() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#701-703)
getOptionInfoListFromID(uint256[]) should be declared external:
	- OptionsBase.getOptionInfoListFromID(uint256[]) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#735-753)
getOptionsLimitTimeById(uint256) should be declared external:
	- OptionsBase.getOptionsLimitTimeById(uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#758-761)
getOptionsById(uint256) should be declared external:
	- OptionsBase.getOptionsById(uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#766-769)
getOptionsExtraById(uint256) should be declared external:
	- OptionsBase.getOptionsExtraById(uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#774-779)
getExerciseWorth(uint256,uint256) should be declared external:
	- OptionsBase.getExerciseWorth(uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#846-856)
buyOptionCheck(uint256,uint32) should be declared external:
	- OptionsBase.buyOptionCheck(uint256,uint32) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#906-909)
addExpiration(uint256) should be declared external:
	- OptionsBase.addExpiration(uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#914-916)
removeExpirationList(uint256) should be declared external:
	- OptionsBase.removeExpirationList(uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#921-923)
getExpirationList() should be declared external:
	- OptionsBase.getExpirationList() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#927-929)
getBurnedFullPay(uint256,uint256) should be declared external:
	- OptionsBase.getBurnedFullPay(uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1006-1009)
setOccupiedCollateral() should be declared external:
	- OptionsOccupiedCal.setOccupiedCollateral() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1033-1041)
getTotalOccupiedCollateral() should be declared external:
	- OptionsOccupiedCal.getTotalOccupiedCollateral() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1143-1145)
getNetWrothLatestWorth(address) should be declared external:
	- OptionsNetWorthCal.getNetWrothLatestWorth(address) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1204-1206)
setSharedState(uint256,int256[],address[]) should be declared external:
	- OptionsNetWorthCal.setSharedState(uint256,int256[],address[]) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1213-1223)
update() should be declared external:
	- OptionsPool.update() (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1423-1425)
getOptionCalRangeAll(address[]) should be declared external:
	- OptionsPool.getOptionCalRangeAll(address[]) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1430-1434)
createOptions(address,address,uint256,uint256,uint256,uint256) should be declared external:
	- OptionsPool.createOptions(address,address,uint256,uint256,uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1444-1450)
burnOptions(address,uint256,uint256,uint256) should be declared external:
	- OptionsPool.burnOptions(address,uint256,uint256,uint256) (loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol#1458-1464)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol analyzed (21 contracts with 46 detectors), 105 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x991f67eeba67ec6775b80ed2b2e0b2f32eb41dc6.sol
Tool Runtime = 18.203899170999648 seconds
#############################################