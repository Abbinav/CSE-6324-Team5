Compilation warnings/errors on ./loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol:
./loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol:1116:9: Warning: Unused local variable.
        uint _burnAmount = _amount.mul(100).div(10000); // 1 percent burning
        ^--------------^

INFO:Detectors:[93m
Contract locking ether found in :
	Contract VaultXPStake (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#690-1136) has payable functions:
	 - VaultXPStake.depositAllowance() (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1062-1072)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
VaultXPStake.allocateEgression(uint256,address) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1084-1090) ignores return value by ERC20(nameReg).transfer(_address,_amount * 10 ** 18) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1088)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
ERC20.allowance(address,address).owner (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#586) shadows:
	- Owned.owner (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#350) (state variable)
ERC20._approve(address,address,uint256).owner (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#670) shadows:
	- Owned.owner (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#350) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#10) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Parameter Owned.transferOwnership(address)._newOwner (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#378) is not in mixedCase
Variable ERC20._balances (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#558) is not in mixedCase
Variable ERC20._totalSupply (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#566) is not in mixedCase
Parameter VaultXPStake.createStake(uint256)._stake (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#740) is not in mixedCase
Parameter VaultXPStake.removeStake(uint256)._stake (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#764) is not in mixedCase
Parameter VaultXPStake.stakeOf(address)._stakeholder (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#792) is not in mixedCase
Parameter VaultXPStake.isStakeholder(address)._address (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#856) is not in mixedCase
Parameter VaultXPStake.addStakeholder(address)._stakeholder (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#886) is not in mixedCase
Parameter VaultXPStake.removeStakeholder(address)._stakeholder (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#908) is not in mixedCase
Parameter VaultXPStake.rewardOf(address)._stakeholder (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#940) is not in mixedCase
Parameter VaultXPStake.calculateReward(address)._stakeholder (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#996) is not in mixedCase
Parameter VaultXPStake.allocateEgression(uint256,address)._amount (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1084) is not in mixedCase
Parameter VaultXPStake.allocateEgression(uint256,address)._address (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1084) is not in mixedCase
Parameter VaultXPStake.addTokenHolder(address)._address (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1094) is not in mixedCase
Parameter VaultXPStake.burn(uint256)._amount (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1104) is not in mixedCase
Parameter VaultXPStake.transfer(address,uint256)._recipient (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1114) is not in mixedCase
Parameter VaultXPStake.transfer(address,uint256)._amount (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1114) is not in mixedCase
Parameter VaultXPStake.transferFrom(address,address,uint256)._sender (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1126) is not in mixedCase
Parameter VaultXPStake.transferFrom(address,address,uint256)._recipient (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1126) is not in mixedCase
Parameter VaultXPStake.transferFrom(address,address,uint256)._amount (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1126) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
VaultXPStake.stakeContractAddress (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#698) is never used in VaultXPStake (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#690-1136)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
VaultXPStake.stakeContractAddress (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#698) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- ERC20.totalSupply() (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#570-574)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#578-582)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#586-590)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#594-600)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#604-610)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#614-620)
createStake(uint256) should be declared external:
	- VaultXPStake.createStake(uint256) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#740-752)
removeStake(uint256) should be declared external:
	- VaultXPStake.removeStake(uint256) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#764-778)
stakeOf(address) should be declared external:
	- VaultXPStake.stakeOf(address) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#792-804)
totalStakes() should be declared external:
	- VaultXPStake.totalStakes() (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#816-836)
rewardOf(address) should be declared external:
	- VaultXPStake.rewardOf(address) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#940-952)
totalRewards() should be declared external:
	- VaultXPStake.totalRewards() (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#964-984)
distributeRewards() should be declared external:
	- VaultXPStake.distributeRewards() (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1018-1036)
withdrawReward() should be declared external:
	- VaultXPStake.withdrawReward() (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1046-1058)
depositAllowance() should be declared external:
	- VaultXPStake.depositAllowance() (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1062-1072)
getBalance() should be declared external:
	- VaultXPStake.getBalance() (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1076-1080)
allocateEgression(uint256,address) should be declared external:
	- VaultXPStake.allocateEgression(uint256,address) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1084-1090)
addTokenHolder(address) should be declared external:
	- VaultXPStake.addTokenHolder(address) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1094-1100)
transfer(address,uint256) should be declared external:
	- VaultXPStake.transfer(address,uint256) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1114-1122)
transferFrom(address,address,uint256) should be declared external:
	- VaultXPStake.transferFrom(address,address,uint256) (loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol#1126-1132)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol analyzed (5 contracts with 46 detectors), 48 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x44bfaa83cb8e4645d91a27de0866762bbd63f2de.sol
Tool Runtime = 1.007341054999415 seconds
#############################################