INFO:Detectors:[93m
Lockable._removeTimeLock(address,uint8) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#777-785) contains a tautology or contradiction:
	- require(bool,string)(_timeLocks[account].length > index && index >= 0,Time Lock: index must be valid) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#778)
Lockable.getTimeLock(address,uint8) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#802-805) contains a tautology or contradiction:
	- require(bool,string)(_timeLocks[account].length > index && index >= 0,Time Lock: index must be valid) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#803)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction[0m
INFO:Detectors:[93m
GQCN.recoverERC20(address,uint256) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#893-895) ignores return value by IERC20(tokenAddress).transfer(owner(),tokenAmount) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#894)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
ERC20Detailed.constructor(string,string,uint8).name (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#838) shadows:
	- ERC20Detailed.name() (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#847-849) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#838) shadows:
	- ERC20Detailed.symbol() (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#855-857) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#838) shadows:
	- ERC20Detailed.decimals() (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#871-873) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Lockable._addTimeLock(address,uint256,uint256) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#766-770) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(expiresAt > block.timestamp,Time Lock: expire date must be later than now) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#768)
Lockable.getTimeLockedAmount(address) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#812-822) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < _timeLocks[account][i].expiresAt (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#817)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Constant GQCN._initialSupply (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#882) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
GQCN.slitherConstructorConstantVariables() (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#880-1009) uses literals with too many digits:
	- _initialSupply = 3300000000e18 (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#882)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- ERC20.totalSupply() (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#301-303)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#328-330)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#339-342)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#374-377)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#393-396)
hiddenOwner() should be declared external:
	- Ownable.hiddenOwner() (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#602-604)
isBurner(address) should be declared external:
	- Burnable.isBurner(address) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#656-658)
isLocker(address) should be declared external:
	- Lockable.isLocker(address) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#720-722)
getTimeLockLength(address) should be declared external:
	- Lockable.getTimeLockLength(address) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#792-794)
getTimeLock(address,uint8) should be declared external:
	- Lockable.getTimeLock(address,uint8) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#802-805)
name() should be declared external:
	- ERC20Detailed.name() (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#847-849)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#855-857)
decimals() should be declared external:
	- ERC20Detailed.decimals() (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#871-873)
recoverERC20(address,uint256) should be declared external:
	- GQCN.recoverERC20(address,uint256) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#893-895)
transferOwnership(address) should be declared external:
	- GQCN.transferOwnership(address) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#920-922)
transferHiddenOwnership(address) should be declared external:
	- GQCN.transferHiddenOwnership(address) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#927-929)
addBurner(address) should be declared external:
	- GQCN.addBurner(address) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#934-936)
removeBurner(address) should be declared external:
	- GQCN.removeBurner(address) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#941-943)
burn(uint256) should be declared external:
	- GQCN.burn(uint256) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#948-951)
pause() should be declared external:
	- GQCN.pause() (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#956-958)
unpause() should be declared external:
	- GQCN.unpause() (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#963-965)
addLocker(address) should be declared external:
	- GQCN.addLocker(address) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#970-972)
removeLocker(address) should be declared external:
	- GQCN.removeLocker(address) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#977-979)
lock(address) should be declared external:
	- GQCN.lock(address) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#984-986)
unlock(address) should be declared external:
	- GQCN.unlock(address) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#991-993)
addTimeLock(address,uint256,uint256) should be declared external:
	- GQCN.addTimeLock(address,uint256,uint256) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#998-1000)
removeTimeLock(address,uint8) should be declared external:
	- GQCN.removeTimeLock(address,uint8) (loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol#1005-1007)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol analyzed (10 contracts with 46 detectors), 39 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x54b6dbae1e882c5d1fc3547c540f2cf881d9272a.sol
Tool Runtime = 1.487687457996799 seconds
#############################################