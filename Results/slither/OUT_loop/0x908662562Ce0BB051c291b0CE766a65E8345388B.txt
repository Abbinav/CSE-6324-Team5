INFO:Detectors:[91m
Reentrancy in AuctionFundCollector._contributeWithEther(uint256,address,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1281-1298):
	External calls:
	- IAuctionProtection(auctionProtectionAddress).lockEther.value(downSideAmount)(auctionDay,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1295)
	- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
		- IToken(mainTokenAddress).lockToken(_from,lockToken,now) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1180)
	External calls sending eth:
	- _recipient.transfer(returnAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1289)
	- IAuctionProtection(auctionProtectionAddress).lockEther.value(downSideAmount)(auctionDay,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1295)
	State variables written after the call(s):
	- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
		- todayContribution = safeAdd(todayContribution,_contributedAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1239)
Reentrancy in Auction.auctionEnd() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1426-1589):
	External calls:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	- mainReserveAmount = IAuctionLiquidity(liquidityAddress).contributeTowardMainReserve() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1441-1442)
	External calls sending eth:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- companyFundWalletAddress.transfer(realEstateAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1343)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	State variables written after the call(s):
	- todayContribution = mainReserveAmountUsd (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1451)
Reentrancy in Auction.auctionEnd() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1426-1589):
	External calls:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	- mainReserveAmount = IAuctionLiquidity(liquidityAddress).contributeTowardMainReserve() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1441-1442)
	- IToken(mainTokenAddress).mintTokens(safeAdd(fee,stakingAmount)) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1538)
	- approveTransferFrom(IERC20Token(mainTokenAddress),escrowAddress,fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1540-1544)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#508)
	- IEscrow(escrowAddress).depositFee(fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1546)
	- approveTransferFrom(IERC20Token(mainTokenAddress),auctionProtectionAddress,stakingAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1548-1552)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#508)
	- IAuctionProtection(auctionProtectionAddress).stackFund(stakingAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1554)
	External calls sending eth:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- companyFundWalletAddress.transfer(realEstateAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1343)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	State variables written after the call(s):
	- auctionDay = safeAdd(auctionDay,1) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1571)
	- todaySupply = safeDiv(safeMul(todayContribution,DECIMAL_NOMINATOR),_mainTokenPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1563-1566)
	- yesterdayContribution = todayContribution (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1570)
Reentrancy in Auction.auctionEnd() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1426-1589):
	External calls:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	- mainReserveAmount = IAuctionLiquidity(liquidityAddress).contributeTowardMainReserve() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1441-1442)
	- IToken(mainTokenAddress).mintTokens(safeAdd(fee,stakingAmount)) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1538)
	- approveTransferFrom(IERC20Token(mainTokenAddress),escrowAddress,fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1540-1544)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#508)
	- IEscrow(escrowAddress).depositFee(fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1546)
	- approveTransferFrom(IERC20Token(mainTokenAddress),auctionProtectionAddress,stakingAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1548-1552)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#508)
	- IAuctionProtection(auctionProtectionAddress).stackFund(stakingAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1554)
	- IAuctionLiquidity(liquidityAddress).auctionEnded() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1572)
	External calls sending eth:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- companyFundWalletAddress.transfer(realEstateAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1343)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	State variables written after the call(s):
	- LAST_AUCTION_START = safeAdd(LAST_AUCTION_START,INTERVAL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1574)
	- todayContribution = 0 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1575)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[91m
UpgradeabilityStorage.registry (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#614) is never initialized. It is used in:
	- Upgradeable.initialize() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#645-647)
UpgradeabilityStorage._implementation (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#617) is never initialized. It is used in:
	- UpgradeabilityStorage.implementation() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#623-625)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
SafeMath.safeMul(uint256,uint256) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#374-381) uses a dangerous strict equality:
	- a == 0 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#375)
SafeMath.safeMul(uint256,uint256) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#374-381) uses a dangerous strict equality:
	- assert(bool)(c / a == b) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#379)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Auction.disturbuteTokenInternal(uint256,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1591-1666):
	External calls:
	- IToken(mainTokenAddress).mintTokens(safeAdd(newReturnAmount,fee)) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1629)
	- IToken(mainTokenAddress).lockToken(_which,0,LAST_AUCTION_START) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1632)
	- approveTransferFrom(IERC20Token(mainTokenAddress),escrowAddress,fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1634-1638)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#508)
	- IEscrow(escrowAddress).depositFee(fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1639)
	- ensureTransferFrom(IERC20Token(mainTokenAddress),address(this),_which,_userAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1641-1646)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#495)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#497-500)
	- approveTransferFrom(IERC20Token(mainTokenAddress),auctionProtectionAddress,safeSub(newReturnAmount,_userAmount)) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1648-1652)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#508)
	- IAuctionProtection(auctionProtectionAddress).depositToken(dayId,_which,safeSub(newReturnAmount,_userAmount)) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1654)
	State variables written after the call(s):
	- returnToken[dayId][_which] = true (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1656)
Reentrancy in AuctionFundCollector.fundAdded(address,uint256,uint256,address,address,uint256) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1219-1279):
	External calls:
	- mainTokenCheck(_caller,_contributedAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1236)
		- IToken(mainTokenAddress).lockToken(_from,lockToken,now) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1180)
	State variables written after the call(s):
	- mainTokenCheckDayWise[auctionDay][_caller] = safeAdd(walletDayWiseContribution[auctionDay][_caller],_contributedAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1241-1244)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
IndividualBonus._compareForGroupBonus(address).replaceWith (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1086) is a local variable never initialized
SafeMath.nthRoot(uint256,uint256,uint256,uint256).x (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#429) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
AuctionFundCollector.mainTokenCheck(address,uint256) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1156-1182) ignores return value by IToken(mainTokenAddress).lockToken(_from,lockToken,now) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1180)
AuctionFundCollector._contributeWithEther(uint256,address,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1281-1298) ignores return value by IAuctionProtection(auctionProtectionAddress).lockEther.value(downSideAmount)(auctionDay,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1295)
AuctionFundCollector.contributeWithEtherBehalf(address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1311-1322) ignores return value by IWhiteList(whiteListAddress).addWalletBehalfExchange(msg.sender,_whom) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1316)
Auction.auctionEnd() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1426-1589) ignores return value by IToken(mainTokenAddress).mintTokens(safeAdd(fee,stakingAmount)) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1538)
Auction.auctionEnd() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1426-1589) ignores return value by IEscrow(escrowAddress).depositFee(fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1546)
Auction.auctionEnd() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1426-1589) ignores return value by IAuctionProtection(auctionProtectionAddress).stackFund(stakingAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1554)
Auction.auctionEnd() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1426-1589) ignores return value by IAuctionLiquidity(liquidityAddress).auctionEnded() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1572)
Auction.disturbuteTokenInternal(uint256,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1591-1666) ignores return value by IToken(mainTokenAddress).mintTokens(safeAdd(newReturnAmount,fee)) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1629)
Auction.disturbuteTokenInternal(uint256,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1591-1666) ignores return value by IToken(mainTokenAddress).lockToken(_which,0,LAST_AUCTION_START) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1632)
Auction.disturbuteTokenInternal(uint256,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1591-1666) ignores return value by IEscrow(escrowAddress).depositFee(fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1639)
Auction.disturbuteTokenInternal(uint256,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1591-1666) ignores return value by IAuctionProtection(auctionProtectionAddress).depositToken(dayId,_which,safeSub(newReturnAmount,_userAmount)) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1654)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
Auction.disturbuteTokenInternal(uint256,address).dayWiseContribution (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1604) shadows:
	- AuctionStorage.dayWiseContribution (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#109) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in AuctionFundCollector._contributeWithEther(uint256,address,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1281-1298):
	External calls:
	- IAuctionProtection(auctionProtectionAddress).lockEther.value(downSideAmount)(auctionDay,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1295)
	- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
		- IToken(mainTokenAddress).lockToken(_from,lockToken,now) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1180)
	External calls sending eth:
	- _recipient.transfer(returnAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1289)
	- IAuctionProtection(auctionProtectionAddress).lockEther.value(downSideAmount)(auctionDay,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1295)
	State variables written after the call(s):
	- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
		- topContributorIndex[auctionDay][_from] = x (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1109)
		- topContributorIndex[auctionDay][replaceWith] = x (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1118)
		- topContributorIndex[auctionDay][replaceWith] = 0 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1124)
Reentrancy in Auction.auctionEnd() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1426-1589):
	External calls:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	- mainReserveAmount = IAuctionLiquidity(liquidityAddress).contributeTowardMainReserve() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1441-1442)
	External calls sending eth:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- companyFundWalletAddress.transfer(realEstateAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1343)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	State variables written after the call(s):
	- allowMaxContribution = safeDiv(safeMul(todayContribution,maxContributionAllowed),100) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1474-1477)
	- allowMaxContribution = _avgInvestment (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1522)
	- dayWiseContribution[auctionDay] = mainReserveAmountUsd (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1449)
	- dayWiseSupply[auctionDay] = safeAdd(todaySupply,bonusSupply) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1527)
	- dayWiseSupplyBonus[auctionDay] = bonusSupply (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1526)
	- dayWiseSupplyCore[auctionDay] = todaySupply (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1525)
	- _compareForGroupBonus(vaultAddress) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1458)
		- topContributorIndex[auctionDay][_from] = x (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1109)
		- topContributorIndex[auctionDay][replaceWith] = x (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1118)
		- topContributorIndex[auctionDay][replaceWith] = 0 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1124)
	- _compareForGroupBonus(vaultAddress) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1458)
		- topFiveContributor[auctionDay][x] = _from (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1108)
		- topFiveContributor[auctionDay][x] = replaceWith (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1117)
	- walletDayWiseContribution[auctionDay][vaultAddress] = mainReserveAmountUsd (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1453)
Reentrancy in Auction.auctionEnd() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1426-1589):
	External calls:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	- mainReserveAmount = IAuctionLiquidity(liquidityAddress).contributeTowardMainReserve() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1441-1442)
	- IToken(mainTokenAddress).mintTokens(safeAdd(fee,stakingAmount)) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1538)
	- approveTransferFrom(IERC20Token(mainTokenAddress),escrowAddress,fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1540-1544)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#508)
	- IEscrow(escrowAddress).depositFee(fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1546)
	- approveTransferFrom(IERC20Token(mainTokenAddress),auctionProtectionAddress,stakingAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1548-1552)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#508)
	- IAuctionProtection(auctionProtectionAddress).stackFund(stakingAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1554)
	External calls sending eth:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- companyFundWalletAddress.transfer(realEstateAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1343)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	State variables written after the call(s):
	- dayWiseMarketPrice[auctionDay] = _mainTokenPrice (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1561)
	- totalContribution = safeAdd(totalContribution,todayContribution) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1568)
	- yesterdaySupply = dayWiseSupply[auctionDay] (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1569)
Reentrancy in Auction.auctionEnd() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1426-1589):
	External calls:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	- mainReserveAmount = IAuctionLiquidity(liquidityAddress).contributeTowardMainReserve() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1441-1442)
	- IToken(mainTokenAddress).mintTokens(safeAdd(fee,stakingAmount)) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1538)
	- approveTransferFrom(IERC20Token(mainTokenAddress),escrowAddress,fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1540-1544)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#508)
	- IEscrow(escrowAddress).depositFee(fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1546)
	- approveTransferFrom(IERC20Token(mainTokenAddress),auctionProtectionAddress,stakingAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1548-1552)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#508)
	- IAuctionProtection(auctionProtectionAddress).stackFund(stakingAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1554)
	- IAuctionLiquidity(liquidityAddress).auctionEnded() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1572)
	External calls sending eth:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- companyFundWalletAddress.transfer(realEstateAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1343)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	State variables written after the call(s):
	- dayWiseDownSideProtectionRatio[auctionDay] = downSideProtectionRatio (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1573)
Reentrancy in AuctionFundCollector.contributeWithEtherBehalf(address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1311-1322):
	External calls:
	- IWhiteList(whiteListAddress).addWalletBehalfExchange(msg.sender,_whom) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1316)
	- _contributeWithEther(msg.value,msg.sender,_whom) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1321)
		- IToken(mainTokenAddress).lockToken(_from,lockToken,now) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1180)
		- IAuctionProtection(auctionProtectionAddress).lockEther.value(downSideAmount)(auctionDay,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1295)
	External calls sending eth:
	- _contributeWithEther(msg.value,msg.sender,_whom) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1321)
		- _recipient.transfer(returnAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1289)
		- IAuctionProtection(auctionProtectionAddress).lockEther.value(downSideAmount)(auctionDay,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1295)
	State variables written after the call(s):
	- _contributeWithEther(msg.value,msg.sender,_whom) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1321)
		- topContributorIndex[auctionDay][_from] = x (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1109)
		- topContributorIndex[auctionDay][replaceWith] = x (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1118)
		- topContributorIndex[auctionDay][replaceWith] = 0 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1124)
Reentrancy in AuctionFundCollector.fundAdded(address,uint256,uint256,address,address,uint256) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1219-1279):
	External calls:
	- mainTokenCheck(_caller,_contributedAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1236)
		- IToken(mainTokenAddress).lockToken(_from,lockToken,now) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1180)
	State variables written after the call(s):
	- dayWiseContribution[auctionDay] = safeAdd(dayWiseContribution[auctionDay],_contributedAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1256-1259)
	- todayContribution = safeAdd(todayContribution,_contributedAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1239)
	- _compareForGroupBonus(_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1261)
		- topContributorIndex[auctionDay][_from] = x (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1109)
		- topContributorIndex[auctionDay][replaceWith] = x (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1118)
		- topContributorIndex[auctionDay][replaceWith] = 0 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1124)
	- _compareForGroupBonus(_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1261)
		- topFiveContributor[auctionDay][x] = _from (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1108)
		- topFiveContributor[auctionDay][x] = replaceWith (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1117)
	- userTotalFund[_recipient] = safeAdd(userTotalFund[_recipient],_contributedAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1251-1254)
	- walletDayWiseContribution[auctionDay][_recipient] = safeAdd(walletDayWiseContribution[auctionDay][_recipient],_contributedAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1246-1249)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in AuctionFundCollector._contributeWithEther(uint256,address,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1281-1298):
	External calls:
	- IAuctionProtection(auctionProtectionAddress).lockEther.value(downSideAmount)(auctionDay,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1295)
	- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
		- IToken(mainTokenAddress).lockToken(_from,lockToken,now) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1180)
	External calls sending eth:
	- _recipient.transfer(returnAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1289)
	- IAuctionProtection(auctionProtectionAddress).lockEther.value(downSideAmount)(auctionDay,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1295)
	Event emitted after the call(s):
	- FundAdded(auctionDay,todayContribution,_recipient,_token,_amount,_contributedAmount,walletDayWiseContribution[auctionDay][_recipient],currentMarketPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1263-1272)
		- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
	- FundAddedBehalf(_caller,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1275)
		- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
Reentrancy in Auction.auctionEnd() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1426-1589):
	External calls:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	- mainReserveAmount = IAuctionLiquidity(liquidityAddress).contributeTowardMainReserve() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1441-1442)
	External calls sending eth:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- companyFundWalletAddress.transfer(realEstateAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1343)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	Event emitted after the call(s):
	- FundAdded(auctionDay,todayContribution,vaultAddress,address(0),mainReserveAmount,mainReserveAmountUsd,mainReserveAmountUsd,_mainTokenPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1460-1469)
Reentrancy in Auction.auctionEnd() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1426-1589):
	External calls:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	- mainReserveAmount = IAuctionLiquidity(liquidityAddress).contributeTowardMainReserve() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1441-1442)
	- IToken(mainTokenAddress).mintTokens(safeAdd(fee,stakingAmount)) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1538)
	- approveTransferFrom(IERC20Token(mainTokenAddress),escrowAddress,fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1540-1544)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#508)
	- IEscrow(escrowAddress).depositFee(fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1546)
	- approveTransferFrom(IERC20Token(mainTokenAddress),auctionProtectionAddress,stakingAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1548-1552)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#508)
	- IAuctionProtection(auctionProtectionAddress).stackFund(stakingAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1554)
	- IAuctionLiquidity(liquidityAddress).auctionEnded() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1572)
	External calls sending eth:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- companyFundWalletAddress.transfer(realEstateAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1343)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	Event emitted after the call(s):
	- AuctionEnded(auctionDay,todaySupply,yesterdaySupply,todayContribution,yesterdayContribution,totalContribution,allowMaxContribution,_tokenPrice,_mainTokenPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1576-1586)
Reentrancy in AuctionFundCollector.contributeWithEtherBehalf(address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1311-1322):
	External calls:
	- IWhiteList(whiteListAddress).addWalletBehalfExchange(msg.sender,_whom) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1316)
	- _contributeWithEther(msg.value,msg.sender,_whom) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1321)
		- IToken(mainTokenAddress).lockToken(_from,lockToken,now) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1180)
		- IAuctionProtection(auctionProtectionAddress).lockEther.value(downSideAmount)(auctionDay,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1295)
	External calls sending eth:
	- _contributeWithEther(msg.value,msg.sender,_whom) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1321)
		- _recipient.transfer(returnAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1289)
		- IAuctionProtection(auctionProtectionAddress).lockEther.value(downSideAmount)(auctionDay,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1295)
	Event emitted after the call(s):
	- FundAdded(auctionDay,todayContribution,_recipient,_token,_amount,_contributedAmount,walletDayWiseContribution[auctionDay][_recipient],currentMarketPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1263-1272)
		- _contributeWithEther(msg.value,msg.sender,_whom) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1321)
	- FundAddedBehalf(_caller,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1275)
		- _contributeWithEther(msg.value,msg.sender,_whom) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1321)
Reentrancy in Auction.disturbuteTokenInternal(uint256,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1591-1666):
	External calls:
	- IToken(mainTokenAddress).mintTokens(safeAdd(newReturnAmount,fee)) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1629)
	- IToken(mainTokenAddress).lockToken(_which,0,LAST_AUCTION_START) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1632)
	- approveTransferFrom(IERC20Token(mainTokenAddress),escrowAddress,fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1634-1638)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#508)
	- IEscrow(escrowAddress).depositFee(fee) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1639)
	- ensureTransferFrom(IERC20Token(mainTokenAddress),address(this),_which,_userAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1641-1646)
		- require(bool,string)(_token.transfer(_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#495)
		- require(bool,string)(_token.transferFrom(_from,_to,_amount),ERR_TOKEN_TRANSFER_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#497-500)
	- approveTransferFrom(IERC20Token(mainTokenAddress),auctionProtectionAddress,safeSub(newReturnAmount,_userAmount)) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1648-1652)
		- require(bool,string)(_token.approve(_spender,_amount),ERR_TOKEN_APPROVAL_FAIL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#508)
	- IAuctionProtection(auctionProtectionAddress).depositToken(dayId,_which,safeSub(newReturnAmount,_userAmount)) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1654)
	Event emitted after the call(s):
	- TokenDistrubuted(_which,dayId,newReturnAmount,safeSub(newReturnAmount,_userAmount),_userAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1658-1664)
Reentrancy in AuctionFundCollector.fundAdded(address,uint256,uint256,address,address,uint256) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1219-1279):
	External calls:
	- mainTokenCheck(_caller,_contributedAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1236)
		- IToken(mainTokenAddress).lockToken(_from,lockToken,now) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1180)
	Event emitted after the call(s):
	- FundAdded(auctionDay,todayContribution,_recipient,_token,_amount,_contributedAmount,walletDayWiseContribution[auctionDay][_recipient],currentMarketPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1263-1272)
	- FundAddedBehalf(_caller,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1275)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Auction.auctionEnd() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1426-1589) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(now >= safeAdd(LAST_AUCTION_START,MIN_AUCTION_END_TIME),ERR_MIN_TIME_IS_NOT_OVER) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1427-1430)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
SafeMath.safeExponent(uint256,uint256) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#399-409) uses assembly
	- INLINE ASM (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#405-408)
Proxy.fallback() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#575-594) uses assembly
	- INLINE ASM (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#579-594)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
IndividualBonus._compareForGroupBonus(address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1082-1126) compares to a boolean constant:
	-contributionByUser >= topContributor && replaced == false (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1102)
Auction.disturbuteTokenInternal(uint256,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1591-1666) compares to a boolean constant:
	-require(bool,string)(returnToken[dayId][_which] == false,ERR_ALREADY_TOKEN_DISTBUTED) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1595-1598)
Auction.disturbuteTokens(uint256,address[]) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1669-1679) compares to a boolean constant:
	-returnToken[dayId][_which[tempX]] == false (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1675)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#8) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#37) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#185) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#226) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#371) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#451) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#484) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#515) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#557) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#604) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#631) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#653) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#677) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#686) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#700) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#724) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#745) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#790) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#799) uses lesser than
Pragma version>=0.5<0.7.17 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#824) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Variable AuctionStorage.MIN_AUCTION_END_TIME (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#137) is not in mixedCase
Variable AuctionStorage.LAST_AUCTION_START (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#139) is not in mixedCase
Variable AuctionStorage.INTERVAL (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#141) is not in mixedCase
Parameter ProxyOwnable.initializeOwner(address,address,address)._primaryOwner (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#259) is not in mixedCase
Parameter ProxyOwnable.initializeOwner(address,address,address)._systemAddress (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#260) is not in mixedCase
Parameter ProxyOwnable.initializeOwner(address,address,address)._authorityAddress (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#261) is not in mixedCase
Parameter ProxyOwnable.changeSystemAddress(address)._which (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#318) is not in mixedCase
Parameter ProxyOwnable.changeAuthorityAddress(address)._which (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#340) is not in mixedCase
Parameter SafeMath.nthRoot(uint256,uint256,uint256,uint256)._a (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#414) is not in mixedCase
Parameter SafeMath.nthRoot(uint256,uint256,uint256,uint256)._n (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#415) is not in mixedCase
Parameter SafeMath.nthRoot(uint256,uint256,uint256,uint256)._dp (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#416) is not in mixedCase
Parameter SafeMath.nthRoot(uint256,uint256,uint256,uint256)._maxIts (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#417) is not in mixedCase
Parameter TokenTransfer.ensureTransferFrom(IERC20Token,address,address,uint256)._token (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#489) is not in mixedCase
Parameter TokenTransfer.ensureTransferFrom(IERC20Token,address,address,uint256)._from (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#490) is not in mixedCase
Parameter TokenTransfer.ensureTransferFrom(IERC20Token,address,address,uint256)._to (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#491) is not in mixedCase
Parameter TokenTransfer.ensureTransferFrom(IERC20Token,address,address,uint256)._amount (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#492) is not in mixedCase
Parameter TokenTransfer.approveTransferFrom(IERC20Token,address,uint256)._token (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#504) is not in mixedCase
Parameter TokenTransfer.approveTransferFrom(IERC20Token,address,uint256)._spender (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#505) is not in mixedCase
Parameter TokenTransfer.approveTransferFrom(IERC20Token,address,uint256)._amount (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#506) is not in mixedCase
Variable UpgradeabilityStorage._implementation (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#617) is not in mixedCase
Function IWhiteList.address_belongs(address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#748) is not in mixedCase
Function IWhiteList.main_isTransferAllowed(address,address,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#758-762) is not in mixedCase
Function IWhiteList.etn_isTransferAllowed(address,address,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#764-768) is not in mixedCase
Function IWhiteList.stock_isTransferAllowed(address,address,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#770-774) is not in mixedCase
Function IWhiteList.main_isReceiveAllowed(address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#780) is not in mixedCase
Function IWhiteList.etn_isReceiveAllowed(address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#782) is not in mixedCase
Function IWhiteList.stock_isReceiveAllowed(address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#784) is not in mixedCase
Parameter RegisteryAuction.updateRegistery(address)._address (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#857) is not in mixedCase
Parameter RegisteryAuction.getAddressOf(bytes32)._contractName (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#871) is not in mixedCase
Parameter AuctionUtils.setGroupBonusRatio(uint256)._groupBonusRatio (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#922) is not in mixedCase
Parameter AuctionUtils.setDownSideProtectionRatio(uint256)._ratio (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#931) is not in mixedCase
Parameter AuctionUtils.setfundWalletRatio(uint256)._ratio (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#941) is not in mixedCase
Parameter AuctionUtils.setMainTokenRatio(uint256)._ratio (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#951) is not in mixedCase
Parameter AuctionUtils.setMainTokenCheckDay(uint256)._mainTokencheckDay (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#960) is not in mixedCase
Parameter AuctionUtils.setMaxContributionAllowed(uint256)._maxContributionAllowed (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#969) is not in mixedCase
Parameter AuctionUtils.setstakingPercent(uint256)._staking (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#978) is not in mixedCase
Parameter AuctionUtils.setAverageDays(uint256)._averageDay (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#987) is not in mixedCase
Parameter AuctionFormula.calculateSupplyPercent(uint256,uint256)._supply (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1050) is not in mixedCase
Parameter AuctionFormula.calculateSupplyPercent(uint256,uint256)._percent (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1050) is not in mixedCase
Parameter IndividualBonus.updateIndividualBonusRatio(uint256,uint256,uint256,uint256,uint256).X1 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1068) is not in mixedCase
Parameter IndividualBonus.updateIndividualBonusRatio(uint256,uint256,uint256,uint256,uint256).X2 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1069) is not in mixedCase
Parameter IndividualBonus.updateIndividualBonusRatio(uint256,uint256,uint256,uint256,uint256).X3 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1070) is not in mixedCase
Parameter IndividualBonus.updateIndividualBonusRatio(uint256,uint256,uint256,uint256,uint256).X4 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1071) is not in mixedCase
Parameter IndividualBonus.updateIndividualBonusRatio(uint256,uint256,uint256,uint256,uint256).X5 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1072) is not in mixedCase
Parameter IndividualBonus.calculateBouns(uint256,address)._auctionDay (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1128) is not in mixedCase
Parameter IndividualBonus.calculateBouns(uint256,address)._from (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1128) is not in mixedCase
Parameter AuctionFundCollector.mainTokenCheck(address,uint256)._from (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1156) is not in mixedCase
Parameter AuctionFundCollector.mainTokenCheck(address,uint256)._contributedAmount (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1156) is not in mixedCase
Parameter AuctionFundCollector.calculateFund(address,uint256,uint256)._token (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1187) is not in mixedCase
Parameter AuctionFundCollector.calculateFund(address,uint256,uint256)._amount (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1188) is not in mixedCase
Parameter AuctionFundCollector.calculateFund(address,uint256,uint256)._decimal (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1189) is not in mixedCase
Parameter AuctionFundCollector.fundAdded(address,uint256,uint256,address,address,uint256)._token (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1220) is not in mixedCase
Parameter AuctionFundCollector.fundAdded(address,uint256,uint256,address,address,uint256)._amount (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1221) is not in mixedCase
Parameter AuctionFundCollector.fundAdded(address,uint256,uint256,address,address,uint256)._decimal (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1222) is not in mixedCase
Parameter AuctionFundCollector.fundAdded(address,uint256,uint256,address,address,uint256)._caller (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1223) is not in mixedCase
Parameter AuctionFundCollector.fundAdded(address,uint256,uint256,address,address,uint256)._recipient (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1224) is not in mixedCase
Parameter AuctionFundCollector.fundAdded(address,uint256,uint256,address,address,uint256)._currencyPrice (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1225) is not in mixedCase
Parameter AuctionFundCollector.contributeWithEtherBehalf(address)._whom (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1311) is not in mixedCase
Parameter Auction.changeTimings(uint256,uint256)._flag (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1358) is not in mixedCase
Parameter Auction.changeTimings(uint256,uint256)._time (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1358) is not in mixedCase
Parameter Auction.initialize(uint256,uint256,uint256,uint256,address,address,address,address)._startTime (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1370) is not in mixedCase
Parameter Auction.initialize(uint256,uint256,uint256,uint256,address,address,address,address)._minAuctionTime (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1371) is not in mixedCase
Parameter Auction.initialize(uint256,uint256,uint256,uint256,address,address,address,address)._interval (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1372) is not in mixedCase
Parameter Auction.initialize(uint256,uint256,uint256,uint256,address,address,address,address)._mainTokenCheckDay (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1373) is not in mixedCase
Parameter Auction.initialize(uint256,uint256,uint256,uint256,address,address,address,address)._primaryOwner (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1374) is not in mixedCase
Parameter Auction.initialize(uint256,uint256,uint256,uint256,address,address,address,address)._systemAddress (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1375) is not in mixedCase
Parameter Auction.initialize(uint256,uint256,uint256,uint256,address,address,address,address)._multisigAddress (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1376) is not in mixedCase
Parameter Auction.initialize(uint256,uint256,uint256,uint256,address,address,address,address)._registryaddress (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1377) is not in mixedCase
Parameter Auction.disturbuteTokenInternal(uint256,address)._which (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1591) is not in mixedCase
Parameter Auction.disturbuteTokens(uint256,address[])._which (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1669) is not in mixedCase
Parameter Auction.returnFund(IERC20Token,uint256,address)._token (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1690) is not in mixedCase
Parameter Auction.returnFund(IERC20Token,uint256,address)._value (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1691) is not in mixedCase
Parameter Auction.returnFund(IERC20Token,uint256,address)._which (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1692) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Reentrancy in AuctionFundCollector._contributeWithEther(uint256,address,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1281-1298):
	External calls:
	- _recipient.transfer(returnAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1289)
	External calls sending eth:
	- _recipient.transfer(returnAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1289)
	- IAuctionProtection(auctionProtectionAddress).lockEther.value(downSideAmount)(auctionDay,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1295)
	State variables written after the call(s):
	- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
		- dayWiseContribution[auctionDay] = safeAdd(dayWiseContribution[auctionDay],_contributedAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1256-1259)
	- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
		- mainTokenCheckDayWise[auctionDay][_caller] = safeAdd(walletDayWiseContribution[auctionDay][_caller],_contributedAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1241-1244)
	- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
		- todayContribution = safeAdd(todayContribution,_contributedAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1239)
	- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
		- topContributorIndex[auctionDay][_from] = x (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1109)
		- topContributorIndex[auctionDay][replaceWith] = x (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1118)
		- topContributorIndex[auctionDay][replaceWith] = 0 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1124)
	- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
		- topFiveContributor[auctionDay][x] = _from (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1108)
		- topFiveContributor[auctionDay][x] = replaceWith (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1117)
	- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
		- userTotalFund[_recipient] = safeAdd(userTotalFund[_recipient],_contributedAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1251-1254)
	- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
		- walletDayWiseContribution[auctionDay][_recipient] = safeAdd(walletDayWiseContribution[auctionDay][_recipient],_contributedAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1246-1249)
	Event emitted after the call(s):
	- FundAdded(auctionDay,todayContribution,_recipient,_token,_amount,_contributedAmount,walletDayWiseContribution[auctionDay][_recipient],currentMarketPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1263-1272)
		- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
	- FundAddedBehalf(_caller,_recipient) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1275)
		- fundAdded(address(0),_value,18,_caller,_recipient,_currencyPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1297)
Reentrancy in AuctionFundCollector._pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1336-1351):
	External calls:
	- companyFundWalletAddress.transfer(realEstateAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1343)
	External calls sending eth:
	- companyFundWalletAddress.transfer(realEstateAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1343)
	- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	State variables written after the call(s):
	- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
Reentrancy in Auction.auctionEnd() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1426-1589):
	External calls:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- companyFundWalletAddress.transfer(realEstateAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1343)
	External calls sending eth:
	- _pushEthToLiquidity() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1432)
		- companyFundWalletAddress.transfer(realEstateAmount) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1343)
		- currentMarketPrice = IAuctionLiquidity(liquidityAddress).contributeWithEther.value(reserveAmount)() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1345-1347)
	State variables written after the call(s):
	- LAST_AUCTION_START = safeAdd(LAST_AUCTION_START,INTERVAL) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1574)
	- allowMaxContribution = safeDiv(safeMul(todayContribution,maxContributionAllowed),100) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1474-1477)
	- allowMaxContribution = _avgInvestment (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1522)
	- auctionDay = safeAdd(auctionDay,1) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1571)
	- dayWiseContribution[auctionDay] = mainReserveAmountUsd (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1449)
	- dayWiseDownSideProtectionRatio[auctionDay] = downSideProtectionRatio (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1573)
	- dayWiseMarketPrice[auctionDay] = _mainTokenPrice (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1561)
	- dayWiseSupply[auctionDay] = safeAdd(todaySupply,bonusSupply) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1527)
	- dayWiseSupplyBonus[auctionDay] = bonusSupply (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1526)
	- dayWiseSupplyCore[auctionDay] = todaySupply (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1525)
	- todayContribution = mainReserveAmountUsd (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1451)
	- todayContribution = 0 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1575)
	- todaySupply = safeDiv(safeMul(todayContribution,DECIMAL_NOMINATOR),_mainTokenPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1563-1566)
	- _compareForGroupBonus(vaultAddress) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1458)
		- topContributorIndex[auctionDay][_from] = x (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1109)
		- topContributorIndex[auctionDay][replaceWith] = x (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1118)
		- topContributorIndex[auctionDay][replaceWith] = 0 (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1124)
	- _compareForGroupBonus(vaultAddress) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1458)
		- topFiveContributor[auctionDay][x] = _from (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1108)
		- topFiveContributor[auctionDay][x] = replaceWith (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1117)
	- totalContribution = safeAdd(totalContribution,todayContribution) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1568)
	- walletDayWiseContribution[auctionDay][vaultAddress] = mainReserveAmountUsd (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1453)
	- yesterdayContribution = todayContribution (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1570)
	- yesterdaySupply = dayWiseSupply[auctionDay] (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1569)
	Event emitted after the call(s):
	- AuctionEnded(auctionDay,todaySupply,yesterdaySupply,todayContribution,yesterdayContribution,totalContribution,allowMaxContribution,_tokenPrice,_mainTokenPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1576-1586)
	- FundAdded(auctionDay,todayContribution,vaultAddress,address(0),mainReserveAmount,mainReserveAmountUsd,mainReserveAmountUsd,_mainTokenPrice) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1460-1469)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4[0m
INFO:Detectors:[92m
AuctionUtils.initializeStorage() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#906-920) uses literals with too many digits:
	- totalContribution = 2500000 * PRICE_NOMINATOR (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#908)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
AuctionRegisteryContracts.ETN_TOKEN (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#12) is never used in Auction (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1355-1705)
AuctionRegisteryContracts.STOCK_TOKEN (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#13) is never used in Auction (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1355-1705)
AuctionRegisteryContracts.AUCTION (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#15) is never used in Auction (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1355-1705)
AuctionRegisteryContracts.CONTRIBUTION_TRIGGER (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#20) is never used in Auction (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1355-1705)
AuctionRegisteryContracts.SMART_SWAP_P2P (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#23) is never used in Auction (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1355-1705)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
UpgradeabilityStorage._implementation (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#617) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
changePrimaryOwner() should be declared external:
	- ProxyOwnable.changePrimaryOwner() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#304-312)
changeSystemAddress(address) should be declared external:
	- ProxyOwnable.changeSystemAddress(address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#318-334)
changeAuthorityAddress(address) should be declared external:
	- ProxyOwnable.changeAuthorityAddress(address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#340-353)
acceptAuthorityAddress() should be declared external:
	- ProxyOwnable.acceptAuthorityAddress() (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#355-365)
initialize(uint256,uint256,uint256,uint256,address,address,address,address) should be declared external:
	- Auction.initialize(uint256,uint256,uint256,uint256,address,address,address,address) (loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol#1369-1394)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x908662562Ce0BB051c291b0CE766a65E8345388B.sol analyzed (27 contracts with 46 detectors), 151 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x908662562Ce0BB051c291b0CE766a65E8345388B.sol
Tool Runtime = 12.682565148999856 seconds
#############################################