INFO:Detectors:[93m
Mandalorian.transfer(address,uint256) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#144-199) performs a multiplication on the result of a division:
	-myInt2 = fee_J5y(value).div(6).mul(4) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#153)
Mandalorian.transfer(address,uint256) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#144-199) performs a multiplication on the result of a division:
	-myInts[x] = myInt2.div(myInt3).mul(walletsw[x]) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#166)
Mandalorian.transferFrom(address,address,uint256) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#208-263) performs a multiplication on the result of a division:
	-myInt2 = fee_J5y(value).div(6).mul(4) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#218)
Mandalorian.transferFrom(address,address,uint256) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#208-263) performs a multiplication on the result of a division:
	-myInts[x] = myInt2.div(myInt3).mul(walletsw[x]) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#231)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
Contract locking ether found in :
	Contract Mandalorian (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#96-349) has payable functions:
	 - Mandalorian.constructor() (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#125-127)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
ERC20Detailed.constructor(string,string,uint8).name (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#77) shadows:
	- ERC20Detailed.name() (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#83-85) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#77) shadows:
	- ERC20Detailed.symbol() (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#87-89) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#77) shadows:
	- ERC20Detailed.decimals() (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#91-93) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#23) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Function Mandalorian.fee_J5y(uint256) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#140-142) is not in mixedCase
Constant Mandalorian.tokenName (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#110) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Mandalorian.tokenSymbol (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#111) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Mandalorian.tokenDecimals (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#112) is not in UPPER_CASE_WITH_UNDERSCORES
Variable Mandalorian._totalSupply (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#113) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Mandalorian.slitherConstructorVariables() (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#96-349) uses literals with too many digits:
	- _totalSupply = 10000000000000000000000 (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#113)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
Mandalorian.wallet1 (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#101) is never used in Mandalorian (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#96-349)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
Mandalorian.wallet1 (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#101) should be constant
Mandalorian.wallet2 (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#102) should be constant
Mandalorian.walletbp (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#114) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
name() should be declared external:
	- ERC20Detailed.name() (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#83-85)
symbol() should be declared external:
	- ERC20Detailed.symbol() (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#87-89)
decimals() should be declared external:
	- ERC20Detailed.decimals() (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#91-93)
totalSupply() should be declared external:
	- Mandalorian.totalSupply() (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#128-130)
balanceOf(address) should be declared external:
	- Mandalorian.balanceOf(address) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#132-134)
allowance(address,address) should be declared external:
	- Mandalorian.allowance(address,address) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#136-138)
transfer(address,uint256) should be declared external:
	- Mandalorian.transfer(address,uint256) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#144-199)
approve(address,uint256) should be declared external:
	- Mandalorian.approve(address,uint256) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#201-206)
transferFrom(address,address,uint256) should be declared external:
	- Mandalorian.transferFrom(address,address,uint256) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#208-263)
increaseAllowance(address,uint256) should be declared external:
	- Mandalorian.increaseAllowance(address,uint256) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#265-269)
decreaseAllowance(address,uint256) should be declared external:
	- Mandalorian.decreaseAllowance(address,uint256) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#271-275)
enableBool1() should be declared external:
	- Mandalorian.enableBool1() (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#301-306)
disableBool3() should be declared external:
	- Mandalorian.disableBool3() (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#308-311)
setwallet3(address) should be declared external:
	- Mandalorian.setwallet3(address) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#313-317)
setMyInt1(uint256) should be declared external:
	- Mandalorian.setMyInt1(uint256) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#319-322)
setWallets2(address) should be declared external:
	- Mandalorian.setWallets2(address) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#324-327)
setWallets2x(address) should be declared external:
	- Mandalorian.setWallets2x(address) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#329-332)
setWallets3(address) should be declared external:
	- Mandalorian.setWallets3(address) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#334-337)
setWallets3x(address) should be declared external:
	- Mandalorian.setWallets3x(address) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#339-342)
setWallet4(address) should be declared external:
	- Mandalorian.setWallet4(address) (loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol#344-347)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol analyzed (4 contracts with 46 detectors), 40 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x0006abbe90dc7e63fb9161969a5c9ee7ad62e901.sol
Tool Runtime = 0.960397972001374 seconds
#############################################