INFO:Detectors:[91m
Fast3Matrix.sendreward(address,uint256) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#178-184) sends eth to arbitrary user
	Dangerous calls:
	- address(uint160(receiver)).transfer(address(this).balance) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#181)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[92m
Fast3Matrix.registration(address,address,uint256) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#84-115) uses assembly
	- INLINE ASM (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#90-93)
Fast3Matrix.bytesToAddress(bytes) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#186-190) uses assembly
	- INLINE ASM (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#187-190)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#6) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Event Fast3Matrixpayout(address,address,uint256,uint8,uint8,uint8) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#37) is not in CapWords
Variable Fast3Matrix.L5Matrix (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#26) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Reentrancy in Fast3Matrix.findbenid(address,uint256) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#135-149):
	External calls:
	- sendreward(userIds[L5Matrix[benid]],dividend) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#147)
		- ! address(uint160(receiver)).send(dividend) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#180)
		- address(uint160(receiver)).transfer(address(this).balance) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#181)
	State variables written after the call(s):
	- seqid ++ (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#148)
Reentrancy in Fast3Matrix.registration(address,address,uint256) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#84-115):
	External calls:
	- levelreward(userAddress,referrerAddress,buyvalue) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#113)
		- ! address(uint160(receiver)).send(dividend) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#180)
		- address(uint160(receiver)).transfer(address(this).balance) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#181)
	- findbenid(userAddress,buyvalue) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#114)
		- ! address(uint160(receiver)).send(dividend) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#180)
		- address(uint160(receiver)).transfer(address(this).balance) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#181)
	State variables written after the call(s):
	- findbenid(userAddress,buyvalue) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#114)
		- L5Matrix.push(newseqid) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#80)
	- findbenid(userAddress,buyvalue) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#114)
		- benid = findqualifier(benid,userAddress) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#143)
	- findbenid(userAddress,buyvalue) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#114)
		- seqid = 1 (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#144)
		- seqid ++ (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#148)
	- findbenid(userAddress,buyvalue) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#114)
		- users[userIds[newseqid]].level ++ (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#78)
		- users[userIds[newseqid]].D5No[0].push(newid) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#79)
		- users[userIds[L5Matrix[newseqid]]].block = true (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#158)
	Event emitted after the call(s):
	- Reentry(userIds[newseqid],newid,users[userIds[newseqid]].level,status) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#81)
		- findbenid(userAddress,buyvalue) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#114)
	- Reentry(userAddress,newseqid,users[userIds[L5Matrix[newseqid]]].level,3) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#159)
		- findbenid(userAddress,buyvalue) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#114)
	- payout(userAddress,userIds[L5Matrix[benid]],0,1,users[userIds[L5Matrix[benid]]].level,seqid) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#140)
		- findbenid(userAddress,buyvalue) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#114)
	- payout(reinvest,userIds[L5Matrix[benid]],dividend,1,users[userIds[L5Matrix[benid]]].level,seqid) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#146)
		- findbenid(userAddress,buyvalue) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#114)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4[0m
INFO:Detectors:[92m
usersD5Matrix(address) should be declared external:
	- Fast3Matrix.usersD5Matrix(address) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#169-171)
userspartner(address) should be declared external:
	- Fast3Matrix.userspartner(address) (loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol#173-175)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./loops/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol analyzed (1 contracts with 46 detectors), 11 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol
Tool Runtime = 0.6138192180005717 seconds
#############################################