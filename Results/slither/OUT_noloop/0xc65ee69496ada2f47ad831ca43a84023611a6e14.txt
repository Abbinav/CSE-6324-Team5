Compilation warnings/errors on ./noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:
./noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:986:5: Warning: Variable covers a large part of storage and thus makes collisions likely. Either use mappings or dynamic arrays and allow their size to be increased only in small quantities per transaction.
    uint[100000000000000000000000000000] public period_timestamp;
    ^----------------------------------------------------------^
./noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:992:5: Warning: Variable covers a large part of storage and thus makes collisions likely. Either use mappings or dynamic arrays and allow their size to be increased only in small quantities per transaction.
    uint[100000000000000000000000000000] public period_timestamp;
    ^----------------------------------------------------------^
./noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:999:5: Warning: Variable covers a large part of storage and thus makes collisions likely. Either use mappings or dynamic arrays and allow their size to be increased only in small quantities per transaction.
    uint[100000000000000000000000000000] public period_timestamp;
    ^----------------------------------------------------------^
./noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1108:13: Warning: Unused local variable.
            uint wBTCamount = IERC20(WBTC_ADDRESS).balanceOf(address(this));
            ^-------------^
./noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1112:13: Warning: Unused local variable.
            uint lpAmount = IERC20(lpTokenAddress).balanceOf(address(this));
            ^-----------^
./noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1182:44: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function exit(address _depositAddress, uint value) public onlyOwner {
                                           ^--------^

INFO:Detectors:[91m
PoolFactory.owner (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#917) is never initialized. It is used in:
	- PoolFactory.setPoolProxyAddress(address) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#937-940)
	- PoolFactory.setBestBoost(address,address) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#958-962)
PoolFactory.poolTokenAddress (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#919) is never initialized. It is used in:
	- PoolFactory.mint(address,uint256,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#964-971)
	- PoolFactory.burn(address,uint256,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#973-979)
PoolFactory.poolTokenBTCAddress (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#920) is never initialized. It is used in:
	- PoolFactory.mint(address,uint256,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#964-971)
	- PoolFactory.burn(address,uint256,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#973-979)
Pool.owner (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1055) is never initialized. It is used in:
Pool.poolFactoryAddress (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1056) is never initialized. It is used in:
	- Pool.deposit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1064-1098)
	- Pool._btcDeposit(address,address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1100-1132)
	- Pool.exit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1182-1231)
	- Pool._ethDeposit(address) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1237-1249)
Pool.isBTCPool (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1057) is never initialized. It is used in:
	- Pool.deposit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1064-1098)
	- Pool._btcDeposit(address,address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1100-1132)
	- Pool.exit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1182-1231)
	- Pool._ethDeposit(address) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1237-1249)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
PoolFactory.setBestBoost(address,address) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#958-962) uses a Boolean constant improperly:
	-bestBoost[true] = _newBestBoostBTC (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#961)
PoolFactory.setBestBoost(address,address) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#958-962) uses a Boolean constant improperly:
	-bestBoost[false] = _newBestBoost (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#960)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#misuse-of-a-boolean-constant[0m
INFO:Detectors:[93m
Contract locking ether found in :
	Contract PoolProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1014-1051) has payable functions:
	 - PoolProxy.fallback() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1026-1046)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Pool._btcDeposit(address,address,uint256)._amount (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1101) is a local variable never initialized
Pool.exit(address,uint256).buf (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1201) is a local variable never initialized
Pool._btcDeposit(address,address,uint256).lpTokenAddress_scope_0 (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1127) is a local variable never initialized
Pool._btcDeposit(address,address,uint256).gaugeAddress_scope_1 (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1127) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
Pool.deposit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1064-1098) ignores return value by IERC20(tokenAddress).transferFrom(msg.sender,address(this),amount) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1082)
Pool.deposit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1064-1098) ignores return value by IERC20(tokenAddress).approve(EXCHANGE_CONTRACT,amount) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1085)
Pool._btcDeposit(address,address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1100-1132) ignores return value by IERC20(tokenAddress).transferFrom(msg.sender,address(this),amount) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1119)
Pool._btcDeposit(address,address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1100-1132) ignores return value by IERC20(tokenAddress).approve(EXCHANGE_CONTRACT,amount) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1122)
Pool.claimReward(address,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1134-1180) ignores return value by IERC20(SWERVE_TOKEN_ADDRESS).approve(EXCHANGE_CONTRACT,swerveTokenBalance) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1152)
Pool.claimReward(address,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1134-1180) ignores return value by IERC20(CRV_TOKEN_ADDRESS).approve(EXCHANGE_CONTRACT,crvTokenBalance) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1158)
Pool.claimReward(address,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1134-1180) ignores return value by IERC20(DAI_ADDRESS).transfer(msg.sender,daiBalance) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1166)
Pool.claimReward(address,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1134-1180) ignores return value by IERC20(SWERVE_TOKEN_ADDRESS).transfer(msg.sender,swerveTokenBalance) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1174)
Pool.claimReward(address,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1134-1180) ignores return value by IERC20(CRV_TOKEN_ADDRESS).transfer(msg.sender,crvTokenBalance) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1178)
Pool.exit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1182-1231) ignores return value by IERC20(supAddresses[0]).approve(_depositAddress,bal) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1198)
Pool.exit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1182-1231) ignores return value by IERC20(DAI_ADDRESS).transfer(msg.sender,IERC20(DAI_ADDRESS).balanceOf(address(this))) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1213)
Pool.exit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1182-1231) ignores return value by IERC20(USDC_ADDRESS).transfer(msg.sender,IERC20(USDC_ADDRESS).balanceOf(address(this))) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1217)
Pool.exit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1182-1231) ignores return value by IERC20(TUSD_ADDRESS).transfer(msg.sender,IERC20(TUSD_ADDRESS).balanceOf(address(this))) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1225)
Pool.exit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1182-1231) ignores return value by IERC20(WBTC_ADDRESS).transfer(msg.sender,IERC20(WBTC_ADDRESS).balanceOf(address(this))) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1228)
Pool.withdrawTokenFromContract(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1233-1235) ignores return value by IERC20(tokenAddress).transfer(msg.sender,amount) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1234)
Pool.depositLPTokens(address,address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1251-1254) ignores return value by IERC20(lpTokenAddress).approve(gaugeAddress,value) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1252)
Pool._deposit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1256-1317) ignores return value by IERC20(DAI_ADDRESS).approve(_depositPool,amount) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1257)
Pool._deposit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1256-1317) ignores return value by IERC20(WBTC_ADDRESS).approve(_depositPool,amount) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1288)
Pool._deposit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1256-1317) ignores return value by IERC20(WBTC_ADDRESS).approve(_depositPool,amount) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1296)
Pool._deposit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1256-1317) ignores return value by IERC20(WBTC_ADDRESS).approve(_depositPool,amount) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1304)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
ERC20.constructor(string,string).name (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#529) shadows:
	- ERC20.name() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#538-540) (function)
ERC20.constructor(string,string).symbol (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#529) shadows:
	- ERC20.symbol() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#546-548) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#291-300) uses assembly
	- INLINE ASM (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#298-299)
Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#384-405) uses assembly
	- INLINE ASM (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#397-401)
PoolFactoryProxy.fallback() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#893-913) uses assembly
	- INLINE ASM (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#895-913)
PoolProxy.fallback() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1026-1046) uses assembly
	- INLINE ASM (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1028-1046)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#91) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#318-324):
	- (success) = recipient.call.value(amount)() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#322)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#384-405):
	- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#388)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter TokenManager.getSupportAddresses(address)._depositAddress (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#57) is not in mixedCase
Parameter PoolToken.setPoolManager(address)._newManagerAddress (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#794) is not in mixedCase
Parameter PoolFactoryProxy.setImplementation(address)._newImpl (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#887) is not in mixedCase
Parameter PoolFactory.setPoolProxyAddress(address)._newProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#937) is not in mixedCase
Parameter PoolFactory.setBestBoost(address,address)._newBestBoost (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#958) is not in mixedCase
Parameter PoolFactory.setBestBoost(address,address)._newBestBoostBTC (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#958) is not in mixedCase
Function Deposit2Tokens.add_liquidity(uint256[2],uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#983) is not in mixedCase
Parameter Deposit2Tokens.add_liquidity(uint256[2],uint256).min_mint_amount (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#983) is not in mixedCase
Function Deposit2Tokens.remove_liquidity_one_coin(uint256,int128,uint256,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#985) is not in mixedCase
Parameter Deposit2Tokens.remove_liquidity_one_coin(uint256,int128,uint256,bool)._token_amount (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#985) is not in mixedCase
Parameter Deposit2Tokens.remove_liquidity_one_coin(uint256,int128,uint256,bool).min_uamount (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#985) is not in mixedCase
Parameter Deposit2Tokens.remove_liquidity_one_coin(uint256,int128,uint256,bool).donate_dust (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#985) is not in mixedCase
Variable Deposit2Tokens.period_timestamp (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#986) is not in mixedCase
Function Deposit3Tokens.add_liquidity(uint256[3],uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#990) is not in mixedCase
Parameter Deposit3Tokens.add_liquidity(uint256[3],uint256).min_mint_amount (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#990) is not in mixedCase
Function Deposit3Tokens.remove_liquidity_one_coin(uint256,int128,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#991) is not in mixedCase
Parameter Deposit3Tokens.remove_liquidity_one_coin(uint256,int128,uint256)._token_amount (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#991) is not in mixedCase
Parameter Deposit3Tokens.remove_liquidity_one_coin(uint256,int128,uint256).min_uamount (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#991) is not in mixedCase
Variable Deposit3Tokens.period_timestamp (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#992) is not in mixedCase
Function Deposit4Tokens.add_liquidity(uint256[4],uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#996) is not in mixedCase
Parameter Deposit4Tokens.add_liquidity(uint256[4],uint256).min_mint_amount (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#996) is not in mixedCase
Function Deposit4Tokens.remove_liquidity(uint256,uint256[4]) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#997) is not in mixedCase
Parameter Deposit4Tokens.remove_liquidity(uint256,uint256[4]).min_amounts (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#997) is not in mixedCase
Function Deposit4Tokens.remove_liquidity_one_coin(uint256,int128,uint256,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#998) is not in mixedCase
Parameter Deposit4Tokens.remove_liquidity_one_coin(uint256,int128,uint256,bool)._token_amount (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#998) is not in mixedCase
Parameter Deposit4Tokens.remove_liquidity_one_coin(uint256,int128,uint256,bool).min_uamount (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#998) is not in mixedCase
Parameter Deposit4Tokens.remove_liquidity_one_coin(uint256,int128,uint256,bool).donate_dust (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#998) is not in mixedCase
Variable Deposit4Tokens.period_timestamp (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#999) is not in mixedCase
Parameter TokenMinter.mint(address).gauge_addr (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1011) is not in mixedCase
Parameter Pool.claimReward(address,bool)._depositAddress (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1134) is not in mixedCase
Parameter Pool.exit(address,uint256)._depositAddress (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1182) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
IOneSplit.slitherConstructorConstantVariables() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#853-862) uses literals with too many digits:
	- FLAG_ENABLE_KYBER_UNISWAP_RESERVE = 0x100000000 (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#813)
IOneSplit.slitherConstructorConstantVariables() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#853-862) uses literals with too many digits:
	- FLAG_ENABLE_KYBER_OASIS_RESERVE = 0x200000000 (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#814)
IOneSplit.slitherConstructorConstantVariables() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#853-862) uses literals with too many digits:
	- FLAG_ENABLE_KYBER_BANCOR_RESERVE = 0x400000000 (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#815)
IOneSplit.slitherConstructorConstantVariables() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#853-862) uses literals with too many digits:
	- FLAG_ENABLE_UNISWAP_COMPOUND = 0x100000 (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#834)
PoolFactoryProxy.slitherConstructorConstantVariables() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#864-914) uses literals with too many digits:
	- TUSD_ADDRESS = 0x0000000000085d4780B73119b644AE5ecd22b376 (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#53)
PoolFactory.slitherConstructorConstantVariables() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#916-980) uses literals with too many digits:
	- TUSD_ADDRESS = 0x0000000000085d4780B73119b644AE5ecd22b376 (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#53)
PoolProxy.slitherConstructorConstantVariables() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1014-1051) uses literals with too many digits:
	- TUSD_ADDRESS = 0x0000000000085d4780B73119b644AE5ecd22b376 (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#53)
Pool.slitherConstructorConstantVariables() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1053-1319) uses literals with too many digits:
	- TUSD_ADDRESS = 0x0000000000085d4780B73119b644AE5ecd22b376 (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#53)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
TokenManager.CRV_TOKEN_MINTER_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#37) is never used in PoolFactoryProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#864-914)
TokenManager.SWERVE_TOKEN_MINTER_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#38) is never used in PoolFactoryProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#864-914)
TokenManager.CRV_TOKEN_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#40) is never used in PoolFactoryProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#864-914)
TokenManager.SWERVE_TOKEN_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#41) is never used in PoolFactoryProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#864-914)
TokenManager.VOTING_ESCROW (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#44) is never used in PoolFactoryProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#864-914)
TokenManager.EXCHANGE_CONTRACT (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#46) is never used in PoolFactoryProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#864-914)
TokenManager.ETH_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#47) is never used in PoolFactoryProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#864-914)
TokenManager.DAI_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#48) is never used in PoolFactoryProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#864-914)
TokenManager.WBTC_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#49) is never used in PoolFactoryProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#864-914)
TokenManager.USDC_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#51) is never used in PoolFactoryProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#864-914)
TokenManager.USDT_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#52) is never used in PoolFactoryProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#864-914)
TokenManager.TUSD_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#53) is never used in PoolFactoryProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#864-914)
TokenManager.CRV_TOKEN_MINTER_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#37) is never used in PoolFactory (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#916-980)
TokenManager.SWERVE_TOKEN_MINTER_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#38) is never used in PoolFactory (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#916-980)
TokenManager.CRV_TOKEN_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#40) is never used in PoolFactory (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#916-980)
TokenManager.SWERVE_TOKEN_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#41) is never used in PoolFactory (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#916-980)
TokenManager.VOTING_ESCROW (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#44) is never used in PoolFactory (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#916-980)
TokenManager.EXCHANGE_CONTRACT (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#46) is never used in PoolFactory (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#916-980)
TokenManager.ETH_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#47) is never used in PoolFactory (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#916-980)
TokenManager.DAI_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#48) is never used in PoolFactory (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#916-980)
TokenManager.WBTC_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#49) is never used in PoolFactory (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#916-980)
TokenManager.USDC_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#51) is never used in PoolFactory (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#916-980)
TokenManager.USDT_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#52) is never used in PoolFactory (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#916-980)
TokenManager.TUSD_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#53) is never used in PoolFactory (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#916-980)
TokenManager.CRV_TOKEN_MINTER_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#37) is never used in PoolProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1014-1051)
TokenManager.SWERVE_TOKEN_MINTER_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#38) is never used in PoolProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1014-1051)
TokenManager.CRV_TOKEN_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#40) is never used in PoolProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1014-1051)
TokenManager.SWERVE_TOKEN_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#41) is never used in PoolProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1014-1051)
TokenManager.VOTING_ESCROW (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#44) is never used in PoolProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1014-1051)
TokenManager.EXCHANGE_CONTRACT (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#46) is never used in PoolProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1014-1051)
TokenManager.ETH_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#47) is never used in PoolProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1014-1051)
TokenManager.DAI_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#48) is never used in PoolProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1014-1051)
TokenManager.WBTC_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#49) is never used in PoolProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1014-1051)
TokenManager.USDC_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#51) is never used in PoolProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1014-1051)
TokenManager.USDT_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#52) is never used in PoolProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1014-1051)
TokenManager.TUSD_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#53) is never used in PoolProxy (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1014-1051)
TokenManager.VOTING_ESCROW (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#44) is never used in Pool (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1053-1319)
TokenManager.USDT_ADDRESS (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#52) is never used in Pool (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1053-1319)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables[0m
INFO:Detectors:[92m
Pool.isBTCPool (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1057) should be constant
Pool.owner (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1055) should be constant
Pool.poolFactoryAddress (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1056) should be constant
PoolFactory.owner (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#917) should be constant
PoolFactory.poolTokenAddress (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#919) should be constant
PoolFactory.poolTokenBTCAddress (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#920) should be constant
PoolFactory.totalBalance (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#925) should be constant
PoolFactoryProxy.totalBalance (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#874) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
name() should be declared external:
	- ERC20.name() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#538-540)
symbol() should be declared external:
	- ERC20.symbol() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#546-548)
decimals() should be declared external:
	- ERC20.decimals() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#563-565)
totalSupply() should be declared external:
	- ERC20.totalSupply() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#570-572)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#577-579)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#589-592)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#597-599)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#608-611)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#625-629)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#643-646)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#662-665)
setPoolManager(address) should be declared external:
	- PoolToken.setPoolManager(address) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#794-796)
mint(address,uint256) should be declared external:
	- PoolToken.mint(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#798-801)
burn(address,uint256) should be declared external:
	- PoolToken.burn(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#803-806)
getExpectedReturn(IERC20,IERC20,uint256,uint256,uint256) should be declared external:
	- IOneSplitView.getExpectedReturn(IERC20,IERC20,uint256,uint256,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#836-849)
swap(IERC20,IERC20,uint256,uint256,uint256[],uint256) should be declared external:
	- IOneSplit.swap(IERC20,IERC20,uint256,uint256,uint256[],uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#854-861)
setImplementation(address) should be declared external:
	- PoolFactoryProxy.setImplementation(address) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#887-891)
setPoolProxyAddress(address) should be declared external:
	- PoolFactory.setPoolProxyAddress(address) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#937-940)
newStablePool() should be declared external:
	- PoolFactory.newStablePool() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#942-948)
newBTCPool() should be declared external:
	- PoolFactory.newBTCPool() (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#950-956)
setBestBoost(address,address) should be declared external:
	- PoolFactory.setBestBoost(address,address) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#958-962)
mint(address,uint256,bool) should be declared external:
	- PoolFactory.mint(address,uint256,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#964-971)
burn(address,uint256,bool) should be declared external:
	- PoolFactory.burn(address,uint256,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#973-979)
add_liquidity(uint256[2],uint256) should be declared external:
	- Deposit2Tokens.add_liquidity(uint256[2],uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#983)
remove_liquidity_one_coin(uint256,int128,uint256,bool) should be declared external:
	- Deposit2Tokens.remove_liquidity_one_coin(uint256,int128,uint256,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#985)
add_liquidity(uint256[3],uint256) should be declared external:
	- Deposit3Tokens.add_liquidity(uint256[3],uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#990)
remove_liquidity_one_coin(uint256,int128,uint256) should be declared external:
	- Deposit3Tokens.remove_liquidity_one_coin(uint256,int128,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#991)
add_liquidity(uint256[4],uint256) should be declared external:
	- Deposit4Tokens.add_liquidity(uint256[4],uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#996)
remove_liquidity(uint256,uint256[4]) should be declared external:
	- Deposit4Tokens.remove_liquidity(uint256,uint256[4]) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#997)
remove_liquidity_one_coin(uint256,int128,uint256,bool) should be declared external:
	- Deposit4Tokens.remove_liquidity_one_coin(uint256,int128,uint256,bool) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#998)
deposit(uint256) should be declared external:
	- IGauge.deposit(uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1003)
withdraw(uint256) should be declared external:
	- IGauge.withdraw(uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1004)
mint(address) should be declared external:
	- TokenMinter.mint(address) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1011)
deposit(address,uint256) should be declared external:
	- Pool.deposit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1064-1098)
exit(address,uint256) should be declared external:
	- Pool.exit(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1182-1231)
withdrawTokenFromContract(address,uint256) should be declared external:
	- Pool.withdrawTokenFromContract(address,uint256) (noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol#1233-1235)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol analyzed (18 contracts with 46 detectors), 164 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol
Tool Runtime = 2.6429307910002535 seconds
#############################################