Compilation warnings/errors on ./noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol:
./noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol:453:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[93m
SAFEDaiPool.notifyRewardAmount(uint256) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#725-741) performs a multiplication on the result of a division:
	-rewardRate = reward.div(DURATION) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#731)
	-leftover = remaining.mul(rewardRate) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#734)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
Reentrancy in SAFEDaiPool.checkhalve() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#709-719):
	External calls:
	- safe.mint(address(this),initreward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#712)
	State variables written after the call(s):
	- periodFinish = block.timestamp.add(DURATION) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#715)
Reentrancy in SAFEDaiPool.exit() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#695-698):
	External calls:
	- withdraw(balanceOf(msg.sender)) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#696)
		- bpt_safe_dai.safeTransfer(msg.sender,amount) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#624)
		- (success,returndata) = address(token).call(data) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#561)
	- getReward() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#697)
		- safe.mint(address(this),initreward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#712)
		- safe.safeTransfer(msg.sender,reward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#704)
		- (success,returndata) = address(token).call(data) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#561)
	State variables written after the call(s):
	- getReward() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#697)
		- lastUpdateTime = lastTimeRewardApplicable() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#648)
	- getReward() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#697)
		- periodFinish = block.timestamp.add(DURATION) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#715)
	- getReward() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#697)
		- rewardPerTokenStored = rewardPerToken() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#647)
	- getReward() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#697)
		- rewardRate = initreward.div(DURATION) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#714)
	- getReward() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#697)
		- rewards[msg.sender] = 0 (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#703)
		- rewards[account] = earned(account) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#650)
	- getReward() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#697)
		- userRewardPerTokenPaid[account] = rewardPerTokenStored (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#651)
Reentrancy in SAFEDaiPool.getReward() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#700-707):
	External calls:
	- checkhalve() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#700)
		- safe.mint(address(this),initreward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#712)
	State variables written after the call(s):
	- rewards[msg.sender] = 0 (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#703)
Reentrancy in SAFEDaiPool.notifyRewardAmount(uint256) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#725-741):
	External calls:
	- safe.mint(address(this),reward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#737)
	State variables written after the call(s):
	- lastUpdateTime = block.timestamp (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#738)
	- periodFinish = block.timestamp.add(DURATION) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#739)
Reentrancy in SAFEDaiPool.stake(uint256) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#683-687):
	External calls:
	- super.stake(amount) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#685)
		- bpt_safe_dai.safeTransferFrom(msg.sender,address(this),amount) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#618)
		- (success,returndata) = address(token).call(data) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#561)
	- checkhalve() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#683)
		- safe.mint(address(this),initreward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#712)
	State variables written after the call(s):
	- super.stake(amount) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#685)
		- _balances[msg.sender] = _balances[msg.sender].add(amount) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#617)
	- super.stake(amount) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#685)
		- _totalSupply = _totalSupply.add(amount) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#616)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in SAFEDaiPool.checkhalve() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#709-719):
	External calls:
	- safe.mint(address(this),initreward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#712)
	State variables written after the call(s):
	- rewardRate = initreward.div(DURATION) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#714)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in SAFEDaiPool.checkhalve() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#709-719):
	External calls:
	- safe.mint(address(this),initreward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#712)
	Event emitted after the call(s):
	- RewardAdded(initreward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#716)
Reentrancy in SAFEDaiPool.exit() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#695-698):
	External calls:
	- withdraw(balanceOf(msg.sender)) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#696)
		- bpt_safe_dai.safeTransfer(msg.sender,amount) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#624)
		- (success,returndata) = address(token).call(data) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#561)
	- getReward() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#697)
		- safe.mint(address(this),initreward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#712)
		- safe.safeTransfer(msg.sender,reward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#704)
		- (success,returndata) = address(token).call(data) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#561)
	Event emitted after the call(s):
	- RewardAdded(initreward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#716)
		- getReward() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#697)
	- RewardPaid(msg.sender,reward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#705)
		- getReward() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#697)
Reentrancy in SAFEDaiPool.getReward() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#700-707):
	External calls:
	- safe.safeTransfer(msg.sender,reward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#704)
	- checkhalve() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#700)
		- safe.mint(address(this),initreward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#712)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#705)
Reentrancy in SAFEDaiPool.notifyRewardAmount(uint256) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#725-741):
	External calls:
	- safe.mint(address(this),reward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#737)
	Event emitted after the call(s):
	- RewardAdded(reward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#740)
Reentrancy in SAFEDaiPool.stake(uint256) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#683-687):
	External calls:
	- super.stake(amount) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#685)
		- bpt_safe_dai.safeTransferFrom(msg.sender,address(this),amount) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#618)
		- (success,returndata) = address(token).call(data) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#561)
	- checkhalve() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#683)
		- safe.mint(address(this),initreward) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#712)
	Event emitted after the call(s):
	- Staked(msg.sender,amount) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#686)
Reentrancy in SAFEDaiPool.withdraw(uint256) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#689-693):
	External calls:
	- super.withdraw(amount) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#691)
		- bpt_safe_dai.safeTransfer(msg.sender,amount) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#624)
		- (success,returndata) = address(token).call(data) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#561)
	Event emitted after the call(s):
	- Withdrawn(msg.sender,amount) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#692)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
SAFEDaiPool.getReward() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#700-707) uses timestamp for comparisons
	Dangerous comparisons:
	- reward > 0 (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#702)
SAFEDaiPool.notifyRewardAmount(uint256) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#725-741) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= periodFinish (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#730)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#442-455) uses assembly
	- INLINE ASM (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#453-454)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#46) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#78) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#237) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#267) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#345) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#425) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#496) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#573) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#596) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#485-491):
	- (success) = recipient.call.value(amount)() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#489)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#549-568):
	- (success,returndata) = address(token).call(data) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#561)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter IRewardDistributionRecipient.setRewardDistribution(address)._rewardDistribution (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#587) is not in mixedCase
Variable LPTokenWrapper.bpt_safe_dai (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#602) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
SAFEDaiPool.starttime (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#633) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
owner() should be declared external:
	- Ownable.owner() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#294-296)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#320-323)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol#329-331)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol analyzed (10 contracts with 46 detectors), 34 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x668d052775ca6f11a07fafe7859db777e253eaf9.sol
Tool Runtime = 1.0649463580011798 seconds
#############################################