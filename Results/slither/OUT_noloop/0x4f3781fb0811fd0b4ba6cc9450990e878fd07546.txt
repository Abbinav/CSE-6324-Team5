INFO:Detectors:[93m
EIP20NonStandardInterface (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#566-582) has incorrect ERC20 function interface:EIP20NonStandardInterface.transfer(address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#572)
EIP20NonStandardInterface (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#566-582) has incorrect ERC20 function interface:EIP20NonStandardInterface.transferFrom(address,address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#574)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
AToken.accrueInterest() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1173-1238) uses a dangerous strict equality:
	- assert(bool)(vars.mathErr == MathError.NO_ERROR) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1189)
AToken.balanceOfUnderlying(address) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#940-945) uses a dangerous strict equality:
	- require(bool)(mErr == MathError.NO_ERROR) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#943)
AToken.borrowBalanceStored(address) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1045-1049) uses a dangerous strict equality:
	- require(bool,string)(err == MathError.NO_ERROR,borrowBalanceStored: borrowBalanceStoredInternal failed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1047)
AToken.borrowFresh(address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1527-1592) uses a dangerous strict equality:
	- require(bool,string)(vars.err == Error.NO_ERROR,borrow transfer out failed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1578)
AToken.borrowRatePerBlock() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#985-989) uses a dangerous strict equality:
	- require(bool,string)(opaqueErr == 0,borrowRatePerBlock: interestRateModel.borrowRate failed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#987)
CarefulMath.divUInt(uint256,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#47-53) uses a dangerous strict equality:
	- b == 0 (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#48)
AToken.exchangeRateStored() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1102-1106) uses a dangerous strict equality:
	- require(bool,string)(err == MathError.NO_ERROR,exchangeRateStored: exchangeRateStoredInternal failed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1104)
AToken.exchangeRateStoredInternal() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1113-1142) uses a dangerous strict equality:
	- totalSupply == 0 (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1114)
Exponential.mulExp(Exponential.Exp,Exponential.Exp) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#446-466) uses a dangerous strict equality:
	- assert(bool)(err2 == MathError.NO_ERROR) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#463)
CarefulMath.mulUInt(uint256,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#30-42) uses a dangerous strict equality:
	- a == 0 (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#31)
AToken.redeemFresh(address,uint256,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1401-1497) uses a dangerous strict equality:
	- require(bool,string)(vars.err == Error.NO_ERROR,redeem transfer out failed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1483)
AToken.repayBorrowFresh(address,address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1642-1719) uses a dangerous strict equality:
	- require(bool,string)(vars.err == Error.NO_ERROR,repay borrow transfer in failed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1705)
AToken.supplyRatePerBlock() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#995-1019) uses a dangerous strict equality:
	- require(bool,string)(e0 == 0,supplyRatePerBlock: calculating borrowRate failed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1004)
AToken.supplyRatePerBlock() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#995-1019) uses a dangerous strict equality:
	- require(bool,string)(e1 == MathError.NO_ERROR,supplyRatePerBlock: calculating underlying failed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1007)
AToken.supplyRatePerBlock() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#995-1019) uses a dangerous strict equality:
	- require(bool,string)(e2 == MathError.NO_ERROR,supplyRatePerBlock: calculating borrowsPer failed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1010)
AToken.supplyRatePerBlock() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#995-1019) uses a dangerous strict equality:
	- require(bool,string)(e3 == MathError.NO_ERROR,supplyRatePerBlock: calculating oneMinusReserveFactor failed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1013)
AToken.supplyRatePerBlock() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#995-1019) uses a dangerous strict equality:
	- require(bool,string)(e4 == MathError.NO_ERROR,supplyRatePerBlock: calculating supplyRate failed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1016)
AToken.transfer(address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#885-887) uses a dangerous strict equality:
	- transferTokens(msg.sender,msg.sender,dst,amount) == uint256(Error.NO_ERROR) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#886)
AToken.transferFrom(address,address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#896-898) uses a dangerous strict equality:
	- transferTokens(msg.sender,src,dst,amount) == uint256(Error.NO_ERROR) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#897)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in AToken.liquidateBorrowInternal(address,uint256,AToken) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1729-1744):
	External calls:
	- error = aTokenCollateral.accrueInterest() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1736)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1743)
		- allowed = controller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1757)
		- allowed = controller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1644)
		- seizeError = aTokenCollateral.seize(liquidator,borrower,seizeTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1805)
		- controller.liquidateBorrowVerify(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount,seizeTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1812)
		- controller.repayBorrowVerify(address(this),payer,borrower,vars.repayAmount,vars.borrowerIndex) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1716)
	State variables written after the call(s):
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1743)
		- totalBorrows = vars.totalBorrowsNew (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1710)
Reentrancy in AToken.redeemFresh(address,uint256,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1401-1497):
	External calls:
	- allowed = controller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1441)
	State variables written after the call(s):
	- totalSupply = vars.totalSupplyNew (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1486)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
AToken.accrueInterest().vars (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1174) is a local variable never initialized
AToken.repayBorrowFresh(address,address,uint256).vars (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1654) is a local variable never initialized
AToken.mintFresh(address,uint256).vars (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1284) is a local variable never initialized
AToken.borrowFresh(address,uint256).vars (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1544) is a local variable never initialized
AToken.redeemFresh(address,uint256,uint256).vars (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1404) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
AErc20._setUnderlying(address) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#2347-2358) ignores return value by EIP20Interface(underlying).totalSupply() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#2355)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in AToken.borrowFresh(address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1527-1592):
	External calls:
	- allowed = controller.borrowAllowed(address(this),borrower,borrowAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1529)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1581)
	- accountBorrows[borrower].interestIndex = borrowIndex (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1582)
	- totalBorrows = vars.totalBorrowsNew (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1583)
Reentrancy in AToken.mintFresh(address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1272-1349):
	External calls:
	- allowed = controller.mintAllowed(address(this),minter,mintAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1274)
	State variables written after the call(s):
	- accountTokens[minter] = vars.accountTokensNew (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1339)
	- totalSupply = vars.totalSupplyNew (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1338)
Reentrancy in AToken.redeemFresh(address,uint256,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1401-1497):
	External calls:
	- allowed = controller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1441)
	State variables written after the call(s):
	- accountTokens[redeemer] = vars.accountTokensNew (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1487)
Reentrancy in AToken.repayBorrowFresh(address,address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1642-1719):
	External calls:
	- allowed = controller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1644)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1708)
	- accountBorrows[borrower].interestIndex = borrowIndex (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1709)
	- totalBorrows = vars.totalBorrowsNew (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1710)
Reentrancy in AToken.seize(address,address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1826-1872):
	External calls:
	- allowed = controller.seizeAllowed(address(this),msg.sender,liquidator,borrower,seizeTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1828)
	State variables written after the call(s):
	- accountTokens[borrower] = borrowerTokensNew (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1862)
	- accountTokens[liquidator] = liquidatorTokensNew (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1863)
Reentrancy in AToken.transferTokens(address,address,address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#817-877):
	External calls:
	- allowed = controller.transferAllowed(address(this),src,dst,tokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#819)
	State variables written after the call(s):
	- accountTokens[src] = srcTokensNew (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#862)
	- accountTokens[dst] = dstTokensNew (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#863)
	- transferAllowances[src][spender] = allowanceNew (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#867)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in AToken.borrowFresh(address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1527-1592):
	External calls:
	- allowed = controller.borrowAllowed(address(this),borrower,borrowAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1529)
	Event emitted after the call(s):
	- Borrow(borrower,borrowAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1586)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1558)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.CONTROLLER_REJECTION,FailureInfo.BORROW_CONTROLLER_REJECTION,allowed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1531)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.BORROW_FRESHNESS_CHECK) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1536)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.BORROW_CASH_NOT_AVAILABLE) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1541)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1563)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1553)
Reentrancy in AToken.liquidateBorrowFresh(address,address,uint256,AToken) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1755-1815):
	External calls:
	- allowed = controller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1757)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.TOKEN_INSUFFICIENT_BALANCE,FailureInfo.LIQUIDATE_SEIZE_TOO_MUCH) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1795)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_FRESHNESS_CHECK) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1764)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.CONTROLLER_REJECTION,FailureInfo.LIQUIDATE_CONTROLLER_REJECTION,allowed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1759)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_ZERO) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1779)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.CONTROLLER_CALCULATION_ERROR,FailureInfo.LIQUIDATE_CONTROLLER_CALCULATE_AMOUNT_SEIZE_FAILED,amountSeizeError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1790)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_COLLATERAL_FRESHNESS_CHECK) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1769)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_LIQUIDATOR_IS_BORROWER) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1774)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1784)
Reentrancy in AToken.liquidateBorrowFresh(address,address,uint256,AToken) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1755-1815):
	External calls:
	- allowed = controller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1757)
	- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1799)
		- allowed = controller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1644)
		- controller.repayBorrowVerify(address(this),payer,borrower,vars.repayAmount,vars.borrowerIndex) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1716)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(TokenErrorReporter.Error(repayBorrowError),FailureInfo.LIQUIDATE_REPAY_BORROW_FRESH_FAILED) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1801)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1799)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1799)
	- RepayBorrow(payer,borrower,vars.repayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1713)
		- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1799)
Reentrancy in AToken.liquidateBorrowFresh(address,address,uint256,AToken) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1755-1815):
	External calls:
	- allowed = controller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1757)
	- repayBorrowError = repayBorrowFresh(liquidator,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1799)
		- allowed = controller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1644)
		- controller.repayBorrowVerify(address(this),payer,borrower,vars.repayAmount,vars.borrowerIndex) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1716)
	- seizeError = aTokenCollateral.seize(liquidator,borrower,seizeTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1805)
	Event emitted after the call(s):
	- LiquidateBorrow(liquidator,borrower,repayAmount,address(aTokenCollateral),seizeTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1809)
Reentrancy in AToken.liquidateBorrowInternal(address,uint256,AToken) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1729-1744):
	External calls:
	- error = aTokenCollateral.accrueInterest() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1736)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(TokenErrorReporter.Error(error),FailureInfo.LIQUIDATE_ACCRUE_COLLATERAL_INTEREST_FAILED) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1739)
Reentrancy in AToken.liquidateBorrowInternal(address,uint256,AToken) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1729-1744):
	External calls:
	- error = aTokenCollateral.accrueInterest() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1736)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1743)
		- allowed = controller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1757)
		- allowed = controller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1644)
		- seizeError = aTokenCollateral.seize(liquidator,borrower,seizeTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1805)
		- controller.liquidateBorrowVerify(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount,seizeTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1812)
		- controller.repayBorrowVerify(address(this),payer,borrower,vars.repayAmount,vars.borrowerIndex) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1716)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1743)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1743)
	- LiquidateBorrow(liquidator,borrower,repayAmount,address(aTokenCollateral),seizeTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1809)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1743)
	- RepayBorrow(payer,borrower,vars.repayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1713)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1743)
Reentrancy in AToken.mintFresh(address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1272-1349):
	External calls:
	- allowed = controller.mintAllowed(address(this),minter,mintAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1274)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.MINT_FRESHNESS_CHECK) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1281)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.MATH_ERROR,FailureInfo.MINT_EXCHANGE_RATE_READ_FAILED,uint256(vars.mathErr)) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1298)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.MATH_ERROR,FailureInfo.MINT_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,uint256(vars.mathErr)) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1313)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.CONTROLLER_REJECTION,FailureInfo.MINT_CONTROLLER_REJECTION,allowed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1276)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(vars.err,FailureInfo.MINT_TRANSFER_IN_NOT_POSSIBLE) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1289)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(vars.err,FailureInfo.MINT_TRANSFER_IN_FAILED) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1334)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.MATH_ERROR,FailureInfo.MINT_EXCHANGE_CALCULATION_FAILED,uint256(vars.mathErr)) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1303)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.MATH_ERROR,FailureInfo.MINT_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1318)
	- Mint(minter,mintAmount,vars.mintTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1342)
	- Transfer(address(this),minter,vars.mintTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1343)
Reentrancy in AToken.redeemFresh(address,uint256,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1401-1497):
	External calls:
	- allowed = controller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1441)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,uint256(vars.mathErr)) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1458)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1463)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.REDEEM_TRANSFER_OUT_NOT_POSSIBLE) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1468)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.REDEEM_FRESHNESS_CHECK) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1448)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.CONTROLLER_REJECTION,FailureInfo.REDEEM_CONTROLLER_REJECTION,allowed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1443)
	- Redeem(redeemer,vars.redeemAmount,vars.redeemTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1491)
	- Transfer(redeemer,address(this),vars.redeemTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1490)
Reentrancy in AToken.repayBorrowFresh(address,address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1642-1719):
	External calls:
	- allowed = controller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1644)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1662)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(vars.err,FailureInfo.REPAY_BORROW_TRANSFER_IN_NOT_POSSIBLE) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1675)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REPAY_BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1685)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.CONTROLLER_REJECTION,FailureInfo.REPAY_BORROW_CONTROLLER_REJECTION,allowed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1646)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.REPAY_BORROW_FRESHNESS_CHECK) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1651)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REPAY_BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1690)
	- RepayBorrow(payer,borrower,vars.repayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1713)
Reentrancy in AToken.seize(address,address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1826-1872):
	External calls:
	- allowed = controller.seizeAllowed(address(this),msg.sender,liquidator,borrower,seizeTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1828)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.MATH_ERROR,FailureInfo.LIQUIDATE_SEIZE_BALANCE_DECREMENT_FAILED,uint256(mathErr)) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1849)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.MATH_ERROR,FailureInfo.LIQUIDATE_SEIZE_BALANCE_INCREMENT_FAILED,uint256(mathErr)) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1854)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.CONTROLLER_REJECTION,FailureInfo.LIQUIDATE_SEIZE_CONTROLLER_REJECTION,allowed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1830)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_SEIZE_LIQUIDATOR_IS_BORROWER) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1835)
	- Transfer(borrower,liquidator,seizeTokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1866)
Reentrancy in AToken.transferTokens(address,address,address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#817-877):
	External calls:
	- allowed = controller.transferAllowed(address(this),src,dst,tokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#819)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.MATH_ERROR,FailureInfo.TRANSFER_NOT_ENOUGH) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#850)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.MATH_ERROR,FailureInfo.TRANSFER_TOO_MUCH) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#855)
	- Failure(uint256(err),uint256(info),opaqueError) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#238)
		- failOpaque(Error.CONTROLLER_REJECTION,FailureInfo.TRANSFER_CONTROLLER_REJECTION,allowed) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#821)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.BAD_INPUT,FailureInfo.TRANSFER_NOT_ALLOWED) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#826)
	- Failure(uint256(err),uint256(info),0) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#232)
		- fail(Error.MATH_ERROR,FailureInfo.TRANSFER_NOT_ALLOWED) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#845)
	- Transfer(src,dst,tokens) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#871)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
AErc20.doTransferIn(address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#2282-2308) uses assembly
	- INLINE ASM (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#2289-2303)
AErc20.doTransferOut(address,uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#2319-2345) uses assembly
	- INLINE ASM (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#2326-2340)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#5) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Constant Exponential.expScale (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#350) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.halfExpScale (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#351) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.mantissaOne (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#352) is not in UPPER_CASE_WITH_UNDERSCORES
Function AToken._setPendingAdmin(address) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1885-1901) is not in mixedCase
Function AToken._acceptAdmin() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1908-1928) is not in mixedCase
Function AToken._setController(ControllerInterface) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1935-1953) is not in mixedCase
Function AToken._setReserveFactor(uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1960-1968) is not in mixedCase
Function AToken._reduceReserves(uint256) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#2005-2013) is not in mixedCase
Function AToken._setInterestRateModel(InterestRateModel) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#2075-2083) is not in mixedCase
Function AToken._setInterestRateModel_init(InterestRateModel) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#2085-2092) is not in mixedCase
Constant AToken.isAToken (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#629) is not in UPPER_CASE_WITH_UNDERSCORES
Constant AToken.borrowRateMaxMantissa (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#649) is not in UPPER_CASE_WITH_UNDERSCORES
Constant AToken.reserveFactorMaxMantissa (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#654) is not in UPPER_CASE_WITH_UNDERSCORES
Function AErc20._setUnderlying(address) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#2347-2358) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
AToken.constructor() (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#802-815) uses literals with too many digits:
	- initialExchangeRateMantissa = uint256(200000000000000000000000000) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#806)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
_setController(ControllerInterface) should be declared external:
	- AToken._setController(ControllerInterface) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#1935-1953)
_setInterestRateModel(InterestRateModel) should be declared external:
	- AToken._setInterestRateModel(InterestRateModel) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#2075-2083)
_setInterestRateModel_init(InterestRateModel) should be declared external:
	- AToken._setInterestRateModel_init(InterestRateModel) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#2085-2092)
_setUnderlying(address) should be declared external:
	- AErc20._setUnderlying(address) (noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol#2347-2358)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol analyzed (11 contracts with 46 detectors), 69 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol
Tool Runtime = 27.908673031000944 seconds
#############################################