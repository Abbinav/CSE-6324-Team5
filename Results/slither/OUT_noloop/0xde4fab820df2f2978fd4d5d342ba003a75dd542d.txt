Compilation warnings/errors on ./noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol:
./noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol:282:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[92m
ERC20.constructor(string,string,uint256,uint256,uint256).name (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#832) shadows:
	- ERC20.name() (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#858-862) (function)
ERC20.constructor(string,string,uint256,uint256,uint256).symbol (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#832) shadows:
	- ERC20.symbol() (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#882-886) (function)
ERC20.constructor(string,string,uint256,uint256,uint256).decimals (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#832) shadows:
	- ERC20.decimals() (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#916-920) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#268-286) uses assembly
	- INLINE ASM (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#282-284)
Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#454-496) uses assembly
	- INLINE ASM (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#480-488)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#50) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#322-334):
	- (success) = recipient.call.value(amount)() (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#330)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#454-496):
	- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#462)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
owner() should be declared external:
	- Ownable.owner() (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#708-712)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#746-752)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#764-772)
name() should be declared external:
	- ERC20.name() (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#858-862)
breakthebank() should be declared external:
	- ERC20.breakthebank() (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#866-870)
symbol() should be declared external:
	- ERC20.symbol() (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#882-886)
decimals() should be declared external:
	- ERC20.decimals() (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#916-920)
totalSupply() should be declared external:
	- ERC20.totalSupply() (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#930-934)
burnedSupply() should be declared external:
	- ERC20.burnedSupply() (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#944-948)
burnRate() should be declared external:
	- ERC20.burnRate() (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#958-962)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#972-976)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#996-1002)
burn(uint256) should be declared external:
	- ERC20.burn(uint256) (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#1006-1012)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#1016-1020)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#1024-1030)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#1034-1042)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#1046-1052)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol#1056-1062)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol analyzed (8 contracts with 46 detectors), 27 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol
Tool Runtime = 1.2002668820023246 seconds
#############################################