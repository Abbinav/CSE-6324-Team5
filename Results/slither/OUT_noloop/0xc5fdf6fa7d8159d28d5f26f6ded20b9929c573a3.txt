Compilation warnings/errors on ./noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol:
./noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol:132:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[92m
ERC20.constructor(string,string,uint256,uint256,uint256).name (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#407) shadows:
	- ERC20.name() (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#420-422) (function)
ERC20.constructor(string,string,uint256,uint256,uint256).symbol (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#407) shadows:
	- ERC20.symbol() (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#432-434) (function)
ERC20.constructor(string,string,uint256,uint256,uint256).decimals (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#407) shadows:
	- ERC20.decimals() (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#449-451) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#125-134) uses assembly
	- INLINE ASM (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#132-133)
Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#218-239) uses assembly
	- INLINE ASM (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#231-235)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#16) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#152-158):
	- (success) = recipient.call.value(amount)() (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#156)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#218-239):
	- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#222)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
owner() should be declared external:
	- Ownable.owner() (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#345-347)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#364-367)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#373-377)
name() should be declared external:
	- ERC20.name() (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#420-422)
breakthebank() should be declared external:
	- ERC20.breakthebank() (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#424-426)
symbol() should be declared external:
	- ERC20.symbol() (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#432-434)
decimals() should be declared external:
	- ERC20.decimals() (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#449-451)
totalSupply() should be declared external:
	- ERC20.totalSupply() (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#456-458)
burnedSupply() should be declared external:
	- ERC20.burnedSupply() (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#463-465)
burnRate() should be declared external:
	- ERC20.burnRate() (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#470-472)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#477-479)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#489-492)
burn(uint256) should be declared external:
	- ERC20.burn(uint256) (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#494-497)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#499-501)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#503-506)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#508-512)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#514-517)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol#519-522)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol analyzed (8 contracts with 46 detectors), 27 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol
Tool Runtime = 1.0144914319971576 seconds
#############################################