Compilation warnings/errors on ./noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol:
./noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol:316:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[92m
ERC20.constructor(string,string).name (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#487) shadows:
	- ERC20.name() (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#496-498) (function)
ERC20.constructor(string,string).symbol (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#487) shadows:
	- ERC20.symbol() (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#504-506) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#309-318) uses assembly
	- INLINE ASM (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#316-317)
Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#404-427) uses assembly
	- INLINE ASM (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#419-423)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#17) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#44) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#124) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#286) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#434) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#743) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#783) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#336-344):
	- (success) = recipient.call.value(amount)() (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#342)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#404-427):
	- (success,returndata) = target.call.value(weiValue)(data) (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#410)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
KayaFinance.constructor() (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#789-791) uses literals with too many digits:
	- _mint(msg.sender,12000000 * (10 ** uint256(decimals()))) (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#790)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
name() should be declared external:
	- ERC20.name() (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#496-498)
symbol() should be declared external:
	- ERC20.symbol() (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#504-506)
totalSupply() should be declared external:
	- ERC20.totalSupply() (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#528-530)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#535-537)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#547-550)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#566-569)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#583-587)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#601-604)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#620-623)
burn(uint256) should be declared external:
	- ERC20Burnable.burn(uint256) (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#758-760)
burnFrom(address,uint256) should be declared external:
	- ERC20Burnable.burnFrom(address,uint256) (noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol#773-778)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0x0713c9b4177005413e020e2c48711f81697884b3.sol analyzed (7 contracts with 46 detectors), 26 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x0713c9b4177005413e020e2c48711f81697884b3.sol
Tool Runtime = 1.1602959749980073 seconds
#############################################