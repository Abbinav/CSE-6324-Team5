INFO:Detectors:[93m
TokenLockerII.lockToken(address,uint256,uint256) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#70-75) uses a dangerous strict equality:
	- require(bool,string)(ERC20Token(tokenAddress).balanceOf(address(this)) == 0,tokenAddressUsed) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#71)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Contract locking ether found in :
	Contract TokenLockerII (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#53-83) has payable functions:
	 - TokenLockerII.fallback() (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#66-68)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
TokenLockerII.lockToken(address,uint256,uint256) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#70-75) ignores return value by ERC20Token(tokenAddress).transferFrom(address(msg.sender),address(this),lockQty) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#72)
TokenLockerII.unlockToken(address,uint256) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#77-81) ignores return value by ERC20Token(lockedTokensData[msg.sender][tokenAddress].tokenAddress).approve(address(this),withdrawAmount) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#79)
TokenLockerII.unlockToken(address,uint256) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#77-81) ignores return value by ERC20Token(lockedTokensData[msg.sender][tokenAddress].tokenAddress).transferFrom(address(this),address(msg.sender),withdrawAmount) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#80)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in TokenLockerII.lockToken(address,uint256,uint256) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#70-75):
	External calls:
	- require(bool,string)(ERC20Token(tokenAddress).balanceOf(address(this)) == 0,tokenAddressUsed) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#71)
	- ERC20Token(tokenAddress).transferFrom(address(msg.sender),address(this),lockQty) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#72)
	State variables written after the call(s):
	- lockedTokensData[msg.sender][tokenAddress] = lockedTokenSlot(tokenAddress,finishTime) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#74)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
TokenLockerII.unlockToken(address,uint256) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#77-81) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(lockedTokensData[msg.sender][tokenAddress].unlockTime <= now,timeNotElapsed) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#78)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#9) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Struct TokenLockerII.lockedTokenSlot (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#61-64) is not in CapWords
Variable TokenLockerII.ONE_DAY (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#57) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
TokenLockerII.ONE_DAY (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#57) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- ERC20Token.totalSupply() (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#45)
approve(address,uint256) should be declared external:
	- ERC20Token.approve(address,uint256) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#46)
balanceOf(address) should be declared external:
	- ERC20Token.balanceOf(address) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#47)
transferFrom(address,address,uint256) should be declared external:
	- ERC20Token.transferFrom(address,address,uint256) (noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol#48)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0x30763939b717Efe725d0E221D77237BC419E4732.sol analyzed (3 contracts with 46 detectors), 16 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x30763939b717Efe725d0E221D77237BC419E4732.sol
Tool Runtime = 0.47772940999857383 seconds
#############################################