INFO:Detectors:[91m
SPIClub.ambassadors_ (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#77) is never initialized. It is used in:
SPIClub.stakingRequirement (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#159) is never initialized. It is used in:
	- SPIClub.purchaseTokens(address,address,uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#338-379)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
SPIClub.sell(uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#221-240) performs a multiplication on the result of a division:
	-_dividends = SafeMath.div(SafeMath.mul(_amountOfTokens,exitFee_),100) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#225)
	-profitPerShare_ = SafeMath.add(profitPerShare_,(_dividends * magnitude) / tokenSupply_) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#235)
SPIClub.transfer(address,uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#242-267) performs a multiplication on the result of a division:
	-_tokenFee = SafeMath.div(SafeMath.mul(_amountOfTokens,transferFee_),100) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#250)
	-_dividends = _tokenFee (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#252)
	-profitPerShare_ = SafeMath.add(profitPerShare_,(_dividends * magnitude) / tokenSupply_) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#262)
SPIClub.purchaseTokens(address,address,uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#338-379) performs a multiplication on the result of a division:
	-_undividedDividends = SafeMath.div(SafeMath.mul(_incomingSTAT,entryFee_),100) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#345)
	-_referralBonus = SafeMath.div(SafeMath.mul(_undividedDividends,referralFee_),100) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#347)
SPIClub.purchaseTokens(address,address,uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#338-379) performs a multiplication on the result of a division:
	-_fee = _fee - (_fee - (_amountOfTokens * (_dividends * magnitude / tokenSupply_))) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#365)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
Contract locking ether found in :
	Contract SPIClub (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#75-396) has payable functions:
	 - SPIClub.fallback() (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#190-192)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in SPIClub.transfer(address,uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#242-267):
	External calls:
	- withdraw() (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#247)
		- erc20.transfer(_customerAddress,_dividends) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#217)
	State variables written after the call(s):
	- payoutsTo_[_customerAddress] -= int256(profitPerShare_ * _amountOfTokens) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#259)
	- payoutsTo_[_toAddress] += int256(profitPerShare_ * _taxedTokens) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#260)
	- profitPerShare_ = SafeMath.add(profitPerShare_,(_dividends * magnitude) / tokenSupply_) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#262)
	- tokenBalanceLedger_[_customerAddress] = SafeMath.sub(tokenBalanceLedger_[_customerAddress],_amountOfTokens) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#256)
	- tokenBalanceLedger_[_toAddress] = SafeMath.add(tokenBalanceLedger_[_toAddress],_taxedTokens) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#257)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
SPIClub.withdraw() (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#211-219) ignores return value by erc20.transfer(_customerAddress,_dividends) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#217)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in SPIClub.buy(uint256,address) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#180-183):
	External calls:
	- checkAndTransferSTAT(_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#181)
		- require(bool,string)(erc20.transferFrom(msg.sender,address(this),_amount) == true,transfer must succeed) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#169)
	State variables written after the call(s):
	- purchaseTokens(_referredBy,msg.sender,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#182)
		- ambassadorAccumulatedQuota_[_customerAddress] = SafeMath.add(ambassadorAccumulatedQuota_[_customerAddress],_amountOfSTAT) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#90)
	- purchaseTokens(_referredBy,msg.sender,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#182)
		- invested_[msg.sender] += _incomingSTAT (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#343)
	- purchaseTokens(_referredBy,msg.sender,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#182)
		- onlyAmbassadors = false (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#85)
		- onlyAmbassadors = false (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#93)
	- purchaseTokens(_referredBy,msg.sender,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#182)
		- payoutsTo_[_customerAddress] += _updatedPayouts (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#373)
	- purchaseTokens(_referredBy,msg.sender,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#182)
		- profitPerShare_ += (_dividends * magnitude / tokenSupply_) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#364)
	- purchaseTokens(_referredBy,msg.sender,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#182)
		- referralBalance_[_referredBy] = SafeMath.add(referralBalance_[_referredBy],_referralBonus) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#356)
	- purchaseTokens(_referredBy,msg.sender,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#182)
		- tokenBalanceLedger_[_customerAddress] = SafeMath.add(tokenBalanceLedger_[_customerAddress],_amountOfTokens) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#370)
	- purchaseTokens(_referredBy,msg.sender,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#182)
		- tokenSupply_ = SafeMath.add(tokenSupply_,_amountOfTokens) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#363)
		- tokenSupply_ = _amountOfTokens (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#367)
	- purchaseTokens(_referredBy,msg.sender,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#182)
		- totalHolder ++ (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#340)
Reentrancy in SPIClub.buyFor(uint256,address,address) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#185-188):
	External calls:
	- checkAndTransferSTAT(_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#186)
		- require(bool,string)(erc20.transferFrom(msg.sender,address(this),_amount) == true,transfer must succeed) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#169)
	State variables written after the call(s):
	- purchaseTokens(_referredBy,_customerAddress,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#187)
		- ambassadorAccumulatedQuota_[_customerAddress] = SafeMath.add(ambassadorAccumulatedQuota_[_customerAddress],_amountOfSTAT) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#90)
	- purchaseTokens(_referredBy,_customerAddress,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#187)
		- invested_[msg.sender] += _incomingSTAT (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#343)
	- purchaseTokens(_referredBy,_customerAddress,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#187)
		- onlyAmbassadors = false (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#85)
		- onlyAmbassadors = false (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#93)
	- purchaseTokens(_referredBy,_customerAddress,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#187)
		- payoutsTo_[_customerAddress] += _updatedPayouts (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#373)
	- purchaseTokens(_referredBy,_customerAddress,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#187)
		- profitPerShare_ += (_dividends * magnitude / tokenSupply_) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#364)
	- purchaseTokens(_referredBy,_customerAddress,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#187)
		- referralBalance_[_referredBy] = SafeMath.add(referralBalance_[_referredBy],_referralBonus) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#356)
	- purchaseTokens(_referredBy,_customerAddress,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#187)
		- tokenBalanceLedger_[_customerAddress] = SafeMath.add(tokenBalanceLedger_[_customerAddress],_amountOfTokens) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#370)
	- purchaseTokens(_referredBy,_customerAddress,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#187)
		- tokenSupply_ = SafeMath.add(tokenSupply_,_amountOfTokens) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#363)
		- tokenSupply_ = _amountOfTokens (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#367)
	- purchaseTokens(_referredBy,_customerAddress,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#187)
		- totalHolder ++ (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#340)
Reentrancy in SPIClub.distribute(uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#172-178):
	External calls:
	- checkAndTransferSTAT(_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#174)
		- require(bool,string)(erc20.transferFrom(msg.sender,address(this),_amount) == true,transfer must succeed) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#169)
	State variables written after the call(s):
	- profitPerShare_ = SafeMath.add(profitPerShare_,(_amount * magnitude) / tokenSupply_) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#176)
	- totalDonation += _amount (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#175)
Reentrancy in SPIClub.transfer(address,uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#242-267):
	External calls:
	- withdraw() (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#247)
		- erc20.transfer(_customerAddress,_dividends) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#217)
	State variables written after the call(s):
	- tokenSupply_ = SafeMath.sub(tokenSupply_,_tokenFee) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#254)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in SPIClub.buy(uint256,address) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#180-183):
	External calls:
	- checkAndTransferSTAT(_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#181)
		- require(bool,string)(erc20.transferFrom(msg.sender,address(this),_amount) == true,transfer must succeed) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#169)
	Event emitted after the call(s):
	- Transfer(address(0),msg.sender,_amountOfTokens) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#375)
		- purchaseTokens(_referredBy,msg.sender,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#182)
	- onTokenPurchase(_customerAddress,_incomingSTAT,_amountOfTokens,_referredBy,now) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#376)
		- purchaseTokens(_referredBy,msg.sender,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#182)
Reentrancy in SPIClub.buyFor(uint256,address,address) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#185-188):
	External calls:
	- checkAndTransferSTAT(_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#186)
		- require(bool,string)(erc20.transferFrom(msg.sender,address(this),_amount) == true,transfer must succeed) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#169)
	Event emitted after the call(s):
	- Transfer(address(0),msg.sender,_amountOfTokens) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#375)
		- purchaseTokens(_referredBy,_customerAddress,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#187)
	- onTokenPurchase(_customerAddress,_incomingSTAT,_amountOfTokens,_referredBy,now) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#376)
		- purchaseTokens(_referredBy,_customerAddress,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#187)
Reentrancy in SPIClub.distribute(uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#172-178):
	External calls:
	- checkAndTransferSTAT(_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#174)
		- require(bool,string)(erc20.transferFrom(msg.sender,address(this),_amount) == true,transfer must succeed) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#169)
	Event emitted after the call(s):
	- onDistribute(msg.sender,_amount) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#177)
Reentrancy in SPIClub.transfer(address,uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#242-267):
	External calls:
	- withdraw() (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#247)
		- erc20.transfer(_customerAddress,_dividends) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#217)
	Event emitted after the call(s):
	- Transfer(_customerAddress,_toAddress,_taxedTokens) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#264)
Reentrancy in SPIClub.withdraw() (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#211-219):
	External calls:
	- erc20.transfer(_customerAddress,_dividends) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#217)
	Event emitted after the call(s):
	- onWithdraw(_customerAddress,_dividends) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#218)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
SPIClub.checkAndTransferSTAT(uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#168-170) compares to a boolean constant:
	-require(bool,string)(erc20.transferFrom(msg.sender,address(this),_amount) == true,transfer must succeed) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#169)
SPIClub.antiEarlyWhale(uint256,address) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#83-96) compares to a boolean constant:
	-require(bool)((ambassadors_[_customerAddress] == true && (ambassadorAccumulatedQuota_[_customerAddress] + _amountOfSTAT) <= ambassadorMaxPurchase_)) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#89)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#19) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Event SPIClubonDistribute(address,uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#108-111) is not in CapWords
Event SPIClubonTokenPurchase(address,uint256,uint256,address,uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#113-119) is not in CapWords
Event SPIClubonTokenSell(address,uint256,uint256,uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#121-126) is not in CapWords
Event SPIClubonReinvestment(address,uint256,uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#128-132) is not in CapWords
Event SPIClubonWithdraw(address,uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#134-137) is not in CapWords
Parameter SPIClub.checkAndTransferSTAT(uint256)._amount (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#168) is not in mixedCase
Parameter SPIClub.distribute(uint256)._amount (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#172) is not in mixedCase
Parameter SPIClub.buy(uint256,address)._amount (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#180) is not in mixedCase
Parameter SPIClub.buy(uint256,address)._referredBy (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#180) is not in mixedCase
Parameter SPIClub.buyFor(uint256,address,address)._amount (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#185) is not in mixedCase
Parameter SPIClub.buyFor(uint256,address,address)._customerAddress (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#185) is not in mixedCase
Parameter SPIClub.buyFor(uint256,address,address)._referredBy (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#185) is not in mixedCase
Parameter SPIClub.sell(uint256)._amountOfTokens (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#221) is not in mixedCase
Parameter SPIClub.transfer(address,uint256)._toAddress (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#242) is not in mixedCase
Parameter SPIClub.transfer(address,uint256)._amountOfTokens (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#242) is not in mixedCase
Parameter SPIClub.setName(string)._name (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#269) is not in mixedCase
Parameter SPIClub.setSymbol(string)._symbol (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#273) is not in mixedCase
Parameter SPIClub.myDividends(bool)._includeReferralBonus (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#290) is not in mixedCase
Parameter SPIClub.balanceOf(address)._customerAddress (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#295) is not in mixedCase
Parameter SPIClub.dividendsOf(address)._customerAddress (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#299) is not in mixedCase
Parameter SPIClub.calculateTokensReceived(uint256)._powerToSpend (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#319) is not in mixedCase
Parameter SPIClub.calculatePowerReceived(uint256)._tokensToSell (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#326) is not in mixedCase
Parameter SPIClub.purchaseTokens(address,address,uint256)._referredBy (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#338) is not in mixedCase
Parameter SPIClub.purchaseTokens(address,address,uint256)._customerAddress (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#338) is not in mixedCase
Parameter SPIClub.purchaseTokens(address,address,uint256)._incomingSTAT (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#338) is not in mixedCase
Constant SPIClub.ambassadorMaxPurchase_ (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#78) is not in UPPER_CASE_WITH_UNDERSCORES
Variable SPIClub.ACTIVATION_TIME (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#81) is not in mixedCase
Constant SPIClub.magnitude (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#152) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
SPIClub.ACTIVATION_TIME (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#81) should be constant
SPIClub.entryFee_ (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#148) should be constant
SPIClub.exitFee_ (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#150) should be constant
SPIClub.referralFee_ (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#151) should be constant
SPIClub.stakingRequirement (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#159) should be constant
SPIClub.transferFee_ (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#149) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#68-72)
distribute(uint256) should be declared external:
	- SPIClub.distribute(uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#172-178)
buy(uint256,address) should be declared external:
	- SPIClub.buy(uint256,address) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#180-183)
buyFor(uint256,address,address) should be declared external:
	- SPIClub.buyFor(uint256,address,address) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#185-188)
reinvest() should be declared external:
	- SPIClub.reinvest() (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#194-202)
setName(string) should be declared external:
	- SPIClub.setName(string) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#269-271)
setSymbol(string) should be declared external:
	- SPIClub.setSymbol(string) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#273-275)
calculateTokensReceived(uint256) should be declared external:
	- SPIClub.calculateTokensReceived(uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#319-324)
calculatePowerReceived(uint256) should be declared external:
	- SPIClub.calculatePowerReceived(uint256) (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#326-332)
multiData() should be declared external:
	- SPIClub.multiData() (noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol#381-395)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol analyzed (4 contracts with 46 detectors), 66 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol
Tool Runtime = 1.4208007899978838 seconds
#############################################