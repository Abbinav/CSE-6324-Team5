INFO:Detectors:[92m
ERC20Detailed.constructor(string,string,uint8).name (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#277) shadows:
	- ERC20Detailed.name() (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#286-288) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#277) shadows:
	- ERC20Detailed.symbol() (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#293-295) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#277) shadows:
	- ERC20Detailed.decimals() (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#300-302) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#14) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
SimpleToken.slitherConstructorConstantVariables() (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#324-334) uses literals with too many digits:
	- INITIAL_SUPPLY = 100000000000 * (10 ** uint256(DECIMALS)) (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#326)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- ERC20.totalSupply() (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#110-112)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#119-121)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#129-131)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#138-141)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#152-155)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#165-169)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#181-184)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#196-199)
name() should be declared external:
	- ERC20Detailed.name() (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#286-288)
symbol() should be declared external:
	- ERC20Detailed.symbol() (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#293-295)
decimals() should be declared external:
	- ERC20Detailed.decimals() (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#300-302)
burn(uint256) should be declared external:
	- ERC20Burnable.burn(uint256) (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#310-312)
burnFrom(address,uint256) should be declared external:
	- ERC20Burnable.burnFrom(address,uint256) (noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol#319-321)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0xa59e980145a70515a51b96e14127b3ae11e36242.sol analyzed (6 contracts with 46 detectors), 19 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xa59e980145a70515a51b96e14127b3ae11e36242.sol
Tool Runtime = 0.8172478269989369 seconds
#############################################