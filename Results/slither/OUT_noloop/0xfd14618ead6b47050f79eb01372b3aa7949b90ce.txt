INFO:Detectors:[93m
Bethero.mint() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#574-581) performs a multiplication on the result of a division:
	-amountToMint = (msg.value.div(priceInWei)) * _decs (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#576)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[92m
Bethero.constructor(string,string,uint8).name (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#456) shadows:
	- Bethero.name() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#481-483) (function)
Bethero.constructor(string,string,uint8).symbol (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#456) shadows:
	- Bethero.symbol() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#488-490) (function)
Bethero.constructor(string,string,uint8).decimals (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#456) shadows:
	- Bethero.decimals() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#495-497) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Bethero.unlockTeamFunds() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#559-567) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp > 1631664061,Wait until 15/9/2021) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#561)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Bethero.endIco() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#510-514) compares to a boolean constant:
	-require(bool,string)(minting == true,Ico is already ended) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#511)
Bethero.unlockUniswapLiq() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#520-527) compares to a boolean constant:
	-require(bool,string)(uniswapLocked == true,Already unlocked.) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#522)
Bethero.unlockAudits() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#533-540) compares to a boolean constant:
	-require(bool,string)(auditsLocked == true,Already unlocked.) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#535)
Bethero.unlockTeamFunds() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#559-567) compares to a boolean constant:
	-require(bool,string)(teamLocked == true,Already unlocked.) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#562)
Bethero.mint() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#574-581) compares to a boolean constant:
	-require(bool,string)(minting == true,Ico ended.) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#575)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#5) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#9) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#89) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#200) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#429) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Variable Bethero._tokenOwnerAddress (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#440) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Bethero.constructor(string,string,uint8) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#456-465) uses literals with too many digits:
	- _mint(msg.sender,(15500000 * _decs)) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#463)
Bethero.constructor(string,string,uint8) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#456-465) uses literals with too many digits:
	- _mint(address(this),(49500000 * _decs)) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#464)
Bethero.unlockUniswapLiq() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#520-527) uses literals with too many digits:
	- _burn(address(this),(35000000 * _decs)) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#523)
Bethero.unlockUniswapLiq() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#520-527) uses literals with too many digits:
	- _mint(_tokenOwnerAddress,(35000000 * _decs)) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#524)
Bethero.unlockAudits() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#533-540) uses literals with too many digits:
	- _burn(address(this),(1000000 * _decs)) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#536)
Bethero.unlockAudits() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#533-540) uses literals with too many digits:
	- _mint(_tokenOwnerAddress,(1000000 * _decs)) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#537)
Bethero.unlockMarketing() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#546-553) uses literals with too many digits:
	- _burn(address(this),(500000 * _decs)) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#549)
Bethero.unlockMarketing() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#546-553) uses literals with too many digits:
	- _mint(_tokenOwnerAddress,(500000 * _decs)) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#550)
Bethero.unlockTeamFunds() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#559-567) uses literals with too many digits:
	- _burn(address(this),(2000000 * _decs)) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#563)
Bethero.unlockTeamFunds() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#559-567) uses literals with too many digits:
	- _mint(_tokenOwnerAddress,(2000000 * _decs)) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#564)
Bethero.mint() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#574-581) uses literals with too many digits:
	- require(bool,string)((amountToMint + _issued) <= (35000000 * _decs),Max supply is 100 Million.) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#577)
Bethero.slitherConstructorVariables() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#435-592) uses literals with too many digits:
	- priceInWei = 25000000000000 (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#441)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
Bethero.priceInWei (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#441) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- ERC20.totalSupply() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#240-242)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#247-249)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#259-262)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#267-269)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#278-281)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#295-299)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#313-316)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#332-335)
burn(uint256) should be declared external:
	- Bethero.burn(uint256) (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#472-474)
name() should be declared external:
	- Bethero.name() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#481-483)
symbol() should be declared external:
	- Bethero.symbol() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#488-490)
decimals() should be declared external:
	- Bethero.decimals() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#495-497)
getOwner() should be declared external:
	- Bethero.getOwner() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#502-504)
endIco() should be declared external:
	- Bethero.endIco() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#510-514)
unlockUniswapLiq() should be declared external:
	- Bethero.unlockUniswapLiq() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#520-527)
unlockAudits() should be declared external:
	- Bethero.unlockAudits() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#533-540)
unlockMarketing() should be declared external:
	- Bethero.unlockMarketing() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#546-553)
unlockTeamFunds() should be declared external:
	- Bethero.unlockTeamFunds() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#559-567)
mint() should be declared external:
	- Bethero.mint() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#574-581)
withdraw() should be declared external:
	- Bethero.withdraw() (noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol#587-590)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol analyzed (4 contracts with 46 detectors), 50 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol
Tool Runtime = 0.8436408280031173 seconds
#############################################