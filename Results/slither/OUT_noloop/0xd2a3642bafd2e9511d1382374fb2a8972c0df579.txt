Compilation warnings/errors on ./noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol:
./noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol:276:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[92m
ERC20.constructor(string,string).name (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#410) shadows:
	- ERC20.name() (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#419-421) (function)
ERC20.constructor(string,string).symbol (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#410) shadows:
	- ERC20.symbol() (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#427-429) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#269-278) uses assembly
	- INLINE ASM (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#276-277)
Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#362-383) uses assembly
	- INLINE ASM (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#375-379)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#5) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#296-302):
	- (success) = recipient.call.value(amount)() (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#300)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#362-383):
	- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#366)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter YFN.supply(address,uint256)._to (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#729) is not in mixedCase
Parameter YFN.supply(address,uint256)._amount (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#729) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
name() should be declared external:
	- ERC20.name() (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#419-421)
symbol() should be declared external:
	- ERC20.symbol() (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#427-429)
decimals() should be declared external:
	- ERC20.decimals() (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#444-446)
totalSupply() should be declared external:
	- ERC20.totalSupply() (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#451-453)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#458-460)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#470-473)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#478-480)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#489-492)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#506-510)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#524-527)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#543-546)
owner() should be declared external:
	- Ownable.owner() (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#692-694)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#711-714)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#720-724)
supply(address,uint256) should be declared external:
	- YFN.supply(address,uint256) (noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol#729-731)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol analyzed (7 contracts with 46 detectors), 25 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol
Tool Runtime = 0.9322740660027193 seconds
#############################################