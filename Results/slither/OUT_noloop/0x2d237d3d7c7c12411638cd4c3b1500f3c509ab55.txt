Compilation warnings/errors on ./noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol:
./noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol:268:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[92m
ERC20.constructor(string,string,uint256,uint256,uint256).name (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#818) shadows:
	- ERC20.name() (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#844-848) (function)
ERC20.constructor(string,string,uint256,uint256,uint256).symbol (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#818) shadows:
	- ERC20.symbol() (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#868-872) (function)
ERC20.constructor(string,string,uint256,uint256,uint256).decimals (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#818) shadows:
	- ERC20.decimals() (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#902-906) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#254-272) uses assembly
	- INLINE ASM (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#268-270)
Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#440-482) uses assembly
	- INLINE ASM (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#466-474)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#36) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#308-320):
	- (success) = recipient.call.value(amount)() (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#316)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#440-482):
	- (success,returndata) = target.call.value(weiValue)(data) (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#448)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function ERC20.FMALE() (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#852-856) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
owner() should be declared external:
	- Ownable.owner() (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#694-698)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#732-738)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#750-758)
name() should be declared external:
	- ERC20.name() (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#844-848)
FMALE() should be declared external:
	- ERC20.FMALE() (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#852-856)
symbol() should be declared external:
	- ERC20.symbol() (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#868-872)
decimals() should be declared external:
	- ERC20.decimals() (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#902-906)
totalSupply() should be declared external:
	- ERC20.totalSupply() (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#916-920)
burnedSupply() should be declared external:
	- ERC20.burnedSupply() (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#930-934)
burnRate() should be declared external:
	- ERC20.burnRate() (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#944-948)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#958-962)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#982-988)
burn(uint256) should be declared external:
	- ERC20.burn(uint256) (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#992-998)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#1002-1006)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#1010-1016)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#1020-1028)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#1032-1038)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol#1042-1048)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol analyzed (8 contracts with 46 detectors), 28 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol
Tool Runtime = 1.1801137190013833 seconds
#############################################