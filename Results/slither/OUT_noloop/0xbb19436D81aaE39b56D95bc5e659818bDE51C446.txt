Compilation warnings/errors on ./noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol:
./noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol:85:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[92m
ERC20.constructor(string,string,uint8).name (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#154) shadows:
	- ERC20.name() (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#160-162) (function)
ERC20.constructor(string,string,uint8).symbol (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#154) shadows:
	- ERC20.symbol() (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#164-166) (function)
ERC20.constructor(string,string,uint8).decimals (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#154) shadows:
	- ERC20.decimals() (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#168-170) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#81-87) uses assembly
	- INLINE ASM (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#85-86)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
ERC20.onlyMinter() (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#149-152) compares to a boolean constant:
	-require(bool)(_minters[msg.sender] == true) (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#150)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#5) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in SafeERC20._callOptionalReturn(IERC20,bytes) (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#113-124):
	- (success,returndata) = address(token).call(data) (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#117)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Variable ERC20._totalSupply (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#135) is not in mixedCase
Variable ERC20._governor (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#141) is not in mixedCase
Variable ERC20._minters (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#142) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
FLR.constructor() (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#283-288) uses literals with too many digits:
	- _totalSupply = 100000 * 1000000000000000000 (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#286)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
name() should be declared external:
	- ERC20.name() (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#160-162)
symbol() should be declared external:
	- ERC20.symbol() (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#164-166)
decimals() should be declared external:
	- ERC20.decimals() (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#168-170)
totalSupply() should be declared external:
	- ERC20.totalSupply() (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#172-174)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#176-178)
setGovernance(address) should be declared external:
	- ERC20.setGovernance(address) (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#180-182)
addMinter(address) should be declared external:
	- ERC20.addMinter(address) (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#184-186)
removeMinter(address) should be declared external:
	- ERC20.removeMinter(address) (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#188-190)
mint(address,uint256) should be declared external:
	- ERC20.mint(address,uint256) (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#192-194)
burn(address,uint256) should be declared external:
	- ERC20.burn(address,uint256) (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#196-198)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#200-215)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#217-219)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#221-224)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol#232-249)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol analyzed (6 contracts with 46 detectors), 26 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol
Tool Runtime = 0.8230842740013031 seconds
#############################################