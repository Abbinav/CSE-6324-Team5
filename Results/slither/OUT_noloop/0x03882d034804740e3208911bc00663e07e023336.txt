Compilation warnings/errors on ./noloops/0x03882d034804740e3208911bc00663e07e023336.sol:
./noloops/0x03882d034804740e3208911bc00663e07e023336.sol:254:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[92m
ERC20.constructor(string,string,uint256,uint256,uint256).name (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#804) shadows:
	- ERC20.name() (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#830-834) (function)
ERC20.constructor(string,string,uint256,uint256,uint256).symbol (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#804) shadows:
	- ERC20.symbol() (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#854-858) (function)
ERC20.constructor(string,string,uint256,uint256,uint256).decimals (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#804) shadows:
	- ERC20.decimals() (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#888-892) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#240-258) uses assembly
	- INLINE ASM (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#254-256)
Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#426-468) uses assembly
	- INLINE ASM (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#452-460)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#22) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#294-306):
	- (success) = recipient.call.value(amount)() (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#302)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#426-468):
	- (success,returndata) = target.call.value(weiValue)(data) (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#434)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function ERC20.FMALE() (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#838-842) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
owner() should be declared external:
	- Ownable.owner() (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#680-684)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#718-724)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#736-744)
name() should be declared external:
	- ERC20.name() (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#830-834)
FMALE() should be declared external:
	- ERC20.FMALE() (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#838-842)
symbol() should be declared external:
	- ERC20.symbol() (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#854-858)
decimals() should be declared external:
	- ERC20.decimals() (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#888-892)
totalSupply() should be declared external:
	- ERC20.totalSupply() (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#902-906)
burnedSupply() should be declared external:
	- ERC20.burnedSupply() (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#916-920)
burnRate() should be declared external:
	- ERC20.burnRate() (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#930-934)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#944-948)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#968-974)
burn(uint256) should be declared external:
	- ERC20.burn(uint256) (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#978-984)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#988-992)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#996-1002)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#1006-1014)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#1018-1024)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0x03882d034804740e3208911bc00663e07e023336.sol#1028-1034)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0x03882d034804740e3208911bc00663e07e023336.sol analyzed (8 contracts with 46 detectors), 28 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x03882d034804740e3208911bc00663e07e023336.sol
Tool Runtime = 1.167571260000841 seconds
#############################################