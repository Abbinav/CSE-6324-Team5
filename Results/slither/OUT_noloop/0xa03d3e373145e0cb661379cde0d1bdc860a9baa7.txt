Compilation warnings/errors on ./noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol:
./noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol:281:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[93m
Strategy.deposit(uint256,uint256,uint256,uint256,uint256) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#955-982) uses a dangerous strict equality:
	- totalSupply() == 0 (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#975)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
ERC20.constructor(string,string).name (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#552) shadows:
	- ERC20.name() (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#561-563) (function)
ERC20.constructor(string,string).symbol (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#552) shadows:
	- ERC20.symbol() (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#569-571) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Strategy.deposit(uint256,uint256,uint256,uint256,uint256) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#955-982):
	External calls:
	- IERC20(ycrv).safeTransferFrom(msg.sender,address(this),_ycrvDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#964)
	- _ydaiAmount = _depositY(dai,ydai,_daiDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#966)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#460)
		- IERC20(_baseToken).safeTransferFrom(msg.sender,address(this),_amount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#940)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
		- IERC20(_baseToken).safeApprove(_yToken,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#943)
		- IERC20(_baseToken).safeApprove(_yToken,_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#944)
		- yERC20(_yToken).deposit(_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#945)
		- IERC20(_yToken).safeApprove(curve,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#949)
		- IERC20(_yToken).safeApprove(curve,_yTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#950)
	- _yusdcAmount = _depositY(usdc,yusdc,_usdcDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#967)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#460)
		- IERC20(_baseToken).safeTransferFrom(msg.sender,address(this),_amount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#940)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
		- IERC20(_baseToken).safeApprove(_yToken,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#943)
		- IERC20(_baseToken).safeApprove(_yToken,_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#944)
		- yERC20(_yToken).deposit(_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#945)
		- IERC20(_yToken).safeApprove(curve,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#949)
		- IERC20(_yToken).safeApprove(curve,_yTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#950)
	- _yusdtAmount = _depositY(usdt,yusdt,_usdtDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#968)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#460)
		- IERC20(_baseToken).safeTransferFrom(msg.sender,address(this),_amount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#940)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
		- IERC20(_baseToken).safeApprove(_yToken,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#943)
		- IERC20(_baseToken).safeApprove(_yToken,_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#944)
		- yERC20(_yToken).deposit(_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#945)
		- IERC20(_yToken).safeApprove(curve,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#949)
		- IERC20(_yToken).safeApprove(curve,_yTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#950)
	- _ytusdAmount = _depositY(tusd,ytusd,_tusdDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#969)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#460)
		- IERC20(_baseToken).safeTransferFrom(msg.sender,address(this),_amount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#940)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
		- IERC20(_baseToken).safeApprove(_yToken,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#943)
		- IERC20(_baseToken).safeApprove(_yToken,_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#944)
		- yERC20(_yToken).deposit(_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#945)
		- IERC20(_yToken).safeApprove(curve,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#949)
		- IERC20(_yToken).safeApprove(curve,_yTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#950)
	- ICurveFi(curve).add_liquidity((_ydaiAmount,_yusdcAmount,_yusdtAmount,_ytusdAmount),0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#971)
	External calls sending eth:
	- _ydaiAmount = _depositY(dai,ydai,_daiDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#966)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
	- _yusdcAmount = _depositY(usdc,yusdc,_usdcDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#967)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
	- _yusdtAmount = _depositY(usdt,yusdt,_usdtDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#968)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
	- _ytusdAmount = _depositY(tusd,ytusd,_tusdDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#969)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
	State variables written after the call(s):
	- _mint(msg.sender,shares) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#980)
		- _balances[account] = _balances[account].add(amount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#730)
	- _mint(msg.sender,shares) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#980)
		- _totalSupply = _totalSupply.add(amount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#729)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in Strategy.deposit(uint256,uint256,uint256,uint256,uint256) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#955-982):
	External calls:
	- IERC20(ycrv).safeTransferFrom(msg.sender,address(this),_ycrvDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#964)
	- _ydaiAmount = _depositY(dai,ydai,_daiDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#966)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#460)
		- IERC20(_baseToken).safeTransferFrom(msg.sender,address(this),_amount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#940)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
		- IERC20(_baseToken).safeApprove(_yToken,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#943)
		- IERC20(_baseToken).safeApprove(_yToken,_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#944)
		- yERC20(_yToken).deposit(_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#945)
		- IERC20(_yToken).safeApprove(curve,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#949)
		- IERC20(_yToken).safeApprove(curve,_yTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#950)
	- _yusdcAmount = _depositY(usdc,yusdc,_usdcDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#967)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#460)
		- IERC20(_baseToken).safeTransferFrom(msg.sender,address(this),_amount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#940)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
		- IERC20(_baseToken).safeApprove(_yToken,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#943)
		- IERC20(_baseToken).safeApprove(_yToken,_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#944)
		- yERC20(_yToken).deposit(_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#945)
		- IERC20(_yToken).safeApprove(curve,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#949)
		- IERC20(_yToken).safeApprove(curve,_yTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#950)
	- _yusdtAmount = _depositY(usdt,yusdt,_usdtDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#968)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#460)
		- IERC20(_baseToken).safeTransferFrom(msg.sender,address(this),_amount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#940)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
		- IERC20(_baseToken).safeApprove(_yToken,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#943)
		- IERC20(_baseToken).safeApprove(_yToken,_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#944)
		- yERC20(_yToken).deposit(_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#945)
		- IERC20(_yToken).safeApprove(curve,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#949)
		- IERC20(_yToken).safeApprove(curve,_yTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#950)
	- _ytusdAmount = _depositY(tusd,ytusd,_tusdDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#969)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#460)
		- IERC20(_baseToken).safeTransferFrom(msg.sender,address(this),_amount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#940)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
		- IERC20(_baseToken).safeApprove(_yToken,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#943)
		- IERC20(_baseToken).safeApprove(_yToken,_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#944)
		- yERC20(_yToken).deposit(_baseTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#945)
		- IERC20(_yToken).safeApprove(curve,0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#949)
		- IERC20(_yToken).safeApprove(curve,_yTokenAmount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#950)
	- ICurveFi(curve).add_liquidity((_ydaiAmount,_yusdcAmount,_yusdtAmount,_ytusdAmount),0) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#971)
	External calls sending eth:
	- _ydaiAmount = _depositY(dai,ydai,_daiDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#966)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
	- _yusdcAmount = _depositY(usdc,yusdc,_usdcDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#967)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
	- _yusdtAmount = _depositY(usdt,yusdt,_usdtDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#968)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
	- _ytusdAmount = _depositY(tusd,ytusd,_tusdDeposit) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#969)
		- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
	Event emitted after the call(s):
	- Transfer(address(0),account,amount) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#731)
		- _mint(msg.sender,shares) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#980)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#274-283) uses assembly
	- INLINE ASM (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#281-282)
Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#367-388) uses assembly
	- INLINE ASM (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#380-384)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#9) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#89) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#251) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#395) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#472) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#499) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#807) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#817) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#841) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#858) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#866) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#301-307):
	- (success) = recipient.call.value(amount)() (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#305)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#367-388):
	- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#371)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Contract yERC20 (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#809-812) is not in CapWords
Function ICurveFi.get__price() (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#820) is not in mixedCase
Function ICurveFi.add_liquidity(uint256[4],uint256) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#821-824) is not in mixedCase
Parameter ICurveFi.add_liquidity(uint256[4],uint256).min_mint_amount (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#823) is not in mixedCase
Function ICurveFi.remove_liquidity_imbalance(uint256[4],uint256) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#825-828) is not in mixedCase
Parameter ICurveFi.remove_liquidity_imbalance(uint256[4],uint256).max_burn_amount (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#827) is not in mixedCase
Function ICurveFi.remove_liquidity(uint256,uint256[4]) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#829-832) is not in mixedCase
Parameter ICurveFi.exchange(int128,int128,uint256,uint256)._from_amount (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#834) is not in mixedCase
Parameter ICurveFi.exchange(int128,int128,uint256,uint256)._min_to_amount (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#834) is not in mixedCase
Parameter Strategy.deposit(uint256,uint256,uint256,uint256,uint256)._ycrvDeposit (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#956) is not in mixedCase
Parameter Strategy.deposit(uint256,uint256,uint256,uint256,uint256)._daiDeposit (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#957) is not in mixedCase
Parameter Strategy.deposit(uint256,uint256,uint256,uint256,uint256)._usdcDeposit (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#958) is not in mixedCase
Parameter Strategy.deposit(uint256,uint256,uint256,uint256,uint256)._usdtDeposit (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#959) is not in mixedCase
Parameter Strategy.deposit(uint256,uint256,uint256,uint256,uint256)._tusdDeposit (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#960) is not in mixedCase
Parameter Strategy.withdraw(uint256)._shares (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#988) is not in mixedCase
Parameter Strategy.withdrawAsset(IERC20)._asset (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#1004) is not in mixedCase
Constant Strategy.ycrv (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#882) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.gauge (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#883) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.mintr (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#884) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.crv (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#885) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.uni (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#886) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.weth (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#887) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.dai (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#888) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.ydai (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#889) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.usdc (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#890) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.yusdc (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#891) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.usdt (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#892) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.yusdt (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#893) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.tusd (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#894) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.ytusd (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#895) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Strategy.curve (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#896) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Strategy.slitherConstructorConstantVariables() (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#877-1036) uses literals with too many digits:
	- tusd = address(0x0000000000085d4780B73119b644AE5ecd22b376) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#894)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
name() should be declared external:
	- ERC20.name() (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#561-563)
symbol() should be declared external:
	- ERC20.symbol() (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#569-571)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#612-615)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#620-622)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#631-634)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#648-652)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#666-669)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#685-688)
deposit(uint256,uint256,uint256,uint256,uint256) should be declared external:
	- Strategy.deposit(uint256,uint256,uint256,uint256,uint256) (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#955-982)
ycrvPerOneShare() should be declared external:
	- Strategy.ycrvPerOneShare() (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#1000-1002)
compound() should be declared external:
	- Strategy.compound() (noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol#1010-1035)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol analyzed (12 contracts with 46 detectors), 64 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol
Tool Runtime = 1.444660542998463 seconds
#############################################