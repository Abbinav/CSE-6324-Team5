Compilation warnings/errors on ./noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol:
./noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol:176:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[93m
MelonSwap.buyToken() (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#254-259) performs a multiplication on the result of a division:
	-newTokens = SafeMath.mul(SafeMath.div(msg.value,tokenSalePrice),1e18) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#256)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[92m
ERC20Detailed.constructor(string,string,uint8).name (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#117) shadows:
	- ERC20Detailed.name() (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#122-124) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#117) shadows:
	- ERC20Detailed.symbol() (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#125-127) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#117) shadows:
	- ERC20Detailed.decimals() (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#128-130) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#172-178) uses assembly
	- INLINE ASM (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#176-177)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#18) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#201-212):
	- (success,returndata) = address(token).call(data) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#205)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter MelonSwap.setGovernance(address)._governance (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#239) is not in mixedCase
Parameter MelonSwap.addMinter(address)._minter (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#244) is not in mixedCase
Parameter MelonSwap.removeMinter(address)._minter (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#249) is not in mixedCase
Variable MelonSwap._tokenSaleMode (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#220) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
MelonSwap.tokenSalePrice (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#219) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
totalSupply() should be declared external:
	- ERC20.totalSupply() (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#48-50)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#51-53)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#54-58)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#59-61)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#62-65)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#66-71)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#72-75)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#76-79)
name() should be declared external:
	- ERC20Detailed.name() (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#122-124)
symbol() should be declared external:
	- ERC20Detailed.symbol() (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#125-127)
decimals() should be declared external:
	- ERC20Detailed.decimals() (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#128-130)
mint(address,uint256) should be declared external:
	- MelonSwap.mint(address,uint256) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#230-233)
burn(uint256) should be declared external:
	- MelonSwap.burn(uint256) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#235-237)
setGovernance(address) should be declared external:
	- MelonSwap.setGovernance(address) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#239-242)
addMinter(address) should be declared external:
	- MelonSwap.addMinter(address) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#244-247)
removeMinter(address) should be declared external:
	- MelonSwap.removeMinter(address) (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#249-252)
endTokenSale() should be declared external:
	- MelonSwap.endTokenSale() (noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol#265-268)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol analyzed (8 contracts with 46 detectors), 30 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol
Tool Runtime = 0.7517981650016736 seconds
#############################################