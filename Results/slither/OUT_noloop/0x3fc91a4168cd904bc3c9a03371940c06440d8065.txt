Compilation warnings/errors on ./noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol:
./noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol:452:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[93m
ZZZXXX.earned(address) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#710-718) performs a multiplication on the result of a division:
	-balanceOf(account).mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).mul(getTotalMultiplier(account)).div(1e18).add(rewards[account]) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#711-717)
ZZZXXX.notifyRewardAmount(uint256) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#747-763) performs a multiplication on the result of a division:
	-rewardRate = reward.div(DURATION) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#754)
	-leftover = remaining.mul(rewardRate) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#757)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
INFO:Detectors:[93m
Reentrancy in ZZZXXX.exit() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#733-736):
	External calls:
	- withdraw(balanceOf(msg.sender)) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#734)
		- stakingToken.safeTransfer(msg.sender,amount) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#629)
		- (success,returndata) = address(token).call(data) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#560)
	- getReward() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#735)
		- rewardToken.mint(msg.sender,reward) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#742)
	State variables written after the call(s):
	- getReward() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#735)
		- lastUpdateTime = lastTimeRewardApplicable() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#677)
	- getReward() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#735)
		- rewardPerTokenStored = rewardPerToken() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#676)
	- getReward() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#735)
		- rewards[msg.sender] = 0 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#741)
		- rewards[account] = earned(account) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#679)
	- getReward() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#735)
		- userRewardPerTokenPaid[account] = rewardPerTokenStored (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#680)
Reentrancy in ZZZXXX.purchase(uint256) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#797-807):
	External calls:
	- multiplierToken.safeTransferFrom(msg.sender,devFund,finalCost.div(2)) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#802)
	- multiplierToken.safeTransferFrom(msg.sender,devFund2,finalCost.div(2)) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#803)
	State variables written after the call(s):
	- NAPSlevel[msg.sender] = level (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#805)
	- spentNAPS[msg.sender] = spentNAPS[msg.sender].add(finalCost) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#804)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in ZZZXXX.exit() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#733-736):
	External calls:
	- withdraw(balanceOf(msg.sender)) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#734)
		- stakingToken.safeTransfer(msg.sender,amount) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#629)
		- (success,returndata) = address(token).call(data) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#560)
	- getReward() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#735)
		- rewardToken.mint(msg.sender,reward) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#742)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#743)
		- getReward() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#735)
Reentrancy in ZZZXXX.getReward() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#738-745):
	External calls:
	- rewardToken.mint(msg.sender,reward) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#742)
	Event emitted after the call(s):
	- RewardPaid(msg.sender,reward) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#743)
Reentrancy in ZZZXXX.purchase(uint256) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#797-807):
	External calls:
	- multiplierToken.safeTransferFrom(msg.sender,devFund,finalCost.div(2)) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#802)
	- multiplierToken.safeTransferFrom(msg.sender,devFund2,finalCost.div(2)) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#803)
	Event emitted after the call(s):
	- Boost(level) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#806)
Reentrancy in ZZZXXX.stake(uint256) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#721-725):
	External calls:
	- super.stake(amount) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#723)
		- (success,returndata) = address(token).call(data) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#560)
		- stakingToken.safeTransferFrom(msg.sender,address(this),_realAmount) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#621)
		- stakingToken.safeTransferFrom(msg.sender,devFund,_taxedAmount.div(2)) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#622)
		- stakingToken.safeTransferFrom(msg.sender,devFund2,_taxedAmount.div(2)) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#623)
	Event emitted after the call(s):
	- Staked(msg.sender,amount) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#724)
Reentrancy in ZZZXXX.withdraw(uint256) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#727-731):
	External calls:
	- super.withdraw(amount) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#729)
		- stakingToken.safeTransfer(msg.sender,amount) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#629)
		- (success,returndata) = address(token).call(data) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#560)
	Event emitted after the call(s):
	- Withdrawn(msg.sender,amount) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#730)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
ZZZXXX.getReward() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#738-745) uses timestamp for comparisons
	Dangerous comparisons:
	- reward > 0 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#740)
ZZZXXX.notifyRewardAmount(uint256) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#747-763) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= periodFinish (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#753)
ZZZXXX.calculateCost(uint256) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#777-795) uses timestamp for comparisons
	Dangerous comparisons:
	- cycles > 5 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#780)
ZZZXXX.eject() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#825-829) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp > deployedTime + DURATION,Cannot eject before period finishes) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#826)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#441-454) uses assembly
	- INLINE ASM (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#452-453)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#46) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#78) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#237) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#267) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#345) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#424) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#495) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#572) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#596) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#484-490):
	- (success) = recipient.call.value(amount)() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#488)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#548-567):
	- (success,returndata) = address(token).call(data) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#560)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter IRewardDistributionRecipient.setRewardDistribution(address)._rewardDistribution (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#586) is not in mixedCase
Parameter LPTokenWrapper.setBPT(address).BPTAddress (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#631) is not in mixedCase
Parameter ZZZXXX.setCycleContract(address)._cycleContract (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#764) is not in mixedCase
Variable ZZZXXX.DURATION (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#645) is not in mixedCase
Constant ZZZXXX.napsDiscountRange (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#652) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ZZZXXX.napsLevelOneCost (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#653) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ZZZXXX.napsLevelTwoCost (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#654) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ZZZXXX.napsLevelThreeCost (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#655) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ZZZXXX.napsLevelFourCost (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#656) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ZZZXXX.napsLevelFiveCost (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#657) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ZZZXXX.FivePercentBonus (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#659) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ZZZXXX.FifteenPercentBonus (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#660) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ZZZXXX.ThirtyPercentBonus (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#661) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ZZZXXX.SixtyPercentBonus (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#662) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ZZZXXX.HundredPercentBonus (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#663) is not in UPPER_CASE_WITH_UNDERSCORES
Variable ZZZXXX.NAPSlevel (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#668) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
ZZZXXX.slitherConstructorConstantVariables() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#640-831) uses literals with too many digits:
	- napsLevelOneCost = 250000000000000000 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#653)
ZZZXXX.slitherConstructorConstantVariables() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#640-831) uses literals with too many digits:
	- FivePercentBonus = 50000000000000000 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#659)
ZZZXXX.slitherConstructorConstantVariables() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#640-831) uses literals with too many digits:
	- FifteenPercentBonus = 150000000000000000 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#660)
ZZZXXX.slitherConstructorConstantVariables() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#640-831) uses literals with too many digits:
	- ThirtyPercentBonus = 300000000000000000 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#661)
ZZZXXX.slitherConstructorConstantVariables() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#640-831) uses literals with too many digits:
	- SixtyPercentBonus = 600000000000000000 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#662)
ZZZXXX.slitherConstructorConstantVariables() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#640-831) uses literals with too many digits:
	- HundredPercentBonus = 1000000000000000000 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#663)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
INFO:Detectors:[92m
LPTokenWrapper.devFund (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#603) should be constant
LPTokenWrapper.devFund2 (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#604) should be constant
ZZZXXX.DURATION (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#645) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
owner() should be declared external:
	- Ownable.owner() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#294-296)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#320-323)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#329-331)
setCycleContract(address) should be declared external:
	- ZZZXXX.setCycleContract(address) (noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol#764-766)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol analyzed (11 contracts with 46 detectors), 55 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol
Tool Runtime = 1.298685335998016 seconds
#############################################