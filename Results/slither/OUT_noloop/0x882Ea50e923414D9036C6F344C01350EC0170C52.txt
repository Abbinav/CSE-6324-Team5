Compilation warnings/errors on ./noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol:
./noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol:49:27: Warning: The "shr" instruction is only available for Constantinople-compatible VMs. You are currently compiling for "byzantium", where it will be interpreted as an invalid instruction.
                 shl(224, shr(224, calldataload(0))), // msg.sig
                          ^-----------------------^
./noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol:49:18: Warning: The "shl" instruction is only available for Constantinople-compatible VMs. You are currently compiling for "byzantium", where it will be interpreted as an invalid instruction.
                 shl(224, shr(224, calldataload(0))), // msg.sig
                 ^---------------------------------^

INFO:Detectors:[93m
Reentrancy in Flapper.deal(uint256) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#177-183):
	External calls:
	- vat.move(address(this),bids[id].guy,bids[id].lot) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#180)
	- gem.burn(address(this),bids[id].bid) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#181)
	State variables written after the call(s):
	- delete bids[id] (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#182)
Reentrancy in Flapper.tend(uint256,uint256,uint256) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#158-176):
	External calls:
	- gem.move(msg.sender,bids[id].guy,bids[id].bid) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#169)
	State variables written after the call(s):
	- bids[id].guy = msg.sender (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#170)
Reentrancy in Flapper.tend(uint256,uint256,uint256) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#158-176):
	External calls:
	- gem.move(msg.sender,bids[id].guy,bids[id].bid) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#169)
	- gem.move(msg.sender,address(this),bid - bids[id].bid) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#172)
	State variables written after the call(s):
	- bids[id].bid = bid (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#174)
	- bids[id].tic = add(uint48(now),ttl) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#175)
Reentrancy in Flapper.yank(uint256) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#189-194):
	External calls:
	- gem.move(address(this),bids[id].guy,bids[id].bid) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#192)
	State variables written after the call(s):
	- delete bids[id] (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#193)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in Flapper.kick(uint256,uint256) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#139-152):
	External calls:
	- vat.move(msg.sender,address(this),lot) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#149)
	Event emitted after the call(s):
	- Kick(id,lot,bid) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#151)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Flapper.add(uint48,uint48) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#123-125) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)((z = x + y) >= x) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#124)
Flapper.tick(uint256) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#153-157) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(bids[id].end < now,Flapper/not-finished) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#154)
Flapper.tend(uint256,uint256,uint256) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#158-176) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(bids[id].tic > now || bids[id].tic == 0,Flapper/already-finished-tic) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#161)
	- require(bool,string)(bids[id].end > now,Flapper/already-finished-end) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#162)
Flapper.deal(uint256) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#177-183) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(bids[id].tic != 0 && (bids[id].tic < now || bids[id].end < now),Flapper/not-finished) (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#179)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol#27) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Slither:./noloops/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol analyzed (4 contracts with 46 detectors), 11 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x882Ea50e923414D9036C6F344C01350EC0170C52.sol
Tool Runtime = 0.6019124140002532 seconds
#############################################