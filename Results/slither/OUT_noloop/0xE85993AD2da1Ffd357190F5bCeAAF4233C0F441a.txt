Compilation warnings/errors on ./noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol:
./noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol:123:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function add(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
./noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol:49:27: Warning: The "shr" instruction is only available for Constantinople-compatible VMs. You are currently compiling for "byzantium", where it will be interpreted as an invalid instruction.
                 shl(224, shr(224, calldataload(0))), // msg.sig
                          ^-----------------------^
./noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol:49:18: Warning: The "shl" instruction is only available for Constantinople-compatible VMs. You are currently compiling for "byzantium", where it will be interpreted as an invalid instruction.
                 shl(224, shr(224, calldataload(0))), // msg.sig
                 ^---------------------------------^

INFO:Detectors:[93m
Jug.file(bytes32,bytes32,uint256) (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#144-148) uses a dangerous strict equality:
	- require(bool,string)(now == ilks[ilk].rho,Jug/rho-not-updated) (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#145)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Jug.drip(bytes32) (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#159-165):
	External calls:
	- (prev) = vat.ilks(ilk) (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#161)
	- vat.fold(ilk,vow,diff(rate,prev)) (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#163)
	State variables written after the call(s):
	- ilks[ilk].rho = now (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#164)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Jug.add(uint256,uint256) (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#123-126) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(z >= x) (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#125)
Jug.init(bytes32) (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#138-143) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(i.duty == 0,Jug/ilk-already-init) (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#140)
Jug.file(bytes32,bytes32,uint256) (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#144-148) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(now == ilks[ilk].rho,Jug/rho-not-updated) (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#145)
Jug.drip(bytes32) (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#159-165) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(now >= ilks[ilk].rho,Jug/invalid-now) (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#160)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Jug.rpow(uint256,uint256,uint256) (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#99-121) uses assembly
	- INLINE ASM (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#100-121)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol#11) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Slither:./noloops/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol analyzed (3 contracts with 46 detectors), 9 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol
Tool Runtime = 0.515540033000434 seconds
#############################################