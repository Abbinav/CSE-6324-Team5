INFO:Detectors:[92m
ERC20.constructor(string,string).name (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#602) shadows:
	- ERC20.name() (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#612-616) (function)
ERC20.constructor(string,string).symbol (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#602) shadows:
	- ERC20.symbol() (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#620-624) (function)
TRIFLECTOR.constructor(string,string,uint256)._name (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#838) shadows:
	- ERC20._name (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#594) (state variable)
TRIFLECTOR.constructor(string,string,uint256)._symbol (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#838) shadows:
	- ERC20._symbol (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#596) (state variable)
TRIFLECTOR.constructor(string,string,uint256).totalSupply (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#838) shadows:
	- ERC20.totalSupply() (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#636-640) (function)
	- IERC20.totalSupply() (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#430) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#10) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#53) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#272) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Function ERC20._burn(address,uint256) (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#760-776) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
getRoleMemberCount(bytes32) should be declared external:
	- AccessControl.getRoleMemberCount(bytes32) (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#322-326)
getRoleMember(bytes32,uint256) should be declared external:
	- AccessControl.getRoleMember(bytes32,uint256) (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#330-334)
getRoleAdmin(bytes32) should be declared external:
	- AccessControl.getRoleAdmin(bytes32) (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#338-342)
grantRole(bytes32,address) should be declared external:
	- AccessControl.grantRole(bytes32,address) (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#346-354)
revokeRole(bytes32,address) should be declared external:
	- AccessControl.revokeRole(bytes32,address) (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#358-366)
renounceRole(bytes32,address) should be declared external:
	- AccessControl.renounceRole(bytes32,address) (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#370-378)
name() should be declared external:
	- ERC20.name() (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#612-616)
symbol() should be declared external:
	- ERC20.symbol() (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#620-624)
decimals() should be declared external:
	- ERC20.decimals() (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#628-632)
totalSupply() should be declared external:
	- ERC20.totalSupply() (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#636-640)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#644-648)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#652-658)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#670-676)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#680-688)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#692-698)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol#702-708)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol analyzed (8 contracts with 46 detectors), 26 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol
Tool Runtime = 1.3197319840001 seconds
#############################################