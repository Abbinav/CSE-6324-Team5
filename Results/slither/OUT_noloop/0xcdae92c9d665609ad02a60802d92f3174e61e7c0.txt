Compilation warnings/errors on ./noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol:
./noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol:129:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[92m
ERC20.constructor(string,string,uint256,uint256,uint256).name (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#404) shadows:
	- ERC20.name() (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#417-419) (function)
ERC20.constructor(string,string,uint256,uint256,uint256).symbol (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#404) shadows:
	- ERC20.symbol() (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#429-431) (function)
ERC20.constructor(string,string,uint256,uint256,uint256).decimals (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#404) shadows:
	- ERC20.decimals() (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#446-448) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#122-131) uses assembly
	- INLINE ASM (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#129-130)
Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#215-236) uses assembly
	- INLINE ASM (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#228-232)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#13) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#149-155):
	- (success) = recipient.call.value(amount)() (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#153)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#215-236):
	- (success,returndata) = target.call.value(weiValue)(data) (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#219)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
owner() should be declared external:
	- Ownable.owner() (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#342-344)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#361-364)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#370-374)
name() should be declared external:
	- ERC20.name() (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#417-419)
bonked() should be declared external:
	- ERC20.bonked() (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#421-423)
symbol() should be declared external:
	- ERC20.symbol() (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#429-431)
decimals() should be declared external:
	- ERC20.decimals() (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#446-448)
totalSupply() should be declared external:
	- ERC20.totalSupply() (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#453-455)
burnedSupply() should be declared external:
	- ERC20.burnedSupply() (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#460-462)
burnRate() should be declared external:
	- ERC20.burnRate() (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#467-469)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#474-476)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#486-489)
burn(uint256) should be declared external:
	- ERC20.burn(uint256) (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#491-494)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#496-498)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#500-503)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#505-509)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#511-514)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol#516-519)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol analyzed (8 contracts with 46 detectors), 27 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol
Tool Runtime = 1.012299072001042 seconds
#############################################