INFO:Detectors:[93m
VaultBaseline.deposit(uint256) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#889-902) uses a dangerous strict equality:
	- totalSupply() == 0 (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#896)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
ERC20.constructor(string,string).name (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#552) shadows:
	- ERC20.name() (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#561-563) (function)
ERC20.constructor(string,string).symbol (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#552) shadows:
	- ERC20.symbol() (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#569-571) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in VaultBaseline.deposit(uint256) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#889-902):
	External calls:
	- token.safeTransferFrom(msg.sender,address(this),_amount) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#892)
	State variables written after the call(s):
	- _mint(msg.sender,shares) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#901)
		- _balances[account] = _balances[account].add(amount) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#730)
	- _mint(msg.sender,shares) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#901)
		- _totalSupply = _totalSupply.add(amount) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#729)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in VaultBaseline.deposit(uint256) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#889-902):
	External calls:
	- token.safeTransferFrom(msg.sender,address(this),_amount) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#892)
	Event emitted after the call(s):
	- Transfer(address(0),account,amount) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#731)
		- _mint(msg.sender,shares) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#901)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#274-283) uses assembly
	- INLINE ASM (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#281-282)
Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#367-388) uses assembly
	- INLINE ASM (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#380-384)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#9) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#89) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#251) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#395) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#472) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#499) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#807) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#821) uses lesser than
Pragma version>=0.5<0.7.17 (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#944) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#301-307):
	- (success) = recipient.call.value(amount)() (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#305)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#367-388):
	- (success,returndata) = target.call.value(weiValue)(data) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#371)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter VaultBaseline.setMin(uint256)._min (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#858) is not in mixedCase
Parameter VaultBaseline.setGovernance(address)._governance (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#863) is not in mixedCase
Parameter VaultBaseline.setController(address)._controller (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#868) is not in mixedCase
Parameter VaultBaseline.deposit(uint256)._amount (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#889) is not in mixedCase
Parameter VaultBaseline.withdraw(uint256)._shares (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#917) is not in mixedCase
Constant VaultBaseline.max (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#838) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
name() should be declared external:
	- ERC20.name() (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#561-563)
symbol() should be declared external:
	- ERC20.symbol() (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#569-571)
decimals() should be declared external:
	- ERC20.decimals() (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#586-588)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#612-615)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#620-622)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#631-634)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#648-652)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#666-669)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#685-688)
setGovernance(address) should be declared external:
	- VaultBaseline.setGovernance(address) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#863-866)
setController(address) should be declared external:
	- VaultBaseline.setController(address) (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#868-871)
earn() should be declared external:
	- VaultBaseline.earn() (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#879-883)
priceE18() should be declared external:
	- VaultBaseline.priceE18() (noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol#936-938)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol analyzed (9 contracts with 46 detectors), 38 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol
Tool Runtime = 1.7258604409980762 seconds
#############################################