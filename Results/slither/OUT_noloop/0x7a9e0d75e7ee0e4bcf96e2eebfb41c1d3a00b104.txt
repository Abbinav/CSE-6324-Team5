Compilation warnings/errors on ./noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol:
./noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol:288:32: Warning: The "extcodehash" instruction is not supported by the VM version "byzantium" you are currently compiling for. It will be interpreted as an invalid instruction on this VM.
        assembly { codehash := extcodehash(account) }
                               ^------------------^

INFO:Detectors:[92m
ERC20.constructor(string,string,uint256,uint256,uint256).name (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#838) shadows:
	- ERC20.name() (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#864-868) (function)
ERC20.constructor(string,string,uint256,uint256,uint256).symbol (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#838) shadows:
	- ERC20.symbol() (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#888-892) (function)
ERC20.constructor(string,string,uint256,uint256,uint256).decimals (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#838) shadows:
	- ERC20.decimals() (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#922-926) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Address.isContract(address) (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#274-292) uses assembly
	- INLINE ASM (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#288-290)
Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#460-502) uses assembly
	- INLINE ASM (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#486-494)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pragma version>=0.5<0.7.17 (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#56) uses lesser than
solc-0.5.2 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue(address,uint256) (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#328-340):
	- (success) = recipient.call.value(amount)() (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#336)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#460-502):
	- (success,returndata) = target.call.value(weiValue)(data) (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#468)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function ERC20.COKED() (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#872-876) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
owner() should be declared external:
	- Ownable.owner() (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#714-718)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#752-758)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#770-778)
name() should be declared external:
	- ERC20.name() (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#864-868)
COKED() should be declared external:
	- ERC20.COKED() (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#872-876)
symbol() should be declared external:
	- ERC20.symbol() (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#888-892)
decimals() should be declared external:
	- ERC20.decimals() (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#922-926)
totalSupply() should be declared external:
	- ERC20.totalSupply() (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#936-940)
burnedSupply() should be declared external:
	- ERC20.burnedSupply() (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#950-954)
burnRate() should be declared external:
	- ERC20.burnRate() (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#964-968)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#978-982)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#1002-1008)
burn(uint256) should be declared external:
	- ERC20.burn(uint256) (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#1012-1018)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#1022-1026)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#1030-1036)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#1040-1048)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#1052-1058)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol#1062-1068)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
INFO:Slither:./noloops/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol analyzed (8 contracts with 46 detectors), 28 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m

---------------------------------------------
For contract 0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol
Tool Runtime = 1.183468195999012 seconds
#############################################