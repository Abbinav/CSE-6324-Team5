==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: CurveFiProtocol_BUSD
Function name: yTokens(uint256)
PC address: 13200
Estimated Gas Usage: 1190 - 1285
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_loop/5/0x6c8b098427D17c8afe8d9bD3c68D5999240c7ACa.sol:1743

address[] public yTokens

--------------------
Initial State:

Account: [CREATOR], balance: 0x42, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: yTokens(uint256), txdata: 0x998397d10000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CurveFiProtocol_BUSD
Function name: optimalProportions()
PC address: 17017
Estimated Gas Usage: 13205 - 153193
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_loop/5/0x6c8b098427D17c8afe8d9bD3c68D5999240c7ACa.sol:1650

curveFiToken.balanceOf(address(this))

--------------------
Initial State:

Account: [CREATOR], balance: 0x200418008000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: optimalProportions(), txdata: 0xfe9dee61, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CurveFiProtocol_BUSD
Function name: optimalProportions()
PC address: 17267
Estimated Gas Usage: 13205 - 153193
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_loop/5/0x6c8b098427D17c8afe8d9bD3c68D5999240c7ACa.sol:1651

curveFiLPGauge.balanceOf(address(this))

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000000022131, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10a01286910800001, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: optimalProportions(), txdata: 0xfe9dee61, value: 0x0
Caller: [ATTACKER], function: optimalProportions(), txdata: 0xfe9dee61, value: 0x0



---------------------------------------------
For contract 0x6c8b098427D17c8afe8d9bD3c68D5999240c7ACa.sol
Tool Runtime = 1299.2402575949964 seconds
#############################################