==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: DragonNetwork
Function name: multiTransfer(address[],uint256[])
PC address: 2657
Estimated Gas Usage: 1131 - 6962
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_loop/1/0xEe87b220d9b0e762f0643C501fADeFd6d9cc5B7E.sol:176

amounts[i]

--------------------
Initial State:

Account: [CREATOR], balance: 0x840a004a4060e02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: multiTransfer(address[],uint256[]), txdata: 0x1e89d5450000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: DragonNetwork
Function name: decreaseAllowance(address,uint256)
PC address: 7958
Estimated Gas Usage: 1373 - 1848
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_loop/1/0xEe87b220d9b0e762f0643C501fADeFd6d9cc5B7E.sol:60

assert(b <= a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x21815f08203000778, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: decreaseAllowance(address,uint256), txdata: 0xa457c2d700000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: DragonNetwork
Function name: findEightPercent(uint256)
PC address: 7989
Estimated Gas Usage: 1253 - 1348
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_loop/1/0xEe87b220d9b0e762f0643C501fADeFd6d9cc5B7E.sol:66

assert(c >= a)

--------------------
Initial State:

Account: [CREATOR], balance: 0xc000c80000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: findEightPercent(uint256), txdata: 0x52396db9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0, value: 0x0



---------------------------------------------
For contract 0xEe87b220d9b0e762f0643C501fADeFd6d9cc5B7E.sol
Tool Runtime = 3254.3065639079978 seconds
#############################################