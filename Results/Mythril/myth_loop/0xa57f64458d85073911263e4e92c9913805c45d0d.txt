==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: StrategyAddTwoSidesOptimal
Function name: constructor
PC address: 664
Estimated Gas Usage: 41191 - 237624
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: ./new_contracts/m_loop/4/0xa57f64458d85073911263e4e92c9913805c45d0d.sol:633

_router.WETH()

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: StrategyAddTwoSidesOptimal
Function name: recover(address,address,uint256)
PC address: 1299
Estimated Gas Usage: 10336 - 67343
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_loop/4/0xa57f64458d85073911263e4e92c9913805c45d0d.sol:233

_guardCounter

--------------------
Initial State:

Account: [CREATOR], balance: 0x400, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: recover(address,address,uint256), txdata: 0x1ec82cb8000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101010100000000, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: StrategyAddTwoSidesOptimal
Function name: recover(address,address,uint256)
PC address: 6168
Estimated Gas Usage: 10178 - 66716
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_loop/4/0xa57f64458d85073911263e4e92c9913805c45d0d.sol:576

token.call(abi.encodeWithSelector(0xa9059cbb, to, value))

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: recover(address,address,uint256), txdata: 0x1ec82cb8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010108010101010101010101010101010101010101010101010101010100000000, value: 0x0
Caller: [CREATOR], function: recover(address,address,uint256), txdata: 0x1ec82cb8080808080808080808080808deadbeefdeadbeefdeadbeefdeadbeefdeadbeef08080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808, value: 0x0



---------------------------------------------
For contract 0xa57f64458d85073911263e4e92c9913805c45d0d.sol
Tool Runtime = 1259.8411642889841 seconds
#############################################