==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: CompoundProtocol_USDC
Function name: normalizedBalance()
PC address: 12409
Estimated Gas Usage: 8970 - 46878
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./contracts/loops2/0x07CB94E333322327BAE229DD089BE2c77630254C.sol:1429

decimals

--------------------
Initial State:

Account: [CREATOR], balance: 0x2100000084000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: normalizedBalance(), txdata: 0x628cb95e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: CompoundProtocol_USDC
Function name: normalizedBalance()
PC address: 12444
Estimated Gas Usage: 9041 - 46949
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./contracts/loops2/0x07CB94E333322327BAE229DD089BE2c77630254C.sol:1431

decimals

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: initialize(address), txdata: 0xc4d66de80000000000000000000000000000000100000001000000000000000000000000, value: 0x0
Caller: [CREATOR], function: normalizedBalance(), txdata: 0x628cb95e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: CompoundProtocol_USDC
Function name: normalizedBalance()
PC address: 12521
Estimated Gas Usage: 8970 - 46878
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./contracts/loops2/0x07CB94E333322327BAE229DD089BE2c77630254C.sol:1433

decimals

--------------------
Initial State:

Account: [CREATOR], balance: 0x2100000084000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: normalizedBalance(), txdata: 0x628cb95e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: CompoundProtocol_USDC
Function name: normalizedBalance()
PC address: 12549
Estimated Gas Usage: 9041 - 46949
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./contracts/loops2/0x07CB94E333322327BAE229DD089BE2c77630254C.sol:1434

decimals

--------------------
Initial State:

Account: [CREATOR], balance: 0x4004000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: balanceOfAll(), txdata: 0x208e509f, value: 0x0
Caller: [CREATOR], function: normalizedBalance(), txdata: 0x628cb95e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: CompoundProtocol
Function name: normalizedBalance()
PC address: 13148
Estimated Gas Usage: 8970 - 46878
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./contracts/loops2/0x07CB94E333322327BAE229DD089BE2c77630254C.sol:1429

decimals

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: normalizedBalance(), txdata: 0x628cb95e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: CompoundProtocol
Function name: normalizedBalance()
PC address: 13183
Estimated Gas Usage: 9041 - 46949
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./contracts/loops2/0x07CB94E333322327BAE229DD089BE2c77630254C.sol:1431

decimals

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000040502028582, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: normalizedBalance(), txdata: 0x628cb95e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: CompoundProtocol
Function name: normalizedBalance()
PC address: 13260
Estimated Gas Usage: 8970 - 46878
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./contracts/loops2/0x07CB94E333322327BAE229DD089BE2c77630254C.sol:1433

decimals

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: normalizedBalance(), txdata: 0x628cb95e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: CompoundProtocol
Function name: normalizedBalance()
PC address: 13288
Estimated Gas Usage: 9041 - 46949
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./contracts/loops2/0x07CB94E333322327BAE229DD089BE2c77630254C.sol:1434

decimals

--------------------
Initial State:

Account: [CREATOR], balance: 0x21c1000002002e0c, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x15010110910002020, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: initialize(address), txdata: 0xc4d66de80000000000000000000000000000000000000000000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: normalizedBalance(), txdata: 0x628cb95e, value: 0x0



---------------------------------------------
For contract 0x07CB94E333322327BAE229DD089BE2c77630254C.sol
Tool Runtime = 2082.268896884998 seconds
#############################################