==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CurveSusdPeak
Function name: sCrvBalance()
PC address: 5446
Estimated Gas Usage: 5324 - 75484
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./contracts/m_loop/loop5/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol:722

curveToken.balanceOf(address(this))

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: sCrvBalance(), txdata: 0x3ce147c0, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CurveSusdPeak
Function name: stake()
PC address: 11828
Estimated Gas Usage: 5229 - 74922
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./contracts/m_loop/loop5/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol:776

gauge.deposit(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x82901f000008a428, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: stake(), txdata: 0x3a4b66f1, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: CurveSusdPeak
Function name: portfolioValueWithFeed(uint256[])
PC address: 12563
Estimated Gas Usage: 6007 - 81153
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./contracts/m_loop/loop5/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol:770

_feed[i]

--------------------
Initial State:

Account: [CREATOR], balance: 0x40040102001020, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: portfolioValueWithFeed(uint256[]), txdata: 0x7b34a1f30000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CurveSusdPeak
Function name: portfolioValueWithFeed(uint256[])
PC address: 12783
Estimated Gas Usage: 10055 - 121688
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./contracts/m_loop/loop5/0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol:756

curve.get_virtual_price()

--------------------
Initial State:

Account: [CREATOR], balance: 0x801, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: portfolioValueWithFeed(uint256[]), txdata: 0x7b34a1f3000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000008000000000000000000000008000000000000000000000000000000000000000000000000044080004000002001800104400410028010104020084008008002100240042001001000040100100020014020000020208002040480200140000840020440200140000040104002, value: 0x0



---------------------------------------------
For contract 0x1e624aB76809c4BE098f38c3a4250b5306ADE2Ce.sol
Tool Runtime = 10550.200694230007 seconds
#############################################