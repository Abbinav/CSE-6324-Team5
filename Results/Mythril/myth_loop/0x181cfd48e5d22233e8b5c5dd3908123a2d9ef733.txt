==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: YFMSVault
Function name: distributeVaultRewards()
PC address: 1498
Estimated Gas Usage: 9632 - 114543
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./contracts/m_loop/loop1/0x181cfd48e5d22233e8b5c5dd3908123a2d9ef733.sol:167

CuraAnnonae.getNumberOfVaults()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: distributeVaultRewards(), txdata: 0x1f60d8c8, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: YFMSVault
Function name: distributeVaultRewards()
PC address: 1775
Estimated Gas Usage: 9632 - 114543
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./contracts/m_loop/loop1/0x181cfd48e5d22233e8b5c5dd3908123a2d9ef733.sol:170

YFMSToken.balanceOf(address(this))

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: stakeYFMS(uint256,address), txdata: 0xddc59a4300a08231000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, value: 0x0
Caller: [CREATOR], function: distributeVaultRewards(), txdata: 0x1f60d8c8, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: YFMSVault
Function name: stakeYFMS(uint256,address)
PC address: 2796
Estimated Gas Usage: 10725 - 151338
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./contracts/m_loop/loop1/0x181cfd48e5d22233e8b5c5dd3908123a2d9ef733.sol:102

CuraAnnonae.getUserBalanceInVault("YFMS", _from)

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000140008080, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: stakeYFMS(uint256,address), txdata: 0xddc59a4300a08231000000000000000000000000deadbeefdeadbeefdeaf00001eadbeff000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: YFMSVault
Function name: stakeYFMS(uint256,address)
PC address: 3647
Estimated Gas Usage: 10725 - 151338
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./contracts/m_loop/loop1/0x181cfd48e5d22233e8b5c5dd3908123a2d9ef733.sol:136

YFMSToken.transferFrom(_from, address(this), _amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7edeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: stakeYFMS(uint256,address), txdata: 0xddc59a4300a08300000000000001000000000000bffaaffeafff3ffdafffaffec27eafff000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0
Caller: [CREATOR], function: stakeYFMS(uint256,address), txdata: 0xddc59a4300a08231000000000000000000004000affeaffeaffeaffeaffeaffeaffeafff7e7e7e7e7e7e7e7e7e7e7e7eaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: YFMSVault
Function name: stakeYFMS(uint256,address)
PC address: 3647
Estimated Gas Usage: 10725 - 151338
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./contracts/m_loop/loop1/0x181cfd48e5d22233e8b5c5dd3908123a2d9ef733.sol:136

YFMSToken.transferFrom(_from, address(this), _amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: stakeYFMS(uint256,address), txdata: 0xddc59a4300a08231000000000000000000000000aaaaaaaaaaabababaaaaaaaac2aaaaab000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, value: 0x0
Caller: [CREATOR], function: stakeYFMS(uint256,address), txdata: 0xddc59a4300a08231000000000000000000000000affeaffeaffeaffeaffeaffeaffeafffc2c2c2c2c2c2c2c2c2c2c2c2affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: YFMSVault
Function name: stakeYFMS(uint256,address)
PC address: 4013
Estimated Gas Usage: 10725 - 151338
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./contracts/m_loop/loop1/0x181cfd48e5d22233e8b5c5dd3908123a2d9ef733.sol:137

CuraAnnonae.stake("YFMS", _from, _amount, address(this))

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: c2c2c2c2c2c2c2c2c2c2c2c2deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: stakeYFMS(uint256,address), txdata: 0xddc59a4300a08301000000000001000000000000aaaaaaaaaaaab2d4334aaaaac2d62aab000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, value: 0x0
Caller: [CREATOR], function: stakeYFMS(uint256,address), txdata: 0xddc59a4300a08231000000000000000000004000affeaffeaffeaffeaffeaffeaffeafffc2c2c2c2c2c2c2c2c2c2c2c2affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: YFMSVault
Function name: stakers(uint256)
PC address: 5093
Estimated Gas Usage: 1166 - 1261
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./contracts/m_loop/loop1/0x181cfd48e5d22233e8b5c5dd3908123a2d9ef733.sol:89

address[] public stakers

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: stakers(uint256), txdata: 0xfd5e6dd10000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: YFMSVault
Function name: unstakeYFMS(address)
PC address: 5548
Estimated Gas Usage: 21784 - 217293
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./contracts/m_loop/loop1/0x181cfd48e5d22233e8b5c5dd3908123a2d9ef733.sol:124

stakers[stakers.length - 1]

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: unstakeYFMS(address), txdata: 0xeda19848000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0



---------------------------------------------
For contract 0x181cfd48e5d22233e8b5c5dd3908123a2d9ef733.sol
Tool Runtime = 249.88690542599943 seconds
#############################################