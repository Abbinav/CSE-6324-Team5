==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ERC721
Function name: getStringData(bytes32)
PC address: 4341
Estimated Gas Usage: 3506 - 5204
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./contracts/m_loop/loop7/0x8401d5cb939f1ed07a9f52f1e58f493961ffdbc9.sol:315

return user_dataList[msg.sender][key]

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000080000009020, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: setStringData(bytes32,string), txdata: 0x21f4856f00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: getStringData(bytes32), txdata: 0x63a67c1c0000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ERC721
Function name: getStringData(bytes32)
PC address: 4393
Estimated Gas Usage: 3506 - 5204
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./contracts/m_loop/loop7/0x8401d5cb939f1ed07a9f52f1e58f493961ffdbc9.sol:315

return user_dataList[msg.sender][key]

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000080000009020, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: setStringData(bytes32,string), txdata: 0x21f4856f00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: getStringData(bytes32), txdata: 0x63a67c1c0000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: KayboMon
Function name: getbaseImageUrl()
PC address: 8905
Estimated Gas Usage: 4247 - 6366
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./contracts/m_loop/loop7/0x8401d5cb939f1ed07a9f52f1e58f493961ffdbc9.sol:387

return baseImageUrl

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setbaseImageUrl(string), txdata: 0x462ecc6a00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000021000000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: getbaseImageUrl(), txdata: 0x5f2fc459, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: KayboMon
Function name: getbaseImageUrl()
PC address: 8957
Estimated Gas Usage: 4247 - 6366
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./contracts/m_loop/loop7/0x8401d5cb939f1ed07a9f52f1e58f493961ffdbc9.sol:387

return baseImageUrl

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setbaseImageUrl(string), txdata: 0x462ecc6a00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000021000000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: getbaseImageUrl(), txdata: 0x5f2fc459, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: KayboMon
Function name: getStringData(bytes32)
PC address: 9347
Estimated Gas Usage: 3551 - 5249
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./contracts/m_loop/loop7/0x8401d5cb939f1ed07a9f52f1e58f493961ffdbc9.sol:315

return user_dataList[msg.sender][key]

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000080000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x80, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: setStringData(bytes32,string), txdata: 0x21f4856f00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: getStringData(bytes32), txdata: 0x63a67c1c0000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: KayboMon
Function name: getStringData(bytes32)
PC address: 9399
Estimated Gas Usage: 3551 - 5249
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./contracts/m_loop/loop7/0x8401d5cb939f1ed07a9f52f1e58f493961ffdbc9.sol:315

return user_dataList[msg.sender][key]

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000080000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x80, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: setStringData(bytes32,string), txdata: 0x21f4856f00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: getStringData(bytes32), txdata: 0x63a67c1c0000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: ERC721
Function name: setStringData(bytes32,string)
PC address: 9943
Estimated Gas Usage: 17190 - 80721
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x180000206080902, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x5000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: setStringData(bytes32,string), txdata: 0x21f4856f0000000000000000000000000000000000000000000000000000000000000021000000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: setStringData(bytes32,string), txdata: 0x21f4856f00000000000000000000000000000000000000000000000000000000000000210000000000000000000000000000000000000000000000000000000000000000cd, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: KayboMon
Function name: getbaseMeta()
PC address: 12772
Estimated Gas Usage: 4245 - 6364
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./contracts/m_loop/loop7/0x8401d5cb939f1ed07a9f52f1e58f493961ffdbc9.sol:386

return baseMeta

--------------------
Initial State:

Account: [CREATOR], balance: 0x8080000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setbaseMeta(string), txdata: 0x01adcce700000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000021000000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: getbaseMeta(), txdata: 0xc8a5113f, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: KayboMon
Function name: getbaseMeta()
PC address: 12824
Estimated Gas Usage: 4245 - 6364
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./contracts/m_loop/loop7/0x8401d5cb939f1ed07a9f52f1e58f493961ffdbc9.sol:386

return baseMeta

--------------------
Initial State:

Account: [CREATOR], balance: 0x8080000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setbaseMeta(string), txdata: 0x01adcce700000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000021000000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: getbaseMeta(), txdata: 0xc8a5113f, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: KayboMon
Function name: setCardName(uint256,string)
PC address: 18561
Estimated Gas Usage: 18039 - 81710
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setCardName(uint256,string), txdata: 0x20d7d8fa0000000000000000000000000000000000000000000000000000000000000021000000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: setCardName(uint256,string), txdata: 0x20d7d8fa00000000000000000000000000000000000000000000000000000000000000210000000000000000000000000000000000000000000000000000000000000000c0, value: 0x0



---------------------------------------------
For contract 0x8401d5cb939f1ed07a9f52f1e58f493961ffdbc9.sol
Tool Runtime = 11819.793955868008 seconds
#############################################