==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: miningPoolAirdropper
Function name: withdrawalToken(address)
PC address: 1960
Estimated Gas Usage: 6264 - 76568
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_loop/4/0xc18f41600d111a195b107f89e82f45331ace38bb.sol:1292

tokenErc20.transfer(owner(), token.balanceOf(address(this)))

--------------------
Initial State:

Account: [CREATOR], balance: 0x80, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: airTransfer(uint256,uint256,uint256,uint256), txdata: 0x3a1462661cc40000000000000000000000000000000000000000000000000000000000011cc400000000000000000000000000000000000000000000000000000000000201010101010101020101010101010101010101010101010101010101010101020000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: withdrawalToken(address), txdata: 0x062e43a1030303030303030303030303deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: miningPoolAirdropper
Function name: withdrawalToken(address)
PC address: 1960
Estimated Gas Usage: 6264 - 76568
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_loop/4/0xc18f41600d111a195b107f89e82f45331ace38bb.sol:1292

tokenErc20.transfer(owner(), token.balanceOf(address(this)))

--------------------
Initial State:

Account: [CREATOR], balance: 0xe182, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawalToken(address), txdata: 0x062e43a10000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: miningPoolAirdropper
Function name: airDefiTransfer(address)
PC address: 2591
Estimated Gas Usage: 15737 - 91860
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_loop/4/0xc18f41600d111a195b107f89e82f45331ace38bb.sol:1136

token.transfer(_recipients,airdropAmout)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setToken(address), txdata: 0x144fa6d7000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: airDefiTransfer(address), txdata: 0x12a9d350a6a6a6a6a6a6a6a6a6a6a6a60000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: miningPoolAirdropper
Function name: airDefiTransfer(address)
PC address: 2715
Estimated Gas Usage: 15737 - 91860
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_loop/4/0xc18f41600d111a195b107f89e82f45331ace38bb.sol:1138

isAirdrop[_recipients] = 1

--------------------
Initial State:

Account: [CREATOR], balance: 0x1c02200000114086, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: airDefiTransfer(address), txdata: 0x12a9d3500000000000000000000000000000010001020200000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: miningPoolAirdropper
Function name: airDefiTransfer(address)
PC address: 2783
Estimated Gas Usage: 15737 - 91860
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_loop/4/0xc18f41600d111a195b107f89e82f45331ace38bb.sol:1140

isAirdrop[msg.sender] = 1

--------------------
Initial State:

Account: [CREATOR], balance: 0x1c02200000114086, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: airDefiTransfer(address), txdata: 0x12a9d3500000000000000000000000000000010001020200000000000000000000000000, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: miningPoolAirdropper
Function name: airTransfer(uint256,uint256,uint256,uint256)
PC address: 3275
Estimated Gas Usage: 22541 - 304251
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_loop/4/0xc18f41600d111a195b107f89e82f45331ace38bb.sol:1164

masterChef.regisUser(j)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: airDefiTransfer(address), txdata: 0x12a9d3500000000000000000000000000000000000000000000000000000000001018000, value: 0x0
Caller: [CREATOR], function: airTransfer(uint256,uint256,uint256,uint256), txdata: 0x3a146266ad5ab5d6d6d6d6ad00000000000000000000000000000000fffffffffffffffead5ab5d6d6d6d6ad00000000000000000000000000000001000000000000000101010101010101010101010101010101010101010101010101010101000000008080808080808080808080808080808080808080808080808080808080808080, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: miningPoolAirdropper
Function name: airTransfer(uint256,uint256,uint256,uint256)
PC address: 3531
Estimated Gas Usage: 12103 - 153311
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_loop/4/0xc18f41600d111a195b107f89e82f45331ace38bb.sol:1168

masterChef.userInfo(pid,_addr)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: airTransfer(uint256,uint256,uint256,uint256), txdata: 0x3a146266bfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010101010101010101010101010101020000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: miningPoolAirdropper
Function name: test(uint256,uint256)
PC address: 5466
Estimated Gas Usage: 7130 - 78513
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_loop/4/0xc18f41600d111a195b107f89e82f45331ace38bb.sol:1208

masterChef.userInfo(pid,_addr)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: test(uint256,uint256), txdata: 0xeb8ac92100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



---------------------------------------------
For contract 0xc18f41600d111a195b107f89e82f45331ace38bb.sol
Tool Runtime = 4347.024460803001 seconds
#############################################