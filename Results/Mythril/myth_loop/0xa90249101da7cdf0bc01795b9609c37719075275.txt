==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: UpsweepV1
Function name: balancesById(uint256,uint256)
PC address: 8333
Estimated Gas Usage: 412 - 697
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./contracts/m_loop/loop1/0xa90249101da7cdf0bc01795b9609c37719075275.sol:53

mapping(uint => uint8[20]) public balancesById

--------------------
Initial State:

Account: [CREATOR], balance: 0x40, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: balancesById(uint256,uint256), txdata: 0xd81a63eb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: UpsweepV1
Function name: bottleneckById(uint256,uint256)
PC address: 8389
Estimated Gas Usage: 434 - 719
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./contracts/m_loop/loop1/0xa90249101da7cdf0bc01795b9609c37719075275.sol:54

mapping(uint => uint8[20]) public bottleneckById

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bottleneckById(uint256,uint256), txdata: 0xd9cfd55800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008040020020, value: 0x0



---------------------------------------------
For contract 0xa90249101da7cdf0bc01795b9609c37719075275.sol
Tool Runtime = 295.8623718280014 seconds
#############################################