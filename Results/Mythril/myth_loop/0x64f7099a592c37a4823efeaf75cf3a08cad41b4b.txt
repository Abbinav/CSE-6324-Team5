==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: UNI3d
Function name: calculateResult(uint256,bool,bool)
PC address: 3102
Estimated Gas Usage: 1908 - 2284
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./contracts/m_loop/loop2/0x64f7099a592c37a4823efeaf75cf3a08cad41b4b.sol:168

_amount + 1e18

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: calculateResult(uint256,bool,bool), txdata: 0x3472956cfffffffffffffffffffffffffffffffffffffffffffffffff80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: UNI3d
Function name: calculateResult(uint256,bool,bool)
PC address: 3104
Estimated Gas Usage: 1891 - 2267
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./contracts/m_loop/loop2/0x64f7099a592c37a4823efeaf75cf3a08cad41b4b.sol:168

_increment * (_amount + 1e18)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000024c46, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: calculateResult(uint256,bool,bool), txdata: 0x3472956c44400fc804ae62d5912f885722300001026002010266bd0ff3a771a32522f26a80010101020802020201010204010180040201088002010120022001042010000801010802020802400201200880201001208004800140102080100810402010, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: UNI3d
Function name: calculateResult(uint256,bool,bool)
PC address: 3118
Estimated Gas Usage: 1891 - 2267
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./contracts/m_loop/loop2/0x64f7099a592c37a4823efeaf75cf3a08cad41b4b.sol:168

_rate * _amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000420318d2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: calculateResult(uint256,bool,bool), txdata: 0x3472956c500490000000000000000000200000041001400608000000001c0a268080000080020402010120024020082040400102010840010102401004020804014001200804800408802010048008042020108020040804020120401008100402014010, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: UNI3d
Function name: calculateResult(uint256,bool,bool)
PC address: 3170
Estimated Gas Usage: 1908 - 2284
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./contracts/m_loop/loop2/0x64f7099a592c37a4823efeaf75cf3a08cad41b4b.sol:170

_amount + 1e18

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: calculateResult(uint256,bool,bool), txdata: 0x3472956cfffffffffffffffffffffffffffffffffffffffffffffffff80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: UNI3d
Function name: calculateResult(uint256,bool,bool)
PC address: 3172
Estimated Gas Usage: 1908 - 2284
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./contracts/m_loop/loop2/0x64f7099a592c37a4823efeaf75cf3a08cad41b4b.sol:170

_increment * (_amount + 1e18)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000080000000884, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: calculateResult(uint256,bool,bool), txdata: 0x3472956c01600057000000005ca81054829ea16002762100009d616171374b4d9c17a75400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: UNI3d
Function name: calculateResult(uint256,bool,bool)
PC address: 3186
Estimated Gas Usage: 1908 - 2284
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./contracts/m_loop/loop2/0x64f7099a592c37a4823efeaf75cf3a08cad41b4b.sol:170

_rate * _amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x400001000c9136, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: calculateResult(uint256,bool,bool), txdata: 0x3472956c400298020300407c50529a50400000043400011a67ae330e7700000000e7000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: UNI3d
Function name: transferAndCall(address,uint256,bytes)
PC address: 3932
Estimated Gas Usage: 31099 - 150208
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./contracts/m_loop/loop2/0x64f7099a592c37a4823efeaf75cf3a08cad41b4b.sol:115

Callable(_to).tokenCallback(msg.sender, _tokens, _data)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10446, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x100800000c000002, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: allInfoFor(address), txdata: 0x57f6b8120000000000000000000000000000000000000000000000000010000400000400, value: 0x0
Caller: [SOMEGUY], function: transferAndCall(address,uint256,bytes), txdata: 0x4000aea0040404040404040404040404deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: UNI3d
Function name: allInfoFor(address)
PC address: 4502
Estimated Gas Usage: 15237 - 121809
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./contracts/m_loop/loop2/0x64f7099a592c37a4823efeaf75cf3a08cad41b4b.sol:143

info.uni.balanceOf(_user)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: allInfoFor(address), txdata: 0x57f6b8120000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: UNI3d
Function name: allInfoFor(address)
PC address: 4805
Estimated Gas Usage: 15237 - 121809
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./contracts/m_loop/loop2/0x64f7099a592c37a4823efeaf75cf3a08cad41b4b.sol:144

info.uni.allowance(_user, address(this))

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: allInfoFor(address), txdata: 0x57f6b8120000000000000000000000000101010101010100000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: allInfoFor(address), txdata: 0x57f6b8120101010101010101010101010000000000000000000000000000000000000000, value: 0x0



---------------------------------------------
For contract 0x64f7099a592c37a4823efeaf75cf3a08cad41b4b.sol
Tool Runtime = 3373.413030508 seconds
#############################################