==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FreewayPreStakingRewardToken
Function name: name()
PC address: 2987
Estimated Gas Usage: 3231 - 4549
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./new_contracts/m_noloop/1/0xd21def826472d0753baa61722e2573792519a573.sol:733

return _name

--------------------
Initial State:

Account: [CREATOR], balance: 0x42212021080860000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initialize(string,string,uint8), txdata: 0x1624f6c600000000000000000000000000000000000000000000000000000000000000210000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: name(), txdata: 0x06fdde03, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FreewayPreStakingRewardToken
Function name: name()
PC address: 3039
Estimated Gas Usage: 3231 - 4549
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./new_contracts/m_noloop/1/0xd21def826472d0753baa61722e2573792519a573.sol:733

return _name

--------------------
Initial State:

Account: [CREATOR], balance: 0x42212021080860000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initialize(string,string,uint8), txdata: 0x1624f6c600000000000000000000000000000000000000000000000000000000000000210000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: name(), txdata: 0x06fdde03, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: FreewayPreStakingRewardToken
Function name: recoverERC20(address,address,uint256)
PC address: 3464
Estimated Gas Usage: 3198 - 38470
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/1/0xd21def826472d0753baa61722e2573792519a573.sol:1097

IERC20(tokenAddress).transfer(toAddress, tokenAmount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2017022210d25821b, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: initialize(address), txdata: 0xc4d66de8000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: recoverERC20(address,address,uint256), txdata: 0x1171bda9c4c4c4c4c4c4c4c4c4c4c4c4deadbeefdeadbeefdeadbeefdeadbeefdeadbeefc4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FreewayPreStakingRewardToken
Function name: symbol()
PC address: 5005
Estimated Gas Usage: 3252 - 4570
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./new_contracts/m_noloop/1/0xd21def826472d0753baa61722e2573792519a573.sol:741

return _symbol

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4000000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: initialize(string,string,uint8), txdata: 0x1624f6c60000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: symbol(), txdata: 0x95d89b41, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FreewayPreStakingRewardToken
Function name: symbol()
PC address: 5057
Estimated Gas Usage: 3252 - 4570
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./new_contracts/m_noloop/1/0xd21def826472d0753baa61722e2573792519a573.sol:741

return _symbol

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4000000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: initialize(string,string,uint8), txdata: 0x1624f6c60000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: symbol(), txdata: 0x95d89b41, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: FreewayPreStakingRewardToken
Function name: transfer(address,uint256)
PC address: 5759
Estimated Gas Usage: 355 - 450
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_noloop/1/0xd21def826472d0753baa61722e2573792519a573.sol:1038

assert(msg.data.length == numwords * 32 + 4)

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transfer(address,uint256), txdata: 0xa9059cbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FreewayPreStakingRewardToken
Function name: initialize(address)
PC address: 6200
Estimated Gas Usage: 91344 - 325950
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./new_contracts/m_noloop/1/0xd21def826472d0753baa61722e2573792519a573.sol:1034

500000 * (10**uint256(decimals()))

--------------------
Initial State:

Account: [CREATOR], balance: 0x20030009000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: initialize(address), txdata: 0xc4d66de80000000000000000000000000000000000000001080801000400042080800204, value: 0x0



---------------------------------------------
For contract 0xd21def826472d0753baa61722e2573792519a573.sol
Tool Runtime = 8409.577769940995 seconds
#############################################