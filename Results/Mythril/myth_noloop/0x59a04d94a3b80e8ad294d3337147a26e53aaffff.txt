==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4114
Estimated Gas Usage: 1365 - 1840
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_noloop/12/0x59a04d94a3b80e8ad294d3337147a26e53aaffff.sol:70

assert(c >= a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approve(address,uint256), txdata: 0x095ea7b3000000000000000000000000000000001000100100000001400000000000001000180000000000000000000000000000000000000000008cfec94390dd6cc004, value: 0x0
Caller: [SOMEGUY], function: increaseApproval(address,uint256), txdata: 0xd73dd6235e5e5e5e5e5e5e5e5e5e5e5e0000000010001001000000014000000000000010ffebffffffffffffffffffffffffffffffffffffffffffa010395e3390ca5ffc, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: SocialRocket
Function name: increaseApproval(address,uint256)
PC address: 7970
Estimated Gas Usage: 2307 - 3112
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_noloop/12/0x59a04d94a3b80e8ad294d3337147a26e53aaffff.sol:70

assert(c >= a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: approve(address,uint256), txdata: 0x095ea7b300000000000000000000000000000080000000000000020400000000000000000000000000000000000000000000000000009a858b53b768ba400116e8eeaa20, value: 0x0
Caller: [CREATOR], function: increaseApproval(address,uint256), txdata: 0xd73dd6235e5e5e5e5e5e5e5e5e5e5e5e0000008000000000000002040000000000000000ffffffffffffffffffffffffffffffffffff8204061904441349103425881a80, value: 0x0



---------------------------------------------
For contract 0x59a04d94a3b80e8ad294d3337147a26e53aaffff.sol
Tool Runtime = 1465.6814032310212 seconds
#############################################