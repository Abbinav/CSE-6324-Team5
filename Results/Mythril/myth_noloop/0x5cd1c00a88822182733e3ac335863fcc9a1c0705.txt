==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4734
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:259

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c1000402009112, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5914928000481305b0400a20d0f01200312c4c0891510542831c666061959817968, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4796
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:262

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000040000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourXFIBalance(address), txdata: 0xe474df210000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d59104a50046768009000a808a2186e18040000020e2d13042947de3a01494210810, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4897
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:268

stakers[msg.sender].remainder += owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000040000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourXFIBalance(address), txdata: 0xe474df210000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d59104a50046768009000a808a2186e18040000020e2d13042947de3a01494210810, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4904
Estimated Gas Usage: 56437 - 237079
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:268

stakers[msg.sender].remainder += owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c1000402009112, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5914928000481305b0400a20d0f01200312c4c0891510542831c666061959817968, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4975
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:270

stakers[msg.sender].stakedTokens

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000040000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourXFIBalance(address), txdata: 0xe474df210000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d59104a50046768009000a808a2186e18040000020e2d13042947de3a01494210810, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5077
Estimated Gas Usage: 56437 - 237079
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:270

stakers[msg.sender].stakedTokens = (tokens.sub(_stakingFee)).add(stakers[msg.sender].stakedTokens)

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c1000402009112, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5914928000481305b0400a20d0f01200312c4c0891510542831c666061959817968, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5148
Estimated Gas Usage: 56437 - 237079
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:271

stakers[msg.sender].lastDividends = owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c1000402009112, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5914928000481305b0400a20d0f01200312c4c0891510542831c666061959817968, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5152
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:272

totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000040000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourXFIBalance(address), txdata: 0xe474df210000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d59104a50046768009000a808a2186e18040000020e2d13042947de3a01494210810, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5221
Estimated Gas Usage: 56437 - 237079
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:272

stakers[msg.sender].fromTotalDividend= totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c1000402009112, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5914928000481305b0400a20d0f01200312c4c0891510542831c666061959817968, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5225
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:273

round

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000040000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourXFIBalance(address), txdata: 0xe474df210000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d59104a50046768009000a808a2186e18040000020e2d13042947de3a01494210810, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5294
Estimated Gas Usage: 56437 - 237079
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:273

stakers[msg.sender].round =  round

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c1000402009112, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5914928000481305b0400a20d0f01200312c4c0891510542831c666061959817968, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5320
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:275

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000040000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourXFIBalance(address), txdata: 0xe474df210000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d59104a50046768009000a808a2186e18040000020e2d13042947de3a01494210810, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5339
Estimated Gas Usage: 56437 - 237079
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:275

totalStakes = totalStakes.add(tokens.sub(_stakingFee))

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c1000402009112, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5914928000481305b0400a20d0f01200312c4c0891510542831c666061959817968, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6324
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:331

scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c1000402009112, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5914928000481305b0400a20d0f01200312c4c0891510542831c666061959817968, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6470
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:331

stakers[staker].round

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c1000402009112, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5914928000481305b0400a20d0f01200312c4c0891510542831c666061959817968, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6486
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:331

payouts[stakers[staker].round - 1]

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000040000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourXFIBalance(address), txdata: 0xe474df210000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d59104a50046768009000a808a2186e18040000020e2d13042947de3a01494210810, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6489
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:331

totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c1000402009112, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5914928000481305b0400a20d0f01200312c4c0891510542831c666061959817968, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6606
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:332

stakers[staker].stakedTokens

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c1000402009112, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5914928000481305b0400a20d0f01200312c4c0891510542831c666061959817968, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6682
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:332

stakers[staker].round

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000040000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourXFIBalance(address), txdata: 0xe474df210000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d59104a50046768009000a808a2186e18040000020e2d13042947de3a01494210810, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6698
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:332

payouts[stakers[staker].round - 1]

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c1000402009112, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5914928000481305b0400a20d0f01200312c4c0891510542831c666061959817968, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6810
Estimated Gas Usage: 56437 - 237079
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:332

stakers[staker].remainder += ((totalDividends.sub(payouts[stakers[staker].round - 1])).mul(stakers[staker].stakedTokens)) % scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c1000402009112, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5914928000481305b0400a20d0f01200312c4c0891510542831c666061959817968, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6817
Estimated Gas Usage: 56437 - 237079
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/10/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:332

stakers[staker].remainder += ((totalDividends.sub(payouts[stakers[staker].round - 1])).mul(stakers[staker].stakedTokens)) % scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c1000402009112, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5914928000481305b0400a20d0f01200312c4c0891510542831c666061959817968, value: 0x0



---------------------------------------------
For contract 0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol
Tool Runtime = 1005.1693309010006 seconds
#############################################