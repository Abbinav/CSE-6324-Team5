==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: airdrop
Function name: claimRewards()
PC address: 1315
Estimated Gas Usage: 1006 - 1101
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/10/0xB4dDe1cAb5012e14F49F982263d82b67e109685E.sol:279

require(block.number > stakingEnd)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000000098501, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: claimRewards(), txdata: 0x372500ab, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: airdrop
Function name: setEnd(uint256)
PC address: 2250
Estimated Gas Usage: 1296 - 1721
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/10/0xB4dDe1cAb5012e14F49F982263d82b67e109685E.sol:287

require(block.number < blocknumber)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setEnd(uint256), txdata: 0x7f498ffc0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: airdrop
Function name: stake(uint256)
PC address: 2610
Estimated Gas Usage: 1986 - 2411
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/10/0xB4dDe1cAb5012e14F49F982263d82b67e109685E.sol:247

require(block.number < stakingEnd, "can't stake after staking period is over")

--------------------
Initial State:

Account: [CREATOR], balance: 0x400084001000d0000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setStake(address), txdata: 0xe2ea13190000000000000000000000000101010101012001020101010101010140010101, value: 0x0
Caller: [SOMEGUY], function: stake(uint256), txdata: 0xa694fc3ae2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2, value: 0x0



---------------------------------------------
For contract 0xB4dDe1cAb5012e14F49F982263d82b67e109685E.sol
Tool Runtime = 138.69065370899625 seconds
#############################################