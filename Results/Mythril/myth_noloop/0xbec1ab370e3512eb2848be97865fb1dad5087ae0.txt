==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ERC20Mintable
Function name: mint(address,uint256)
PC address: 2255
Estimated Gas Usage: 2109 - 2534
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_noloop/10/0xbec1ab370e3512eb2848be97865fb1dad5087ae0.sol:49

assert(c >= a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: mint(address,uint256), txdata: 0x40c10f190000000000000000000000008010201080020201800402010100202002024008552a12021a1c10ee08028707726edc1603e2bcb9919e2d80b21fbb2f2d2c010e, value: 0x0
Caller: [CREATOR], function: mint(address,uint256), txdata: 0x40c10f190000000000000000000000002001010101804001088010400110102001020100c416f6007008f000f8028001224845f8440e06a3372822080138200269284004, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4115
Estimated Gas Usage: 1368 - 1843
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_noloop/10/0xbec1ab370e3512eb2848be97865fb1dad5087ae0.sol:49

assert(c >= a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x405089004000c1002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approve(address,uint256), txdata: 0x095ea7b300000000000000000000000008040080100402100420100001400108021040800000000000000000000800000020000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: increaseApproval(address,uint256), txdata: 0xd73dd6235e5e5e5e5e5e5e5e5e5e5e5e0804008010040210042010000140010802104080fffffffffffffffffff801064ff814300a010142458007800800004040401002, value: 0x0



---------------------------------------------
For contract 0xbec1ab370e3512eb2848be97865fb1dad5087ae0.sol
Tool Runtime = 3076.7580965579837 seconds
#############################################