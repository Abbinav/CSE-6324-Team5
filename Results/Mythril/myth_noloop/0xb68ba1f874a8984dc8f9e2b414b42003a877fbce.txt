==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: NarToken
Function name: name()
PC address: 2171
Estimated Gas Usage: 3223 - 4541
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./new_contracts/m_noloop/8/0xb68ba1f874a8984dc8f9e2b414b42003a877fbce.sol:105

string public name

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: initialize(string,string,uint8), txdata: 0x1624f6c600000000000000000000000000000000000000000000000000000000000000210000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: name(), txdata: 0x06fdde03, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: NarToken
Function name: name()
PC address: 2223
Estimated Gas Usage: 3223 - 4541
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./new_contracts/m_noloop/8/0xb68ba1f874a8984dc8f9e2b414b42003a877fbce.sol:105

string public name

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: initialize(string,string,uint8), txdata: 0x1624f6c600000000000000000000000000000000000000000000000000000000000000210000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: name(), txdata: 0x06fdde03, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: NarToken
Function name: symbol()
PC address: 9208
Estimated Gas Usage: 3265 - 4583
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./new_contracts/m_noloop/8/0xb68ba1f874a8984dc8f9e2b414b42003a877fbce.sol:106

string public symbol

--------------------
Initial State:

Account: [CREATOR], balance: 0x40, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: initialize(string,string,uint8), txdata: 0x1624f6c60000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: symbol(), txdata: 0x95d89b41, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: NarToken
Function name: symbol()
PC address: 9260
Estimated Gas Usage: 3265 - 4583
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./new_contracts/m_noloop/8/0xb68ba1f874a8984dc8f9e2b414b42003a877fbce.sol:106

string public symbol

--------------------
Initial State:

Account: [CREATOR], balance: 0x40, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: initialize(string,string,uint8), txdata: 0x1624f6c60000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: symbol(), txdata: 0x95d89b41, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: NarToken
Function name: mint(address,uint256)
PC address: 11508
Estimated Gas Usage: 3997 - 5272
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_noloop/8/0xb68ba1f874a8984dc8f9e2b414b42003a877fbce.sol:26

assert(z >= x)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20400000200006008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: mint(address,uint256), txdata: 0x40c10f19000000000000000000000000010101010200000401020010040000000000000088c3c4900253a840aac009992606578516a5303981a2821218abc5a4052b23cc, value: 0x0
Caller: [CREATOR], function: mint(address,uint256), txdata: 0x40c10f1906060606060606060606060601010101010101010101010101010101010101019bc079002c3477c355affa89e71c143d74eb53ea800c3ef232804c2c08180c86, value: 0x0



---------------------------------------------
For contract 0xb68ba1f874a8984dc8f9e2b414b42003a877fbce.sol
Tool Runtime = 5178.6404261169955 seconds
#############################################