==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Minter
Function name: mintAll()
PC address: 1565
Estimated Gas Usage: 3091 - 3942
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/2/0x557AeD48fE5E604725Ee61A60421F2AFC28FcE6F.sol:235

currentDuration < DURATION ? currentDuration : DURATION

--------------------
Initial State:

Account: [CREATOR], balance: 0x410c0102080414, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: mintAll(), txdata: 0x595882b3, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Minter
Function name: mintAll()
PC address: 5136
Estimated Gas Usage: 3250 - 4101
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/2/0x557AeD48fE5E604725Ee61A60421F2AFC28FcE6F.sol:89

require(c / a == b, "SafeMath: multiplication overflow")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: mintAll(), txdata: 0x595882b3, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Minter
Function name: mintAll()
PC address: 5316
Estimated Gas Usage: 2986 - 3837
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/2/0x557AeD48fE5E604725Ee61A60421F2AFC28FcE6F.sol:64

require(b <= a, errorMessage)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1080502084cec, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: mintAll(), txdata: 0x595882b3, value: 0x0



---------------------------------------------
For contract 0x557AeD48fE5E604725Ee61A60421F2AFC28FcE6F.sol
Tool Runtime = 86.90445374599949 seconds
#############################################