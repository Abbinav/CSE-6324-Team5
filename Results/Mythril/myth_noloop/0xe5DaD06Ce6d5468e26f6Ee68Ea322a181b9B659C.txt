==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 10779
Estimated Gas Usage: 80805 - 363654
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:979

_totalEscrows

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4c9092b22008048, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000000000000000008080200800000001001004000100028002028040000000800801000040002004040020401004010040800420804000000401400480100101040040000800000401008080100200010120200000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1010101010101010101010104004801000400120011002800220010210082001101010101010101010101010040800020120010404204020010801044008081010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000480000220010210000401100000800410040440008002400202020820800210101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000064, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 10872
Estimated Gas Usage: 80805 - 363654
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:989

escrow.status = Status.FUNDED

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4c9092b22008048, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000000000000000008080200800000001001004000100028002028040000000800801000040002004040020401004010040800420804000000401400480100101040040000800000401008080100200010120200000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1010101010101010101010104004801000400120011002800220010210082001101010101010101010101010040800020120010404204020010801044008081010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000480000220010210000401100000800410040440008002400202020820800210101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000064, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 10895
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:989

escrow.status = Status.FUNDED

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 10899
Estimated Gas Usage: 79159 - 361678
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:990

_totalEscrows

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 10957
Estimated Gas Usage: 11969 - 70728
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:993

require(lastDepositTime > block.timestamp, "EscrowService: Invalid last deposit time")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0xc00000003006, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9aa7a7a7a7a7a7a7a7a7a7a7a7eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeea7a7a7a7a7a7a7a7a7a7a7a70101100180000101010201010101010101100120a7a7a7a7a7a7a7a7a7a7a7a70220204002012020022040000000000101010101a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a70000000000000000000000000000000000000000000000000000000000000000000000000010a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a70000000000000000000000000000000000000000000000000000000000000086, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11052
Estimated Gas Usage: 79226 - 362028
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:994

escrow.status = Status.CREATED

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000024001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000014001100000000000000000000000000000000000400120000101800101800101008010208001014001800401808001081080080104044001010001000001010104010000014040010040010100010410800208000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9aa7a7a7a7a7a7a7a7a7a7a7a7eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeea7a7a7a7a7a7a7a7a7a7a7a70104044001100400100180808008010202100102a7a70000000000000000000000000000000000000000000000000000000000000001a7a7a7a7a7a7a7a7a7a7010101010101010801010401010101010101010100000000000000000000000000000000000000000000000000000000000000000000000008202004100880200000004020000000008000000004080002000401a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a70000000000000000000000000000000000000000000000000000000000000042, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11075
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:994

escrow.status = Status.CREATED

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11136
Estimated Gas Usage: 79226 - 362028
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:997

_mediationService

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000024001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000014001100000000000000000000000000000000000400120000101800101800101008010208001014001800401808001081080080104044001010001000001010104010000014040010040010100010410800208000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9aa7a7a7a7a7a7a7a7a7a7a7a7eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeea7a7a7a7a7a7a7a7a7a7a7a70104044001100400100180808008010202100102a7a70000000000000000000000000000000000000000000000000000000000000001a7a7a7a7a7a7a7a7a7a7010101010101010801010401010101010101010100000000000000000000000000000000000000000000000000000000000000000000000008202004100880200000004020000000008000000004080002000401a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a70000000000000000000000000000000000000000000000000000000000000042, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11177
Estimated Gas Usage: 79226 - 362028
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:997

escrow.mediator = _mediationService

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000024001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000014001100000000000000000000000000000000000400120000101800101800101008010208001014001800401808001081080080104044001010001000001010104010000014040010040010100010410800208000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9aa7a7a7a7a7a7a7a7a7a7a7a7eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeea7a7a7a7a7a7a7a7a7a7a7a70104044001100400100180808008010202100102a7a70000000000000000000000000000000000000000000000000000000000000001a7a7a7a7a7a7a7a7a7a7010101010101010801010401010101010101010100000000000000000000000000000000000000000000000000000000000000000000000008202004100880200000004020000000008000000004080002000401a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a70000000000000000000000000000000000000000000000000000000000000042, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11230
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:997

escrow.mediator = _mediationService

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11234
Estimated Gas Usage: 80805 - 363654
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:998

_mediationServiceFee

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4c9092b22008048, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000000000000000008080200800000001001004000100028002028040000000800801000040002004040020401004010040800420804000000401400480100101040040000800000401008080100200010120200000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1010101010101010101010104004801000400120011002800220010210082001101010101010101010101010040800020120010404204020010801044008081010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000480000220010210000401100000800410040440008002400202020820800210101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000064, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11241
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:998

escrow.mediationFee = _mediationServiceFee

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11260
Estimated Gas Usage: 80805 - 363654
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1001

escrow.mediator = mediator

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4c9092b22008048, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000000000000000008080200800000001001004000100028002028040000000800801000040002004040020401004010040800420804000000401400480100101040040000800000401008080100200010120200000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1010101010101010101010104004801000400120011002800220010210082001101010101010101010101010040800020120010404204020010801044008081010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000480000220010210000401100000800410040440008002400202020820800210101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000064, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11313
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1001

escrow.mediator = mediator

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11322
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1002

escrow.mediationFee = mediationFee

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11337
Estimated Gas Usage: 80805 - 363654
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1005

escrow.token = tokenAddress

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4c9092b22008048, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000000000000000008080200800000001001004000100028002028040000000800801000040002004040020401004010040800420804000000401400480100101040040000800000401008080100200010120200000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1010101010101010101010104004801000400120011002800220010210082001101010101010101010101010040800020120010404204020010801044008081010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000480000220010210000401100000800410040440008002400202020820800210101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000064, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11390
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1005

escrow.token = tokenAddress

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11404
Estimated Gas Usage: 79226 - 362028
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1006

escrow.recepient = recepient

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000024001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000014001100000000000000000000000000000000000400120000101800101800101008010208001014001800401808001081080080104044001010001000001010104010000014040010040010100010410800208000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9aa7a7a7a7a7a7a7a7a7a7a7a7eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeea7a7a7a7a7a7a7a7a7a7a7a70104044001100400100180808008010202100102a7a70000000000000000000000000000000000000000000000000000000000000001a7a7a7a7a7a7a7a7a7a7010101010101010801010401010101010101010100000000000000000000000000000000000000000000000000000000000000000000000008202004100880200000004020000000008000000004080002000401a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a70000000000000000000000000000000000000000000000000000000000000042, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11457
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1006

escrow.recepient = recepient

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11471
Estimated Gas Usage: 80805 - 363654
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1007

escrow.depositor = depositor

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4c9092b22008048, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000000000000000008080200800000001001004000100028002028040000000800801000040002004040020401004010040800420804000000401400480100101040040000800000401008080100200010120200000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1010101010101010101010104004801000400120011002800220010210082001101010101010101010101010040800020120010404204020010801044008081010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000480000220010210000401100000800410040440008002400202020820800210101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000064, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11524
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1007

escrow.depositor = depositor

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11538
Estimated Gas Usage: 80805 - 363654
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1008

escrow.creator = msg.sender

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4c9092b22008048, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000000000000000008080200800000001001004000100028002028040000000800801000040002004040020401004010040800420804000000401400480100101040040000800000401008080100200010120200000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1010101010101010101010104004801000400120011002800220010210082001101010101010101010101010040800020120010404204020010801044008081010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000480000220010210000401100000800410040440008002400202020820800210101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000064, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11591
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1008

escrow.creator = msg.sender

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11600
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1009

escrow.amount = amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11634
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1011

escrow.lastDepositTime = lastDepositTime

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11643
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1012

escrow.createdTime = now

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11703
Estimated Gas Usage: 79226 - 362028
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1014

_totalEscrows

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000024001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000014001100000000000000000000000000000000000400120000101800101800101008010208001014001800401808001081080080104044001010001000001010104010000014040010040010100010410800208000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9aa7a7a7a7a7a7a7a7a7a7a7a7eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeea7a7a7a7a7a7a7a7a7a7a7a70104044001100400100180808008010202100102a7a70000000000000000000000000000000000000000000000000000000000000001a7a7a7a7a7a7a7a7a7a7010101010101010801010401010101010101010100000000000000000000000000000000000000000000000000000000000000000000000008202004100880200000004020000000008000000004080002000401a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a70000000000000000000000000000000000000000000000000000000000000042, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11732
Estimated Gas Usage: 80805 - 363654
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1019

escrow.mediator

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4c9092b22008048, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000000000000000008080200800000001001004000100028002028040000000800801000040002004040020401004010040800420804000000401400480100101040040000800000401008080100200010120200000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1010101010101010101010104004801000400120011002800220010210082001101010101010101010101010040800020120010404204020010801044008081010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000480000220010210000401100000800410040440008002400202020820800210101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000064, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 11865
Estimated Gas Usage: 79226 - 362028
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1020

_totalEscrows

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000024001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000014001100000000000000000000000000000000000400120000101800101800101008010208001014001800401808001081080080104044001010001000001010104010000014040010040010100010410800208000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9aa7a7a7a7a7a7a7a7a7a7a7a7eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeea7a7a7a7a7a7a7a7a7a7a7a70104044001100400100180808008010202100102a7a70000000000000000000000000000000000000000000000000000000000000001a7a7a7a7a7a7a7a7a7a7010101010101010801010401010101010101010100000000000000000000000000000000000000000000000000000000000000000000000008202004100880200000004020000000008000000004080002000401a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a70000000000000000000000000000000000000000000000000000000000000042, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 13383
Estimated Gas Usage: 79159 - 361678
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol:1057

_feeWallet.call.value(fee)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x800008000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000401004000000000000000000000000000000000080100400800001004001010101010101010101010101010180012040010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [CREATOR], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee101010101010101010101010010101010101010180081001010104040101010110101010101010101010101001010101010101010101010101010101010100011010101010101010101010100200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000006d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 15946
Estimated Gas Usage: 80805 - 363654
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state. This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4c9092b22008048, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000000000000000008080200800000001001004000100028002028040000000800801000040002004040020401004010040800420804000000401400480100101040040000800000401008080100200010120200000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [ATTACKER], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a101010101010101010101010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1010101010101010101010104004801000400120011002800220010210082001101010101010101010101010040800020120010404204020010801044008081010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000480000220010210000401100000800410040440008002400202020820800210101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000064, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 16003
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state. This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 16016
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state. This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: EscrowService
Function name: addEscrow(address,address,address,address,uint256,uint256,uint256,string)
PC address: 16038
Estimated Gas Usage: 79159 - 361678
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state. This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000040101804080808080808080808080808080808080800480808004800080048000808080008004808080808080800480808080028080800480808080808080800480808080808080040080808080808080808080000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: addToken(address), txdata: 0xd48bfca7808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, value: 0x0
Caller: [SOMEGUY], function: addEscrow(address,address,address,address,uint256,uint256,uint256,string), txdata: 0xd5499b9a808080808080808080808080eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000a808080808080808080808080010101010101010101010101010101010101020180808080808080808080808001010000010102000100000000000101400001010000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000001000000000000000000000000000000000180808080808080808080808080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000020, value: 0x0



---------------------------------------------
For contract 0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol
Tool Runtime = 2078.1437922529876 seconds
#############################################