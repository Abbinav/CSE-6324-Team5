==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1114
Estimated Gas Usage: 6155 - 76953
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/5/0x12767ED038A80895E45EE3dFF1B7494d49400bEc.sol:153

ilks[ilk].pip.peek()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: file(bytes32,bytes32,address), txdata: 0xebecb39d00000000000000000000000000000000000000000000000000000000000000017069700000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: poke(bytes32), txdata: 0x1504460f0000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1267
Estimated Gas Usage: 6155 - 76953
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/5/0x12767ED038A80895E45EE3dFF1B7494d49400bEc.sol:155

vat

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: poke(bytes32), txdata: 0x1504460f0080000101010100000000000000000000000001000004000400000000000000, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1457
Estimated Gas Usage: 6155 - 76953
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/5/0x12767ED038A80895E45EE3dFF1B7494d49400bEc.sol:155

vat.file(ilk, "spot", spot)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000001040, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 464646464646464646464646deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: poke(bytes32), txdata: 0x1504460f0000000000000000000000000000000000000000000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: poke(bytes32), txdata: 0x1504460f0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1457
Estimated Gas Usage: 6155 - 76953
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: ./new_contracts/m_noloop/5/0x12767ED038A80895E45EE3dFF1B7494d49400bEc.sol:155

vat.file(ilk, "spot", spot)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1080000000004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: poke(bytes32), txdata: 0x1504460f0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1457
Estimated Gas Usage: 6155 - 76953
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/5/0x12767ED038A80895E45EE3dFF1B7494d49400bEc.sol:155

vat.file(ilk, "spot", spot)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: poke(bytes32), txdata: 0x1504460f0080000101010100000000000000000000000001000004000400000000000000, value: 0x0



---------------------------------------------
For contract 0x12767ED038A80895E45EE3dFF1B7494d49400bEc.sol
Tool Runtime = 383.8772233039781 seconds
#############################################