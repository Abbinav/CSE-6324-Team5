==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 5027
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:258

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5911030804060a452922624352c8888003098108bb07000580800684861000a2202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 5089
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:261

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000440078718, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourFNSPBalance(address), txdata: 0x12e2f7640000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d59102c408102008880098567ac960212958850201416a0a800ae78b0d75357f61f8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 5190
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:267

stakers[msg.sender].remainder += owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000440078718, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourFNSPBalance(address), txdata: 0x12e2f7640000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d59102c408102008880098567ac960212958850201416a0a800ae78b0d75357f61f8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 5197
Estimated Gas Usage: 56481 - 237123
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:267

stakers[msg.sender].remainder += owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5911030804060a452922624352c8888003098108bb07000580800684861000a2202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 5268
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:269

stakers[msg.sender].stakedTokens

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000440078718, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourFNSPBalance(address), txdata: 0x12e2f7640000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d59102c408102008880098567ac960212958850201416a0a800ae78b0d75357f61f8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 5370
Estimated Gas Usage: 56481 - 237123
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:269

stakers[msg.sender].stakedTokens = (tokens.sub(_stakingFee)).add(stakers[msg.sender].stakedTokens)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5911030804060a452922624352c8888003098108bb07000580800684861000a2202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 5441
Estimated Gas Usage: 56481 - 237123
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:270

stakers[msg.sender].lastDividends = owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5911030804060a452922624352c8888003098108bb07000580800684861000a2202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 5445
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:271

totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000440078718, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourFNSPBalance(address), txdata: 0x12e2f7640000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d59102c408102008880098567ac960212958850201416a0a800ae78b0d75357f61f8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 5514
Estimated Gas Usage: 56481 - 237123
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:271

stakers[msg.sender].fromTotalDividend= totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5911030804060a452922624352c8888003098108bb07000580800684861000a2202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 5518
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:272

round

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000440078718, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourFNSPBalance(address), txdata: 0x12e2f7640000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d59102c408102008880098567ac960212958850201416a0a800ae78b0d75357f61f8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 5587
Estimated Gas Usage: 56481 - 237123
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:272

stakers[msg.sender].round =  round

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5911030804060a452922624352c8888003098108bb07000580800684861000a2202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 5613
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:274

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000440078718, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourFNSPBalance(address), txdata: 0x12e2f7640000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d59102c408102008880098567ac960212958850201416a0a800ae78b0d75357f61f8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 5632
Estimated Gas Usage: 56481 - 237123
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:274

totalStakes = totalStakes.add(tokens.sub(_stakingFee))

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5911030804060a452922624352c8888003098108bb07000580800684861000a2202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 6324
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:332

scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5911030804060a452922624352c8888003098108bb07000580800684861000a2202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 6470
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:332

stakers[staker].round

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5911030804060a452922624352c8888003098108bb07000580800684861000a2202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 6486
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:332

payouts[stakers[staker].round - 1]

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000440078718, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourFNSPBalance(address), txdata: 0x12e2f7640000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d59102c408102008880098567ac960212958850201416a0a800ae78b0d75357f61f8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 6489
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:332

totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5911030804060a452922624352c8888003098108bb07000580800684861000a2202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 6606
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:333

stakers[staker].stakedTokens

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5911030804060a452922624352c8888003098108bb07000580800684861000a2202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 6682
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:333

stakers[staker].round

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000440078718, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourFNSPBalance(address), txdata: 0x12e2f7640000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d59102c408102008880098567ac960212958850201416a0a800ae78b0d75357f61f8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 6698
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:333

payouts[stakers[staker].round - 1]

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5911030804060a452922624352c8888003098108bb07000580800684861000a2202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 6810
Estimated Gas Usage: 56481 - 237123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:333

stakers[staker].remainder += ((totalDividends.sub(payouts[stakers[staker].round - 1])).mul(stakers[staker].stakedTokens)) % scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5911030804060a452922624352c8888003098108bb07000580800684861000a2202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 6817
Estimated Gas Usage: 56481 - 237123
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:333

stakers[staker].remainder += ((totalDividends.sub(payouts[stakers[staker].round - 1])).mul(stakers[staker].stakedTokens)) % scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5911030804060a452922624352c8888003098108bb07000580800684861000a2202, value: 0x0



---------------------------------------------
For contract 0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol
Tool Runtime = 1196.439709350001 seconds
#############################################