==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4122
Estimated Gas Usage: 1368 - 1843
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_noloop/6/0xff26b5f615743c6fc0e9cc1ceabe61e540f73fdb.sol:38

assert(c >= a)

--------------------
Initial State:

Account: [CREATOR], balance: 0xa930878000010006, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approve(address,uint256), txdata: 0x095ea7b30000000000000000000000001000010102020100010101000100010001011100020000000000000026001040a1468180883bd0d670529a062cd1a4236937768c, value: 0x0
Caller: [SOMEGUY], function: increaseApproval(address,uint256), txdata: 0xd73dd623a7a7a7a7a7a7a7a7a7a7a7a71000010102020100010101000100010001011100ff000000000001001210000200000000014a0050c05288c2e4456de140120034, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Altcoin
Function name: increaseApproval(address,uint256)
PC address: 4835
Estimated Gas Usage: 1412 - 1887
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_noloop/6/0xff26b5f615743c6fc0e9cc1ceabe61e540f73fdb.sol:38

assert(c >= a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x42141080000000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2000122000800101, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: approve(address,uint256), txdata: 0x095ea7b3000000000000000000000000000000000000018001010101010101010100100088d549488719552215a2eed91b605c79b5cb372620b58ea6d693d3b7c91709e8, value: 0x0
Caller: [ATTACKER], function: increaseApproval(address,uint256), txdata: 0xd73dd6235e5e5e5e5e5e5e5e5e5e5e5e0000000000000180010101010101010101001000fb34c84cda6b130000a2843028c04810a29a1800011482aa020d10904b320880, value: 0x0



---------------------------------------------
For contract 0xff26b5f615743c6fc0e9cc1ceabe61e540f73fdb.sol
Tool Runtime = 892.1722774369991 seconds
#############################################