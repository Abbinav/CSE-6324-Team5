==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4989
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:254

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000002000a84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d591b8f52722570873ff400204000114f008c1fc0004c00210ff08400001fc0800fc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5051
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:257

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5918110b52751efc91006a5850c00115020935253250604a24b038567c19066ee2c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5152
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:263

stakers[msg.sender].remainder += owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5918110b52751efc91006a5850c00115020935253250604a24b038567c19066ee2c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5159
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:263

stakers[msg.sender].remainder += owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000002000a84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d591b8f52722570873ff400204000114f008c1fc0004c00210ff08400001fc0800fc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5230
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:265

stakers[msg.sender].stakedTokens

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5918110b52751efc91006a5850c00115020935253250604a24b038567c19066ee2c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5332
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:265

stakers[msg.sender].stakedTokens = (tokens.sub(_stakingFee)).add(stakers[msg.sender].stakedTokens)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000002000a84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d591b8f52722570873ff400204000114f008c1fc0004c00210ff08400001fc0800fc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5403
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:266

stakers[msg.sender].lastDividends = owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000002000a84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d591b8f52722570873ff400204000114f008c1fc0004c00210ff08400001fc0800fc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5407
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:267

totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5918110b52751efc91006a5850c00115020935253250604a24b038567c19066ee2c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5476
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:267

stakers[msg.sender].fromTotalDividend= totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000002000a84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d591b8f52722570873ff400204000114f008c1fc0004c00210ff08400001fc0800fc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5480
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:268

round

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5918110b52751efc91006a5850c00115020935253250604a24b038567c19066ee2c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5549
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:268

stakers[msg.sender].round =  round

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000002000a84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d591b8f52722570873ff400204000114f008c1fc0004c00210ff08400001fc0800fc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5575
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:270

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5918110b52751efc91006a5850c00115020935253250604a24b038567c19066ee2c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5594
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:270

totalStakes = totalStakes.add(tokens.sub(_stakingFee))

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000002000a84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d591b8f52722570873ff400204000114f008c1fc0004c00210ff08400001fc0800fc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6324
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:326

scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000002000a84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d591b8f52722570873ff400204000114f008c1fc0004c00210ff08400001fc0800fc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6470
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:326

stakers[staker].round

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000002000a84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d591b8f52722570873ff400204000114f008c1fc0004c00210ff08400001fc0800fc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6486
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:326

payouts[stakers[staker].round - 1]

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5918110b52751efc91006a5850c00115020935253250604a24b038567c19066ee2c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6489
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:326

totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000002000a84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d591b8f52722570873ff400204000114f008c1fc0004c00210ff08400001fc0800fc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6606
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:327

stakers[staker].stakedTokens

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000002000a84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d591b8f52722570873ff400204000114f008c1fc0004c00210ff08400001fc0800fc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6682
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:327

stakers[staker].round

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d5918110b52751efc91006a5850c00115020935253250604a24b038567c19066ee2c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6698
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:327

payouts[stakers[staker].round - 1]

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000002000a84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d591b8f52722570873ff400204000114f008c1fc0004c00210ff08400001fc0800fc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6810
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:327

stakers[staker].remainder += ((totalDividends.sub(payouts[stakers[staker].round - 1])).mul(stakers[staker].stakedTokens)) % scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000002000a84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d591b8f52722570873ff400204000114f008c1fc0004c00210ff08400001fc0800fc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6817
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/3/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:327

stakers[staker].remainder += ((totalDividends.sub(payouts[stakers[staker].round - 1])).mul(stakers[staker].stakedTokens)) % scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x2041000002000a84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d591b8f52722570873ff400204000114f008c1fc0004c00210ff08400001fc0800fc, value: 0x0



---------------------------------------------
For contract 0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol
Tool Runtime = 1136.5259710489918 seconds
#############################################