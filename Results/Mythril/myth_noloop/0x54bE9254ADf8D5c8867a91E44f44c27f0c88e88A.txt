==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4989
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:254

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a400108400024000004023202014953c63101440410789020855a1082010ba0e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5051
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:257

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2100a000102, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59120244882846e01031819940e059480268220f08608c51082902c0908d4a00004, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5152
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:263

stakers[msg.sender].remainder += owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2100a000102, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59120244882846e01031819940e059480268220f08608c51082902c0908d4a00004, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5159
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:263

stakers[msg.sender].remainder += owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a400108400024000004023202014953c63101440410789020855a1082010ba0e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5230
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:265

stakers[msg.sender].stakedTokens

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2100a000102, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59120244882846e01031819940e059480268220f08608c51082902c0908d4a00004, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5332
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:265

stakers[msg.sender].stakedTokens = (tokens.sub(_stakingFee)).add(stakers[msg.sender].stakedTokens)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a400108400024000004023202014953c63101440410789020855a1082010ba0e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5403
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:266

stakers[msg.sender].lastDividends = owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a400108400024000004023202014953c63101440410789020855a1082010ba0e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5407
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:267

totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2100a000102, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59120244882846e01031819940e059480268220f08608c51082902c0908d4a00004, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5476
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:267

stakers[msg.sender].fromTotalDividend= totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a400108400024000004023202014953c63101440410789020855a1082010ba0e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5480
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:268

round

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2100a000102, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59120244882846e01031819940e059480268220f08608c51082902c0908d4a00004, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5549
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:268

stakers[msg.sender].round =  round

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a400108400024000004023202014953c63101440410789020855a1082010ba0e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5575
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:270

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2100a000102, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59120244882846e01031819940e059480268220f08608c51082902c0908d4a00004, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5594
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:270

totalStakes = totalStakes.add(tokens.sub(_stakingFee))

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a400108400024000004023202014953c63101440410789020855a1082010ba0e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6324
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:326

scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a400108400024000004023202014953c63101440410789020855a1082010ba0e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6470
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:326

stakers[staker].round

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a400108400024000004023202014953c63101440410789020855a1082010ba0e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6486
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:326

payouts[stakers[staker].round - 1]

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2100a000102, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59120244882846e01031819940e059480268220f08608c51082902c0908d4a00004, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6489
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:326

totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a400108400024000004023202014953c63101440410789020855a1082010ba0e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6606
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:327

stakers[staker].stakedTokens

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a400108400024000004023202014953c63101440410789020855a1082010ba0e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6682
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:327

stakers[staker].round

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2100a000102, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourYFIsBalance(address), txdata: 0xbafe144c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59120244882846e01031819940e059480268220f08608c51082902c0908d4a00004, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6698
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:327

payouts[stakers[staker].round - 1]

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a400108400024000004023202014953c63101440410789020855a1082010ba0e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6810
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:327

stakers[staker].remainder += ((totalDividends.sub(payouts[stakers[staker].round - 1])).mul(stakers[staker].stakedTokens)) % scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a400108400024000004023202014953c63101440410789020855a1082010ba0e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6817
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/9/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:327

stakers[staker].remainder += ((totalDividends.sub(payouts[stakers[staker].round - 1])).mul(stakers[staker].stakedTokens)) % scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a400108400024000004023202014953c63101440410789020855a1082010ba0e, value: 0x0



---------------------------------------------
For contract 0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol
Tool Runtime = 1113.3872117200226 seconds
#############################################