==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: WaltContract
Function name: mint(address,uint256)
PC address: 1897
Estimated Gas Usage: 14545 - 55697
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./new_contracts/m_noloop/9/0xfd4240e76016e039d44228cbfed3a120c004e03d.sol:128

totalSupply_ += amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 10, value: 0x0
Caller: [CREATOR], function: mint(address,uint256), txdata: 0x40c10f19000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffef000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: WaltContract
Function name: mint(address,uint256)
PC address: 1974
Estimated Gas Usage: 14545 - 55697
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./new_contracts/m_noloop/9/0xfd4240e76016e039d44228cbfed3a120c004e03d.sol:130

balances[receiver] += amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 02, value: 0x0
Caller: [CREATOR], function: mint(address,uint256), txdata: 0x40c10f19000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffefe8280000c5662aa246140260062000000000000000000000000000000000000, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: WaltContract
Function name: transfer(address,uint256)
PC address: 4109
Estimated Gas Usage: 1475 - 1760
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_noloop/9/0xfd4240e76016e039d44228cbfed3a120c004e03d.sol:172

assert(b <= a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer(address,uint256), txdata: 0xa9059cbb00000000000000000000000002010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: WaltContract
Function name: transfer(address,uint256)
PC address: 4145
Estimated Gas Usage: 7587 - 28252
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_noloop/9/0xfd4240e76016e039d44228cbfed3a120c004e03d.sol:182

assert(c >= a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 80, value: 0x0
Caller: [CREATOR], function: mint(address,uint256), txdata: 0x40c10f19000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8400000200000000000000000000000000000000400000000000000010000000, value: 0x0
Caller: [SOMEGUY], function: transfer(address,uint256), txdata: 0xa9059cbb000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe82000002c0000000000000000000000000000000000000000000000000000008, value: 0x0



---------------------------------------------
For contract 0xfd4240e76016e039d44228cbfed3a120c004e03d.sol
Tool Runtime = 341.49040035298094 seconds
#############################################