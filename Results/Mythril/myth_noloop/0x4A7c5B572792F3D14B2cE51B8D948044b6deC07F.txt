==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Flopper
Function name: dent(uint256,uint256,uint256)
PC address: 3643
Estimated Gas Usage: 3032 - 4167
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/9/0x4A7c5B572792F3D14B2cE51B8D948044b6deC07F.sol:172

bids[id].tic > now || bids[id].tic == 0

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: kick(address,uint256,uint256), txdata: 0xb7e9cd24000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000, value: 0x0
Caller: [ATTACKER], function: dent(uint256,uint256,uint256), txdata: 0x5ff3a3820000000000000000000000000000000000000000000000000000000000000001e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Flopper
Function name: dent(uint256,uint256,uint256)
PC address: 3870
Estimated Gas Usage: 4943 - 7118
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/9/0x4A7c5B572792F3D14B2cE51B8D948044b6deC07F.sol:173

require(bids[id].end > now, "Flopper/already-finished-end")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: kick(address,uint256,uint256), txdata: 0xb7e9cd24000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000002000000000000000000000000000000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: dent(uint256,uint256,uint256), txdata: 0x5ff3a3820000000000000000000000000000000000000000000000000000000000000001e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Flopper
Function name: tick(uint256)
PC address: 8402
Estimated Gas Usage: 1275 - 1890
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/9/0x4A7c5B572792F3D14B2cE51B8D948044b6deC07F.sol:164

require(bids[id].end < now, "Flopper/not-finished")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: tick(uint256), txdata: 0xfc7b6aee0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Flopper
Function name: tick(uint256)
PC address: 9007
Estimated Gas Usage: 10046 - 31891
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/9/0x4A7c5B572792F3D14B2cE51B8D948044b6deC07F.sol:132

require((z = x + y) >= x)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: tick(uint256), txdata: 0xfc7b6aee0802020080000000000000000000000000000000000000000000000000000000, value: 0x0



---------------------------------------------
For contract 0x4A7c5B572792F3D14B2cE51B8D948044b6deC07F.sol
Tool Runtime = 525.0423128539696 seconds
#############################################