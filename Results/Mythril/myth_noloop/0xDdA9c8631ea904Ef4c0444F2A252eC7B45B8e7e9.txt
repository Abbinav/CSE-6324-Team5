==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Collector
Function name: collect(uint256,address)
PC address: 5412
Estimated Gas Usage: 16201 - 160090
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/11/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol:199

shelf.token(loan)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 676767676767676767676767deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: file(bytes32,uint256,address,uint256), txdata: 0x6c3167e86c6f616e00000000000000000000000000000000000000000000000000000000010010400240088010100004010220000480100102100104801080020401084000000000000000000000000000000000000000000000000000000000000000002008100440080208020204408010040802010140080108022020028020042010, value: 0x0
Caller: [CREATOR], function: collect(uint256,address), txdata: 0x8d3c100a01001040024008801010000401022000048010010210010480108002040108400000000000000000000000004001000280400180010420101080000001021008, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Collector
Function name: collect(uint256,address)
PC address: 5507
Estimated Gas Usage: 15258 - 158627
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/11/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol:200

options[loan].nftPrice

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 676767676767676767676767deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: file(bytes32,uint256,address,uint256), txdata: 0x6c3167e86c6f616e00000000000000000000000000000000000000000000000000000000080450808080800000028000000001200200402006028008020120008020108000000000000000000000000000100004000000000002108000000040000140408004000400000800000008000001002000000000000020001000000000000000, value: 0x0
Caller: [CREATOR], function: collect(uint256,address), txdata: 0x8d3c100a08045080808080000002800000000120020040200602800802012000802010800000000000000000000000000010000400000000000210800000004000014040, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Collector
Function name: collect(uint256,address)
PC address: 5630
Estimated Gas Usage: 15258 - 158627
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/11/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol:201

shelf

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 676767676767676767676767deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: file(bytes32,uint256,address,uint256), txdata: 0x6c3167e86c6f616e00000000000000000000000000000000000000000000000000000000080450808080800000028000000001200200402006028008020120008020108000000000000000000000000000100004000000000002108000000040000140408004000400000800000008000001002000000000000020001000000000000000, value: 0x0
Caller: [CREATOR], function: collect(uint256,address), txdata: 0x8d3c100a08045080808080000002800000000120020040200602800802012000802010800000000000000000000000000010000400000000000210800000004000014040, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Collector
Function name: collect(uint256,address)
PC address: 5711
Estimated Gas Usage: 16201 - 160090
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/11/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol:201

options[loan].nftPrice

--------------------
Initial State:

Account: [CREATOR], balance: 0x801000000800001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 676767676767676767676767deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: file(bytes32,uint256,address,uint256), txdata: 0x6c3167e86c6f616e00000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000002000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: collect(uint256,address), txdata: 0x8d3c100a00000000000000000000000008000000000000000000000200000004000000000000000000000000000000000101010101010101010101010101010101010101, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Collector
Function name: collect(uint256,address)
PC address: 5854
Estimated Gas Usage: 15258 - 158627
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/11/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol:201

shelf.recover(loan, buyer, options[loan].nftPrice)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 676767676767676767676767deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: file(bytes32,uint256,address,uint256), txdata: 0x6c3167e86c6f616e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010101000200000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: collect(uint256,address), txdata: 0x8d3c100a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010100, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Collector
Function name: collect(uint256,address)
PC address: 5854
Estimated Gas Usage: 16201 - 160090
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: ./new_contracts/m_noloop/11/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol:201

shelf.recover(loan, buyer, options[loan].nftPrice)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: file(bytes32,uint256,address,uint256), txdata: 0x6c3167e86c6f616e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080, value: 0x0
Caller: [CREATOR], function: collect(uint256,address), txdata: 0x8d3c100a00000000000000000000000000000000000000000000000000000000000000006f6f6f6f6f6f6f6f6f6f6f6f2020000401402010201002024080800220100402, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Collector
Function name: collect(uint256,address)
PC address: 5854
Estimated Gas Usage: 16201 - 160090
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/11/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol:201

shelf.recover(loan, buyer, options[loan].nftPrice)

--------------------
Initial State:

Account: [CREATOR], balance: 0x801000000800001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 676767676767676767676767deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: file(bytes32,uint256,address,uint256), txdata: 0x6c3167e86c6f616e00000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000002000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: collect(uint256,address), txdata: 0x8d3c100a00000000000000000000000008000000000000000000000200000004000000000000000000000000000000000101010101010101010101010101010101010101, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Collector
Function name: collect(uint256,address)
PC address: 6093
Estimated Gas Usage: 16201 - 160090
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/11/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol:202

NFTLike_1(registry).transferFrom(address(this), buyer, nft)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: file(bytes32,uint256,address,uint256), txdata: 0x6c3167e86c6f616e000000000000000000000000000000000000000000000000000000000210200820000120deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0400000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: collect(uint256,address), txdata: 0x8d3c100a0210200820000120deadbeefdeadbeefdeadbeefdeadbeefdeadbeef040000006f6f6f6f6f6f6f6f6f6f6f6f1080800404040808804008200410200180200201, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Collector
Function name: collect(uint256,address)
PC address: 6093
Estimated Gas Usage: 16201 - 160090
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/11/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol:202

NFTLike_1(registry).transferFrom(address(this), buyer, nft)

--------------------
Initial State:

Account: [CREATOR], balance: 0x801000000800001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 676767676767676767676767deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: file(bytes32,uint256,address,uint256), txdata: 0x6c3167e86c6f616e00000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000002000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: collect(uint256,address), txdata: 0x8d3c100a00000000000000000000000008000000000000000000000200000004000000000000000000000000000000000101010101010101010101010101010101010101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Collector
Function name: collect(uint256,address)
PC address: 6120
Estimated Gas Usage: 16201 - 160090
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/11/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol:203

distributor

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: file(bytes32,uint256,address,uint256), txdata: 0x6c3167e86c6f616e000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, value: 0x0
Caller: [CREATOR], function: collect(uint256,address), txdata: 0x8d3c100a0000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000008080808080808080808080800101010101010101010101010101010101010101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Collector
Function name: collect(uint256,address)
PC address: 6251
Estimated Gas Usage: 16201 - 160090
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/11/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol:203

distributor.balance()

--------------------
Initial State:

Account: [CREATOR], balance: 0x801000000800001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 676767676767676767676767deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: file(bytes32,uint256,address,uint256), txdata: 0x6c3167e86c6f616e00000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000002000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: collect(uint256,address), txdata: 0x8d3c100a00000000000000000000000008000000000000000000000200000004000000000000000000000000000000000101010101010101010101010101010101010101, value: 0x0



---------------------------------------------
For contract 0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol
Tool Runtime = 904.0871683860314 seconds
#############################################