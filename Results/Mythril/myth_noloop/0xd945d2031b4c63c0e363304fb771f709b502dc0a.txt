==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4400
Estimated Gas Usage: 1424 - 1899
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_noloop/5/0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol:36

assert(c >= a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approve(address,uint256), txdata: 0x095ea7b300000000000000000000000004010180024002801004011001100200084000400000000000000000000000000000000200000000000000000126da94a52baaa9, value: 0x0
Caller: [SOMEGUY], function: increaseApproval(address,uint256), txdata: 0xd73dd6230000000000000000000000000401018002400280100401100110020008400040fffffffffffffffffffffffffffffffe000001ffffffffffff24928cad2a2a2b, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Token
Function name: increaseApproval(address,uint256)
PC address: 4850
Estimated Gas Usage: 1468 - 1943
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_noloop/5/0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol:36

assert(c >= a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x220a154000b002002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000004000000010000200001000004002040000014080, value: 0x0
Caller: [SOMEGUY], function: approve(address,uint256), txdata: 0x095ea7b30000000000000000000000001080002004401000200000800040000080000400000000000000000000000000000000000000000000000000000505a812483985, value: 0x0
Caller: [SOMEGUY], function: increaseApproval(address,uint256), txdata: 0xd73dd6230000000000000000000000001080002004401000200000800040000080000400fffffffffffffffffffffffffffffffffffffffffffffffffffd1d2812dbe31d, value: 0x0



---------------------------------------------
For contract 0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol
Tool Runtime = 1299.2814651629888 seconds
#############################################