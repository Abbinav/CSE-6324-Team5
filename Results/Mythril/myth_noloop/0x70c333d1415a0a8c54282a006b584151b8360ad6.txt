==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: LAZ
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 9516 - 69139
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol:372

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens,address(this), data)

--------------------
Initial State:

Account: [CREATOR], balance: 0xc0000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000000000000000000000000000000000000000003800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca517f7f7f7f7f7f7f7f7f7f7f7fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: LAZ
Function name: transferAnyERC20Token(address,uint256)
PC address: 5636
Estimated Gas Usage: 3785 - 39478
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol:406

ERC20Interface(tokenAddress).transfer(owner, tokens)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca5100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e, value: 0x0
Caller: [CREATOR], function: transferAnyERC20Token(address,uint256), txdata: 0xdc39d06d666666666666666666666666deadbeefdeadbeefdeadbeefdeadbeefdeadbeef6666666666666666666666666666666666666666666666666666666666666666, value: 0x0



---------------------------------------------
For contract 0x70c333d1415a0a8c54282a006b584151b8360ad6.sol
Tool Runtime = 2473.6737677079946 seconds
#############################################