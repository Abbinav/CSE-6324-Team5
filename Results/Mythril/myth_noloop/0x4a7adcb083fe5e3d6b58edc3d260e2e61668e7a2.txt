==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Presale
Function name: fallback
PC address: 126
Estimated Gas Usage: 860 - 955
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/12/0x4a7adcb083fe5e3d6b58edc3d260e2e61668e7a2.sol:434

require(startPresale <= now, "Presale has not yet started")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Presale
Function name: constructor
PC address: 719
Estimated Gas Usage: 98861 - 379272
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_noloop/12/0x4a7adcb083fe5e3d6b58edc3d260e2e61668e7a2.sol:426

token.transfer(owner, token.totalSupply() / 100 * (100 - percentSell))

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Presale
Function name: fallback
PC address: 802
Estimated Gas Usage: 11069 - 115935
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_noloop/12/0x4a7adcb083fe5e3d6b58edc3d260e2e61668e7a2.sol:440

token.balanceOf(address(msg.sender))

--------------------
Initial State:

Account: [CREATOR], balance: 0x410, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x01010101, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Presale
Function name: fallback
PC address: 1178
Estimated Gas Usage: 10920 - 115786
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_noloop/12/0x4a7adcb083fe5e3d6b58edc3d260e2e61668e7a2.sol:442

token.transfer(msg.sender, amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: getLeftTokens(), txdata: 0xc3428d85, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Presale
Function name: getStartICO()
PC address: 1494
Estimated Gas Usage: 1001 - 1377
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./new_contracts/m_noloop/12/0x4a7adcb083fe5e3d6b58edc3d260e2e61668e7a2.sol:474

startPresale - now

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: getStartICO(), txdata: 0x1b7d88fe, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Presale
Function name: getLeftTokens()
PC address: 2793
Estimated Gas Usage: 6934 - 77568
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_noloop/12/0x4a7adcb083fe5e3d6b58edc3d260e2e61668e7a2.sol:462

token.transfer(owner, token.balanceOf(address(this)))

--------------------
Initial State:

Account: [CREATOR], balance: 0x8001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: getLeftTokens(), txdata: 0xc3428d85, value: 0x0



---------------------------------------------
For contract 0x4a7adcb083fe5e3d6b58edc3d260e2e61668e7a2.sol
Tool Runtime = 2448.4941063720034 seconds
#############################################