==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4114
Estimated Gas Usage: 1365 - 1840
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_noloop/9/0xd63a757dc917486da1050847428393d2a91f0bfb.sol:24

assert(c >= a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000100000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: approve(address,uint256), txdata: 0x095ea7b30000000000000000000000000000000000000001000000000000000000000000b482ea89d2ed0d3a585041204cd54219604e2fe8c8aaf572ab232e6eaa6bceac, value: 0x0
Caller: [ATTACKER], function: increaseApproval(address,uint256), txdata: 0xd73dd6235e5e5e5e5e5e5e5e5e5e5e5e000000000000000100000000000000000000000093a0443aa68192e151b04700482b0100055880304998034286066222aac44214, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: yfcredit
Function name: increaseApproval(address,uint256)
PC address: 5203
Estimated Gas Usage: 1365 - 1840
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./new_contracts/m_noloop/9/0xd63a757dc917486da1050847428393d2a91f0bfb.sol:24

assert(c >= a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: approve(address,uint256), txdata: 0x095ea7b3000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000018c24adda52c100a4ed0ca, value: 0x0
Caller: [CREATOR], function: increaseApproval(address,uint256), txdata: 0xd73dd6235e5e5e5e5e5e5e5e5e5e5e5e0000000000000002000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffe94218902524700a048383, value: 0x0



---------------------------------------------
For contract 0xd63a757dc917486da1050847428393d2a91f0bfb.sol
Tool Runtime = 968.4503782280372 seconds
#############################################