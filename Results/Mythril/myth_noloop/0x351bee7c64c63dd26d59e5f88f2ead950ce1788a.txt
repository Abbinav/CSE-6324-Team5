==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: xETHGRebaser
Function name: setRebaseTimingParameters(uint256,uint256,uint256)
PC address: 1551
Estimated Gas Usage: 1231 - 1656
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./new_contracts/m_noloop/7/0x351bee7c64c63dd26d59e5f88f2ead950ce1788a.sol:100

require(msg.sender == gov)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: setRebaseTimingParameters(uint256,uint256,uint256), txdata: 0x16250fd4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: xETHGRebaser
Function name: setRebaseLag(uint256)
PC address: 1697
Estimated Gas Usage: 1199 - 1624
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./new_contracts/m_noloop/7/0x351bee7c64c63dd26d59e5f88f2ead950ce1788a.sol:100

require(msg.sender == gov)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: setRebaseLag(uint256), txdata: 0x20ce83890000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: xETHGRebaser
Function name: setTimesXvalue(uint256)
PC address: 1815
Estimated Gas Usage: 1113 - 1538
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./new_contracts/m_noloop/7/0x351bee7c64c63dd26d59e5f88f2ead950ce1788a.sol:100

require(msg.sender == gov)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: setTimesXvalue(uint256), txdata: 0x332ac51b0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: xETHGRebaser
Function name: setDeviationThreshold(uint256)
PC address: 1967
Estimated Gas Usage: 1198 - 1623
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./new_contracts/m_noloop/7/0x351bee7c64c63dd26d59e5f88f2ead950ce1788a.sol:100

require(msg.sender == gov)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: setDeviationThreshold(uint256), txdata: 0x53a15edc0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: xETHGRebaser
Function name: rebase()
PC address: 2643
Estimated Gas Usage: 190 - 285
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./new_contracts/m_noloop/7/0x351bee7c64c63dd26d59e5f88f2ead950ce1788a.sol:308

require(msg.sender == tx.origin)

--------------------
Initial State:

Account: [CREATOR], balance: 0x810000000c0200, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: rebase(), txdata: 0xaf14052c, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: xETHGRebaser
Function name: setTargetRate(uint256)
PC address: 3975
Estimated Gas Usage: 1175 - 1600
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./new_contracts/m_noloop/7/0x351bee7c64c63dd26d59e5f88f2ead950ce1788a.sol:100

require(msg.sender == gov)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: setTargetRate(uint256), txdata: 0xcdabdaac0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: xETHGRebaser
Function name: setWhitelistedFrom(address,bool)
PC address: 4097
Estimated Gas Usage: 1258 - 1683
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./new_contracts/m_noloop/7/0x351bee7c64c63dd26d59e5f88f2ead950ce1788a.sol:100

require(msg.sender == gov)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setWhitelistedFrom(address,bool), txdata: 0xff12bbf400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: xETHGRebaser
Function name: inRebaseWindow()
PC address: 4225
Estimated Gas Usage: 1950 - 2045
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/7/0x351bee7c64c63dd26d59e5f88f2ead950ce1788a.sol:630

require(now.mod(minRebaseTimeIntervalSec) >= rebaseWindowOffsetSec, "too early")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: inRebaseWindow(), txdata: 0x111d0498, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: xETHGRebaser
Function name: inRebaseWindow()
PC address: 4386
Estimated Gas Usage: 4618 - 4713
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/7/0x351bee7c64c63dd26d59e5f88f2ead950ce1788a.sol:632

require(now.mod(minRebaseTimeIntervalSec) < (rebaseWindowOffsetSec.add(rebaseWindowLengthSec)), "too late")

--------------------
Initial State:

Account: [CREATOR], balance: 0x2040040000028090, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: inRebaseWindow(), txdata: 0x111d0498, value: 0x0



---------------------------------------------
For contract 0x351bee7c64c63dd26d59e5f88f2ead950ce1788a.sol
Tool Runtime = 364.5147622290242 seconds
#############################################