==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4951
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:255

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x961004401412ca1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d591f02c03e16d932200b2045819410b8d410942a90060244c84c1c024d805c00b26, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5013
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:258

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x8001000008000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourERABalance(address), txdata: 0x79806dd00000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59112181020800000d6e0f1b50429694f00321820a24704d1232903382c20ae26c8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5114
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:264

stakers[msg.sender].remainder += owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x8001000008000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourERABalance(address), txdata: 0x79806dd00000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59112181020800000d6e0f1b50429694f00321820a24704d1232903382c20ae26c8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5121
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:264

stakers[msg.sender].remainder += owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x961004401412ca1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d591f02c03e16d932200b2045819410b8d410942a90060244c84c1c024d805c00b26, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5192
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:266

stakers[msg.sender].stakedTokens

--------------------
Initial State:

Account: [CREATOR], balance: 0x8001000008000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourERABalance(address), txdata: 0x79806dd00000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59112181020800000d6e0f1b50429694f00321820a24704d1232903382c20ae26c8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5294
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:266

stakers[msg.sender].stakedTokens = (tokens.sub(_stakingFee)).add(stakers[msg.sender].stakedTokens)

--------------------
Initial State:

Account: [CREATOR], balance: 0x961004401412ca1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d591f02c03e16d932200b2045819410b8d410942a90060244c84c1c024d805c00b26, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5365
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:267

stakers[msg.sender].lastDividends = owing

--------------------
Initial State:

Account: [CREATOR], balance: 0x961004401412ca1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d591f02c03e16d932200b2045819410b8d410942a90060244c84c1c024d805c00b26, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5369
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:268

totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x8001000008000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourERABalance(address), txdata: 0x79806dd00000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59112181020800000d6e0f1b50429694f00321820a24704d1232903382c20ae26c8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5438
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:268

stakers[msg.sender].fromTotalDividend= totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x961004401412ca1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d591f02c03e16d932200b2045819410b8d410942a90060244c84c1c024d805c00b26, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5442
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:269

round

--------------------
Initial State:

Account: [CREATOR], balance: 0x8001000008000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourERABalance(address), txdata: 0x79806dd00000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59112181020800000d6e0f1b50429694f00321820a24704d1232903382c20ae26c8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5511
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:269

stakers[msg.sender].round =  round

--------------------
Initial State:

Account: [CREATOR], balance: 0x961004401412ca1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d591f02c03e16d932200b2045819410b8d410942a90060244c84c1c024d805c00b26, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5537
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:271

totalStakes

--------------------
Initial State:

Account: [CREATOR], balance: 0x8001000008000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourERABalance(address), txdata: 0x79806dd00000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59112181020800000d6e0f1b50429694f00321820a24704d1232903382c20ae26c8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 5556
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:271

totalStakes = totalStakes.add(tokens.sub(_stakingFee))

--------------------
Initial State:

Account: [CREATOR], balance: 0x961004401412ca1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d591f02c03e16d932200b2045819410b8d410942a90060244c84c1c024d805c00b26, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6324
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:327

scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x961004401412ca1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d591f02c03e16d932200b2045819410b8d410942a90060244c84c1c024d805c00b26, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6470
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:327

stakers[staker].round

--------------------
Initial State:

Account: [CREATOR], balance: 0x961004401412ca1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d591f02c03e16d932200b2045819410b8d410942a90060244c84c1c024d805c00b26, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6486
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:327

payouts[stakers[staker].round - 1]

--------------------
Initial State:

Account: [CREATOR], balance: 0x8001000008000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourERABalance(address), txdata: 0x79806dd00000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59112181020800000d6e0f1b50429694f00321820a24704d1232903382c20ae26c8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6489
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:327

totalDividends

--------------------
Initial State:

Account: [CREATOR], balance: 0x961004401412ca1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d591f02c03e16d932200b2045819410b8d410942a90060244c84c1c024d805c00b26, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6606
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:328

stakers[staker].stakedTokens

--------------------
Initial State:

Account: [CREATOR], balance: 0x961004401412ca1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d591f02c03e16d932200b2045819410b8d410942a90060244c84c1c024d805c00b26, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6682
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:328

stakers[staker].round

--------------------
Initial State:

Account: [CREATOR], balance: 0x8001000008000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: yourERABalance(address), txdata: 0x79806dd00000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: STAKE(uint256), txdata: 0xca84d59112181020800000d6e0f1b50429694f00321820a24704d1232903382c20ae26c8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6698
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:328

payouts[stakers[staker].round - 1]

--------------------
Initial State:

Account: [CREATOR], balance: 0x961004401412ca1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d591f02c03e16d932200b2045819410b8d410942a90060244c84c1c024d805c00b26, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6810
Estimated Gas Usage: 56459 - 237101
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:328

stakers[staker].remainder += ((totalDividends.sub(payouts[stakers[staker].round - 1])).mul(stakers[staker].stakedTokens)) % scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x961004401412ca1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d591f02c03e16d932200b2045819410b8d410942a90060244c84c1c024d805c00b26, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 6817
Estimated Gas Usage: 56459 - 237101
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/7/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:328

stakers[staker].remainder += ((totalDividends.sub(payouts[stakers[staker].round - 1])).mul(stakers[staker].stakedTokens)) % scaling

--------------------
Initial State:

Account: [CREATOR], balance: 0x961004401412ca1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: STAKE(uint256), txdata: 0xca84d591f02c03e16d932200b2045819410b8d410942a90060244c84c1c024d805c00b26, value: 0x0



---------------------------------------------
For contract 0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol
Tool Runtime = 998.9048962760135 seconds
#############################################