==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Treasury
Function name: withdraw(address)
PC address: 858
Estimated Gas Usage: 4245 - 73513
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_noloop/2/0x8f9dc5c9ce6834d8c9897faf5d44ac36ca073595.sol:334

IWithdraw(config.withdraw()).withdraw(_property)

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000001002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdraw(address), txdata: 0x51cff8d90000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Treasury
Function name: transferDev()
PC address: 1834
Estimated Gas Usage: 6956 - 111678
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_noloop/2/0x8f9dc5c9ce6834d8c9897faf5d44ac36ca073595.sol:349

token.balanceOf(address(this))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferDev(), txdata: 0x81ddc60d, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Treasury
Function name: transferDev()
PC address: 2058
Estimated Gas Usage: 6956 - 111678
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_noloop/2/0x8f9dc5c9ce6834d8c9897faf5d44ac36ca073595.sol:350

token.transfer(msg.sender, balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferDev(), txdata: 0x81ddc60d, value: 0x0
Caller: [CREATOR], function: transferDev(), txdata: 0x81ddc60d, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Treasury
Function name: transferProperty(address,address)
PC address: 2754
Estimated Gas Usage: 4685 - 74610
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/2/0x8f9dc5c9ce6834d8c9897faf5d44ac36ca073595.sol:344

property.transfer(_nextTreasury, balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x6, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferDev(), txdata: 0x81ddc60d, value: 0x0
Caller: [CREATOR], function: transferProperty(address,address), txdata: 0x8fa1ffdb000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Treasury
Function name: transferProperty(address,address)
PC address: 2754
Estimated Gas Usage: 4685 - 74610
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_noloop/2/0x8f9dc5c9ce6834d8c9897faf5d44ac36ca073595.sol:344

property.transfer(_nextTreasury, balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferProperty(address,address), txdata: 0x8fa1ffdb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



---------------------------------------------
For contract 0x8f9dc5c9ce6834d8c9897faf5d44ac36ca073595.sol
Tool Runtime = 108.66161333900527 seconds
#############################################