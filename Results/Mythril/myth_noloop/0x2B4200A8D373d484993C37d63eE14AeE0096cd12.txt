==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: USDFLFab
Function name: newDai(uint256)
PC address: 576
Estimated Gas Usage: 48181 - 169444
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: ./new_contracts/m_noloop/8/0x2B4200A8D373d484993C37d63eE14AeE0096cd12.sol:222

dai.deny(address(this))

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000000080, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: newDai(uint256), txdata: 0xccceb2e60000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: USDFL
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 5585
Estimated Gas Usage: 5864 - 42787
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./new_contracts/m_noloop/8/0x2B4200A8D373d484993C37d63eE14AeE0096cd12.sol:209

require(expiry == 0 || now <= expiry, "Dai/permit-expired")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32), txdata: 0x8fcbaf0cvalue: 0x0



---------------------------------------------
For contract 0x2B4200A8D373d484993C37d63eE14AeE0096cd12.sol
Tool Runtime = 8933.648991040012 seconds
#############################################