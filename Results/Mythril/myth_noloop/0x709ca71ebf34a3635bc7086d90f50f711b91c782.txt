==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SWProtocol
Function name: approveAndCall(address,uint256,bytes)
PC address: 7320
Estimated Gas Usage: 11271 - 71744
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/2/0x709ca71ebf34a3635bc7086d90f50f711b91c782.sol:444

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000000000000000000000000000000000000000002100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51141414141414141414141414deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SWProtocol
Function name: transferAnyERC20Token(address,uint256)
PC address: 7892
Estimated Gas Usage: 3807 - 39500
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/2/0x709ca71ebf34a3635bc7086d90f50f711b91c782.sol:495

ERC20Interface(tokenAddress).transfer(owner, tokens)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: burnForAllowance(address,address,uint256), txdata: 0x327903430000000000000000000000008002000000204002081020401001800104400180000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: transferAnyERC20Token(address,uint256), txdata: 0xdc39d06d030303030303030303030303deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0303030303030303030303030303030303030303030303030303030303030303, value: 0x0



---------------------------------------------
For contract 0x709ca71ebf34a3635bc7086d90f50f711b91c782.sol
Tool Runtime = 6941.8410075619995 seconds
#############################################