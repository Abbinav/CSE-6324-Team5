==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenSale
Function name: buyTokensWithETH(address)
PC address: 1647
Estimated Gas Usage: 19631 - 129861
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol:172

tokenContract.transfer(_receiver, tokensToBuy)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 838383838383838383838383deadbeefdeadbeefdeadbeefdeadbeefdeadbeef01, value: 0x0
Caller: [CREATOR], function: endSale(), txdata: 0x380d831b, value: 0x0
Caller: [ATTACKER], function: buyTokensWithETH(address), txdata: 0xc77ded318383838383838383838383830101010101010101010101010101010101010101, value: 0x1

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TokenSale
Function name: buyTokensWithETH(address)
PC address: 1647
Estimated Gas Usage: 19631 - 129861
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_noloop/4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol:172

tokenContract.transfer(_receiver, tokensToBuy)

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000100409, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x16997d08000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: edededededededededededededededededededededededededededededededed01, value: 0x0
Caller: [ATTACKER], function: buyTokensWithETH(address), txdata: 0xc77ded310000000000000000000000000101010201010101010101010102010101010101, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TokenSale
Function name: buyTokensWithETH(address)
PC address: 1834
Estimated Gas Usage: 19631 - 129861
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol:174

tokensSold += tokensToBuy

--------------------
Initial State:

Account: [CREATOR], balance: 0x1fa1f72, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: ededededededededededededdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef01, value: 0x0
Caller: [SOMEGUY], function: buyTokensWithETH(address), txdata: 0xc77ded310000000000000000000000000101010101010101010101010101010101010101, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TokenSale
Function name: fallback
PC address: 1843
Estimated Gas Usage: 19542 - 129772
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol:176

ethRaised += _amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: dfdfdfdfdfdfdfdfdfdfdfdfdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef01, value: 0x0
Caller: [CREATOR], function: setPrice(uint256), txdata: 0x91b7f5ed0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x90000000, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TokenSale
Function name: buyTokensWithETH(address)
PC address: 1850
Estimated Gas Usage: 19631 - 129861
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./new_contracts/m_noloop/4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol:176

ethRaised += _amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x1fa1f72, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: ededededededededededededdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef01, value: 0x0
Caller: [SOMEGUY], function: buyTokensWithETH(address), txdata: 0xc77ded310000000000000000000000000101010101010101010101010101010101010101, value: 0x1

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenSale
Function name: endSale()
PC address: 2354
Estimated Gas Usage: 8442 - 113262
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol:198

tokenContract.balanceOf(address(this))

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: c0c0c0c0c0c0c0c0c0c0c0c0deadbeefdeadbeefdeadbeefdeadbeefdeadbeef10, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0xc0010002, value: 0x1
Caller: [CREATOR], function: endSale(), txdata: 0x380d831b, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenSale
Function name: endSale()
PC address: 2546
Estimated Gas Usage: 8442 - 113262
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./new_contracts/m_noloop/4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol:198

tokenContract.transfer(owner, tokenContract.balanceOf(address(this)))

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: ededededededededededededdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef01, value: 0x0
Caller: [CREATOR], function: buyTokensWithETH(address), txdata: 0xc77ded310000000000000000000000000101010101010101010101010101010101010101, value: 0x1
Caller: [CREATOR], function: endSale(), txdata: 0x380d831b, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TokenSale
Function name: endSale()
PC address: 2546
Estimated Gas Usage: 8442 - 113262
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_noloop/4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol:198

tokenContract.transfer(owner, tokenContract.balanceOf(address(this)))

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: endSale(), txdata: 0x380d831b, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TokenSale
Function name: endSale()
PC address: 2684
Estimated Gas Usage: 8442 - 113262
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./new_contracts/m_noloop/4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol:202

msg.sender.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x3, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: edededededededededededededededededededededededededededededededed01, value: 0x0
Caller: [ATTACKER], function: buyTokensWithETH(address), txdata: 0xc77ded310000000000000000000000000101010101010101400801010101010101010101, value: 0x1
Caller: [CREATOR], function: endSale(), txdata: 0x380d831b, value: 0x0



---------------------------------------------
For contract 0x79a4d9e704196510f408150261c4f9307bcca6c0.sol
Tool Runtime = 4132.7525032979975 seconds
#############################################