$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x532e68fdd932811f35577edc6653f4852ace5c64.sol
Total states:3586
6.075394
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x17d5c3ffe2a7c7a1e4567c7501d166b0532c8826.sol
Total states:1389
2.23615
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xa56913df48decb9b4815dddf307a31f07ef1f19a.sol
Total states:13173
26.869155
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.163359
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xa56913df48decb9b4815dddf307a31f07ef1f19a.sol:145

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x6AC7575A340a3DAb2Ae9ca07c4DbFC6bf8E7E281.sol
Total states:3825
22.396399
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.474735
Transaction Length: 0
Severity: Low
Contract: CRVStrategySwerve
Function name: salvage(address,address,uint256)
PC address: 800
Estimated Gas Usage: 48750 - 234010
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x6AC7575A340a3DAb2Ae9ca07c4DbFC6bf8E7E281.sol:1159

function setArbTolerance(uint256 tolerance) external onlyGovernance {
    require(tolerance <= 100, "at most 100");
    arbTolerance = tolerance;
  }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x0f6e71454c39126baa89ed8dc36e3d4bc5d06f3d.sol
Total states:31613
96.456993
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.686325
Transaction Length: 1
Severity: High
Contract: YFWORLD
Function name: approveAndCall(address,uint256,bytes)
PC address: 1799
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0f6e71454c39126baa89ed8dc36e3d4bc5d06f3d.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.884167
Transaction Length: 2
Severity: High
Contract: YFWORLD
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 4618
Estimated Gas Usage: 6015 - 43128
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0f6e71454c39126baa89ed8dc36e3d4bc5d06f3d.sol:134

nonces[holder]++

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:22.411483
Transaction Length: 1
Severity: Medium
Contract: YFWORLD
Function name: approveAndCall(address,uint256,bytes)
PC address: 6543
Estimated Gas Usage: 8284 - 32451
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0x0f6e71454c39126baa89ed8dc36e3d4bc5d06f3d.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), data)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.998941
Transaction Length: 1
Severity: High
Contract: YFWORLD
Function name: transferFrom(address,address,uint256)
PC address: 7630
Estimated Gas Usage: 1671 - 2526
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0f6e71454c39126baa89ed8dc36e3d4bc5d06f3d.sol:52

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xd73117a33b14f973cb08c4440ea68231bbbcbe9a.sol
Total states:11841
265.741777
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.743577
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd73117a33b14f973cb08c4440ea68231bbbcbe9a.sol:44

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.280987
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd73117a33b14f973cb08c4440ea68231bbbcbe9a.sol:24

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.546056
Transaction Length: 1
Severity: High
Contract: SWAPPER
Function name: approveAndCall(address,uint256,bytes)
PC address: 1483
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd73117a33b14f973cb08c4440ea68231bbbcbe9a.sol:3



*/



//pragma solidity ^0.4.24;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:34.304260
Transaction Length: 1
Severity: Medium
Contract: SWAPPER
Function name: approveAndCall(address,uint256,bytes)
PC address: 4325
Estimated Gas Usage: 8823 - 34729
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0xd73117a33b14f973cb08c4440ea68231bbbcbe9a.sol:326

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:36.583877
Transaction Length: 1
Severity: High
Contract: SWAPPER
Function name: safeMul(uint256,uint256)
PC address: 4362
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd73117a33b14f973cb08c4440ea68231bbbcbe9a.sol:44

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:32.720650
Transaction Length: 1
Severity: High
Contract: SWAPPER
Function name: safeAdd(uint256,uint256)
PC address: 4546
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd73117a33b14f973cb08c4440ea68231bbbcbe9a.sol:24

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x07497c66ae11ae20d1eb2c045e18b825560596f0.sol
Total states:76081
146.160722
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.753973
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x07497c66ae11ae20d1eb2c045e18b825560596f0.sol:54

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.283204
Transaction Length: 2
Severity: High
Contract: YF_Banking
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x07497c66ae11ae20d1eb2c045e18b825560596f0.sol:54

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.303736
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x07497c66ae11ae20d1eb2c045e18b825560596f0.sol:56

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.302235
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x07497c66ae11ae20d1eb2c045e18b825560596f0.sol:57

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.522322
Transaction Length: 2
Severity: High
Contract: YF_Banking
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x07497c66ae11ae20d1eb2c045e18b825560596f0.sol:56

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:02.969991
Transaction Length: 2
Severity: High
Contract: YF_Banking
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x07497c66ae11ae20d1eb2c045e18b825560596f0.sol:57

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x168f842568905d3524318d505081392ffcc04d9b.sol
Total states:1602
2.068357
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.046392
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x168f842568905d3524318d505081392ffcc04d9b.sol:22

ansaction and its data. While these are gen

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xf6cef8644aaaf38a0b12e135d41eef36eed3abf0.sol
Total states:30
0.190368
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xa279dab6ec190ee4efce7da72896eb58ad533262.sol
Total states:18855
40.692136
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.846397
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xa279dab6ec190ee4efce7da72896eb58ad533262.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.915258
Transaction Length: 2
Severity: High
Contract: YFU
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xa279dab6ec190ee4efce7da72896eb58ad533262.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x8161c2b57f3e77a497ce56307c2774d6077b2b9c.sol
Total states:1377
1.966951
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x1c71ecce2680bb413e82521ed678e7128976de2f.sol
Total states:3411
10.894446
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x43caa1697cea107d3d0fc862bca267776a4ed971.sol
Total states:19694
40.041531
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.008047
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x43caa1697cea107d3d0fc862bca267776a4ed971.sol:160

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.285068
Transaction Length: 2
Severity: High
Contract: YFVault
Function name: increaseAllowance(address,uint256)
PC address: 10530
Estimated Gas Usage: 1060 - 1535
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x43caa1697cea107d3d0fc862bca267776a4ed971.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x279966d675cf90583ba842cec1ac35c329eed9cb.sol
Total states:18192
42.286466
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.398224
Transaction Length: 2
Severity: High
Contract: ponziv2
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x279966d675cf90583ba842cec1ac35c329eed9cb.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.305083
Transaction Length: 2
Severity: High
Contract: ponziv2
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x279966d675cf90583ba842cec1ac35c329eed9cb.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol
Total states:481
3.996187
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol
Total states:2954
30.189195
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.194929
Transaction Length: 0
Severity: Low
Contract: DsrManager
Function name: constructor
PC address: 855
Estimated Gas Usage: 21970 - 156033
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:93

vat.hope(address(daiJoin))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.241774
Transaction Length: 0
Severity: Low
Contract: DsrManager
Function name: constructor
PC address: 1069
Estimated Gas Usage: 23981 - 192750
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:94

vat.hope(address(pot))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.293084
Transaction Length: 0
Severity: Low
Contract: DsrManager
Function name: constructor
PC address: 1358
Estimated Gas Usage: 26454 - 230354
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:95

dai.approve(address(daiJoin), uint256(-1))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.679528
Transaction Length: 1
Severity: Low
Contract: DsrManager
Function name: join(address,uint256)
PC address: 1368
Estimated Gas Usage: 3587 - 39090
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:105

pot.drip()

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.351208
Transaction Length: 0
Severity: Medium
Contract: DsrManager
Function name: constructor
PC address: 1434
Estimated Gas Usage: 27916 - 268306
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 343
Offset: 602
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:52

contract DsrManager {
    PotLike  public pot;
    GemLike  public dai;
    JoinLike public daiJoin;

    uint256 public supply;

    mapping (address => uint256) public pieOf;

    event Join(address indexed dst, uint256 wad);
    event Exit(address indexed dst, uint256 wad);

    uint256 constant RAY = 10 ** 27;
    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {
        require((z = x + y) >= x);
    }
    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {
        require((z = x - y) <= x);
    }
    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {
        require(y == 0 || (z = x * y) / y == x);
    }
    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {
        // always rounds down
        z = mul(x, y) / RAY;
    }
    function rdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {
        // always rounds down
        z = mul(x, RAY) / y;
    }
    function rdivup(uint256 x, uint256 y) internal pure returns (uint256 z) {
        // always rounds up
        z = add(mul(x, RAY), sub(y, 1)) / y;
    }

    constructor(address pot_, address daiJoin_) public {
        pot = PotLike(pot_);
        daiJoin = JoinLike(daiJoin_);
        dai = GemLike(daiJoin.dai());

        VatLike vat = VatLike(pot.vat());
        vat.hope(address(daiJoin));
        vat.hope(address(pot));
        dai.approve(address(daiJoin), uint256(-1));
    }

    function daiBalance(address usr) external returns (uint256 wad) {
        uint256 chi = (now > pot.rho()) ? pot.drip() : pot.chi();
        wad = rmul(chi, pieOf[usr]);
    }

    // wad is denominated in dai
    function join(address dst, uint256 wad) external {
        uint256 chi = (now > pot.rho()) ? pot.drip() : pot.chi();
        uint256 pie = rdiv(wad, chi);
        pieOf[dst] = add(pieOf[dst], pie);
        supply = add(supply, pie);

        dai.transferFrom(msg.sender, address(this), wad);
        daiJoin.join(address(this), wad);
        pot.join(pie);
        emit Join(dst, wad);
    }

    // wad is denominated in dai
    function exit(address dst, uint256 wad) external {
        uint256 chi = (now > pot.rho()) ? pot.drip() : pot.chi();
        uint256 pie = rdivup(wad, chi);

        require(pieOf[msg.sender] >= pie, "insufficient-balance");

        pieOf[msg.sender] = sub(pieOf[msg.sender], pie);
        supply = sub(supply, pie);

        pot.exit(pie);
        uint256 amt = rmul(chi, pie);
        daiJoin.exit(dst, amt);
        emit Exit(dst, amt);
    }

    function exitAll(address dst) external {
        uint256 chi = (now > pot.rho()) ? pot.drip() : pot.chi();
        uint256 pie = pieOf[msg.sender];

        pieOf[msg.sender] = 0;
        supply = sub(supply, pie);

        pot.exit(pie);
        uint256 amt = rmul(chi, pie);
        daiJoin.exit(dst, amt);
        emit Exit(dst, amt);
    }
}

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.117074
Transaction Length: 1
Severity: Low
Contract: DsrManager
Function name: daiBalance(address)
PC address: 3010
Estimated Gas Usage: 3562 - 39065
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:99

pot.drip()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:18.046635
Transaction Length: 1
Severity: Low
Contract: DsrManager
Function name: exitAll(address)
PC address: 3679
Estimated Gas Usage: 3581 - 39084
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:133

pot.drip()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:25.612600
Transaction Length: 1
Severity: Low
Contract: DsrManager
Function name: exitAll(address)
PC address: 4040
Estimated Gas Usage: 16775 - 127550
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:139

pot.exit(pie)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:29.152364
Transaction Length: 1
Severity: Low
Contract: DsrManager
Function name: exit(address,uint256)
PC address: 4909
Estimated Gas Usage: 3630 - 39133
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:118

pot.drip()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.213117
Transaction Length: 1
Severity: High
Contract: DsrManager
Function name: join(address,uint256)
PC address: 6069
Estimated Gas Usage: 4550 - 74239
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:72

x * y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x9dc0c2ebb03e8a11d210f8afff5280414748923d.sol
Total states:9807
224.826236
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.126786
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dc0c2ebb03e8a11d210f8afff5280414748923d.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.394380
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dc0c2ebb03e8a11d210f8afff5280414748923d.sol:24

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.582349
Transaction Length: 1
Severity: High
Contract: nimmiToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1648
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dc0c2ebb03e8a11d210f8afff5280414748923d.sol:4

-----------------------------------

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:31.077317
Transaction Length: 1
Severity: Medium
Contract: nimmiToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dc0c2ebb03e8a11d210f8afff5280414748923d.sol:205

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:41.170178
Transaction Length: 1
Severity: High
Contract: nimmiToken
Function name: safeMul(uint256,uint256)
PC address: 5262
Estimated Gas Usage: 394 - 489
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dc0c2ebb03e8a11d210f8afff5280414748923d.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:55.258440
Transaction Length: 1
Severity: High
Contract: nimmiToken
Function name: safeAdd(uint256,uint256)
PC address: 5840
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dc0c2ebb03e8a11d210f8afff5280414748923d.sol:24

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol
Total states:1393
5.942291
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039234
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol:15

*
     * @dev Returns the amount of tokens 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.078873
Transaction Length: 0
Severity: High
Contract: Strategy
Function name: constructor
PC address: 178
Estimated Gas Usage: 1649 - 36213
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol:5

nzeppelin/contr

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol
Total states:6625
12.019832
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.801608
Transaction Length: 1
Severity: High
Contract: LPTokenWrapper
Function name: stake(uint256)
PC address: 1964
Estimated Gas Usage: 402 - 497
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol:158

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x07d6dd1a815391056554067b3b86e9953ebdf05c.sol
Total states:1072
4.471252
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xa2b12a05f12d09fefa58d39ccd416dd5e46299be.sol
Total states:2405
2.487802
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041380
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xa2b12a05f12d09fefa58d39ccd416dd5e46299be.sol:13

  returns (bytes memory) {
        this; //

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.046051
Transaction Length: 0
Severity: High
Contract: TuGouToken
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xa2b12a05f12d09fefa58d39ccd416dd5e46299be.sol:13

  returns (bytes memory) {
        this; //

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x99448b40572cae1f83bf9e26ffe2148f5a4a4852.sol
Total states:8045
15.492234
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039180
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x99448b40572cae1f83bf9e26ffe2148f5a4a4852.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.119153
Transaction Length: 2
Severity: High
Contract: YFDEFI
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x99448b40572cae1f83bf9e26ffe2148f5a4a4852.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xe91ee465f701e341d075a8bd9502f5f8e41c911e.sol
Total states:3016
3516.28041
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:58:28.893248
Transaction Length: 1
Severity: High
Contract: PrivateSale
Function name: buyWithUSDC(uint256)
PC address: 6516
Estimated Gas Usage: 752 - 847
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xe91ee465f701e341d075a8bd9502f5f8e41c911e.sol:99

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xf0bea7077e2c65ef8ba089edce949781af6277a6.sol
Total states:23990
71.606509
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.509776
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xf0bea7077e2c65ef8ba089edce949781af6277a6.sol:119

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.775786
Transaction Length: 1
Severity: Low
Contract: StableCreditProtocol
Function name: markets(address,uint256)
PC address: 3356
Estimated Gas Usage: 843 - 1128
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0xf0bea7077e2c65ef8ba089edce949781af6277a6.sol:259

mapping (address => address[]) public markets

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.747272
Transaction Length: 2
Severity: High
Contract: StableCreditProtocol
Function name: increaseAllowance(address,uint256)
PC address: 10848
Estimated Gas Usage: 1038 - 1513
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xf0bea7077e2c65ef8ba089edce949781af6277a6.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.738759
Transaction Length: 1
Severity: High
Contract: StableCreditProtocol
Function name: deposit(address,uint256)
PC address: 18843
Estimated Gas Usage: 3755 - 73209
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xf0bea7077e2c65ef8ba089edce949781af6277a6.sol:138

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x96a5FDbf2718526bd686286c85736C6ed9372914.sol
Total states:1253
1.732987
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039075
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x96a5FDbf2718526bd686286c85736C6ed9372914.sol:10

g.data, they should not be accessed in such

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x163c754ef4d9c03fc7fa9cf6dd43bfc760e6ce89.sol
Total states:8317
16.754725
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.038520
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x163c754ef4d9c03fc7fa9cf6dd43bfc760e6ce89.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.511735
Transaction Length: 2
Severity: High
Contract: MaggotToken
Function name: increaseAllowance(address,uint256)
PC address: 5781
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x163c754ef4d9c03fc7fa9cf6dd43bfc760e6ce89.sol:139

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x223735DeF0eD8b129429Fb580cA0A91cefC3aE02.sol
Total states:561
4.376848
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:04.031777
Transaction Length: 1
Severity: Medium
Contract: SpellAction
Function name: execute()
PC address: 86
Estimated Gas Usage: 6516 - 144400
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 289
Offset: 551
Offset: 770
Offset: 989
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x223735DeF0eD8b129429Fb580cA0A91cefC3aE02.sol:56

function execute() external {
        /*** Risk Parameter Adjustments ***/

        // Set the global debt ceiling to 823,000,000
        // 763 (current DC) + 60 (USDC-A increase)
        VatAbstract(MCD_VAT).file("Line", 823 * MILLION * RAD);

        // Set the USDC-A debt ceiling
        //
        // Existing debt ceiling: 40 million
        // New debt ceiling: 100 million
        VatAbstract(MCD_VAT).file("USDC-A", "line", 100 * MILLION * RAD);

        // https://forum.makerdao.com/t/mip10c9-subproposal-to-whitelist-new-tbtc-oracle-access/3805
        // Whitelist tBTC address to read ETHBTC median
        MedianAbstract(ETHBTC).kiss(tBTC);
        // Remove previous tBTC address from ETHBTC median whitelist
        MedianAbstract(ETHBTC).diss(tBTC_OLD);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.812585
Transaction Length: 1
Severity: Low
Contract: SpellAction
Function name: execute()
PC address: 289
Estimated Gas Usage: 1001 - 1567
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x223735DeF0eD8b129429Fb580cA0A91cefC3aE02.sol:61

VatAbstract(MCD_VAT).file("Line", 823 * MILLION * RAD)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.564436
Transaction Length: 1
Severity: Low
Contract: SpellAction
Function name: execute()
PC address: 551
Estimated Gas Usage: 2626 - 37758
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x223735DeF0eD8b129429Fb580cA0A91cefC3aE02.sol:67

VatAbstract(MCD_VAT).file("USDC-A", "line", 100 * MILLION * RAD)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.705142
Transaction Length: 1
Severity: Low
Contract: SpellAction
Function name: execute()
PC address: 770
Estimated Gas Usage: 4201 - 73709
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x223735DeF0eD8b129429Fb580cA0A91cefC3aE02.sol:71

MedianAbstract(ETHBTC).kiss(tBTC)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.025696
Transaction Length: 1
Severity: Low
Contract: SpellAction
Function name: execute()
PC address: 989
Estimated Gas Usage: 5776 - 109660
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x223735DeF0eD8b129429Fb580cA0A91cefC3aE02.sol:73

MedianAbstract(ETHBTC).diss(tBTC_OLD)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xb012c02dabe3da060a269aa2aef41d1b895a4f35.sol
Total states:3036
6.861076
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.037277
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xb012c02dabe3da060a269aa2aef41d1b895a4f35.sol:20

 data. While these are generally available


--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.785639
Transaction Length: 1
Severity: Low
Contract: YvsLottery
Function name: players(uint256)
PC address: 5964
Estimated Gas Usage: 722 - 817
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0xb012c02dabe3da060a269aa2aef41d1b895a4f35.sol:1680

address[] public players

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.354583
Transaction Length: 1
Severity: High
Contract: YvsLottery
Function name: get_prize_pool()
PC address: 6088
Estimated Gas Usage: 2449 - 37436
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xb012c02dabe3da060a269aa2aef41d1b895a4f35.sol:346

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xd0d0a97de14d676eb2e2bc9a007e9b191d478f4f.sol
Total states:3429
5.573726
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xfc0d6bea5303aa2868f412839dbabab7b5688e8e.sol
Total states:18192
40.785256
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.821733
Transaction Length: 2
Severity: High
Contract: YBlockFinance
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xfc0d6bea5303aa2868f412839dbabab7b5688e8e.sol:57

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.184411
Transaction Length: 2
Severity: High
Contract: YBlockFinance
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xfc0d6bea5303aa2868f412839dbabab7b5688e8e.sol:58

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol
Total states:76081
147.892811
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.979203
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol:54

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.887186
Transaction Length: 2
Severity: High
Contract: YFII_Gold
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol:54

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.566270
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol:56

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.713553
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol:57

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:58.202144
Transaction Length: 2
Severity: High
Contract: YFII_Gold
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol:56

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:04.402881
Transaction Length: 2
Severity: High
Contract: YFII_Gold
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol:57

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x6175cc288707246e8a90bafdf6d37d9f3fc8f8f2.sol
Total states:8721
29.881457
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.150584
Transaction Length: 2
Severity: High
Contract: ETM
Function name: increaseApproval(address,uint256)
PC address: 5528
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6175cc288707246e8a90bafdf6d37d9f3fc8f8f2.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.412313
Transaction Length: 2
Severity: Low
Contract: ETM
Function name: increaseApproval(address,uint256)
PC address: 5541
Estimated Gas Usage: 990 - 1465
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x6175cc288707246e8a90bafdf6d37d9f3fc8f8f2.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x79faee4b277d07ce23e2387ef67ef45acc62f156.sol
Total states:60
0.775877
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x4c081d8ec752c8ca6309149e3ad07747b2576401.sol
Total states:3231
6.402196
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x9b8e1b000ba3772c6449b2b09f7a2c83b5c59add.sol
Total states:13173
26.61877
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.017512
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9b8e1b000ba3772c6449b2b09f7a2c83b5c59add.sol:140

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x11632816b82547c35516693973b2956685679db9.sol
Total states:509
0.405903
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x4C1911A80474991be7AE8BCB7e100ede8e3de657.sol
Total states:2733
7.486805
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.765877
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 4168
Estimated Gas Usage: 1612 - 2603
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4C1911A80474991be7AE8BCB7e100ede8e3de657.sol:280

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.648481
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4836
Estimated Gas Usage: 1608 - 2599
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4C1911A80474991be7AE8BCB7e100ede8e3de657.sol:251

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.354894
Transaction Length: 1
Severity: High
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3374 - 38551
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x4C1911A80474991be7AE8BCB7e100ede8e3de657.sol:95

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x9d0ec735e86d0474ef7e9274ada235f8a599d526.sol
Total states:8045
15.410343
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039442
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9d0ec735e86d0474ef7e9274ada235f8a599d526.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.118107
Transaction Length: 2
Severity: High
Contract: YFTOP
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9d0ec735e86d0474ef7e9274ada235f8a599d526.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol
Total states:4247
23.818742
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:05.233493
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 339
Estimated Gas Usage: 10986 - 154068
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1353
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:169

function supplyOrderWithDaiPermit(uint amount, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {
        DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s);
        supplyOrder(amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:07.509403
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: redeemOrder(uint256)
PC address: 385
Estimated Gas Usage: 8635 - 116441
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1961
Offset: 2326
Offset: 2583
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:147

function redeemOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        token.hasMember(msg.sender);
        tranche.redeemOrder(msg.sender, amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:14.222670
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse()
PC address: 823
Estimated Gas Usage: 4632 - 75356
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 4515
Offset: 4882
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:154

function disburse() external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:16.067220
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse(uint256)
PC address: 910
Estimated Gas Usage: 4758 - 75577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5182
Offset: 5557
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:161

function disburse(uint endEpoch) external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender, endEpoch);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:18.077013
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 1044
Estimated Gas Usage: 6568 - 79482
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:141

function supplyOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        tranche.supplyOrder(msg.sender, amount);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.385035
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1711
Estimated Gas Usage: 3914 - 40177
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:170

DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:21.995364
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 2583
Estimated Gas Usage: 8608 - 114894
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:150

tranche.redeemOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:09.815080
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 3258
Estimated Gas Usage: 3875 - 40043
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:174

EIP2612PermitLike(tranche.currency()).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.099977
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse()
PC address: 4882
Estimated Gas Usage: 3600 - 39293
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:158

tranche.disburse(msg.sender)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:15.892495
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse(uint256)
PC address: 5557
Estimated Gas Usage: 3724 - 39512
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:165

tranche.disburse(msg.sender, endEpoch)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.823428
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 6269
Estimated Gas Usage: 3727 - 39515
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:143

tranche.supplyOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:19.340065
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 6826
Estimated Gas Usage: 2310 - 4011
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:178

EIP2612PermitLike(address(token)).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x0954C532155aaA5014978d62cC71Fd393694145c.sol
Total states:853
1.40484
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xe9f8bca0730832162245ff563b5cdde288577911.sol
Total states:3451
5.80288
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x8ee57d45794b80588e9e5102ce0bdcc4f612bbd3.sol
Total states:5095
18.548917
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.036264
Transaction Length: 0
Severity: High
Contract: ConTribute
Function name: constructor
PC address: 37
Estimated Gas Usage: 5496 - 25921
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x8ee57d45794b80588e9e5102ce0bdcc4f612bbd3.sol:89

now+100 days

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.367012
Transaction Length: 1
Severity: Low
Contract: ConTribute
Function name: buy(uint256,address)
PC address: 6626
Estimated Gas Usage: 1705 - 2696
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x8ee57d45794b80588e9e5102ce0bdcc4f612bbd3.sol:233

erc20.transferFrom(
                msg.sender,
                address(this),
                _amount
            )

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.654909
Transaction Length: 1
Severity: High
Contract: ConTribute
Function name: buyFor(uint256,address,address)
PC address: 7034
Estimated Gas Usage: 4549 - 40766
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x8ee57d45794b80588e9e5102ce0bdcc4f612bbd3.sol:104

ambassadorAccumulatedQuota_[_customerAddress] + _amountOfERC20

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.652746
Transaction Length: 1
Severity: High
Contract: ConTribute
Function name: buyFor(uint256,address,address)
PC address: 8712
Estimated Gas Usage: 9452 - 65479
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x8ee57d45794b80588e9e5102ce0bdcc4f612bbd3.sol:507

invested_[_customerAddress] += _incomingERC20

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.949166
Transaction Length: 1
Severity: High
Contract: ConTribute
Function name: buyFor(uint256,address,address)
PC address: 10125
Estimated Gas Usage: 14950 - 90977
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x8ee57d45794b80588e9e5102ce0bdcc4f612bbd3.sol:16

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.089230
Transaction Length: 1
Severity: High
Contract: ConTribute
Function name: buyFor(uint256,address,address)
PC address: 10256
Estimated Gas Usage: 5112 - 41519
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x8ee57d45794b80588e9e5102ce0bdcc4f612bbd3.sol:48

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x7acfa87f6d0dd28f7909d578c5621b7777ed1b3e.sol
Total states:8483
30.542687
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.213034
Transaction Length: 2
Severity: High
Contract: DFC
Function name: increaseApproval(address,uint256)
PC address: 4862
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x7acfa87f6d0dd28f7909d578c5621b7777ed1b3e.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.718390
Transaction Length: 2
Severity: Low
Contract: DFC
Function name: increaseApproval(address,uint256)
PC address: 4875
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x7acfa87f6d0dd28f7909d578c5621b7777ed1b3e.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol
Total states:3658
31.81564
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.930814
Transaction Length: 1
Severity: High
Contract: ScamChecker
Function name: execute(bytes)
PC address: 251
Estimated Gas Usage: 295 - 390
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol:3



*/



//pragma solidity ^0.6.6;
p

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:13.057870
Transaction Length: 1
Severity: Low
Contract: ScamChecker
Function name: testTokenWeth(address)
PC address: 1415
Estimated Gas Usage: 1135 - 1701
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol:194

token0.approve(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:04.519105
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testToken(address,address)
PC address: 1415
Estimated Gas Usage: 1185 - 1751
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol:194

token0.approve(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:15.785233
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testTokenWeth(address)
PC address: 1690
Estimated Gas Usage: 2811 - 38034
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol:196

token1.approve(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, uint(-1))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.064692
Transaction Length: 1
Severity: Low
Contract: ScamChecker
Function name: testFeeTokenWeth(address,address)
PC address: 4577
Estimated Gas Usage: 1199 - 1765
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol:258

token0.approve(router, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:27.235585
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testFeeToken(address,address,address)
PC address: 4577
Estimated Gas Usage: 1271 - 1837
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol:258

token0.approve(router, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:30.960360
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testFeeToken(address,address,address)
PC address: 4832
Estimated Gas Usage: 2947 - 38170
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol:260

token1.approve(router, uint(-1))

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x1bbe0f9af0cf852f9ff14637da2f0bc477a6d1ad.sol
Total states:558
1.607431
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xac969ef484ed089e4ccd39741a9817ba8cac1425.sol
Total states:18192
42.10225
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.255869
Transaction Length: 2
Severity: High
Contract: wingfinance
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xac969ef484ed089e4ccd39741a9817ba8cac1425.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.612038
Transaction Length: 2
Severity: High
Contract: wingfinance
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xac969ef484ed089e4ccd39741a9817ba8cac1425.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x523EEAfdaC23FA2CB0C3873CdA4818cdc80e28E8.sol
Total states:18855
40.64703
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.731423
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x523EEAfdaC23FA2CB0C3873CdA4818cdc80e28E8.sol:191

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.774265
Transaction Length: 2
Severity: High
Contract: Gem
Function name: increaseAllowance(address,uint256)
PC address: 6348
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x523EEAfdaC23FA2CB0C3873CdA4818cdc80e28E8.sol:191

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x764db87e0768bd6a772274555f12cd9f6408ad56.sol
Total states:1486
1.374497
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.321395
Transaction Length: 1
Severity: Medium
Contract: SUSHIPOWAH
Function name: totalSupply()
PC address: 443
Estimated Gas Usage: 3856 - 73447
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1306
Offset: 1560
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x764db87e0768bd6a772274555f12cd9f6408ad56.sol:89

function totalSupply() public view returns (uint256) {
    IPair pair = IPair(0x795065dCc9f64b5614C407a6EFDC400DA6221FB0);
    IBar bar = IBar(0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272);
    IERC20 sushi = IERC20(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);
    (uint256 lp_totalSushi, , ) = pair.getReserves();
    uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));

    return lp_totalSushi.mul(2).add(xsushi_totalSushi);
  }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x26a62529fe815e8e9d69f12a88cd807e3621d67e.sol
Total states:1546
1.971919
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039485
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x26a62529fe815e8e9d69f12a88cd807e3621d67e.sol:24

added overflow

 * checks.

 *

 * Arithmet

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol
Total states:22237
78.71287
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.730842
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 2371
Estimated Gas Usage: 1433 - 2098
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:86

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:28.766924
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 2396
Estimated Gas Usage: 1463 - 2128
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:88

assert(c>=a && c>=b)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:02.987745
Transaction Length: 1
Severity: Low
Contract: StandardToken
Function name: transfer(address,uint256)
PC address: 2420
Estimated Gas Usage: 846 - 1131
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:39.460552
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 2420
Estimated Gas Usage: 12343 - 53578
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:06.378830
Transaction Length: 1
Severity: Low
Contract: STEST22Token
Function name: transfer(address,uint256)
PC address: 6504
Estimated Gas Usage: 1307 - 1922
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:10.906269
Transaction Length: 2
Severity: Low
Contract: STEST22Token
Function name: transfer(address,uint256)
PC address: 6504
Estimated Gas Usage: 1307 - 1922
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:76

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.832952
Transaction Length: 1
Severity: High
Contract: STEST22Token
Function name: transferFrom(address,address,uint256)
PC address: 6911
Estimated Gas Usage: 2031 - 3026
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:86

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:02.064954
Transaction Length: 1
Severity: Low
Contract: STEST22Token
Function name: transferFrom(address,address,uint256)
PC address: 6936
Estimated Gas Usage: 2061 - 3056
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:88

assert(c>=a && c>=b)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.763341
Transaction Length: 2
Severity: Low
Contract: STEST22Token
Function name: transferFrom(address,address,uint256)
PC address: 6936
Estimated Gas Usage: 2061 - 3056
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:88

assert(c>=a && c>=b)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x8EbC56A13Ae7e3cE27B960b16AA57efed3F4e79E.sol
Total states:503
0.484885
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xC3dc053e111cA40f148C6E278B180C6F29742569.sol
Total states:3873
7.3771
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x32e680d160265477de32c1abb687417868fa425d.sol
Total states:1239
0.449603
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x714c9865ee65421e7221b92d327595d73f19e949.sol
Total states:18192
42.710932
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.674262
Transaction Length: 2
Severity: High
Contract: dAPI
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x714c9865ee65421e7221b92d327595d73f19e949.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.433376
Transaction Length: 2
Severity: High
Contract: dAPI
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x714c9865ee65421e7221b92d327595d73f19e949.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x6b4e7f07a120195a067a3d1dee7455bc60c10c12.sol
Total states:19229
35.704572
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.435184
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6b4e7f07a120195a067a3d1dee7455bc60c10c12.sol:194

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.812788
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6b4e7f07a120195a067a3d1dee7455bc60c10c12.sol:194

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x335fc9dea91e6276d8cd183967da69d1d72f5d5c.sol
Total states:9955
19.981198
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040121
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x335fc9dea91e6276d8cd183967da69d1d72f5d5c.sol:18

f the transaction and its data. While these

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.969119
Transaction Length: 2
Severity: High
Contract: ERC20BUL
Function name: increaseAllowance(address,uint256)
PC address: 5531
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x335fc9dea91e6276d8cd183967da69d1d72f5d5c.sol:136

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xc5fc1b015b67d505d3a798651fc74e66a3018a63.sol
Total states:23078
7791.6081
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.056510
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xc5fc1b015b67d505d3a798651fc74e66a3018a63.sol:135

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:47.091911
Transaction Length: 2
Severity: High
Contract: TomatoSwap
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xc5fc1b015b67d505d3a798651fc74e66a3018a63.sol:135

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x80f7415dac9a37e168047eb56a25032b5fe216cc.sol
Total states:615
0.975537
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984.sol
Total states:18192
41.847653
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.200658
Transaction Length: 2
Severity: High
Contract: wing
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.590033
Transaction Length: 2
Severity: High
Contract: wing
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x20f0ccd0c01258c60de7835e9dfe26dba0cf9d90.sol
Total states:3446
6.589663
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x197c11fbe707747d79e6e9a9773824a0979afb43.sol
Total states:3374
4.871479
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.655203
Transaction Length: 1
Severity: High
Contract: MIMOToken
Function name: transferFrom(address,address,uint256)
PC address: 4989
Estimated Gas Usage: 1357 - 1452
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x197c11fbe707747d79e6e9a9773824a0979afb43.sol:37

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xd21def826472d0753baa61722e2573792519a573.sol
Total states:31815
770.412093
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.718548
Transaction Length: 1
Severity: High
Contract: FreewayPreStakingRewardToken
Function name: initialize(string,string,uint8)
PC address: 858
Estimated Gas Usage: 408 - 503
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd21def826472d0753baa61722e2573792519a573.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.923299
Transaction Length: 1
Severity: High
Contract: FreewayPreStakingRewardToken
Function name: initialize(string,string,uint8)
PC address: 1009
Estimated Gas Usage: 750 - 3527
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd21def826472d0753baa61722e2573792519a573.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:42.095522
Transaction Length: 1
Severity: High
Contract: FreewayPreStakingRewardToken
Function name: symbol()
PC address: 2067
Estimated Gas Usage: 1443 - 2478
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd21def826472d0753baa61722e2573792519a573.sol:740

function symbol() public view returns (string memory) {
        return _symbol;
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.623240
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3249
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd21def826472d0753baa61722e2573792519a573.sol:213

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.986609
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 4214
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd21def826472d0753baa61722e2573792519a573.sol:213

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:55.239508
Transaction Length: 1
Severity: High
Contract: FreewayPreStakingRewardToken
Function name: transferFrom(address,address,uint256)
PC address: 7808
Estimated Gas Usage: 1320 - 4944
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd21def826472d0753baa61722e2573792519a573.sol:244

require(b <= a, errorMessage)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x929d0e043578acbe7ea8ad7e0804329236655969.sol
Total states:3028
4.779079
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.231151
Transaction Length: 1
Severity: Low
Contract: StakePool
Function name: stake(uint256)
PC address: 5264
Estimated Gas Usage: 2506 - 3497
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x929d0e043578acbe7ea8ad7e0804329236655969.sol:449

IERC20(stakeToken).transferFrom(_msgSender(), address(this), amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xc2717e738d4bcb85f73a412afc64aa6fdedbe7a7.sol
Total states:5259
59.218928
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.943588
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xc2717e738d4bcb85f73a412afc64aa6fdedbe7a7.sol:34

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.063191
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xc2717e738d4bcb85f73a412afc64aa6fdedbe7a7.sol:30

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.705805
Transaction Length: 1
Severity: High
Contract: yfStorm
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xc2717e738d4bcb85f73a412afc64aa6fdedbe7a7.sol:34

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.782892
Transaction Length: 1
Severity: High
Contract: yfStorm
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xc2717e738d4bcb85f73a412afc64aa6fdedbe7a7.sol:30

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x0d60782bfc7839372f925b4aa827aa053e8fc38f.sol
Total states:5259
43.73483
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.474006
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0d60782bfc7839372f925b4aa827aa053e8fc38f.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.190432
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0d60782bfc7839372f925b4aa827aa053e8fc38f.sol:29

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.407448
Transaction Length: 1
Severity: High
Contract: JER
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0d60782bfc7839372f925b4aa827aa053e8fc38f.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.424148
Transaction Length: 1
Severity: High
Contract: JER
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0d60782bfc7839372f925b4aa827aa053e8fc38f.sol:29

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xd3572cc51819c12a30f65044392a0816446a87c9.sol
Total states:3451
5.88159
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xC48a5b8D41Af43eaD1912CDd95AF00853f32f6AB.sol
Total states:2175
2.708838
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.286180
Transaction Length: 1
Severity: Low
Contract: UpgradeabilityProxy
Function name: fallback
PC address: 274
Estimated Gas Usage: 681 - 3503
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy))
--------------------
In file: ../../contracts/noloop/noloop1/0xC48a5b8D41Af43eaD1912CDd95AF00853f32f6AB.sol:260

delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xde21e568c8d4856ba6dfbcb13358a1ba53ec25c1.sol
Total states:8045
15.679332
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039508
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xde21e568c8d4856ba6dfbcb13358a1ba53ec25c1.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.173033
Transaction Length: 2
Severity: High
Contract: YFFLAT
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xde21e568c8d4856ba6dfbcb13358a1ba53ec25c1.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x0000000006a0403952389B70d8EE4E45479023db.sol
Total states:30
0.091351
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x3ea5c6894f64ffe4f137db283c1a39d6bbe8fdad.sol
Total states:10248
18.472688
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.595756
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4470
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x3ea5c6894f64ffe4f137db283c1a39d6bbe8fdad.sol:44

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x038a68ff68c393373ec894015816e33ad41bd564.sol
Total states:1546
1.904289
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039238
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x038a68ff68c393373ec894015816e33ad41bd564.sol:9

sed under Apache 2.0 licence
// input  /Use

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x717882cf9977f2027e0d98ed2b0521ea971d7b23.sol
Total states:1389
2.208416
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x87F5F9eBE40786D49D35E1B5997b07cCAA8ADbFF.sol
Total states:730
1.876435
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x3cfecf9de59b3152d139ea2d20d35002c86f4938.sol
Total states:4999
7.310927
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x24f4e3a29e09f324b1d22ca673d4cf9ae77cb940.sol
Total states:1239
0.653579
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xea710583f7c81c797c4fb7476c35e1d8839a7085.sol
Total states:1839
1.35841
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xe61d1e87b8294aeb149f7ca95240d4c5905ab121.sol
Total states:3410
5.932346
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x649c90dfffdb7768c4faeba9988a0d99429a12ac.sol
Total states:17591
28.999224
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.065601
Transaction Length: 0
Severity: High
Contract: Token
Function name: constructor
PC address: 98
Estimated Gas Usage: 233 - 3006
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x649c90dfffdb7768c4faeba9988a0d99429a12ac.sol:21


interface ERC20Interface {

    /**

     

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.678308
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1574
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x649c90dfffdb7768c4faeba9988a0d99429a12ac.sol:222

_balances[_to] += _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:20.793150
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1650
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x649c90dfffdb7768c4faeba9988a0d99429a12ac.sol:224

_balances[_from] -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xd6181c7552e6dfd424b5b2b9dbd953c2d785384c.sol
Total states:8483
29.79341
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.685444
Transaction Length: 2
Severity: High
Contract: BEANSFARM
Function name: increaseApproval(address,uint256)
PC address: 4860
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd6181c7552e6dfd424b5b2b9dbd953c2d785384c.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.033109
Transaction Length: 2
Severity: Low
Contract: BEANSFARM
Function name: increaseApproval(address,uint256)
PC address: 4873
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0xd6181c7552e6dfd424b5b2b9dbd953c2d785384c.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x0fc2b9b5d5318be30c56df2bcffbc1f269609931.sol
Total states:328
0.460033
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x2d8b461E9D43C65a7C7E2afeFa5bd1372281Ba63.sol
Total states:2191
6.049012
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.000398
Transaction Length: 1
Severity: High
Contract: Flipper
Function name: tick(uint256)
PC address: 12726
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x2d8b461E9D43C65a7C7E2afeFa5bd1372281Ba63.sol:135

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol
Total states:88397
829.99791
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.799411
Transaction Length: 1
Severity: High
Contract: DSPauseProxy
Function name: exec(address,bytes)
PC address: 277
Estimated Gas Usage: 351 - 446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.079659
Transaction Length: 0
Severity: Low
Contract: Vow
Function name: constructor
PC address: 540
Estimated Gas Usage: 23004 - 107756
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:2264

vat.hope(flapper_)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:57.221992
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1060
Estimated Gas Usage: 1753 - 2744
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1516

vat.move(address(this), usr, mul(ONE, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.038218
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1114
Estimated Gas Usage: 1559 - 2455
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1949

ilks[ilk].pip.peek()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.094910
Transaction Length: 1
Severity: Low
Contract: ESM
Function name: join(uint256)
PC address: 1202
Estimated Gas Usage: 13618 - 55319
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:198

gem.transferFrom(msg.sender, pit, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.734288
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: join(address)
PC address: 1239
Estimated Gas Usage: 2405 - 3396
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1479

vat.slip(ilk, usr, int(msg.value))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:18.094611
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1281
Estimated Gas Usage: 3783 - 39575
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1517

dai.burn(msg.sender, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.414472
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1322
Estimated Gas Usage: 2474 - 3465
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1443

vat.slip(ilk, usr, int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.771115
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1457
Estimated Gas Usage: 3765 - 39836
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1951

vat.file(ilk, "spot", spot)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.765817
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1595
Estimated Gas Usage: 4535 - 40422
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1444

gem.transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:36.317971
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: join(uint256)
PC address: 1719
Estimated Gas Usage: 13726 - 55097
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1864

vat.move(msg.sender, address(this), mul(chi, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.146189
Transaction Length: 1
Severity: Low
Contract: ESM
Function name: fire()
PC address: 1817
Estimated Gas Usage: 2686 - 3392
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:187

end.cage()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:11.843929
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2573
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1483

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:00.492403
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2633
Estimated Gas Usage: 2224 - 3215
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1521

vat.move(msg.sender, address(this), mul(ONE, wad))

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:13.707472
Transaction Length: 1
Severity: High
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2642
Estimated Gas Usage: 2899 - 38076
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1484

usr.transfer(wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.430715
Transaction Length: 1
Severity: Low
Contract: Jug
Function name: drip(bytes32)
PC address: 2706
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1616

vat.ilks(ilk)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:37.160664
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2854
Estimated Gas Usage: 4255 - 40047
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1522

dai.mint(usr, wad)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.351055
Transaction Length: 1
Severity: High
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 2984
Estimated Gas Usage: 848 - 1273
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1513

x * y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.586346
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3118
Estimated Gas Usage: 2122 - 3113
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1448

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:21.161348
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3339
Estimated Gas Usage: 4153 - 39945
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1449

gem.transfer(usr, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.642216
Transaction Length: 1
Severity: Low
Contract: Vow
Function name: kiss(uint256)
PC address: 3469
Estimated Gas Usage: 9605 - 65298
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:2321

vat.heal(rad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:51.869476
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: exit(uint256)
PC address: 3541
Estimated Gas Usage: 13283 - 54654
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1870

vat.move(address(this), msg.sender, mul(chi, wad))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.860156
Transaction Length: 1
Severity: High
Contract: Pot
Function name: join(uint256)
PC address: 5026
Estimated Gas Usage: 12821 - 53626
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1828

x * y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:48.845486
Transaction Length: 1
Severity: High
Contract: Pot
Function name: exit(uint256)
PC address: 5064
Estimated Gas Usage: 837 - 1122
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1824

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:01.919326
Transaction Length: 2
Severity: High
Contract: Dai
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 5769
Estimated Gas Usage: 5999 - 43112
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:862

nonces[holder]++

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.762010
Transaction Length: 1
Severity: High
Contract: Cat
Function name: bite(bytes32,address)
PC address: 6281
Estimated Gas Usage: 5176 - 75429
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:688

x * y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:09.188091
Transaction Length: 2
Severity: High
Contract: Dai
Function name: burn(address,uint256)
PC address: 7856
Estimated Gas Usage: 7087 - 27752
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:775

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.026673
Transaction Length: 1
Severity: High
Contract: Flopper
Function name: tick(uint256)
PC address: 8156
Estimated Gas Usage: 8046 - 29891
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1345

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.693647
Transaction Length: 1
Severity: High
Contract: Flapper
Function name: tick(uint256)
PC address: 9122
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1085

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.970767
Transaction Length: 1
Severity: High
Contract: Flipper
Function name: tick(uint256)
PC address: 11459
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1208

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.210901
Transaction Length: 1
Severity: High
Contract: Vat
Function name: flux(bytes32,address,address,uint256)
PC address: 13158
Estimated Gas Usage: 1738 - 2593
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:2055

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.325085
Transaction Length: 1
Severity: High
Contract: Vat
Function name: frob(bytes32,address,address,address,int256,int256)
PC address: 13213
Estimated Gas Usage: 4552 - 7485
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:2037

x + uint(y)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xe39953deac442fd5a2ccd1ca3a1f5b4b90be229a.sol
Total states:942
0.870675
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x2b2b0559081c41e962777b5049632fdb30f7e652.sol
Total states:423
0.99636
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xbf122cf76aeb756854a4e3ebb3aa46d167201ef8.sol
Total states:9901
20.696242
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039854
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xbf122cf76aeb756854a4e3ebb3aa46d167201ef8.sol:18

e transaction and its data. While these are

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.382551
Transaction Length: 2
Severity: High
Contract: FoboToken
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xbf122cf76aeb756854a4e3ebb3aa46d167201ef8.sol:136

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x1e87a37a67e7059caa9340a79214b90c0661ac0d.sol
Total states:3274
6.897905
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x4d99c9263c4b5a0b9c0cfc25f76f18bd00117a92.sol
Total states:2733
7.576345
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.769042
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 4168
Estimated Gas Usage: 1612 - 2603
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4d99c9263c4b5a0b9c0cfc25f76f18bd00117a92.sol:280

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.733469
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4836
Estimated Gas Usage: 1608 - 2599
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4d99c9263c4b5a0b9c0cfc25f76f18bd00117a92.sol:251

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.369394
Transaction Length: 1
Severity: High
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3374 - 38551
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x4d99c9263c4b5a0b9c0cfc25f76f18bd00117a92.sol:95

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xc13247412123ec9e74d5cef8f0ae8c57c7f98da6.sol
Total states:2927
2.905953
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x2bb335cAf0fBDEC4e24515FC07edF8ed74c90b1B.sol
Total states:9670
18.968895
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.033919
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x2bb335cAf0fBDEC4e24515FC07edF8ed74c90b1B.sol:12


        this; // silence state mutability 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.975539
Transaction Length: 2
Severity: High
Contract: DimSumSwap
Function name: increaseAllowance(address,uint256)
PC address: 5292
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x2bb335cAf0fBDEC4e24515FC07edF8ed74c90b1B.sol:172

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x9dfe923ae9bd88573678bc39d935788f3af3fe2b.sol
Total states:8483
30.153925
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.189299
Transaction Length: 2
Severity: High
Contract: FC
Function name: increaseApproval(address,uint256)
PC address: 4861
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dfe923ae9bd88573678bc39d935788f3af3fe2b.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.475855
Transaction Length: 2
Severity: Low
Contract: FC
Function name: increaseApproval(address,uint256)
PC address: 4874
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dfe923ae9bd88573678bc39d935788f3af3fe2b.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x9ef9766572ee3a8542d92d5d884c6ec79046d267.sol
Total states:19694
41.225002
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.044512
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9ef9766572ee3a8542d92d5d884c6ec79046d267.sol:160

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.226594
Transaction Length: 2
Severity: High
Contract: YFVault
Function name: increaseAllowance(address,uint256)
PC address: 10530
Estimated Gas Usage: 1060 - 1535
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9ef9766572ee3a8542d92d5d884c6ec79046d267.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xe1ca2433cdaf216087039bd99f344900395ee11d.sol
Total states:342
0.182752
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x442dc4dbb08e8a2c4dc8c28cc2c98369aecccd26.sol
Total states:31613
96.782768
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.611856
Transaction Length: 1
Severity: High
Contract: YFIPOOL
Function name: approveAndCall(address,uint256,bytes)
PC address: 1799
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x442dc4dbb08e8a2c4dc8c28cc2c98369aecccd26.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:35.740682
Transaction Length: 2
Severity: High
Contract: YFIPOOL
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 4618
Estimated Gas Usage: 6015 - 43128
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x442dc4dbb08e8a2c4dc8c28cc2c98369aecccd26.sol:134

nonces[holder]++

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:22.138571
Transaction Length: 1
Severity: Medium
Contract: YFIPOOL
Function name: approveAndCall(address,uint256,bytes)
PC address: 6543
Estimated Gas Usage: 8284 - 32451
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0x442dc4dbb08e8a2c4dc8c28cc2c98369aecccd26.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), data)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.792394
Transaction Length: 1
Severity: High
Contract: YFIPOOL
Function name: transferFrom(address,address,uint256)
PC address: 7630
Estimated Gas Usage: 1671 - 2526
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x442dc4dbb08e8a2c4dc8c28cc2c98369aecccd26.sol:52

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xfef3bef71a5eb97e097039038776fd967ae5b106.sol
Total states:4151
38.950186
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xDF03e6d14AE921E4B93f983b0e14B98cDfdA972a.sol
Total states:673
0.460983
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x056527c9F79E65A63394B14A5d98e06a7306F8DF.sol
Total states:9014
18.050276
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.716517
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x056527c9F79E65A63394B14A5d98e06a7306F8DF.sol:109

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x7e522119a2a5929c5651552ab1ac35eff422218c.sol
Total states:20052
42.681737
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.075053
Transaction Length: 0
Severity: Medium
Contract: FLY
Function name: constructor
PC address: 209
Estimated Gas Usage: 17133 - 78876
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop1/0x7e522119a2a5929c5651552ab1ac35eff422218c.sol:207

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.034035
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x7e522119a2a5929c5651552ab1ac35eff422218c.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.624976
Transaction Length: 2
Severity: High
Contract: FLY
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x7e522119a2a5929c5651552ab1ac35eff422218c.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xe88348180B2e01aC7fE6fDBbC81f0E265d4d399c.sol
Total states:214
0.152571
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x709ca71ebf34a3635bc7086d90f50f711b91c782.sol
Total states:12773
345.586101
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.022683
Transaction Length: 1
Severity: High
Contract: SWProtocol
Function name: approveAndCall(address,uint256,bytes)
PC address: 1750
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x709ca71ebf34a3635bc7086d90f50f711b91c782.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:03.512529
Transaction Length: 1
Severity: Medium
Contract: SWProtocol
Function name: approveAndCall(address,uint256,bytes)
PC address: 7320
Estimated Gas Usage: 9767 - 36335
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0x709ca71ebf34a3635bc7086d90f50f711b91c782.sol:444

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x3ac2ab91ddf57e2385089202ca221c360ced0062.sol
Total states:677
0.509027
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x997c72d83926fb2ce19c30e41319a6a51bf08e59.sol
Total states:8045
15.807822
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039929
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x997c72d83926fb2ce19c30e41319a6a51bf08e59.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.123016
Transaction Length: 2
Severity: High
Contract: YFK
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x997c72d83926fb2ce19c30e41319a6a51bf08e59.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x78c61af11Ada64b7C9154E4F1485579174dB8727.sol
Total states:8045
16.344955
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039985
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x78c61af11Ada64b7C9154E4F1485579174dB8727.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.541816
Transaction Length: 2
Severity: High
Contract: YFIC
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x78c61af11Ada64b7C9154E4F1485579174dB8727.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x70ae8178a6ed7629E62e4A6B2f75B36B843B0462.sol
Total states:835
0.967756
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xb6a8c3447900024648428f2e8c851cf855ff8c17.sol
Total states:850
4.283034
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.021594
Transaction Length: 1
Severity: Low
Contract: QYFTeamLock
Function name: release()
PC address: 1196
Estimated Gas Usage: 5049 - 42716
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xb6a8c3447900024648428f2e8c851cf855ff8c17.sol:163

address(token).call(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x544288176bB6d7D198302A2d18faD38442E69b25.sol
Total states:2859
7.779474
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.035095
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x544288176bB6d7D198302A2d18faD38442E69b25.sol:24

cution context, including the

 * sender of

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xbf66e58702e87271c0c5260f5f7da2f8283bff37.sol
Total states:1756
2.873494
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xa7edc2905ae0bbdbe24f24b0962df77dc64348f1.sol
Total states:503
0.686
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xd68f1e8b1644358d3448c696e951f20556d7ce5d.sol
Total states:628
3.969193
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x1cd137eb5bdf426aae58c3ed80383f74e42d9bf2.sol
Total states:3455
5.96104
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xed0a71669c422b7ac8dd26d5838b5eb6fb3d2936.sol
Total states:18192
40.664155
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.689204
Transaction Length: 2
Severity: High
Contract: syfi2
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xed0a71669c422b7ac8dd26d5838b5eb6fb3d2936.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.568335
Transaction Length: 2
Severity: High
Contract: syfi2
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xed0a71669c422b7ac8dd26d5838b5eb6fb3d2936.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x963afdcb993a328ec2ac36443c28fda5172de6eb.sol
Total states:570
16.929868
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x88802d906C28B18eDDe15568c623965b81D594e2.sol
Total states:9901
21.352365
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040199
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x88802d906C28B18eDDe15568c623965b81D594e2.sol:10

ailable
 * via msg.sender and msg.data, the

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.934297
Transaction Length: 2
Severity: High
Contract: GAMJA777Token
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x88802d906C28B18eDDe15568c623965b81D594e2.sol:128

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xa4cabddb93b3aed27ad17a203a197c066d8ee9ed.sol
Total states:1935
5.898619
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.410760
Transaction Length: 1
Severity: High
Contract: OXS_Staking
Function name: ClaimReward()
PC address: 5199
Estimated Gas Usage: 1599 - 1884
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xa4cabddb93b3aed27ad17a203a197c066d8ee9ed.sol:48

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x1fefa92854872dd9408efd448a4bc6da3495c42b.sol
Total states:18855
39.935555
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.906118
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1fefa92854872dd9408efd448a4bc6da3495c42b.sol:137

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.760827
Transaction Length: 2
Severity: High
Contract: Stakearn_xyz
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1fefa92854872dd9408efd448a4bc6da3495c42b.sol:137

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xB76aD7c04Bc311d85a01bd371FEcCe1Fc96E3419.sol
Total states:0
0.012389
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xf569cf5adc630517be07c62d1a14479cf711e860.sol
Total states:18192
40.750525
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.534149
Transaction Length: 2
Severity: High
Contract: powerpoolcvp
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xf569cf5adc630517be07c62d1a14479cf711e860.sol:106

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.321133
Transaction Length: 2
Severity: High
Contract: powerpoolcvp
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xf569cf5adc630517be07c62d1a14479cf711e860.sol:108

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x068ca64def5e2b7050546ecbda7425999b2ec5c2.sol
Total states:150
3.693088
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol
Total states:46840
106.533835
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048205
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.936990
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.882966
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.965147
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.930740
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.972412
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.327441
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.502362
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.301972
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.108200
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.139269
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.086781
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.008269
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.286800
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.376242
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.311246
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.162292
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.000650
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.023327
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x2321eb093fabab1a355a235db5efa20b0a21cdad.sol
Total states:31613
100.856452
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.492487
Transaction Length: 1
Severity: High
Contract: YFTRUST
Function name: approveAndCall(address,uint256,bytes)
PC address: 1799
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x2321eb093fabab1a355a235db5efa20b0a21cdad.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:32.992003
Transaction Length: 2
Severity: High
Contract: YFTRUST
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 4618
Estimated Gas Usage: 6015 - 43128
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x2321eb093fabab1a355a235db5efa20b0a21cdad.sol:134

nonces[holder]++

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:22.193304
Transaction Length: 1
Severity: Medium
Contract: YFTRUST
Function name: approveAndCall(address,uint256,bytes)
PC address: 6543
Estimated Gas Usage: 8284 - 32451
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0x2321eb093fabab1a355a235db5efa20b0a21cdad.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), data)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.781186
Transaction Length: 1
Severity: High
Contract: YFTRUST
Function name: transferFrom(address,address,uint256)
PC address: 7630
Estimated Gas Usage: 1671 - 2526
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x2321eb093fabab1a355a235db5efa20b0a21cdad.sol:52

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol
Total states:11711
262.38141
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.828013
Transaction Length: 1
Severity: High
Contract: PropertyFactory
Function name: create(string,string,address)
PC address: 191
Estimated Gas Usage: 296 - 391
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:3

*/

// File: contracts/interface/IA

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.099305
Transaction Length: 1
Severity: High
Contract: PropertyFactory
Function name: create(string,string,address)
PC address: 279
Estimated Gas Usage: 472 - 567
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:3

*/

// File: contracts/interface/IA

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:48.690695
Transaction Length: 1
Severity: High
Contract: PropertyFactory
Function name: createAndAuthenticate(string,string,address,string,string,string)
PC address: 502
Estimated Gas Usage: 318 - 413
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:3

*/

// File: contracts/interface/IA

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:52.064022
Transaction Length: 1
Severity: High
Contract: PropertyFactory
Function name: createAndAuthenticate(string,string,address,string,string,string)
PC address: 590
Estimated Gas Usage: 494 - 589
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:3

*/

// File: contracts/interface/IA

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:02.774347
Transaction Length: 1
Severity: High
Contract: PropertyFactory
Function name: createAndAuthenticate(string,string,address,string,string,string)
PC address: 710
Estimated Gas Usage: 703 - 798
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:3

*/

// File: contracts/interface/IA

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:18.832081
Transaction Length: 1
Severity: High
Contract: PropertyFactory
Function name: createAndAuthenticate(string,string,address,string,string,string)
PC address: 798
Estimated Gas Usage: 879 - 974
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:3

*/

// File: contracts/interface/IA

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:52.518730
Transaction Length: 1
Severity: High
Contract: PropertyFactory
Function name: createAndAuthenticate(string,string,address,string,string,string)
PC address: 886
Estimated Gas Usage: 1055 - 1150
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:3

*/

// File: contracts/interface/IA

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.446064
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x7789d0f0993289c441dda79d08f0122431270a2a.sol
Total states:18192
41.796639
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.905657
Transaction Length: 2
Severity: High
Contract: tribute
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x7789d0f0993289c441dda79d08f0122431270a2a.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.332725
Transaction Length: 2
Severity: High
Contract: tribute
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x7789d0f0993289c441dda79d08f0122431270a2a.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x9febb25909c41a1875310bf7ad514de1485f60c7.sol
Total states:38505
59.599572
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.344113
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x9febb25909c41a1875310bf7ad514de1485f60c7.sol:198

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.205692
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 3847
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x9febb25909c41a1875310bf7ad514de1485f60c7.sol:198

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.372671
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 4011
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x9febb25909c41a1875310bf7ad514de1485f60c7.sol:198

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x4ab100559aefdc181e9de0f904cdf4f62ed543d0.sol
Total states:692
1.119105
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x3c37f97F7d8f705cc230f97a0668f77a0e05D0aA.sol
Total states:2159
5.170475
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.036621
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x3c37f97F7d8f705cc230f97a0668f77a0e05D0aA.sol:13

ext, including the
 * sender of the transac

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x22852adbce944149c0996c6edd7ee8d6e9c5f5d4.sol
Total states:1389
2.293125
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xfe07047f02e7bf1c2796e7a08fce803db80e1e8f.sol
Total states:1866
1.645296
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol
Total states:3638
36.744348
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:03.686881
Transaction Length: 1
Severity: Medium
Contract: YFMSTokenLock
Function name: lockRewardsTokens(address,uint256)
PC address: 432
Estimated Gas Usage: 15518 - 126247
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1569
Offset: 1938
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:98

function lockRewardsTokens (address _from, uint256 _amount) public {
    require(_from == owner);
    require(YFMSToken.balanceOf(_from) >= _amount);
    YFMSLockedRewards = _amount;
    unlockDateRewards = now;
    YFMSToken.transferFrom(owner, address(this), _amount);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:07.614885
Transaction Length: 1
Severity: Medium
Contract: YFMSTokenLock
Function name: lockDevTokens(address,uint256)
PC address: 722
Estimated Gas Usage: 15511 - 126240
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2791
Offset: 3160
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:89

function lockDevTokens (address _from, uint _amount) public {
    require(_from == owner);
    require(YFMSToken.balanceOf(_from) >= _amount);
    YFMSLockedDev = _amount;
    unlockDateDev = now;
    YFMSToken.transferFrom(owner, address(this), _amount);
  }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.547323
Transaction Length: 1
Severity: Low
Contract: YFMSTokenLock
Function name: withdrawDevTokens(address,uint256)
PC address: 1225
Estimated Gas Usage: 8569 - 29795
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:111

YFMSToken.transfer(_to, _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:28.212055
Transaction Length: 2
Severity: Low
Contract: YFMSTokenLock
Function name: withdrawDevTokens(address,uint256)
PC address: 1225
Estimated Gas Usage: 8575 - 29801
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:111

YFMSToken.transfer(_to, _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.528425
Transaction Length: 1
Severity: Low
Contract: YFMSTokenLock
Function name: lockRewardsTokens(address,uint256)
PC address: 1938
Estimated Gas Usage: 14693 - 91236
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:103

YFMSToken.transferFrom(owner, address(this), _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.100102
Transaction Length: 1
Severity: Low
Contract: YFMSTokenLock
Function name: withdrawRewardsTokens(address,uint256)
PC address: 2447
Estimated Gas Usage: 8559 - 29785
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:119

YFMSToken.transfer(_to, _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:22.120769
Transaction Length: 2
Severity: Low
Contract: YFMSTokenLock
Function name: withdrawRewardsTokens(address,uint256)
PC address: 2447
Estimated Gas Usage: 8568 - 29794
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:119

YFMSToken.transfer(_to, _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:07.459620
Transaction Length: 1
Severity: Low
Contract: YFMSTokenLock
Function name: lockDevTokens(address,uint256)
PC address: 3160
Estimated Gas Usage: 14686 - 91229
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:94

YFMSToken.transferFrom(owner, address(this), _amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x6dab64c1e43c9c23f48e6226b3e8ba877f67b160.sol
Total states:7439
17.385086
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.667700
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x6dab64c1e43c9c23f48e6226b3e8ba877f67b160.sol:106

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x32e9e36db78b5ee39927ea7dd0cb4926c30c8c8c.sol
Total states:8585
79.107832
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.723915
Transaction Length: 1
Severity: High
Contract: tstDAO
Function name: propose(address,string)
PC address: 3086
Estimated Gas Usage: 440 - 535
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32e9e36db78b5ee39927ea7dd0cb4926c30c8c8c.sol:3

*/

// File: @openzeppelin/contract

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x807dCF376a2c658cd76A65C343d7f60B6dBC089B.sol
Total states:17290
35.48673
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048060
Transaction Length: 0
Severity: High
Contract: AdvantMedicalToken
Function name: constructor
PC address: 117
Estimated Gas Usage: 5263 - 28036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x807dCF376a2c658cd76A65C343d7f60B6dBC089B.sol:11

tor () internal { }
    // solhint-disable-

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.896649
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x807dCF376a2c658cd76A65C343d7f60B6dBC089B.sol:106

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.980836
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 3847
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x807dCF376a2c658cd76A65C343d7f60B6dBC089B.sol:106

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x61fb613ac60dfebbfd09d9726e4cd89740abe3db.sol
Total states:3378
6.002022
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol
Total states:2159
45.262836
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:09.370875
Transaction Length: 1
Severity: Medium
Contract: LiquidityPool
Function name: addLiquidity(address)
PC address: 326
Estimated Gas Usage: 7363 - 146321
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 904
Offset: 1076
Offset: 1300
Offset: 1490
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:340

function addLiquidity(address tokenAddress) external payable {

        UniswapExchangeInterface uniswapExchange = UniswapExchangeInterface(uniswapFactory.getExchange(tokenAddress));

        uint tokenAmount = uniswapExchange.getEthToTokenInputPrice(msg.value);

        IERC20(tokenAddress).approve(address(uniswapExchange), tokenAmount);

        uniswapExchange.addLiquidity.value(msg.value)(

            tokenAmount,

            tokenAmount,

            now + 120

            );

    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:25.671086
Transaction Length: 2
Severity: Medium
Contract: LiquidityPool
Function name: addLiquidity(address)
PC address: 326
Estimated Gas Usage: 7363 - 146321
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 904
Offset: 1076
Offset: 1300
Offset: 1490
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:340

function addLiquidity(address tokenAddress) external payable {

        UniswapExchangeInterface uniswapExchange = UniswapExchangeInterface(uniswapFactory.getExchange(tokenAddress));

        uint tokenAmount = uniswapExchange.getEthToTokenInputPrice(msg.value);

        IERC20(tokenAddress).approve(address(uniswapExchange), tokenAmount);

        uniswapExchange.addLiquidity.value(msg.value)(

            tokenAmount,

            tokenAmount,

            now + 120

            );

    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:12.211585
Transaction Length: 1
Severity: Medium
Contract: LiquidityPool
Function name: buy(address)
PC address: 394
Estimated Gas Usage: 5708 - 110009
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1744
Offset: 1916
Offset: 2151
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:318

function buy (address tokenAddress) external payable {

        UniswapExchangeInterface uniswapExchange = UniswapExchangeInterface(uniswapFactory.getExchange(tokenAddress));

         uint tokenAmount = uniswapExchange.getEthToTokenInputPrice(msg.value);

        uniswapExchange.ethToTokenTransferOutput.value(msg.value)(

            tokenAmount,

            now + 120,

            msg.sender

            );

    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:32.747565
Transaction Length: 2
Severity: Medium
Contract: LiquidityPool
Function name: buy(address)
PC address: 394
Estimated Gas Usage: 5708 - 110009
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1744
Offset: 1916
Offset: 2151
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:318

function buy (address tokenAddress) external payable {

        UniswapExchangeInterface uniswapExchange = UniswapExchangeInterface(uniswapFactory.getExchange(tokenAddress));

         uint tokenAmount = uniswapExchange.getEthToTokenInputPrice(msg.value);

        uniswapExchange.ethToTokenTransferOutput.value(msg.value)(

            tokenAmount,

            now + 120,

            msg.sender

            );

    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.102852
Transaction Length: 1
Severity: Low
Contract: LiquidityPool
Function name: createExchange(address)
PC address: 586
Estimated Gas Usage: 1495 - 2296
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:310

uniswapFactory.createExchange(token)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:03.969338
Transaction Length: 2
Severity: Medium
Contract: LiquidityPool
Function name: createExchange(address)
PC address: 586
Estimated Gas Usage: 1495 - 2296
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:310

uniswapFactory.createExchange(token)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:06.215050
Transaction Length: 1
Severity: Medium
Contract: LiquidityPool
Function name: addLiquidity(address)
PC address: 1300
Estimated Gas Usage: 4837 - 74857
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:346

IERC20(tokenAddress).approve(address(uniswapExchange), tokenAmount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:17.733682
Transaction Length: 2
Severity: Medium
Contract: LiquidityPool
Function name: addLiquidity(address)
PC address: 1300
Estimated Gas Usage: 4837 - 74857
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:346

IERC20(tokenAddress).approve(address(uniswapExchange), tokenAmount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:09.256594
Transaction Length: 1
Severity: Low
Contract: LiquidityPool
Function name: addLiquidity(address)
PC address: 1490
Estimated Gas Usage: 6534 - 111306
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:348

uniswapExchange.addLiquidity.value(msg.value)(

            tokenAmount,

            tokenAmount,

            now + 120

            )

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:25.504143
Transaction Length: 2
Severity: Low
Contract: LiquidityPool
Function name: addLiquidity(address)
PC address: 1490
Estimated Gas Usage: 6534 - 111306
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:348

uniswapExchange.addLiquidity.value(msg.value)(

            tokenAmount,

            tokenAmount,

            now + 120

            )

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:12.107477
Transaction Length: 1
Severity: Low
Contract: LiquidityPool
Function name: buy(address)
PC address: 2151
Estimated Gas Usage: 4879 - 74994
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:324

uniswapExchange.ethToTokenTransferOutput.value(msg.value)(

            tokenAmount,

            now + 120,

            msg.sender

            )

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:32.587814
Transaction Length: 2
Severity: Low
Contract: LiquidityPool
Function name: buy(address)
PC address: 2151
Estimated Gas Usage: 4879 - 74994
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:324

uniswapExchange.ethToTokenTransferOutput.value(msg.value)(

            tokenAmount,

            now + 120,

            msg.sender

            )

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xc880c252db7c51f74161633338a3bdafa8e65276.sol
Total states:697
5.082665
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x011166d1934d1b3e0bb9f7d8ca5241c153d07ddc.sol
Total states:3395
5.994052
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol
Total states:46840
106.941366
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048766
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.967520
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.993289
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.004211
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.969456
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.005989
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.986285
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.180650
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.020704
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.113645
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.144499
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.856015
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.849695
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.498233
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.761176
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.004903
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.867435
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.006510
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.060573
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x556237e86df9325017c330e295c13a6c7d0e71a7.sol
Total states:5431
5.998213
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x7113b73c813733daDE1558a93a1894e0ae06F0F6.sol
Total states:1219
0.940715
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.070224
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x7113b73c813733daDE1558a93a1894e0ae06F0F6.sol:10

g.data, they should not be accessed in such

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xe95c387fbbb2897e9cf055c43e252d38c7dc493f.sol
Total states:398
1.193723
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x4935b1188eb940c39e22172cc5fe595e267706a1.sol
Total states:1261
1.017154
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x94CfE11E6b57f6f84bBa2c6DfB0fAeA47C4741D6.sol
Total states:909
14.197292
==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:02.173526
Transaction Length: 1
Severity: Medium
Contract: SushiRoll
Function name: roll(address,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 615
Estimated Gas Usage: 1611 - 3032
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0x94CfE11E6b57f6f84bBa2c6DfB0fAeA47C4741D6.sol:50

IUniswapV2Router2(fromRouter).removeLiquidityWithPermit(
            tokenA, tokenB,
            liquidity,
            amountAMin, amountBMin,
            address(this),
            now + 1,
            true,
            v, r, s)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:05.631761
Transaction Length: 1
Severity: Medium
Contract: SushiRoll
Function name: roll(address,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 903
Estimated Gas Usage: 3322 - 39493
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0x94CfE11E6b57f6f84bBa2c6DfB0fAeA47C4741D6.sol:61

IERC20(tokenA).approve(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F, uint256(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:10.100956
Transaction Length: 1
Severity: Medium
Contract: SushiRoll
Function name: roll(address,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1178
Estimated Gas Usage: 4998 - 75826
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0x94CfE11E6b57f6f84bBa2c6DfB0fAeA47C4741D6.sol:62

IERC20(tokenB).approve(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F, uint256(-1))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:13.645669
Transaction Length: 1
Severity: Low
Contract: SushiRoll
Function name: roll(address,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1563
Estimated Gas Usage: 6828 - 112883
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x94CfE11E6b57f6f84bBa2c6DfB0fAeA47C4741D6.sol:65

IUniswapV2Router2(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F).addLiquidity(
            tokenA, tokenB,
            amountA, amountB,
            amountAMin, amountBMin,
            address(msg.sender),
            now + 1)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xab14a9b424b85d2b792f5170161e8f5f9d35c516.sol
Total states:11362
29.870754
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x3d48046f6213451faaf06c5953d7394c13590ec4.sol
Total states:18855
39.897674
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.738781
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x3d48046f6213451faaf06c5953d7394c13590ec4.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.709409
Transaction Length: 2
Severity: High
Contract: YCH
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x3d48046f6213451faaf06c5953d7394c13590ec4.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x787cdf337b66e10de9191bb7a26e2128b52c6390.sol
Total states:2513
5.064426
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xc094dca45f5f9195622720c2582ed47ac5ab3f7c.sol
Total states:554
1.449725
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xeae57ce9cc1984f202e15e038b964bb8bdf7229a.sol
Total states:174
205.378198
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.979555
Transaction Length: 1
Severity: High
Contract: SplTokenSwap
Function name: withdrawErc20(address,address,uint256,uint256,bytes)
PC address: 381
Estimated Gas Usage: 439 - 534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xeae57ce9cc1984f202e15e038b964bb8bdf7229a.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.520886
Transaction Length: 1
Severity: High
Contract: SplTokenSwap
Function name: swapEth(string)
PC address: 593
Estimated Gas Usage: 339 - 434
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xeae57ce9cc1984f202e15e038b964bb8bdf7229a.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:11.781517
Transaction Length: 1
Severity: High
Contract: SplTokenSwap
Function name: withdrawEth(address,uint256,uint256,bytes)
PC address: 931
Estimated Gas Usage: 427 - 522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xeae57ce9cc1984f202e15e038b964bb8bdf7229a.sol:3

*/

// File: @openzeppelin/contract

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol
Total states:2733
7.576284
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.749873
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 4168
Estimated Gas Usage: 1612 - 2603
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:280

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.552148
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4836
Estimated Gas Usage: 1608 - 2599
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:251

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.329768
Transaction Length: 1
Severity: High
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3374 - 38551
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:95

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xe28beB73c2b3f6a6fFD4183Fed979BC5e39E36D7.sol
Total states:1579
2.154625
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.043901
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe28beB73c2b3f6a6fFD4183Fed979BC5e39E36D7.sol:24

ata() internal view  returns (bytes memory)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xc276c071299b31dec8d18961dbb063c8ad1b5e90.sol
Total states:33573
61.765883
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.058221
Transaction Length: 0
Severity: High
Contract: HBUSDToken
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xc276c071299b31dec8d18961dbb063c8ad1b5e90.sol:28

256 c = a + b;

        require(c >= a, "Sa

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.697243
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3941
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xc276c071299b31dec8d18961dbb063c8ad1b5e90.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.319324
Transaction Length: 2
Severity: High
Contract: Blacklisted
Function name: increaseAllowance(address,uint256)
PC address: 5349
Estimated Gas Usage: 967 - 1442
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xc276c071299b31dec8d18961dbb063c8ad1b5e90.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.517367
Transaction Length: 2
Severity: High
Contract: CoinFactory
Function name: increaseAllowance(address,uint256)
PC address: 5786
Estimated Gas Usage: 967 - 1442
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xc276c071299b31dec8d18961dbb063c8ad1b5e90.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x795Ce5D8eaB46EDB30Dc0421F130162f6B75556f.sol
Total states:920
2.317893
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.687100
Transaction Length: 1
Severity: High
Contract: StakingPoolFunds
Function name: availableDividendRewards()
PC address: 3695
Estimated Gas Usage: 5668 - 109259
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x795Ce5D8eaB46EDB30Dc0421F130162f6B75556f.sol:38

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x557AeD48fE5E604725Ee61A60421F2AFC28FcE6F.sol
Total states:2641
1.721113
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xd8393dd6c53f5ae7c98eaf46e28c18ec58450c50.sol
Total states:481
3.945518
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x9214a67186965fd5fe582a64a8646ff058f023aa.sol
Total states:2150
1.994033
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xb7412e57767ec30a76a4461d408d78b36688409c.sol
Total states:18859
39.632617
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.539050
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xb7412e57767ec30a76a4461d408d78b36688409c.sol:123

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.384402
Transaction Length: 2
Severity: High
Contract: BCRED
Function name: increaseAllowance(address,uint256)
PC address: 4721
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xb7412e57767ec30a76a4461d408d78b36688409c.sol:123

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x6A2E6510B2BBF8C9AD7bC817D0Dc711711E8d747.sol
Total states:406
0.596044
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.006265
Transaction Length: 1
Severity: Low
Contract: BaseUpgradeabilityProxy
Function name: fallback
PC address: 97
Estimated Gas Usage: 557 - 2956
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: ../../contracts/noloop/noloop2/0x6A2E6510B2BBF8C9AD7bC817D0Dc711711E8d747.sol:50

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x32d5830f8d6d9cdb36965c521e0e638d24c6b889.sol
Total states:20094
31.345013
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.042838
Transaction Length: 0
Severity: High
Contract: Token
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32d5830f8d6d9cdb36965c521e0e638d24c6b889.sol:15

InterfaceERC20 {
    function totalSupply()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.667931
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 2788
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32d5830f8d6d9cdb36965c521e0e638d24c6b889.sol:69

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xa39F5eF6ADF4c04e8DF8f708de3A2AD1b060f44d.sol
Total states:60
0.757433
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xd421efc67ee0d051155ca5e8075ac7eb125ff053.sol
Total states:3016
3516.717143
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:58:28.509811
Transaction Length: 1
Severity: High
Contract: PrivateSale
Function name: buyWithUSDC(uint256)
PC address: 6516
Estimated Gas Usage: 752 - 847
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xd421efc67ee0d051155ca5e8075ac7eb125ff053.sol:99

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x642De6Dcae9a0b21C73BAFacF921d49071864918.sol
Total states:495
0.318783
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x7f7ce4061af64a23f49591da71e90b7dd2419512.sol
Total states:8483
29.786217
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.241131
Transaction Length: 2
Severity: High
Contract: BasilFinance
Function name: increaseApproval(address,uint256)
PC address: 4860
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x7f7ce4061af64a23f49591da71e90b7dd2419512.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.078740
Transaction Length: 2
Severity: Low
Contract: BasilFinance
Function name: increaseApproval(address,uint256)
PC address: 4873
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x7f7ce4061af64a23f49591da71e90b7dd2419512.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x3d96b91f1e3d017325e0eea6d8edf9fa8558f5bc.sol
Total states:3395
5.978846
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xf4bcc9537e4a6ff9d13a92b6273cc2349b659242.sol
Total states:31613
95.511395
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.637411
Transaction Length: 1
Severity: High
Contract: YFK
Function name: approveAndCall(address,uint256,bytes)
PC address: 1799
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xf4bcc9537e4a6ff9d13a92b6273cc2349b659242.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.487866
Transaction Length: 2
Severity: High
Contract: YFK
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 4618
Estimated Gas Usage: 6015 - 43128
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xf4bcc9537e4a6ff9d13a92b6273cc2349b659242.sol:134

nonces[holder]++

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:22.538270
Transaction Length: 1
Severity: Medium
Contract: YFK
Function name: approveAndCall(address,uint256,bytes)
PC address: 6543
Estimated Gas Usage: 8284 - 32451
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0xf4bcc9537e4a6ff9d13a92b6273cc2349b659242.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), data)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.800255
Transaction Length: 1
Severity: High
Contract: YFK
Function name: transferFrom(address,address,uint256)
PC address: 7630
Estimated Gas Usage: 1671 - 2526
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xf4bcc9537e4a6ff9d13a92b6273cc2349b659242.sol:52

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x8f9dc5c9ce6834d8c9897faf5d44ac36ca073595.sol
Total states:839
2.530406
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.727475
Transaction Length: 1
Severity: Low
Contract: Treasury
Function name: withdraw(address)
PC address: 858
Estimated Gas Usage: 3103 - 38371
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x8f9dc5c9ce6834d8c9897faf5d44ac36ca073595.sol:334

IWithdraw(config.withdraw()).withdraw(_property)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x5ecbba808c654858b2cda5fe6e89604e1219b357.sol
Total states:33794
84.08816
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:09.010612
Transaction Length: 1
Severity: Low
Contract: Token
Function name: fallback()
PC address: 312
Estimated Gas Usage: 286 - 381
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x5ecbba808c654858b2cda5fe6e89604e1219b357.sol:129

assert(true == false)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:13.061056
Transaction Length: 2
Severity: Low
Contract: Token
Function name: fallback()
PC address: 312
Estimated Gas Usage: 286 - 381
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x5ecbba808c654858b2cda5fe6e89604e1219b357.sol:129

assert(true == false)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:47.081675
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2495
Estimated Gas Usage: 3671 - 5286
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x5ecbba808c654858b2cda5fe6e89604e1219b357.sol:102

balances[toAddr]                 + amountInWei

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:54.959861
Transaction Length: 2
Severity: Low
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2777
Estimated Gas Usage: 4203 - 6008
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x5ecbba808c654858b2cda5fe6e89604e1219b357.sol:106

assert(balanceTo    >= balances[toAddr])

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:05.673047
Transaction Length: 1
Severity: High
Contract: Token
Function name: transfer(address,uint256)
PC address: 5388
Estimated Gas Usage: 2368 - 3033
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x5ecbba808c654858b2cda5fe6e89604e1219b357.sol:76

balances[msg.sender] - amountInWei

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:08.393238
Transaction Length: 1
Severity: Low
Contract: Token
Function name: transfer(address,uint256)
PC address: 5534
Estimated Gas Usage: 2378 - 3043
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x5ecbba808c654858b2cda5fe6e89604e1219b357.sol:79

assert(balanceFrom <= balances[msg.sender])

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xae465FD39B519602eE28F062037F7B9c41FDc8cF.sol
Total states:2660
23.572941
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.028240
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xae465FD39B519602eE28F062037F7B9c41FDc8cF.sol:13

ext, including the
 * sender of the transac

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.303829
Transaction Length: 0
Severity: High
Contract: WarpVaultSC
Function name: constructor
PC address: 744
Estimated Gas Usage: 59602 - 319430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xae465FD39B519602eE28F062037F7B9c41FDc8cF.sol:5

_modules\@openz

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.157865
Transaction Length: 0
Severity: High
Contract: WarpVaultSC
Function name: constructor
PC address: 2059
Estimated Gas Usage: 47404 - 231962
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xae465FD39B519602eE28F062037F7B9c41FDc8cF.sol:217

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x410d2248e14fbc11394b731e6107f60381c2191a.sol
Total states:8888
22.411883
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.110048
Transaction Length: 0
Severity: High
Contract: iVault
Function name: constructor
PC address: 224
Estimated Gas Usage: 6794 - 64036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x410d2248e14fbc11394b731e6107f60381c2191a.sol:6

ed for verifica

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.927880
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x410d2248e14fbc11394b731e6107f60381c2191a.sol:168

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x4e4b58e47C69cA316d616E179E009AB2cE064aED.sol
Total states:0
0.022438
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xcfad7aeb67fc5c19a581496689881ae063541149.sol
Total states:997
84.160242
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:23.304249
Transaction Length: 1
Severity: Low
Contract: TokenVestingLock
Function name: getPendingUnlocked()
PC address: 3310
Estimated Gas Usage: 659 - 754
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfad7aeb67fc5c19a581496689881ae063541149.sol:29

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.893687
Transaction Length: 1
Severity: High
Contract: TokenVestingLock
Function name: getPendingUnlocked()
PC address: 3328
Estimated Gas Usage: 958 - 1053
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfad7aeb67fc5c19a581496689881ae063541149.sol:16

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:22.517748
Transaction Length: 1
Severity: Low
Contract: TokenVestingLock
Function name: getPendingUnlocked()
PC address: 3362
Estimated Gas Usage: 1030 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfad7aeb67fc5c19a581496689881ae063541149.sol:17

assert(a == 0 || c / a == b)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xc1fa58339755880ae945e31c8672e20c491e190b.sol
Total states:850
4.383407
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.007724
Transaction Length: 1
Severity: Low
Contract: rfiSantaTimelock
Function name: release()
PC address: 1196
Estimated Gas Usage: 5049 - 42716
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xc1fa58339755880ae945e31c8672e20c491e190b.sol:200

address(token).call(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xe41d15bdbd5688625675f2da55f1e2d568c9fc0d.sol
Total states:1249
0.885893
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol
Total states:21575
168.108791
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.026910
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:9

dress constant BUSD_DEPOSIT_ADDRESS   = 0xb

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.321125
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: fallback
PC address: 142
Estimated Gas Usage: 2311 - 39600
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x594153a000000000000000000000000000000000000000000000000000000000
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1035

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.323560
Transaction Length: 1
Severity: Medium
Contract: PoolProxy
Function name: fallback
PC address: 160
Estimated Gas Usage: 3056 - 74345
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 931
Offset: 142
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1044

return(ptr, size)

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.036033
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: fallback
PC address: 264
Estimated Gas Usage: 725 - 3547
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy))
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:902

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.993937
Transaction Length: 1
Severity: Low
Contract: Deposit3Tokens
Function name: period_timestamp(uint256)
PC address: 380
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:992

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.084026
Transaction Length: 1
Severity: Low
Contract: Deposit2Tokens
Function name: period_timestamp(uint256)
PC address: 393
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:986

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:44.581112
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 537
Estimated Gas Usage: 1433 - 2470
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:47.957506
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 577
Estimated Gas Usage: 1583 - 2996
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.604132
Transaction Length: 1
Severity: Low
Contract: TokenManager
Function name: supportAddresses(address,uint256)
PC address: 613
Estimated Gas Usage: 752 - 1037
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.175213
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: supportAddresses(address,uint256)
PC address: 1317
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:03.005580
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1575
Estimated Gas Usage: 4173 - 40386
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1082

IERC20(tokenAddress).transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:08.622916
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1891
Estimated Gas Usage: 5889 - 76759
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1085

IERC20(tokenAddress).approve(EXCHANGE_CONTRACT, amount)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.944763
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: supportAddresses(address,uint256)
PC address: 2114
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.097637
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2259
Estimated Gas Usage: 8446 - 148446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:5

enManager {
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:23.756795
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2262
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:3



 contract TokenManager {
    
    address

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.632724
Transaction Length: 2
Severity: High
Contract: PoolToken
Function name: increaseAllowance(address,uint256)
PC address: 4840
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:139

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.452894
Transaction Length: 1
Severity: Low
Contract: PoolFactory
Function name: supportAddresses(address,uint256)
PC address: 5037
Estimated Gas Usage: 796 - 1081
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:00.828137
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: supportAddresses(address,uint256)
PC address: 8485
Estimated Gas Usage: 818 - 1103
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.871641
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17754
Estimated Gas Usage: 5008 - 75599
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:5

enManager {
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.238535
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17757
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:3



 contract TokenManager {
    
    address

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:32.245907
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17778
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1241

IOneSplit(EXCHANGE_CONTRACT).getExpectedReturn(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, 100, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.160688
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17813
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:2


*/

 contract TokenM

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:38.642597
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17819
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:7

ant COMPOUND_D

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:45.745116
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17839
Estimated Gas Usage: 5186 - 76056
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:9

POSIT_ADDRESS   = 0xb

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:54.509829
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17841
Estimated Gas Usage: 5186 - 76056
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:9

dress constant BUSD_DEPOSIT_ADDRESS   = 0xb6

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:32.176673
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18208
Estimated Gas Usage: 5661 - 77946
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:31.736114
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18245
Estimated Gas Usage: 6389 - 78579
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.237274
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 19161
Estimated Gas Usage: 5923 - 76793
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1257

IERC20(DAI_ADDRESS).approve(_depositPool, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol
Total states:120
3.173175
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x846F271627b970773b235AFb11Fe0fcF12206C86.sol
Total states:879
0.773306
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xd7f835e02cec0313c07bb65129b95040994311ea.sol
Total states:10492
37.793392
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.991873
Transaction Length: 1
Severity: High
Contract: yfSCAN
Function name: transfer(address,uint256)
PC address: 6338
Estimated Gas Usage: 834 - 929
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xd7f835e02cec0313c07bb65129b95040994311ea.sol:31

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.067589
Transaction Length: 2
Severity: High
Contract: yfSCAN
Function name: increaseAllowance(address,uint256)
PC address: 6458
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xd7f835e02cec0313c07bb65129b95040994311ea.sol:9

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x96257d0906149fb387cde1ccef15c1a072782af4.sol
Total states:610
1.550842
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x9e766f71774712f38fc3f7ac40bfba5e3d910ffa.sol
Total states:191
1.59586
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.511906
Transaction Length: 1
Severity: Medium
Contract: RebaseMiBASE
Function name: rebasesync()
PC address: 106
Estimated Gas Usage: 3258 - 72196
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 232
Offset: 376
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x9e766f71774712f38fc3f7ac40bfba5e3d910ffa.sol:46

function rebasesync()

        external

        returns (uint256)

     {

        

    UNIV2Sync(0xDAEfbED9D35F505444527746393f015B8C84dF2b).sync();

    Mibaserebase(0xd5c0216B0627134Ed57A53a9Ea430766CE1D9Da5).rebase();

   

        }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.600344
Transaction Length: 1
Severity: Low
Contract: RebaseMiBASE
Function name: rebasesync()
PC address: 232
Estimated Gas Usage: 931 - 1307
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x9e766f71774712f38fc3f7ac40bfba5e3d910ffa.sol:56

UNIV2Sync(0xDAEfbED9D35F505444527746393f015B8C84dF2b).sync()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.505348
Transaction Length: 1
Severity: Low
Contract: RebaseMiBASE
Function name: rebasesync()
PC address: 376
Estimated Gas Usage: 2466 - 37123
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x9e766f71774712f38fc3f7ac40bfba5e3d910ffa.sol:58

Mibaserebase(0xd5c0216B0627134Ed57A53a9Ea430766CE1D9Da5).rebase()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x44dea9ab3a589b007e6bb5703ba5b19706f22703.sol
Total states:771
1.220805
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xa90eef2d7ee828a664504a2aca0d2e2c33563a42.sol
Total states:1253
2.277533
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040865
Transaction Length: 0
Severity: High
Contract: UtopiaTokenV
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xa90eef2d7ee828a664504a2aca0d2e2c33563a42.sol:13

  returns (bytes memory) {
        this; //

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x73b97e2d542052afc743df5966c4f9718c9d43ff.sol
Total states:599
1.508596
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xae095deea487c22b53063ac052a36b3e4f6fc259.sol
Total states:428
1.406736
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xc59ddee8be619680a3b9489eb864b30270f2070d.sol
Total states:8967
17.845594
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.031849
Transaction Length: 0
Severity: High
Contract: ERC20Detailed
Function name: constructor
PC address: 106
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xc59ddee8be619680a3b9489eb864b30270f2070d.sol:12

t, uint256 amount) external returns (bool);

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.417856
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xc59ddee8be619680a3b9489eb864b30270f2070d.sol:25

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x7c6e8cba7d98958bc5f280c346d2dff23b772a59.sol
Total states:1313
4.245298
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040586
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x7c6e8cba7d98958bc5f280c346d2dff23b772a59.sol:13

y wrap on overflow. This can easily result


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.142054
Transaction Length: 0
Severity: High
Contract: YvsTokenTimelock
Function name: constructor
PC address: 572
Estimated Gas Usage: 12791 - 56336
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x7c6e8cba7d98958bc5f280c346d2dff23b772a59.sol:34

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xe28157a9272ec2eec886a208dc77f547361ad3f3.sol
Total states:8045
16.872258
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039507
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe28157a9272ec2eec886a208dc77f547361ad3f3.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.160673
Transaction Length: 2
Severity: High
Contract: YFONE
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe28157a9272ec2eec886a208dc77f547361ad3f3.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x45d6a1D01E37aedC0e1Af6ff6a87D25754cA8ECB.sol
Total states:669
1.347892
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x259897d9699553edbdf8538599242354e957fb94.sol
Total states:580
4.73655
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xbc6F608FDD6A88D750C6BA84815C9581411Ce113.sol
Total states:1995
485.653917
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.968674
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 391
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xbc6F608FDD6A88D750C6BA84815C9581411Ce113.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.663888
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 542
Estimated Gas Usage: 729 - 3506
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xbc6F608FDD6A88D750C6BA84815C9581411Ce113.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:16.229150
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1025
Estimated Gas Usage: 401 - 496
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xbc6F608FDD6A88D750C6BA84815C9581411Ce113.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:28.827026
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1176
Estimated Gas Usage: 743 - 3520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xbc6F608FDD6A88D750C6BA84815C9581411Ce113.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:18.247620
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1529
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xbc6F608FDD6A88D750C6BA84815C9581411Ce113.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:31.986594
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1680
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xbc6F608FDD6A88D750C6BA84815C9581411Ce113.sol:3

*/

// File: @openzeppelin/contract

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol
Total states:4371
1860.876038
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.986365
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1219
Estimated Gas Usage: 543 - 638
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.815679
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1370
Estimated Gas Usage: 885 - 3662
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:31.342687
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1521
Estimated Gas Usage: 1227 - 6686
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:58.788632
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1672
Estimated Gas Usage: 1569 - 9710
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:11.274375
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: juniorName()
PC address: 1867
Estimated Gas Usage: 1524 - 2559
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol:162

string              public juniorName

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:09:13.868086
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: seniorSymbol()
PC address: 2072
Estimated Gas Usage: 1458 - 2493
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol:161

string              public seniorSymbol

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:26:11.193420
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: seniorName()
PC address: 3675
Estimated Gas Usage: 1500 - 2535
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol:160

string              public seniorName

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x885a49f608f41cc21d35dedba18f1271b9a5d6af.sol
Total states:18192
40.788735
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.536641
Transaction Length: 2
Severity: High
Contract: tributefinance
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x885a49f608f41cc21d35dedba18f1271b9a5d6af.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.807212
Transaction Length: 2
Severity: High
Contract: tributefinance
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x885a49f608f41cc21d35dedba18f1271b9a5d6af.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x22516b9df2291d739edf7f9adfc60c25c21e9172.sol
Total states:9026
20.925492
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.897536
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x22516b9df2291d739edf7f9adfc60c25c21e9172.sol:120

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x76f227246d63d105476987746bff1dcc9d558cf5.sol
Total states:10068
43.642642
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.248665
Transaction Length: 2
Severity: High
Contract: ATON
Function name: increaseAllowance(address,uint256)
PC address: 4673
Estimated Gas Usage: 1033 - 1508
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x76f227246d63d105476987746bff1dcc9d558cf5.sol:168

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x5927e4c47cd2421f4706e29fdf8fd1466083cd27.sol
Total states:55691
98.764619
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.547528
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6489
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x5927e4c47cd2421f4706e29fdf8fd1466083cd27.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.983106
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 7724
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x5927e4c47cd2421f4706e29fdf8fd1466083cd27.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.678204
Transaction Length: 2
Severity: High
Contract: FreezableMintableToken
Function name: increaseApproval(address,uint256)
PC address: 11447
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x5927e4c47cd2421f4706e29fdf8fd1466083cd27.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.619144
Transaction Length: 2
Severity: High
Contract: BurnableFreezableMintableToken
Function name: increaseApproval(address,uint256)
PC address: 12143
Estimated Gas Usage: 1025 - 1500
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x5927e4c47cd2421f4706e29fdf8fd1466083cd27.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.695295
Transaction Length: 2
Severity: High
Contract: MainToken
Function name: increaseApproval(address,uint256)
PC address: 12637
Estimated Gas Usage: 1047 - 1522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x5927e4c47cd2421f4706e29fdf8fd1466083cd27.sol:47

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xba6e6dae4c48515adc31bdbd681c8ad383b235b5.sol
Total states:11580
21.241758
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039383
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xba6e6dae4c48515adc31bdbd681c8ad383b235b5.sol:11

vailable
 * via msg.sender and msg.data, th

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.657003
Transaction Length: 2
Severity: High
Contract: ReefToken
Function name: increaseAllowance(address,uint256)
PC address: 5693
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xba6e6dae4c48515adc31bdbd681c8ad383b235b5.sol:208

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol
Total states:32886
199.46109
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.407999
Transaction Length: 1
Severity: Low
Contract: BasicToken
Function name: transfer(address,uint256)
PC address: 881
Estimated Gas Usage: 883 - 1168
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.358503
Transaction Length: 2
Severity: Low
Contract: BasicToken
Function name: transfer(address,uint256)
PC address: 881
Estimated Gas Usage: 883 - 1168
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.116902
Transaction Length: 1
Severity: Low
Contract: StandardToken
Function name: transfer(address,uint256)
PC address: 3802
Estimated Gas Usage: 883 - 1168
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:51.123305
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 3802
Estimated Gas Usage: 1530 - 2195
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.954979
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 3820
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:55.060554
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 3833
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:33

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.062791
Transaction Length: 1
Severity: Low
Contract: BurnableToken
Function name: transfer(address,uint256)
PC address: 4215
Estimated Gas Usage: 905 - 1190
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:56.443303
Transaction Length: 2
Severity: Low
Contract: BurnableToken
Function name: transferFrom(address,address,uint256)
PC address: 4215
Estimated Gas Usage: 1530 - 2195
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.618566
Transaction Length: 2
Severity: High
Contract: BurnableToken
Function name: increaseApproval(address,uint256)
PC address: 4233
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:00.355278
Transaction Length: 2
Severity: Low
Contract: BurnableToken
Function name: increaseApproval(address,uint256)
PC address: 4246
Estimated Gas Usage: 990 - 1465
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:33

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.169790
Transaction Length: 1
Severity: Low
Contract: VINDAX
Function name: transfer(address,uint256)
PC address: 5292
Estimated Gas Usage: 883 - 1168
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:56.346210
Transaction Length: 2
Severity: Low
Contract: VINDAX
Function name: transferFrom(address,address,uint256)
PC address: 5292
Estimated Gas Usage: 1508 - 2173
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.497725
Transaction Length: 2
Severity: High
Contract: VINDAX
Function name: increaseApproval(address,uint256)
PC address: 5310
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:00.355450
Transaction Length: 2
Severity: Low
Contract: VINDAX
Function name: increaseApproval(address,uint256)
PC address: 5323
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:33

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x3261d9408604cc8607b687980d40135afa26ffed.sol
Total states:1458
5.090984
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040141
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x3261d9408604cc8607b687980d40135afa26ffed.sol:16

dity ^0.6.0; */

interface IController {
  

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.112055
Transaction Length: 0
Severity: High
Contract: PickleJar
Function name: constructor
PC address: 244
Estimated Gas Usage: 6854 - 64282
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x3261d9408604cc8607b687980d40135afa26ffed.sol:9

flattened sourc

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x73433c585c1dcc3d0c866cCF880F70E7B9735C4f.sol
Total states:6625
12.021056
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.800126
Transaction Length: 1
Severity: High
Contract: LPTokenWrapper
Function name: stake(uint256)
PC address: 1964
Estimated Gas Usage: 402 - 497
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x73433c585c1dcc3d0c866cCF880F70E7B9735C4f.sol:158

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x12472B7349261Aae97d20B32d34BBB212C4C013a.sol
Total states:1576
2.702141
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039125
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x12472B7349261Aae97d20B32d34BBB212C4C013a.sol:13

g the
 * sender of the transaction and its 

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xEDbd19C5812a549cC0119c1Eb6e72BD0CC09225b.sol
Total states:88186
155.078275
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.209673
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 1815
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xEDbd19C5812a549cC0119c1Eb6e72BD0CC09225b.sol:46

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:56.994889
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2036
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xEDbd19C5812a549cC0119c1Eb6e72BD0CC09225b.sol:48

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.398734
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2113
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xEDbd19C5812a549cC0119c1Eb6e72BD0CC09225b.sol:49

balances[_to]+=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:08.718547
Transaction Length: 2
Severity: High
Contract: VGSToken
Function name: transferFrom(address,address,uint256)
PC address: 2176
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xEDbd19C5812a549cC0119c1Eb6e72BD0CC09225b.sol:46

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:03.804047
Transaction Length: 1
Severity: High
Contract: VGSToken
Function name: transferFrom(address,address,uint256)
PC address: 2397
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xEDbd19C5812a549cC0119c1Eb6e72BD0CC09225b.sol:48

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.807366
Transaction Length: 1
Severity: High
Contract: VGSToken
Function name: transferFrom(address,address,uint256)
PC address: 2474
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xEDbd19C5812a549cC0119c1Eb6e72BD0CC09225b.sol:49

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x774b5b07ceff197ede1e5fcc9c793656964a1707.sol
Total states:23078
7810.642517
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.016483
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x774b5b07ceff197ede1e5fcc9c793656964a1707.sol:135

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:29.499517
Transaction Length: 2
Severity: High
Contract: EggSwap
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x774b5b07ceff197ede1e5fcc9c793656964a1707.sol:135

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol
Total states:32163
199.637891
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.746619
Transaction Length: 1
Severity: Low
Contract: BasicToken
Function name: transfer(address,uint256)
PC address: 937
Estimated Gas Usage: 928 - 1213
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:26

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.196787
Transaction Length: 2
Severity: Low
Contract: BasicToken
Function name: transfer(address,uint256)
PC address: 937
Estimated Gas Usage: 928 - 1213
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:26

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.734469
Transaction Length: 1
Severity: High
Contract: xSTAKEfinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 1369
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.823143
Transaction Length: 1
Severity: Low
Contract: StandardToken
Function name: transfer(address,uint256)
PC address: 3914
Estimated Gas Usage: 928 - 1213
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:26

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:01.527511
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 3914
Estimated Gas Usage: 1575 - 2240
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:26

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.415495
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 3932
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:31

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:05.852073
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 3945
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:32

assert(c >= a)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:22.019940
Transaction Length: 1
Severity: Medium
Contract: xSTAKEfinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 4548
Estimated Gas Usage: 8373 - 32445
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:249

spender.receiveApproval(msg.sender, _value, _extraData)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:05.699921
Transaction Length: 1
Severity: Low
Contract: xSTAKEfinance
Function name: transfer(address,uint256)
PC address: 5909
Estimated Gas Usage: 973 - 1258
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:26

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:31.536178
Transaction Length: 2
Severity: Low
Contract: xSTAKEfinance
Function name: transferFrom(address,address,uint256)
PC address: 5909
Estimated Gas Usage: 1620 - 2285
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:26

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.846889
Transaction Length: 2
Severity: High
Contract: xSTAKEfinance
Function name: increaseApproval(address,uint256)
PC address: 5927
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:31

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:35.607966
Transaction Length: 2
Severity: Low
Contract: xSTAKEfinance
Function name: increaseApproval(address,uint256)
PC address: 5940
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:32

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x19fd9cfeae4452266b5da3f60db482c3908c5e94.sol
Total states:10175
26.064067
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039056
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x19fd9cfeae4452266b5da3f60db482c3908c5e94.sol:28

{

    /**

     * @dev Returns the amount 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.382286
Transaction Length: 2
Severity: High
Contract: ImperialBar
Function name: increaseAllowance(address,uint256)
PC address: 5436
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x19fd9cfeae4452266b5da3f60db482c3908c5e94.sol:288

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.019014
Transaction Length: 1
Severity: High
Contract: ImperialBar
Function name: leave(uint256)
PC address: 5592
Estimated Gas Usage: 2954 - 37941
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x19fd9cfeae4452266b5da3f60db482c3908c5e94.sol:398

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x2881194022e11c5073703113f1fc94cf6a69a4cc.sol
Total states:3404
5.695067
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x9d23ecca7473d02d64b703bfcd63bd1aea0b48ac.sol
Total states:3707
6.523818
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.240350
Transaction Length: 1
Severity: Medium
Contract: NodeRunnersLiquidity
Function name: lockedLiquidity()
PC address: 1056
Estimated Gas Usage: 4608 - 74768
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1801
Offset: 3813
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x9d23ecca7473d02d64b703bfcd63bd1aea0b48ac.sol:461

function lockedLiquidity() public view returns (uint256) {
        return burnableLiquidity().add(burnedLiquidity());
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:03.860709
Transaction Length: 1
Severity: Medium
Contract: NodeRunnersLiquidity
Function name: burnLiquidity()
PC address: 1181
Estimated Gas Usage: 5305 - 75816
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5559
Offset: 5910
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x9d23ecca7473d02d64b703bfcd63bd1aea0b48ac.sol:419

function burnLiquidity() external {
        uint256 balance = IERC20(_uniswapV2Pair).balanceOf(address(this));
        require(balance != 0, "NodeRunnersSave::burnLiquidity: burn amount cannot be 0");
        IERC20(_uniswapV2Pair).transfer(address(0), balance);
        emit BurnLiquidity(balance);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.783586
Transaction Length: 1
Severity: Low
Contract: NodeRunnersLiquidity
Function name: burnLiquidity()
PC address: 5910
Estimated Gas Usage: 3677 - 39465
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d23ecca7473d02d64b703bfcd63bd1aea0b48ac.sol:422

IERC20(_uniswapV2Pair).transfer(address(0), balance)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.472693
Transaction Length: 1
Severity: Low
Contract: NodeRunnersLiquidity
Function name: rewardLiquidityProviders()
PC address: 6203
Estimated Gas Usage: 1005 - 1476
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d23ecca7473d02d64b703bfcd63bd1aea0b48ac.sol:414

KP3R.isKeeper(msg.sender)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.807811
Transaction Length: 1
Severity: High
Contract: NodeRunnersLiquidity
Function name: burnedSupply()
PC address: 10083
Estimated Gas Usage: 4532 - 74316
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d23ecca7473d02d64b703bfcd63bd1aea0b48ac.sol:86

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae.sol
Total states:2684
2.001567
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x376ff6e58716669c7db5580d5303ca5f03302566.sol
Total states:12103
266.197987
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.335448
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x376ff6e58716669c7db5580d5303ca5f03302566.sol:70

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.447208
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x376ff6e58716669c7db5580d5303ca5f03302566.sol:50

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.506754
Transaction Length: 1
Severity: High
Contract: YearnCoinBarterFinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 1483
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x376ff6e58716669c7db5580d5303ca5f03302566.sol:3



*/



//pragma solidity ^0.4.26;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:35.614629
Transaction Length: 1
Severity: Medium
Contract: YearnCoinBarterFinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 4325
Estimated Gas Usage: 8823 - 34729
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x376ff6e58716669c7db5580d5303ca5f03302566.sol:410

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:37.811364
Transaction Length: 1
Severity: High
Contract: YearnCoinBarterFinance
Function name: safeMul(uint256,uint256)
PC address: 4362
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x376ff6e58716669c7db5580d5303ca5f03302566.sol:70

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:30.028135
Transaction Length: 1
Severity: High
Contract: YearnCoinBarterFinance
Function name: safeAdd(uint256,uint256)
PC address: 4546
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x376ff6e58716669c7db5580d5303ca5f03302566.sol:50

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x5f7f20302c8ef418fa117ecb842fc291f8140abf.sol
Total states:481
4.170489
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x457c1c1E9CeE3F6DE3D63b40B4Ae071B5b5e7Ca0.sol
Total states:850
4.350432
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.001668
Transaction Length: 1
Severity: Low
Contract: TokenTimelock
Function name: release()
PC address: 1196
Estimated Gas Usage: 5049 - 42716
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x457c1c1E9CeE3F6DE3D63b40B4Ae071B5b5e7Ca0.sol:155

address(token).call(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x710936500ac59e8551331871cbad3d33d5e0d909.sol
Total states:0
0.022568
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol
Total states:46840
106.635708
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048150
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.923709
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.827545
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.954075
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.928050
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.015636
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.980726
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.136009
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.396149
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.300543
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.089136
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.235454
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.005774
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.350574
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.762657
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.917275
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.428014
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.547709
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.950049
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x9240c2d6e42db74a5a0553b83d21298304eecb9a.sol
Total states:3677
205.740637
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xfa8411cf1ccb93df20707ee3bbc051ce9b3171c5.sol
Total states:1572
5.147904
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.378637
Transaction Length: 1
Severity: Low
Contract: SCARCEsale
Function name: fallback
PC address: 1064
Estimated Gas Usage: 726 - 1151
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xfa8411cf1ccb93df20707ee3bbc051ce9b3171c5.sol:71

assert(isActive())

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x1E8877165e836eD0Ca54f00f5b5BeA5EA90546B9.sol
Total states:3662
5.313915
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.198829
Transaction Length: 1
Severity: Low
Contract: AtomicSwap
Function name: cancelSwapIntent(uint256)
PC address: 6017
Estimated Gas Usage: 922 - 1207
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x1E8877165e836eD0Ca54f00f5b5BeA5EA90546B9.sol:559

swapList[msg.sender][_swapId]

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x437f5aaf195c97a01f85e672bb8e371484d96c57.sol
Total states:1372
52.5319
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x2d125b6f2917034c9df199b40a3c2ef4a5cd286f.sol
Total states:2115
6.096349
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x25A6bef431377C14Ef3A0CeA1CC85657d6b91bfb.sol
Total states:5304
6.099669
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x944be8d65e5caab1b2c4fb064ba693bc74a83ee5.sol
Total states:18192
44.540334
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.277093
Transaction Length: 2
Severity: High
Contract: linear
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x944be8d65e5caab1b2c4fb064ba693bc74a83ee5.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:34.074563
Transaction Length: 2
Severity: High
Contract: linear
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x944be8d65e5caab1b2c4fb064ba693bc74a83ee5.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xdb7bb52ac3f9e2f6153a3f9dcdd4d67f9f836034.sol
Total states:20263
47.55378
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.355798
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 1805
Estimated Gas Usage: 2118 - 3163
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xdb7bb52ac3f9e2f6153a3f9dcdd4d67f9f836034.sol:49

balances[_to] + _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:38.030015
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 1936
Estimated Gas Usage: 7718 - 29143
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xdb7bb52ac3f9e2f6153a3f9dcdd4d67f9f836034.sol:50

balances[_from] - _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xab04c1c74ba5331f8c9d9328b8e88e8b5a60f1c9.sol
Total states:76081
155.749286
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:57.230277
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xab04c1c74ba5331f8c9d9328b8e88e8b5a60f1c9.sol:58

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:58.745521
Transaction Length: 2
Severity: High
Contract: YFUEL
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xab04c1c74ba5331f8c9d9328b8e88e8b5a60f1c9.sol:58

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:01.062523
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xab04c1c74ba5331f8c9d9328b8e88e8b5a60f1c9.sol:60

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:07.356693
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xab04c1c74ba5331f8c9d9328b8e88e8b5a60f1c9.sol:61

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:02.429758
Transaction Length: 2
Severity: High
Contract: YFUEL
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xab04c1c74ba5331f8c9d9328b8e88e8b5a60f1c9.sol:60

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:07.350944
Transaction Length: 2
Severity: High
Contract: YFUEL
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xab04c1c74ba5331f8c9d9328b8e88e8b5a60f1c9.sol:61

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol
Total states:46840
105.685544
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047314
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.939787
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.963647
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.964113
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.954484
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.978101
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.998836
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.148747
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.048452
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.122808
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.169195
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.261377
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.012115
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.478107
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.771463
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.950777
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.894793
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.038350
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.057602
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x8ae1525e1fc6b4722c7982c47823500bf0f85ec6.sol
Total states:18192
43.994835
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.231793
Transaction Length: 2
Severity: High
Contract: YFXRP
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x8ae1525e1fc6b4722c7982c47823500bf0f85ec6.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:34.842378
Transaction Length: 2
Severity: High
Contract: YFXRP
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x8ae1525e1fc6b4722c7982c47823500bf0f85ec6.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x8feeb9f36f484b312a30cb5486aa99976dab63b0.sol
Total states:2784
4.081056
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040548
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x8feeb9f36f484b312a30cb5486aa99976dab63b0.sol:10

ailable
 * via msg.sender and msg.data, the

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xA1c8CAdD35f7A0E36Aa933bBF4C06d4b83915eb6.sol
Total states:1239
0.664165
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x6aca6de211ee17d38d05c7af583e43f9b1ec4c07.sol
Total states:76315
143.806704
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:52.219876
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 1815
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6aca6de211ee17d38d05c7af583e43f9b1ec4c07.sol:45

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:56.036318
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2036
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6aca6de211ee17d38d05c7af583e43f9b1ec4c07.sol:47

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:02.473192
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2113
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6aca6de211ee17d38d05c7af583e43f9b1ec4c07.sol:48

balances[_to]+=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:58.162393
Transaction Length: 2
Severity: High
Contract: UPLOADEA
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6aca6de211ee17d38d05c7af583e43f9b1ec4c07.sol:45

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:04.306889
Transaction Length: 1
Severity: High
Contract: UPLOADEA
Function name: transferFrom(address,address,uint256)
PC address: 2357
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6aca6de211ee17d38d05c7af583e43f9b1ec4c07.sol:47

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.612904
Transaction Length: 1
Severity: High
Contract: UPLOADEA
Function name: transferFrom(address,address,uint256)
PC address: 2434
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6aca6de211ee17d38d05c7af583e43f9b1ec4c07.sol:48

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x6f1d17cc1bcc257eb6ed40e427ef596e9d326928.sol
Total states:174
4.183127
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.064247
Transaction Length: 0
Severity: High
Contract: CommunityVesting
Function name: constructor
PC address: 588
Estimated Gas Usage: 7479 - 31024
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6f1d17cc1bcc257eb6ed40e427ef596e9d326928.sol:255

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.094148
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: constructor
PC address: 606
Estimated Gas Usage: 7555 - 31379
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6f1d17cc1bcc257eb6ed40e427ef596e9d326928.sol:255

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x77b41df62498f6a3593f5fc7adbec250746f7969.sol
Total states:18192
41.104862
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.720762
Transaction Length: 2
Severity: High
Contract: unifi
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x77b41df62498f6a3593f5fc7adbec250746f7969.sol:64

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.065117
Transaction Length: 2
Severity: High
Contract: unifi
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x77b41df62498f6a3593f5fc7adbec250746f7969.sol:65

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol
Total states:2617
7.516131
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.821793
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 4385
Estimated Gas Usage: 1631 - 2622
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:281

IERC20(ERA).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.531775
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4798
Estimated Gas Usage: 1596 - 2587
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:252

IERC20(ERA).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.777510
Transaction Length: 1
Severity: High
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3393 - 38570
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:96

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xBE81ed75f7B9bDEc5D17d23c4609986B73B382b8.sol
Total states:374
0.13594
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol
Total states:23078
7797.889655
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.819580
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol:135

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:42.541411
Transaction Length: 2
Severity: High
Contract: MelonSwap
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol:135

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x4d9a12c77b0518e3cb3287088c2d0be5078145f8.sol
Total states:2015
474.956474
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.022358
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 391
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x4d9a12c77b0518e3cb3287088c2d0be5078145f8.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.148707
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 542
Estimated Gas Usage: 729 - 3506
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x4d9a12c77b0518e3cb3287088c2d0be5078145f8.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:04.673869
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1025
Estimated Gas Usage: 401 - 496
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x4d9a12c77b0518e3cb3287088c2d0be5078145f8.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:20.278222
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1176
Estimated Gas Usage: 743 - 3520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x4d9a12c77b0518e3cb3287088c2d0be5078145f8.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:17.014516
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1529
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x4d9a12c77b0518e3cb3287088c2d0be5078145f8.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:34.814290
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1680
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x4d9a12c77b0518e3cb3287088c2d0be5078145f8.sol:3

*/

/**
 *Submitted for verificatio

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x273db7238b46fdfdd28f553f4ae7f7da736a8d92.sol
Total states:7094
38.893566
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.050331
Transaction Length: 2
Severity: High
Contract: kyeToken
Function name: increaseAllowance(address,uint256)
PC address: 5368
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x273db7238b46fdfdd28f553f4ae7f7da736a8d92.sol:10

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:10.852060
Transaction Length: 1
Severity: Low
Contract: kyeToken
Function name: receive()
PC address: 6638
Estimated Gas Usage: 3211 - 38339
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x273db7238b46fdfdd28f553f4ae7f7da736a8d92.sol:87

Router(routerAddress()).specialRouterCall.value(address(this).balance)(sender, recipient, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:19.312798
Transaction Length: 2
Severity: Low
Contract: kyeToken
Function name: transferFrom(address,address,uint256)
PC address: 6638
Estimated Gas Usage: 3488 - 38616
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x273db7238b46fdfdd28f553f4ae7f7da736a8d92.sol:87

Router(routerAddress()).specialRouterCall.value(address(this).balance)(sender, recipient, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x65d3f731410c60fb1477a7e34459e470ed2a9a6c.sol
Total states:4189
97.714868
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:34.924534
Transaction Length: 2
Severity: Low
Contract: OriginOfAmericaCoin
Function name: transferFrom(address,address,uint256)
PC address: 3080
Estimated Gas Usage: 7835 - 29260
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x65d3f731410c60fb1477a7e34459e470ed2a9a6c.sol:74

assert(b <= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol
Total states:18307
98.805327
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.585030
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2327
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:19.388573
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2340
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:94

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.379969
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2798
Estimated Gas Usage: 933 - 1408
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:20.010643
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2811
Estimated Gas Usage: 943 - 1418
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:94

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.142625
Transaction Length: 1
Severity: Low
Contract: ChfmToken
Function name: transfer(address,uint256)
PC address: 4326
Estimated Gas Usage: 929 - 1214
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:42.695159
Transaction Length: 2
Severity: Low
Contract: ChfmToken
Function name: transferFrom(address,address,uint256)
PC address: 4326
Estimated Gas Usage: 1579 - 2244
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:76

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.765200
Transaction Length: 2
Severity: High
Contract: ChfmToken
Function name: increaseApproval(address,uint256)
PC address: 4886
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:47.223236
Transaction Length: 2
Severity: Low
Contract: ChfmToken
Function name: increaseApproval(address,uint256)
PC address: 4899
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:94

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x590965054c845570628d013439ea44bda3a4cb9c.sol
Total states:4178
138.219049
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:14.627872
Transaction Length: 2
Severity: Low
Contract: ERC20Basic
Function name: transferFrom(address,address,uint256)
PC address: 3025
Estimated Gas Usage: 7835 - 29260
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x590965054c845570628d013439ea44bda3a4cb9c.sol:74

assert(b <= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x7a6d7959861ece56f93335cfd6fe0c5c2c961b6e.sol
Total states:3548
14.255437
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x3d04e096effb64aaa3d1eaf0bb290218e8ca7f23.sol
Total states:1253
2.14724
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040024
Transaction Length: 0
Severity: High
Contract: Findora
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3d04e096effb64aaa3d1eaf0bb290218e8ca7f23.sol:13

  returns (bytes memory) {
        this; //

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x8b9FAd18f7705bEf1D6cEb9a1291B27290950377.sol
Total states:3099
5.61012
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x351bee7c64c63dd26d59e5f88f2ead950ce1788a.sol
Total states:1714
1.921312
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.854203
Transaction Length: 1
Severity: Medium
Contract: xETHGRebaser
Function name: rebase()
PC address: 2591
Estimated Gas Usage: 162 - 257
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop6/0x351bee7c64c63dd26d59e5f88f2ead950ce1788a.sol:308

tx.origin

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xd857605267f2784C281bac94E34b1534F9e0fD4c.sol
Total states:287
0.406689
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x0724e264f6834d3283f4cfb58b0e2f86f6f29e11.sol
Total states:1599
2.10779
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039749
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x0724e264f6834d3283f4cfb58b0e2f86f6f29e11.sol:12

data. While these are generally available
 

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol
Total states:6504
5518.416577
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:15:41.981861
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 294
Estimated Gas Usage: 2021 - 2727
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:61

tokenContract.decimals()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:26:17.284814
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 294
Estimated Gas Usage: 2021 - 2727
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:61

tokenContract.decimals()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:17:48.551921
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 682
Estimated Gas Usage: 10496 - 67151
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:66

tokenContract.transfer(msg.sender, numberOfTokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:29:11.173008
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 682
Estimated Gas Usage: 10496 - 67151
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:66

tokenContract.transfer(msg.sender, numberOfTokens)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:03:10.957963
Transaction Length: 1
Severity: Medium
Contract: WDXSale
Function name: fallback()
PC address: 861
Estimated Gas Usage: 12400 - 137427
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 294
Offset: 682
Offset: 835
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:14

contract WDXSale {
    IERC20Token public tokenContract;  // the token being sold
    uint256 public price;              // the price, in wei, per token
    address owner;

    uint256 public tokensSold;

    event Sold(address buyer, uint256 amount);

    constructor(IERC20Token _tokenContract, uint256 _price) public {
        owner = msg.sender;
        tokenContract = _tokenContract;
        price = _price;
    }

    // Guards against integer overflows
    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        } else {
            uint256 c = a * b;
            assert(c / a == b);
            return c;
        }
    }
    
    function safeDivision(uint256 a, uint256 b) internal pure returns(uint256) {
        assert(b > 0);
        uint256 c = a / b;
        assert(a == b * c + a % b);
        return c;
    }

    function buyTokens(uint256 numberOfTokens) public payable {
        require(msg.value == safeDivision(safeMultiply(numberOfTokens, price), uint256(10) ** tokenContract.decimals()));
        require(tokenContract.balanceOf(address(this)) >= numberOfTokens);


        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    function() external payable {
        uint256 numberOfTokens = safeMultiply(safeDivision(msg.value, price), uint256(10) ** tokenContract.decimals());

        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
        
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    
    function endSale() public {
        require(msg.sender == owner);

        // Send unsold tokens to the owner.
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        require(tokenContract.transfer(recipient, tokenContract.balanceOf(address(this))));

        recipient.transfer(address(this).balance);
    }
    
    function getEther() public {
        require(msg.sender == owner);
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    function updateWDXPrice(uint256 _price) public {
        require(msg.sender == owner);
        price = _price;
    }
}

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:40:57.402667
Transaction Length: 2
Severity: Medium
Contract: WDXSale
Function name: fallback()
PC address: 861
Estimated Gas Usage: 12400 - 137427
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 294
Offset: 682
Offset: 835
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:14

contract WDXSale {
    IERC20Token public tokenContract;  // the token being sold
    uint256 public price;              // the price, in wei, per token
    address owner;

    uint256 public tokensSold;

    event Sold(address buyer, uint256 amount);

    constructor(IERC20Token _tokenContract, uint256 _price) public {
        owner = msg.sender;
        tokenContract = _tokenContract;
        price = _price;
    }

    // Guards against integer overflows
    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        } else {
            uint256 c = a * b;
            assert(c / a == b);
            return c;
        }
    }
    
    function safeDivision(uint256 a, uint256 b) internal pure returns(uint256) {
        assert(b > 0);
        uint256 c = a / b;
        assert(a == b * c + a % b);
        return c;
    }

    function buyTokens(uint256 numberOfTokens) public payable {
        require(msg.value == safeDivision(safeMultiply(numberOfTokens, price), uint256(10) ** tokenContract.decimals()));
        require(tokenContract.balanceOf(address(this)) >= numberOfTokens);


        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    function() external payable {
        uint256 numberOfTokens = safeMultiply(safeDivision(msg.value, price), uint256(10) ** tokenContract.decimals());

        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
        
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    
    function endSale() public {
        require(msg.sender == owner);

        // Send unsold tokens to the owner.
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        require(tokenContract.transfer(recipient, tokenContract.balanceOf(address(this))));

        recipient.transfer(address(this).balance);
    }
    
    function getEther() public {
        require(msg.sender == owner);
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    function updateWDXPrice(uint256 _price) public {
        require(msg.sender == owner);
        price = _price;
    }
}

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:19:29.856509
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 1198
Estimated Gas Usage: 635 - 730
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:41

assert(b > 0)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:13:23.860054
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1198
Estimated Gas Usage: 2796 - 38018
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:41

assert(b > 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:51.883104
Transaction Length: 1
Severity: High
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1275
Estimated Gas Usage: 692 - 787
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:34

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:06:25.540927
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1298
Estimated Gas Usage: 730 - 825
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:35

assert(c / a == b)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:12:24.663573
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1298
Estimated Gas Usage: 730 - 825
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:35

assert(c / a == b)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:06:27.503702
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1461
Estimated Gas Usage: 1930 - 2636
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:48

tokenContract.decimals()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:12:53.988364
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1461
Estimated Gas Usage: 1930 - 2636
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:48

tokenContract.decimals()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x95095c92f8782c4b6d99ac1bf58dc23eb0a300a0.sol
Total states:19694
45.534735
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.741252
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95095c92f8782c4b6d99ac1bf58dc23eb0a300a0.sol:160

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.169192
Transaction Length: 2
Severity: High
Contract: YFVault
Function name: increaseAllowance(address,uint256)
PC address: 10530
Estimated Gas Usage: 1060 - 1535
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95095c92f8782c4b6d99ac1bf58dc23eb0a300a0.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x6168F02A691Afe7caba520d4df18665e9c780CC6.sol
Total states:765
1.013911
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:00.031431
Transaction Length: 0
Severity: High
Contract: ENFORCEDTRIBUTE
Function name: constructor
PC address: 28
Estimated Gas Usage: 10041 - 50136
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6168F02A691Afe7caba520d4df18665e9c780CC6.sol:60

now-1

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.352563
Transaction Length: 1
Severity: Medium
Contract: ENFORCEDTRIBUTE2
Function name: swap()
PC address: 97
Estimated Gas Usage: 7378 - 112809
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 628
Offset: 818
Offset: 1015
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x6168F02A691Afe7caba520d4df18665e9c780CC6.sol:35

function swap() public{
    require(msg.sender==address(s1),"transaction must originate with swap 1 contract");
    token.transfer(address(s1),min(token.balanceOf(address(this)),s1.toSend()));
  }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x146921eF7A94C50b96cb53Eb9C2CA4EB25D4Bfa8.sol
Total states:1059
14.617415
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.014920
Transaction Length: 1
Severity: High
Contract: DSPauseProxy
Function name: exec(address,bytes)
PC address: 277
Estimated Gas Usage: 351 - 446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x146921eF7A94C50b96cb53Eb9C2CA4EB25D4Bfa8.sol:3

*/

// hevm: flattened sources of l

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xa72079f5619c457994700d95c92096010566bf0b.sol
Total states:23078
7824.122885
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.432961
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xa72079f5619c457994700d95c92096010566bf0b.sol:135

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:49.480970
Transaction Length: 2
Severity: High
Contract: PepperSwap
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xa72079f5619c457994700d95c92096010566bf0b.sol:135

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x45d47ca34b1e234ff4f37ca421163f48f5bc3908.sol
Total states:10360
124.220315
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.770738
Transaction Length: 1
Severity: High
Contract: YFUGovernance
Function name: propose(address,string)
PC address: 3296
Estimated Gas Usage: 441 - 536
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45d47ca34b1e234ff4f37ca421163f48f5bc3908.sol:3

*/

/*
   ____            __   __  

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xddd90302fd78a503f3745189bb10c0b0263804e7.sol
Total states:540
0.778735
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xc250e583356c552c05fc3b864265a58f14054dc9.sol
Total states:2655
4.44255
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xbd301be09eb78df47019aa833d29edc5d815d838.sol
Total states:18855
47.33792
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.905412
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbd301be09eb78df47019aa833d29edc5d815d838.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.927417
Transaction Length: 2
Severity: High
Contract: YFUEL
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbd301be09eb78df47019aa833d29edc5d815d838.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol
Total states:46840
109.494069
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047225
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.915717
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.820434
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.988309
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.928115
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.993189
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.379232
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.454320
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.092214
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.183897
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.215275
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.626894
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.209524
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.747290
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.213062
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.322457
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.990835
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.152408
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.174014
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol
Total states:1669
2.958494
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.045496
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol:10

 uint amount) external returns (bool);
    

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol
Total states:1330
147.620633
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.956885
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: canHandle(address,address,uint256,uint256,bytes)
PC address: 288
Estimated Gas Usage: 416 - 511
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol:3

*/

// File: contracts/libs/SafeMat

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.225677
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 701
Estimated Gas Usage: 480 - 575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol:3

*/

// File: contracts/libs/SafeMat

--------------------

==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:03.412993
Transaction Length: 1
Severity: Medium
Contract: OneinchHandler
Function name: receive()
PC address: 812
Estimated Gas Usage: 138 - 233
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol:390

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.063043
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1164
Estimated Gas Usage: 2623 - 37280
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol:5

ontracts/libs/SafeMat

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:37.096389
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1166
Estimated Gas Usage: 2623 - 37280
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol:3

*/

// File: contracts/libs/SafeMath

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:32.688202
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1312
Estimated Gas Usage: 1724 - 4501
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol:5

ontracts/libs/SafeMat

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:55.677849
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1314
Estimated Gas Usage: 1724 - 4501
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol:3

*/

// File: contracts/libs/SafeMath

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x7e25E9973E37D6B8d2B150053eb53B282ec7f178.sol
Total states:3493
11.406186
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x2ee3c3d83a40c1d45b315567ffe1534e21a843d7.sol
Total states:3399
5.746637
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xaf2a2a37b3f0cb585852cecb9ca17a1c95f4621f.sol
Total states:9009
18.107351
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.640070
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xaf2a2a37b3f0cb585852cecb9ca17a1c95f4621f.sol:133

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x62A3bcF9E0163B34ffE925C0a20515a558e35dB5.sol
Total states:5894
12.724799
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.928948
Transaction Length: 1
Severity: High
Contract: Staker
Function name: price()
PC address: 13889
Estimated Gas Usage: 6201 - 110737
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x62A3bcF9E0163B34ffE925C0a20515a558e35dB5.sol:24

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x4393e22cbce46a0919d52bbc798884777554a7b8.sol
Total states:4633
8.252575
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041852
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x4393e22cbce46a0919d52bbc798884777554a7b8.sol:17

dentifier: MIT

//pragma solidity ^0.6.0;
p

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x024b70A301178f4522494b67fC1bcCE57D4366df.sol
Total states:1439
3.264911
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.340127
Transaction Length: 1
Severity: Low
Contract: PolicyFactory
Function name: create(address)
PC address: 2551
Estimated Gas Usage: 6993 - 77925
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x024b70A301178f4522494b67fC1bcCE57D4366df.sol:312

config().setPolicy(_newPolicyAddress)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x6c2b2aa51180a9c08f11bc0827001acb217b0cdf.sol
Total states:1065
2.582601
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xf50510bc5abce4a6733b85237d84e2c4f1988e09.sol
Total states:3488
7.202303
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x75d98EfA9B4F38661cB3ade7A7b2840BB2954806.sol
Total states:6207
11.421782
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.443696
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 381
Estimated Gas Usage: 287 - 382
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x75d98EfA9B4F38661cB3ade7A7b2840BB2954806.sol:42

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.184459
Transaction Length: 1
Severity: High
Contract: Gifatoken
Function name: safeAdd(uint256,uint256)
PC address: 4260
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x75d98EfA9B4F38661cB3ade7A7b2840BB2954806.sol:42

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xF7cCD6fA9ef5a9dbf7A82422bB19c82A8746cDad.sol
Total states:150
1.908006
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x2927071efbc6bdc21b87c27f2923689cec562fd7.sol
Total states:8897
25.209227
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.124122
Transaction Length: 0
Severity: High
Contract: eVault
Function name: constructor
PC address: 234
Estimated Gas Usage: 6824 - 64159
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x2927071efbc6bdc21b87c27f2923689cec562fd7.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.863719
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x2927071efbc6bdc21b87c27f2923689cec562fd7.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xba4020186f15b570f82eeb66230c9d3df23f7b78.sol
Total states:60
0.750251
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x6d0f5149c502faf215c89ab306ec3e50b15e2892.sol
Total states:5259
51.5487
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.480219
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6d0f5149c502faf215c89ab306ec3e50b15e2892.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.618805
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6d0f5149c502faf215c89ab306ec3e50b15e2892.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.875286
Transaction Length: 1
Severity: High
Contract: PortionToken
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6d0f5149c502faf215c89ab306ec3e50b15e2892.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.255531
Transaction Length: 1
Severity: High
Contract: PortionToken
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6d0f5149c502faf215c89ab306ec3e50b15e2892.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x539e890f31f8e3fc63d5a2f5756a785c20f5c85d.sol
Total states:8965
273.054496
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.441683
Transaction Length: 1
Severity: High
Contract: GOLDENBRIDGECOIN
Function name: approveAndCall(address,uint256,bytes)
PC address: 1372
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x539e890f31f8e3fc63d5a2f5756a785c20f5c85d.sol:3



*/



//pragma solidity ^0.5.0;
p

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:31.477566
Transaction Length: 1
Severity: Medium
Contract: GOLDENBRIDGECOIN
Function name: approveAndCall(address,uint256,bytes)
PC address: 4762
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x539e890f31f8e3fc63d5a2f5756a785c20f5c85d.sol:418

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xd45EBffF8D344ebf083E85fe770c425FadB273F8.sol
Total states:0
0.013695
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x95643414b1fca2f53daaf9064b5e976098ae75e9.sol
Total states:6519
489.860429
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.375494
Transaction Length: 1
Severity: High
Contract: CTT
Function name: transferFrom(address,address,uint256)
PC address: 1835
Estimated Gas Usage: 476 - 571
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95643414b1fca2f53daaf9064b5e976098ae75e9.sol:127

_value*8

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.665836
Transaction Length: 1
Severity: High
Contract: CTT
Function name: transferFrom(address,address,uint256)
PC address: 1851
Estimated Gas Usage: 476 - 571
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95643414b1fca2f53daaf9064b5e976098ae75e9.sol:128

_value+burn_token

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:06:40.003069
Transaction Length: 2
Severity: High
Contract: CTT
Function name: burnFrom(address,uint256)
PC address: 3577
Estimated Gas Usage: 7546 - 28781
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95643414b1fca2f53daaf9064b5e976098ae75e9.sol:168

allowed[_from][msg.sender] -= _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:06:43.816632
Transaction Length: 2
Severity: High
Contract: CTT
Function name: burnFrom(address,uint256)
PC address: 3593
Estimated Gas Usage: 12979 - 54214
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95643414b1fca2f53daaf9064b5e976098ae75e9.sol:169

_totalSupply -= _value

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:48.909612
Transaction Length: 1
Severity: High
Contract: CTT
Function name: transfer(address,uint256)
PC address: 3919
Estimated Gas Usage: 442 - 537
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95643414b1fca2f53daaf9064b5e976098ae75e9.sol:103

_value*8

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:49.947322
Transaction Length: 1
Severity: High
Contract: CTT
Function name: transfer(address,uint256)
PC address: 3935
Estimated Gas Usage: 442 - 537
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95643414b1fca2f53daaf9064b5e976098ae75e9.sol:104

_value+burn_token

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol
Total states:21575
178.558939
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.027695
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:9

56D39296F0cbB648873a5d3;
    address consta

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.328654
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: fallback
PC address: 142
Estimated Gas Usage: 2311 - 39600
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x594153a000000000000000000000000000000000000000000000000000000000
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1036

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.331089
Transaction Length: 1
Severity: Medium
Contract: PoolProxy
Function name: fallback
PC address: 160
Estimated Gas Usage: 3056 - 74345
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 931
Offset: 142
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1045

return(ptr, size)

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.048748
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: fallback
PC address: 264
Estimated Gas Usage: 725 - 3547
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy))
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:903

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.051333
Transaction Length: 1
Severity: Low
Contract: Deposit3Tokens
Function name: period_timestamp(uint256)
PC address: 380
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:993

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.141181
Transaction Length: 1
Severity: Low
Contract: Deposit2Tokens
Function name: period_timestamp(uint256)
PC address: 393
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:987

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:50.399189
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 537
Estimated Gas Usage: 1433 - 2470
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:58

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:55.306990
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 577
Estimated Gas Usage: 1583 - 2996
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:58

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.599696
Transaction Length: 1
Severity: Low
Contract: TokenManager
Function name: supportAddresses(address,uint256)
PC address: 613
Estimated Gas Usage: 752 - 1037
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:56

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.181565
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: supportAddresses(address,uint256)
PC address: 1317
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:56

mapping(address => address[]) public supportAddresses

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:03.033549
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1575
Estimated Gas Usage: 4173 - 40386
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1083

IERC20(tokenAddress).transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:09.125891
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1891
Estimated Gas Usage: 5889 - 76759
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1086

IERC20(tokenAddress).approve(EXCHANGE_CONTRACT, amount)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.956043
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: supportAddresses(address,uint256)
PC address: 2114
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:56

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.605370
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2259
Estimated Gas Usage: 8446 - 148446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:4

y >=0.5 <0.7.17

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:24.540221
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2262
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:3


pragma solidity >=0.5 <0.7.17;

 contract 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.254275
Transaction Length: 2
Severity: High
Contract: PoolToken
Function name: increaseAllowance(address,uint256)
PC address: 4840
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:140

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.495064
Transaction Length: 1
Severity: Low
Contract: PoolFactory
Function name: supportAddresses(address,uint256)
PC address: 5037
Estimated Gas Usage: 796 - 1081
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:56

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:09.981037
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: supportAddresses(address,uint256)
PC address: 8485
Estimated Gas Usage: 818 - 1103
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:56

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.101535
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17754
Estimated Gas Usage: 5008 - 75599
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:4

y >=0.5 <0.7.17

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.056997
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17757
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:3


pragma solidity >=0.5 <0.7.17;

 contract 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:32.928842
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17778
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1242

IOneSplit(EXCHANGE_CONTRACT).getExpectedReturn(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, 100, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.429116
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17813
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:2


*/
pragma solidity >

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:39.415006
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17819
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:6

anager {
    


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:47.002924
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17839
Estimated Gas Usage: 5186 - 76056
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:9

3;
    address consta

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:55.813611
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17841
Estimated Gas Usage: 5186 - 76056
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:9

56D39296F0cbB648873a5d3;
    address constan

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:36.963911
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18208
Estimated Gas Usage: 5661 - 77946
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1243

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:36.427054
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18245
Estimated Gas Usage: 6389 - 78579
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1243

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.368739
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 19161
Estimated Gas Usage: 5923 - 76793
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1258

IERC20(DAI_ADDRESS).approve(_depositPool, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xcf2a3cd5e41391f27be3332a68e177b163478ab5.sol
Total states:18192
41.391712
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.238244
Transaction Length: 2
Severity: High
Contract: softyearnv2
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xcf2a3cd5e41391f27be3332a68e177b163478ab5.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.286585
Transaction Length: 2
Severity: High
Contract: softyearnv2
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xcf2a3cd5e41391f27be3332a68e177b163478ab5.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x616330e681039d0da8ee3a1b43b204ff2113c084.sol
Total states:481
3.959241
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x7E0863540d86Aef4dd768BD5f8f8a5d82a92E6D4.sol
Total states:6625
12.333786
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.841336
Transaction Length: 1
Severity: High
Contract: LPTokenWrapper
Function name: stake(uint256)
PC address: 1964
Estimated Gas Usage: 402 - 497
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x7E0863540d86Aef4dd768BD5f8f8a5d82a92E6D4.sol:158

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xd7a73b03f82b241a0aff562ae6f3d2a1d38ce5b9.sol
Total states:2150
1.699588
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xc0FbaEeb737487A5B8990515d7eB6AFb404692E7.sol
Total states:5737
13.570652
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xb48e0f69e6a3064f5498d495f77ad83e0874ab28.sol
Total states:613
3.26942
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol
Total states:19786
456.408959
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:15.446447
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 186
Estimated Gas Usage: 8339 - 180876
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 290
Offset: 687
Offset: 1095
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:116

function daiJoin_join(address apt, address urn, uint wad) public {
        // Gets DAI from the user's wallet
        DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad);
        // Approves adapter to take the DAI amount
        DaiJoinLike(apt).dai().approve(apt, wad);
        // Joins DAI into the vat
        DaiJoinLike(apt).join(urn, wad);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:01.757190
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 290
Estimated Gas Usage: 1076 - 1452
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai()

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:02:00.802236
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 439
Estimated Gas Usage: 8362 - 180899
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 3185
Offset: 3582
Offset: 3990
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:116

function daiJoin_join(address apt, address urn, uint wad) public {
        // Gets DAI from the user's wallet
        DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad);
        // Approves adapter to take the DAI amount
        DaiJoinLike(apt).dai().approve(apt, wad);
        // Joins DAI into the vat
        DaiJoinLike(apt).join(urn, wad);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:01:30.114433
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashGem(address,address,bytes32,uint256)
PC address: 481
Estimated Gas Usage: 5342 - 108941
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2670
Offset: 2849
Offset: 3056
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:888

function cashGem(
        address gemJoin,
        address end,
        bytes32 ilk,
        uint wad
    ) public {
        EndLike(end).cash(ilk, wad);
        // Exits token amount to the user's wallet as a token
        GemJoinLike(gemJoin).exit(msg.sender, mul(wad, EndLike(end).fix(ilk)) / RAY);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.741209
Transaction Length: 1
Severity: Low
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 563
Estimated Gas Usage: 2792 - 37920
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:01:47.244536
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 591
Estimated Gas Usage: 8384 - 180921
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 3186
Offset: 3583
Offset: 3991
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:116

function daiJoin_join(address apt, address urn, uint wad) public {
        // Gets DAI from the user's wallet
        DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad);
        // Approves adapter to take the DAI amount
        DaiJoinLike(apt).dai().approve(apt, wad);
        // Joins DAI into the vat
        DaiJoinLike(apt).join(urn, wad);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:01.712233
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 645
Estimated Gas Usage: 1079 - 1455
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:924

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:07.668057
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 687
Estimated Gas Usage: 4327 - 73736
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:05.181877
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 808
Estimated Gas Usage: 2701 - 37544
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:926

PotLike(pot).drip()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:10.207694
Transaction Length: 1
Severity: Low
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 908
Estimated Gas Usage: 5998 - 110064
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:23.043087
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: pack(address,address,uint256)
PC address: 992
Estimated Gas Usage: 9169 - 181987
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:864

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:47.801288
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 1017
Estimated Gas Usage: 4537 - 73942
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:930

PotLike(pot).exit(pie)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:15.426425
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 1095
Estimated Gas Usage: 7593 - 146130
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:122

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:24.050883
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 1143
Estimated Gas Usage: 6075 - 109761
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:932

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:24.780397
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 1765
Estimated Gas Usage: 1167 - 1733
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:878

EndLike(end).cash(ilk, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:52.106837
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 2156
Estimated Gas Usage: 4583 - 74182
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:881

GemJoinLike(ethJoin).exit(address(this), wadC)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:26.001706
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: join(address,address,uint256)
PC address: 2224
Estimated Gas Usage: 1095 - 1471
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:906

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:09.114216
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 2280
Estimated Gas Usage: 6118 - 109998
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:883

GemJoinLike(ethJoin).gem()

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:36.785098
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: giveToProxy(address,address,uint256,address)
PC address: 2309
Estimated Gas Usage: 3756 - 72884
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 12617
Offset: 10643
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:267

function giveToProxy(
        address proxyRegistry,
        address manager,
        uint cdp,
        address dst
    ) public {
        // Gets actual proxy address
        address proxy = ProxyRegistryLike(proxyRegistry).proxies(dst);
        // Checks if the proxy address already existed and dst address is still the owner
        if (proxy == address(0) || ProxyLike(proxy).owner() != dst) {
            uint csize;
            assembly {
                csize := extcodesize(dst)
            }
            // We want to avoid creating a proxy for a contract address that might not be able to handle proxies, then losing the CDP
            require(csize == 0, "Dst-is-a-contract");
            // Creates the proxy for the dst address
            proxy = ProxyRegistryLike(proxyRegistry).build(dst);
        }
        // Transfers CDP to the dst proxy
        give(manager, cdp, proxy);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:29.725554
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: join(address,address,uint256)
PC address: 2387
Estimated Gas Usage: 2717 - 37560
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:908

PotLike(pot).drip()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:10.915417
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashGem(address,address,bytes32,uint256)
PC address: 2670
Estimated Gas Usage: 1189 - 1755
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:894

EndLike(end).cash(ilk, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:30.094356
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashGem(address,address,bytes32,uint256)
PC address: 3056
Estimated Gas Usage: 4594 - 74193
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:896

GemJoinLike(gemJoin).exit(msg.sender, mul(wad, EndLike(end).fix(ilk)) / RAY)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:45.708181
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3185
Estimated Gas Usage: 1114 - 1490
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:32.131217
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3186
Estimated Gas Usage: 1136 - 1512
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:47.770880
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3458
Estimated Gas Usage: 2815 - 37943
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:34.300640
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3459
Estimated Gas Usage: 2837 - 37965
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:52.249813
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3582
Estimated Gas Usage: 4350 - 73759
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:38.665518
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3583
Estimated Gas Usage: 4372 - 73781
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:55.040871
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3803
Estimated Gas Usage: 6021 - 110087
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:41.485272
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3804
Estimated Gas Usage: 6043 - 110109
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:00.782195
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3990
Estimated Gas Usage: 7616 - 146153
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:122

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:47.224466
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3991
Estimated Gas Usage: 7638 - 146175
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:122

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:02.470396
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exitAll(address,address)
PC address: 4121
Estimated Gas Usage: 1112 - 1488
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:949

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:05.500113
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exitAll(address,address)
PC address: 4284
Estimated Gas Usage: 2734 - 37577
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:951

PotLike(pot).drip()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:09.738367
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exitAll(address,address)
PC address: 4672
Estimated Gas Usage: 6039 - 110006
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:955

PotLike(pot).exit(pie)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.709406
Transaction Length: 1
Severity: High
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 4815
Estimated Gas Usage: 3657 - 72785
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:111

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.856510
Transaction Length: 1
Severity: High
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 5387
Estimated Gas Usage: 3639 - 72668
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:111

x * y

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:04.622406
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8321
Estimated Gas Usage: 2911 - 38043
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:467

GemJoinLike(ethJoin).exit(address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:07.713029
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8445
Estimated Gas Usage: 4446 - 73859
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:469

GemJoinLike(ethJoin).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:10.010608
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8614
Estimated Gas Usage: 6085 - 110060
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:469

GemJoinLike(ethJoin).gem().withdraw(wad)

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:12.937097
Transaction Length: 1
Severity: High
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8683
Estimated Gas Usage: 6883 - 145044
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:471

msg.sender.transfer(wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:59.992684
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: freeETH(address,address,uint256,uint256)
PC address: 9233
Estimated Gas Usage: 3042 - 38269
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:313

ManagerLike(manager).flux(cdp, dst, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:43.194488
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: giveToProxy(address,address,uint256,address)
PC address: 10643
Estimated Gas Usage: 5392 - 75082
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:264

ManagerLike(manager).give(cdp, usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:19.626850
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: move(address,uint256,address,uint256)
PC address: 10843
Estimated Gas Usage: 1267 - 1928
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:322

ManagerLike(manager).move(cdp, dst, rad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:36.352011
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: quit(address,uint256,address)
PC address: 12433
Estimated Gas Usage: 1198 - 1764
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:339

ManagerLike(manager).quit(cdp, dst)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:47.353009
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: giveToProxy(address,address,uint256,address)
PC address: 13223
Estimated Gas Usage: 5320 - 74820
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:284

ProxyRegistryLike(proxyRegistry).build(dst)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:49.918931
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: urnAllow(address,address,uint256)
PC address: 15084
Estimated Gas Usage: 1264 - 1830
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:304

ManagerLike(manager).urnAllow(usr, ok)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:49.418897
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: openLockETHAndDraw(address,address,address,address,bytes32,uint256)
PC address: 15278
Estimated Gas Usage: 1294 - 1860
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:256

ManagerLike(manager).open(ilk, usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:01.906885
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: shift(address,uint256,uint256)
PC address: 17663
Estimated Gas Usage: 1245 - 1811
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:355

ManagerLike(manager).shift(cdpSrc, cdpOrg)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:59.183016
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: safeLockGem(address,address,uint256,uint256,bool,address)
PC address: 17798
Estimated Gas Usage: 3003 - 37941
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:229

GemJoinLike(apt).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:02.792274
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: safeLockGem(address,address,uint256,uint256,bool,address)
PC address: 18071
Estimated Gas Usage: 4704 - 74394
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:229

GemJoinLike(apt).gem().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:12.090222
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: gemJoin_join(address,address,uint256,bool)
PC address: 18195
Estimated Gas Usage: 4513 - 73922
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:231

GemJoinLike(apt).gem()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:54.321195
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: safeLockGem(address,address,uint256,uint256,bool,address)
PC address: 18604
Estimated Gas Usage: 3064 - 38192
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:234

GemJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:14.079534
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: frob(address,uint256,int256,int256)
PC address: 18761
Estimated Gas Usage: 1227 - 1888
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:331

ManagerLike(manager).frob(cdp, dink, dart)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:20.885867
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: nope(address,address)
PC address: 20145
Estimated Gas Usage: 1195 - 1666
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:248

HopeLike(obj).nope(usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:09.750007
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: safeLockETH(address,address,uint256,address)
PC address: 20273
Estimated Gas Usage: 2932 - 37870
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:218

GemJoinLike(apt).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:12.716773
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: safeLockETH(address,address,uint256,address)
PC address: 20431
Estimated Gas Usage: 4545 - 73950
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:218

GemJoinLike(apt).gem().deposit.value(msg.value)()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:42.833144
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: lockETH(address,address,uint256)
PC address: 20556
Estimated Gas Usage: 4371 - 73495
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:220

GemJoinLike(apt).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:46.028371
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: lockETH(address,address,uint256)
PC address: 20777
Estimated Gas Usage: 6041 - 109822
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:220

GemJoinLike(apt).gem().approve(address(apt), msg.value)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:37.502437
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: ethJoin_join(address,address)
PC address: 20964
Estimated Gas Usage: 7567 - 145819
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:222

GemJoinLike(apt).join(urn, msg.value)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:45.206650
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: hope(address,address)
PC address: 22277
Estimated Gas Usage: 1150 - 1621
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:241

HopeLike(obj).hope(usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:46.938974
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: cdpAllow(address,uint256,address,uint256)
PC address: 22476
Estimated Gas Usage: 1266 - 1927
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:296

ManagerLike(manager).cdpAllow(cdp, usr, ok)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:00.934427
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: transfer(address,address,uint256)
PC address: 25160
Estimated Gas Usage: 1285 - 1851
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:213

GemLike(gem).transfer(dst, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:04.311688
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: openLockGNTAndDraw(address,address,address,address,bytes32,uint256,uint256)
PC address: 25571
Estimated Gas Usage: 2956 - 37894
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:685

GemJoinLike(gntJoin).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:06.957645
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: openLockGNTAndDraw(address,address,address,address,bytes32,uint256,uint256)
PC address: 25792
Estimated Gas Usage: 4627 - 74222
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:685

GemLike(GemJoinLike(gntJoin).gem()).transfer(bag, wadC)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:15.088950
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 25947
Estimated Gas Usage: 1159 - 1535
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:17.076682
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26220
Estimated Gas Usage: 2860 - 37988
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:20.786805
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26344
Estimated Gas Usage: 4395 - 73804
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:23.502288
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26565
Estimated Gas Usage: 6066 - 110132
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:29.048247
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26752
Estimated Gas Usage: 7661 - 146198
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:122

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:04.853771
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: enter(address,address,uint256)
PC address: 29428
Estimated Gas Usage: 1240 - 1806
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:347

ManagerLike(manager).enter(src, cdp)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:14.266901
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: makeGemBag(address)
PC address: 29961
Estimated Gas Usage: 1206 - 1677
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:361

GNTJoinLike(gemJoin).make(address(this))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:19.153044
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: draw(address,address,address,uint256,uint256)
PC address: 31041
Estimated Gas Usage: 6209 - 110271
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:159

JugLike(jug).drip(ilk)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:53.565780
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: freeGem(address,address,uint256,uint256)
PC address: 31598
Estimated Gas Usage: 1197 - 1573
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:147

GemJoinLike(gemJoin).dec()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x3e5723c9040d24e7fb4be9f9849f73dd6305204a.sol
Total states:7697
28.608106
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.528891
Transaction Length: 1
Severity: High
Contract: yeldDAI
Function name: updatePrice()
PC address: 4031
Estimated Gas Usage: 1068 - 1163
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3e5723c9040d24e7fb4be9f9849f73dd6305204a.sol:408

lastPriceUpdate + priceUpdatePeriod

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x4cA805cE8EcE2E63FfC1F9f8F2731D3F48DF89Df.sol
Total states:3279
4.715499
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xb3edeca8bd80e444b87af14f7cd4e655c4117a12.sol
Total states:18192
40.128392
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.455513
Transaction Length: 2
Severity: High
Contract: aaple
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xb3edeca8bd80e444b87af14f7cd4e655c4117a12.sol:58

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.251648
Transaction Length: 2
Severity: High
Contract: aaple
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xb3edeca8bd80e444b87af14f7cd4e655c4117a12.sol:59

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x47082A19EC51c5c4d3b3BD47e81e25D174e599a4.sol
Total states:1370
6.437342
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.658447
Transaction Length: 1
Severity: Low
Contract: TinlakeSpell
Function name: cast()
PC address: 2339
Estimated Gas Usage: 7027 - 28253
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x47082A19EC51c5c4d3b3BD47e81e25D174e599a4.sol:88

root.relyContract(ASSESSOR_ADMIN, ASSESSOR_ADMIN_ADMIN1)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.375510
Transaction Length: 1
Severity: Low
Contract: TinlakeSpell
Function name: cast()
PC address: 2610
Estimated Gas Usage: 8634 - 64331
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x47082A19EC51c5c4d3b3BD47e81e25D174e599a4.sol:89

root.relyContract(ASSESSOR_ADMIN, ASSESSOR_ADMIN_ADMIN2)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.309543
Transaction Length: 1
Severity: Low
Contract: TinlakeSpell
Function name: cast()
PC address: 2881
Estimated Gas Usage: 10241 - 100409
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x47082A19EC51c5c4d3b3BD47e81e25D174e599a4.sol:92

root.relyContract(JUNIOR_MEMBERLIST, JUNIOR_MEMBERLIST_ADMIN1)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.416728
Transaction Length: 1
Severity: Low
Contract: TinlakeSpell
Function name: cast()
PC address: 3152
Estimated Gas Usage: 11848 - 136487
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x47082A19EC51c5c4d3b3BD47e81e25D174e599a4.sol:93

root.relyContract(JUNIOR_MEMBERLIST, JUNIOR_MEMBERLIST_ADMIN2)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.718906
Transaction Length: 1
Severity: Low
Contract: TinlakeSpell
Function name: cast()
PC address: 3423
Estimated Gas Usage: 13455 - 172565
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x47082A19EC51c5c4d3b3BD47e81e25D174e599a4.sol:94

root.relyContract(JUNIOR_MEMBERLIST, JUNIOR_MEMBERLIST_ADMIN3)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:06.194471
Transaction Length: 1
Severity: Low
Contract: TinlakeSpell
Function name: cast()
PC address: 3694
Estimated Gas Usage: 15062 - 208643
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x47082A19EC51c5c4d3b3BD47e81e25D174e599a4.sol:97

root.relyContract(SENIOR_MEMBERLIST, SENIOR_MEMBERLIST_ADMIN1)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x7826B2B9D35530976AF35a56A6d2249749A9a400.sol
Total states:3445
11.168667
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x390cc97854f85ddb7e84229589b3cc7be16cf0f1.sol
Total states:7439
17.251841
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.626503
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x390cc97854f85ddb7e84229589b3cc7be16cf0f1.sol:106

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x4e3642603a75528489c2d94f86e9507260d3c5a1.sol
Total states:3429
5.542606
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xbc944ac853f62ad10d354b9cdbbdecac14e263c0.sol
Total states:76097
143.009734
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:52.318386
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbc944ac853f62ad10d354b9cdbbdecac14e263c0.sol:60

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:51.463576
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbc944ac853f62ad10d354b9cdbbdecac14e263c0.sol:60

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:56.012216
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbc944ac853f62ad10d354b9cdbbdecac14e263c0.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:01.336945
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbc944ac853f62ad10d354b9cdbbdecac14e263c0.sol:63

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:55.625439
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbc944ac853f62ad10d354b9cdbbdecac14e263c0.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:01.712674
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbc944ac853f62ad10d354b9cdbbdecac14e263c0.sol:63

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x8bdf979c6cb932f186e755887d0964c9ee624121.sol
Total states:86
0.122403
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x34317e2da45fec7c525aca8dabf22cbc877128a3.sol
Total states:5272
62.154567
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:57.097447
Transaction Length: 1
Severity: Low
Contract: VidyaFLUX
Function name: feedInventory()
PC address: 6827
Estimated Gas Usage: 8677 - 30943
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x34317e2da45fec7c525aca8dabf22cbc877128a3.sol:788

erc20.transfer(maintenanceAddress, toInventory)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:58.209974
Transaction Length: 1
Severity: Low
Contract: VidyaFLUX
Function name: feedInventory()
PC address: 7084
Estimated Gas Usage: 10788 - 68041
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x34317e2da45fec7c525aca8dabf22cbc877128a3.sol:794

erc20.transfer(msg.sender, bonus)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.481738
Transaction Length: 1
Severity: High
Contract: VidyaFLUX
Function name: calculateTokensReceived(uint256)
PC address: 9622
Estimated Gas Usage: 809 - 904
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x34317e2da45fec7c525aca8dabf22cbc877128a3.sol:64

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:55.078526
Transaction Length: 1
Severity: Low
Contract: VidyaFLUX
Function name: calculateTokensReceived(uint256)
PC address: 9645
Estimated Gas Usage: 847 - 942
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x34317e2da45fec7c525aca8dabf22cbc877128a3.sol:66

assert(c / a == b)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:59.236182
Transaction Length: 1
Severity: Low
Contract: VidyaFLUX
Function name: buy(uint256,address)
PC address: 9987
Estimated Gas Usage: 1683 - 2674
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x34317e2da45fec7c525aca8dabf22cbc877128a3.sol:326

erc20.transferFrom(msg.sender, address(this), _amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xebd9e595f6c5adaf28771ed0e78c8e012a3c226d.sol
Total states:1839
1.714738
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x095c673D34034332F0Dc74D3484EB9524D1318e5.sol
Total states:676
1.36736
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xc1e4eb1328dd58328688f81308f896e2e4f09433.sol
Total states:13839
31.543663
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.051692
Transaction Length: 0
Severity: High
Contract: ERC20Detailed
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xc1e4eb1328dd58328688f81308f896e2e4f09433.sol:15

 view returns (uint);
    function balanceO

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.486455
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3582
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xc1e4eb1328dd58328688f81308f896e2e4f09433.sol:123

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.147655
Transaction Length: 2
Severity: High
Contract: VCN
Function name: increaseAllowance(address,uint256)
PC address: 4415
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xc1e4eb1328dd58328688f81308f896e2e4f09433.sol:123

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xc4bb9344e81f76c2d92d625c19be2107c892e1a7.sol
Total states:9014
17.700241
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.447976
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xc4bb9344e81f76c2d92d625c19be2107c892e1a7.sol:109

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x6b4a5b6ebea258c3d570928b2bad53d5f7e8a423.sol
Total states:76081
145.398494
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.769834
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6b4a5b6ebea258c3d570928b2bad53d5f7e8a423.sol:58

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.587811
Transaction Length: 2
Severity: High
Contract: UNISEX
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6b4a5b6ebea258c3d570928b2bad53d5f7e8a423.sol:58

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.301792
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6b4a5b6ebea258c3d570928b2bad53d5f7e8a423.sol:60

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.279464
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6b4a5b6ebea258c3d570928b2bad53d5f7e8a423.sol:61

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.261257
Transaction Length: 2
Severity: High
Contract: UNISEX
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6b4a5b6ebea258c3d570928b2bad53d5f7e8a423.sol:60

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:02.180679
Transaction Length: 2
Severity: High
Contract: UNISEX
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6b4a5b6ebea258c3d570928b2bad53d5f7e8a423.sol:61

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x350ae46a6fdc97a27c1b0a00fdb24637a6ff1a3b.sol
Total states:490
0.600835
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x608f5d086566b2aa41d37e909a298fa8a2166bef.sol
Total states:554
1.438408
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x66605a5b87ea0370aec238e4ea05023d7e5d90d5.sol
Total states:428
1.300555
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol
Total states:481
3.700714
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x91f5e4554a5BacC18056Eb3F96bB76699d6edC88.sol
Total states:713
0.489183
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xd1ef0930887653416041af4b11fedac05db6b80b.sol
Total states:18192
40.959914
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.948378
Transaction Length: 2
Severity: High
Contract: virginsvc
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xd1ef0930887653416041af4b11fedac05db6b80b.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.785006
Transaction Length: 2
Severity: High
Contract: virginsvc
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xd1ef0930887653416041af4b11fedac05db6b80b.sol:54

balances[from] -= value

--------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x448ff6d5ca4cdf28f9c61de671108df310903eb1.sol
Total states:4708
8.21788
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040435
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x448ff6d5ca4cdf28f9c61de671108df310903eb1.sol:17

dentifier: MIT

//pragma solidity ^0.6.0;
p

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xfb9fc4ccc2538172fe76f7dc231a6969950e57c8.sol
Total states:20052
44.931572
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.279117
Transaction Length: 0
Severity: Medium
Contract: WEV
Function name: constructor
PC address: 209
Estimated Gas Usage: 17133 - 78876
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop3/0xfb9fc4ccc2538172fe76f7dc231a6969950e57c8.sol:733

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.328710
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xfb9fc4ccc2538172fe76f7dc231a6969950e57c8.sol:33

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.306227
Transaction Length: 2
Severity: High
Contract: WEV
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xfb9fc4ccc2538172fe76f7dc231a6969950e57c8.sol:33

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol
Total states:4104
25.104261
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:05.867761
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 339
Estimated Gas Usage: 10986 - 154068
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1353
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:169

function supplyOrderWithDaiPermit(uint amount, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {
        DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s);
        supplyOrder(amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:08.179451
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: redeemOrder(uint256)
PC address: 385
Estimated Gas Usage: 8635 - 116441
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1961
Offset: 2326
Offset: 2583
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:147

function redeemOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        token.hasMember(msg.sender);
        tranche.redeemOrder(msg.sender, amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:14.974060
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse()
PC address: 823
Estimated Gas Usage: 4632 - 75356
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 4515
Offset: 4882
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:154

function disburse() external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:16.943158
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse(uint256)
PC address: 910
Estimated Gas Usage: 4758 - 75577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5182
Offset: 5557
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:161

function disburse(uint endEpoch) external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender, endEpoch);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:19.300014
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 1044
Estimated Gas Usage: 6568 - 79482
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:141

function supplyOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        tranche.supplyOrder(msg.sender, amount);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.480822
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1711
Estimated Gas Usage: 3914 - 40177
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:170

DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:23.830342
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 2583
Estimated Gas Usage: 8608 - 114894
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:150

tranche.redeemOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:10.408233
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 3258
Estimated Gas Usage: 3875 - 40043
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:174

EIP2612PermitLike(tranche.currency()).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.847867
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse()
PC address: 4882
Estimated Gas Usage: 3600 - 39293
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:158

tranche.disburse(msg.sender)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:16.765180
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse(uint256)
PC address: 5557
Estimated Gas Usage: 3724 - 39512
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:165

tranche.disburse(msg.sender, endEpoch)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:18.975736
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 6269
Estimated Gas Usage: 3727 - 39515
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:143

tranche.supplyOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:20.615223
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 6826
Estimated Gas Usage: 2310 - 4011
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:178

EIP2612PermitLike(address(token)).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x98b689a88e421E4CdC3A27b61b99c039a8ae9885.sol
Total states:2175
2.702243
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.286201
Transaction Length: 1
Severity: Low
Contract: UpgradeabilityProxy
Function name: fallback
PC address: 274
Estimated Gas Usage: 681 - 3503
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy))
--------------------
In file: ../../contracts/noloop/noloop3/0x98b689a88e421E4CdC3A27b61b99c039a8ae9885.sol:260

delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x87a59a9f2c2caf9c7ec3fa62d7496d9fc7449b01.sol
Total states:2389
11.941628
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.890333
Transaction Length: 1
Severity: Medium
Contract: Liquidator
Function name: triggerLiquidation(address)
PC address: 4941
Estimated Gas Usage: 280 - 375
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop3/0x87a59a9f2c2caf9c7ec3fa62d7496d9fc7449b01.sol:1111

tx.origin

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x03542773ff03e6bfc17f70cb29c0b43115399a8b.sol
Total states:1585
2.749191
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.119338
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x03542773ff03e6bfc17f70cb29c0b43115399a8b.sol:11

sg.data, they should not be accessed in suc

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xf0190fa7d63e9c5fefb54e720200c0e86641d08f.sol
Total states:5259
57.304149
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.514834
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xf0190fa7d63e9c5fefb54e720200c0e86641d08f.sol:64

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:22.930640
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xf0190fa7d63e9c5fefb54e720200c0e86641d08f.sol:56

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.140634
Transaction Length: 1
Severity: High
Contract: YellowBitcoin
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xf0190fa7d63e9c5fefb54e720200c0e86641d08f.sol:64

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.864727
Transaction Length: 1
Severity: High
Contract: YellowBitcoin
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xf0190fa7d63e9c5fefb54e720200c0e86641d08f.sol:56

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x73fd787288e109f690feb2a319a8348196c926a2.sol
Total states:1239
0.612134
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xe8fcf5e2ada14994e734adc05620a5aaf7d3300c.sol
Total states:10492
46.298105
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.325944
Transaction Length: 1
Severity: High
Contract: yfOMEGA
Function name: transfer(address,uint256)
PC address: 6338
Estimated Gas Usage: 834 - 929
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xe8fcf5e2ada14994e734adc05620a5aaf7d3300c.sol:31

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.335956
Transaction Length: 2
Severity: High
Contract: yfOMEGA
Function name: increaseAllowance(address,uint256)
PC address: 6458
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xe8fcf5e2ada14994e734adc05620a5aaf7d3300c.sol:9

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xce8a7e421646447ca993dbd015886d5a3fc1eaf3.sol
Total states:3409
5.681381
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xfa96a422c59e5bc44ba24f10fc3ad0c6e4fd12a2.sol
Total states:18192
43.113717
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.811085
Transaction Length: 2
Severity: High
Contract: ponzis
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xfa96a422c59e5bc44ba24f10fc3ad0c6e4fd12a2.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.776886
Transaction Length: 2
Severity: High
Contract: ponzis
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xfa96a422c59e5bc44ba24f10fc3ad0c6e4fd12a2.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xc91352f98f96ec86dfdd5ed1bd151ca53adb4700.sol
Total states:1432
3.596523
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047111
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 141
Estimated Gas Usage: 20281 - 103054
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xc91352f98f96ec86dfdd5ed1bd151ca53adb4700.sol:10

ta. While these are generally available
 * 

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol
Total states:8394
466.117918
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.043232
Transaction Length: 1
Severity: High
Contract: vnxManager
Function name: addRole(string,uint256)
PC address: 776
Estimated Gas Usage: 363 - 458
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol:3



*/



// File: contracts\IRBAC.so

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:18.979591
Transaction Length: 1
Severity: High
Contract: vnxManager
Function name: addRootRole(string)
PC address: 1354
Estimated Gas Usage: 406 - 501
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol:3



*/



// File: contracts\IRBAC.so

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.280533
Transaction Length: 1
Severity: High
Contract: vnxManager
Function name: addRole(string,uint256)
PC address: 3863
Estimated Gas Usage: 12340 - 55966
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol:451

roles.push(

      Role({

        description: _roleDescription,

        admin: _admin,

        bearersCount: 0

      })

    )

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:53.671902
Transaction Length: 1
Severity: Low
Contract: vnxManager
Function name: roles(uint256)
PC address: 3998
Estimated Gas Usage: 678 - 773
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol:383

Role[] public roles

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:15.278253
Transaction Length: 1
Severity: High
Contract: vnxManager
Function name: addRole(string,uint256)
PC address: 5841
Estimated Gas Usage: 7296 - 30922
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol:287

contract vnxManager is IRBAC, Ownable {

  /**

   * @dev Throws if called by any account other than the admin

   */

  modifier onlyAdmin() {

    require(isAdmin(), "RBAC: caller is not the admin");

    _;

  }



  /**

   * @dev Returns true if the caller is the admin role

   */

  function isAdmin() public view returns (bool) {

    return hasRole(msg.sender, 0);

  }



  function transferContractOwnership(address targetContract, address newOwner) onlyAdmin external returns(bool)

  {

    require(targetContract != address(0), "Target contract cannot be zero address");

    require(newOwner != address(0), "newOwner cannot be zero address");



    Ownable c = Ownable(targetContract);

    require(c.owner()!=newOwner, "New owner should differ from current");

    c.transferOwnership(newOwner);



    return true;

  }



  uint256 constant SUPERADMIN_ROLE = 0;

  /**

   * @notice A role which will be used to group users.

   * @dev The role id is its position in the roles array.

   * @param description A description for the role.

   * @param admin The only role that can add or remove bearers from

   * this role. To have the role bearers to be also the role admins 

   * you should pass roles.length as the admin role.

   * @param bearers Addresses belonging to this role.

   * @param bearersCount total count of addresses belonging to this role.

   */

  struct Role {

    string description;

    uint256 admin;

    mapping (address => bool) bearers;

    uint256 bearersCount;

  }

  /**

   * @notice All roles ever created.

   */

  Role[] public roles;

  /**

   * @notice The contract constructor, empty as of now.

   */

  constructor() public {

    addRootRole("Superadmin");

  }

  /**

   * @notice Create a new role that has itself as an admin. 

   * msg.sender is added as a bearer.

   * @param _roleDescription The description of the role created.

   * @return The role id.

   */

  function addRootRole(string memory _roleDescription)

    public

    returns(uint256)

  {

    uint256 role = addRole(_roleDescription, roles.length);

    roles[role].bearers[msg.sender] = true;

    roles[role].bearersCount++;

    emit BearerAdded(msg.sender, role);

  }

  /**

   * @notice Create a new role.

   * @param _roleDescription The description of the role created.

   * @param _admin The role that is allowed to add and remove

   * bearers from the role being created.

   * @return The role id.

   */

  function addRole(string memory _roleDescription, uint256 _admin)

    public

    returns(uint256)

  {

    require(_admin <= roles.length, "Admin role doesn't exist.");

    uint256 role = roles.push(

      Role({

        description: _roleDescription,

        admin: _admin,

        bearersCount: 0

      })

    ) - 1;

    emit RoleCreated(role);

    return role;

  }

  /**

   * @notice Retrieve the number of roles in the contract.

   */

  function totalRoles()

    external

    view

    returns(uint256)

  {

    return roles.length;

  }

  /**

   * @notice Verify whether an account is a bearer of a role

   * @param _account The account to verify.

   * @param _role The role to look into.

   * @return Whether the account is a bearer of the role.

   */

  function hasRole(address _account, uint256 _role)

    public

    view

    returns(bool)

  {

    return _role < roles.length && roles[_role].bearers[_account];

  }

  /**

   * @notice A method to add a bearer to a role

   * @param _account The account to add as a bearer.

   * @param _role The role to add the bearer to.

   */

  function addBearer(address _account, uint256 _role)

    external

  {

    require(

      _role < roles.length,

      "Role doesn't exist."

    );

    require(

      hasRole(msg.sender, roles[_role].admin),

      "User can't add bearers."

    );

    require(

      !hasRole(_account, _role),

      "Account is bearer of role."

    );

    roles[_role].bearers[_account] = true;

    roles[_role].bearersCount++;

    emit BearerAdded(_account, _role);

  }

  /**

   * @notice A method to remove a bearer from a role

   * @param _account The account to remove as a bearer.

   * @param _role The role to remove the bearer from.

   */

  function removeBearer(address _account, uint256 _role)

    external

  {

    require(

      _role < roles.length,

      "Role doesn't exist."

    );

    require(

      hasRole(msg.sender, roles[_role].admin),

      "User can't remove bearers."

    );

    require(

      hasRole(_account, _role),

      "Account is not bearer of role."

    );

    if ( _role == roles[_role].admin && roles[_role].bearersCount == 1) {

      revert("Cannot remove last role admin");

    }



    delete roles[_role].bearers[_account];

    roles[_role].bearersCount--;

    emit BearerRemoved(_account, _role);

  }

}

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:37.817092
Transaction Length: 1
Severity: High
Contract: vnxManager
Function name: addRole(string,uint256)
PC address: 5855
Estimated Gas Usage: 12340 - 55966
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol:287

contract vnxManager is IRBAC, Ownable {

  /**

   * @dev Throws if called by any account other than the admin

   */

  modifier onlyAdmin() {

    require(isAdmin(), "RBAC: caller is not the admin");

    _;

  }



  /**

   * @dev Returns true if the caller is the admin role

   */

  function isAdmin() public view returns (bool) {

    return hasRole(msg.sender, 0);

  }



  function transferContractOwnership(address targetContract, address newOwner) onlyAdmin external returns(bool)

  {

    require(targetContract != address(0), "Target contract cannot be zero address");

    require(newOwner != address(0), "newOwner cannot be zero address");



    Ownable c = Ownable(targetContract);

    require(c.owner()!=newOwner, "New owner should differ from current");

    c.transferOwnership(newOwner);



    return true;

  }



  uint256 constant SUPERADMIN_ROLE = 0;

  /**

   * @notice A role which will be used to group users.

   * @dev The role id is its position in the roles array.

   * @param description A description for the role.

   * @param admin The only role that can add or remove bearers from

   * this role. To have the role bearers to be also the role admins 

   * you should pass roles.length as the admin role.

   * @param bearers Addresses belonging to this role.

   * @param bearersCount total count of addresses belonging to this role.

   */

  struct Role {

    string description;

    uint256 admin;

    mapping (address => bool) bearers;

    uint256 bearersCount;

  }

  /**

   * @notice All roles ever created.

   */

  Role[] public roles;

  /**

   * @notice The contract constructor, empty as of now.

   */

  constructor() public {

    addRootRole("Superadmin");

  }

  /**

   * @notice Create a new role that has itself as an admin. 

   * msg.sender is added as a bearer.

   * @param _roleDescription The description of the role created.

   * @return The role id.

   */

  function addRootRole(string memory _roleDescription)

    public

    returns(uint256)

  {

    uint256 role = addRole(_roleDescription, roles.length);

    roles[role].bearers[msg.sender] = true;

    roles[role].bearersCount++;

    emit BearerAdded(msg.sender, role);

  }

  /**

   * @notice Create a new role.

   * @param _roleDescription The description of the role created.

   * @param _admin The role that is allowed to add and remove

   * bearers from the role being created.

   * @return The role id.

   */

  function addRole(string memory _roleDescription, uint256 _admin)

    public

    returns(uint256)

  {

    require(_admin <= roles.length, "Admin role doesn't exist.");

    uint256 role = roles.push(

      Role({

        description: _roleDescription,

        admin: _admin,

        bearersCount: 0

      })

    ) - 1;

    emit RoleCreated(role);

    return role;

  }

  /**

   * @notice Retrieve the number of roles in the contract.

   */

  function totalRoles()

    external

    view

    returns(uint256)

  {

    return roles.length;

  }

  /**

   * @notice Verify whether an account is a bearer of a role

   * @param _account The account to verify.

   * @param _role The role to look into.

   * @return Whether the account is a bearer of the role.

   */

  function hasRole(address _account, uint256 _role)

    public

    view

    returns(bool)

  {

    return _role < roles.length && roles[_role].bearers[_account];

  }

  /**

   * @notice A method to add a bearer to a role

   * @param _account The account to add as a bearer.

   * @param _role The role to add the bearer to.

   */

  function addBearer(address _account, uint256 _role)

    external

  {

    require(

      _role < roles.length,

      "Role doesn't exist."

    );

    require(

      hasRole(msg.sender, roles[_role].admin),

      "User can't add bearers."

    );

    require(

      !hasRole(_account, _role),

      "Account is bearer of role."

    );

    roles[_role].bearers[_account] = true;

    roles[_role].bearersCount++;

    emit BearerAdded(_account, _role);

  }

  /**

   * @notice A method to remove a bearer from a role

   * @param _account The account to remove as a bearer.

   * @param _role The role to remove the bearer from.

   */

  function removeBearer(address _account, uint256 _role)

    external

  {

    require(

      _role < roles.length,

      "Role doesn't exist."

    );

    require(

      hasRole(msg.sender, roles[_role].admin),

      "User can't remove bearers."

    );

    require(

      hasRole(_account, _role),

      "Account is not bearer of role."

    );

    if ( _role == roles[_role].admin && roles[_role].bearersCount == 1) {

      revert("Cannot remove last role admin");

    }



    delete roles[_role].bearers[_account];

    roles[_role].bearersCount--;

    emit BearerRemoved(_account, _role);

  }

}

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.480480
Transaction Length: 1
Severity: High
Contract: vnxManager
Function name: addRole(string,uint256)
PC address: 5872
Estimated Gas Usage: 22480 - 106292
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol:287

contract vnxManager is IRBAC, Ownable {

  /**

   * @dev Throws if called by any account other than the admin

   */

  modifier onlyAdmin() {

    require(isAdmin(), "RBAC: caller is not the admin");

    _;

  }



  /**

   * @dev Returns true if the caller is the admin role

   */

  function isAdmin() public view returns (bool) {

    return hasRole(msg.sender, 0);

  }



  function transferContractOwnership(address targetContract, address newOwner) onlyAdmin external returns(bool)

  {

    require(targetContract != address(0), "Target contract cannot be zero address");

    require(newOwner != address(0), "newOwner cannot be zero address");



    Ownable c = Ownable(targetContract);

    require(c.owner()!=newOwner, "New owner should differ from current");

    c.transferOwnership(newOwner);



    return true;

  }



  uint256 constant SUPERADMIN_ROLE = 0;

  /**

   * @notice A role which will be used to group users.

   * @dev The role id is its position in the roles array.

   * @param description A description for the role.

   * @param admin The only role that can add or remove bearers from

   * this role. To have the role bearers to be also the role admins 

   * you should pass roles.length as the admin role.

   * @param bearers Addresses belonging to this role.

   * @param bearersCount total count of addresses belonging to this role.

   */

  struct Role {

    string description;

    uint256 admin;

    mapping (address => bool) bearers;

    uint256 bearersCount;

  }

  /**

   * @notice All roles ever created.

   */

  Role[] public roles;

  /**

   * @notice The contract constructor, empty as of now.

   */

  constructor() public {

    addRootRole("Superadmin");

  }

  /**

   * @notice Create a new role that has itself as an admin. 

   * msg.sender is added as a bearer.

   * @param _roleDescription The description of the role created.

   * @return The role id.

   */

  function addRootRole(string memory _roleDescription)

    public

    returns(uint256)

  {

    uint256 role = addRole(_roleDescription, roles.length);

    roles[role].bearers[msg.sender] = true;

    roles[role].bearersCount++;

    emit BearerAdded(msg.sender, role);

  }

  /**

   * @notice Create a new role.

   * @param _roleDescription The description of the role created.

   * @param _admin The role that is allowed to add and remove

   * bearers from the role being created.

   * @return The role id.

   */

  function addRole(string memory _roleDescription, uint256 _admin)

    public

    returns(uint256)

  {

    require(_admin <= roles.length, "Admin role doesn't exist.");

    uint256 role = roles.push(

      Role({

        description: _roleDescription,

        admin: _admin,

        bearersCount: 0

      })

    ) - 1;

    emit RoleCreated(role);

    return role;

  }

  /**

   * @notice Retrieve the number of roles in the contract.

   */

  function totalRoles()

    external

    view

    returns(uint256)

  {

    return roles.length;

  }

  /**

   * @notice Verify whether an account is a bearer of a role

   * @param _account The account to verify.

   * @param _role The role to look into.

   * @return Whether the account is a bearer of the role.

   */

  function hasRole(address _account, uint256 _role)

    public

    view

    returns(bool)

  {

    return _role < roles.length && roles[_role].bearers[_account];

  }

  /**

   * @notice A method to add a bearer to a role

   * @param _account The account to add as a bearer.

   * @param _role The role to add the bearer to.

   */

  function addBearer(address _account, uint256 _role)

    external

  {

    require(

      _role < roles.length,

      "Role doesn't exist."

    );

    require(

      hasRole(msg.sender, roles[_role].admin),

      "User can't add bearers."

    );

    require(

      !hasRole(_account, _role),

      "Account is bearer of role."

    );

    roles[_role].bearers[_account] = true;

    roles[_role].bearersCount++;

    emit BearerAdded(_account, _role);

  }

  /**

   * @notice A method to remove a bearer from a role

   * @param _account The account to remove as a bearer.

   * @param _role The role to remove the bearer from.

   */

  function removeBearer(address _account, uint256 _role)

    external

  {

    require(

      _role < roles.length,

      "Role doesn't exist."

    );

    require(

      hasRole(msg.sender, roles[_role].admin),

      "User can't remove bearers."

    );

    require(

      hasRole(_account, _role),

      "Account is not bearer of role."

    );

    if ( _role == roles[_role].admin && roles[_role].bearersCount == 1) {

      revert("Cannot remove last role admin");

    }



    delete roles[_role].bearers[_account];

    roles[_role].bearersCount--;

    emit BearerRemoved(_account, _role);

  }

}

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x93627187a39da0aed8fc121c5595082b93fc1ced.sol
Total states:7280
10.840552
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.167696
Transaction Length: 2
Severity: High
Contract: LidTimeLock
Function name: startRelease(address)
PC address: 5176
Estimated Gas Usage: 15980 - 126519
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x93627187a39da0aed8fc121c5595082b93fc1ced.sol:169

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x6201bf2f2f1325e1e7deb50eb15cf2b384ba029c.sol
Total states:10158
33.722488
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:06.895487
Transaction Length: 1
Severity: Low
Contract: AErc20
Function name: seize(address,address,uint256)
PC address: 10140
Estimated Gas Usage: 7628 - 28809
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x6201bf2f2f1325e1e7deb50eb15cf2b384ba029c.sol:1828

controller.seizeAllowed(address(this), msg.sender, liquidator, borrower, seizeTokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.333534
Transaction Length: 1
Severity: Low
Contract: AErc20
Function name: transfer(address,uint256)
PC address: 15245
Estimated Gas Usage: 7688 - 28774
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x6201bf2f2f1325e1e7deb50eb15cf2b384ba029c.sol:819

controller.transferAllowed(address(this), src, dst, tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.353836
Transaction Length: 2
Severity: Low
Contract: AErc20
Function name: transfer(address,uint256)
PC address: 15245
Estimated Gas Usage: 7681 - 28767
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x6201bf2f2f1325e1e7deb50eb15cf2b384ba029c.sol:819

controller.transferAllowed(address(this), src, dst, tokens)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xc732a299684726a9feb2a72ff29f1af785940747.sol
Total states:76097
149.841838
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:55.644147
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xc732a299684726a9feb2a72ff29f1af785940747.sol:60

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.688902
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xc732a299684726a9feb2a72ff29f1af785940747.sol:60

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:59.541809
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xc732a299684726a9feb2a72ff29f1af785940747.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:05.129954
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xc732a299684726a9feb2a72ff29f1af785940747.sol:63

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:58.032275
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xc732a299684726a9feb2a72ff29f1af785940747.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:04.405776
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xc732a299684726a9feb2a72ff29f1af785940747.sol:63

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x6af48fd9f1daec3ea48a710c776800ae258d08db.sol
Total states:3429
5.795833
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x93bb0df4bf901e44e4c998543cd7284015694923.sol
Total states:8045
17.060305
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039991
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x93bb0df4bf901e44e4c998543cd7284015694923.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.881512
Transaction Length: 2
Severity: High
Contract: YFIC
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x93bb0df4bf901e44e4c998543cd7284015694923.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x9f0deb3ec897d07db7a40bb15b103dbe47d809ed.sol
Total states:631
9.468054
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:09.353921
Transaction Length: 1
Severity: Medium
Contract: DeWETHer
Function name: unwrapAllWETHFor(address)
PC address: 155
Estimated Gas Usage: 8687 - 148563
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 357
Offset: 675
Offset: 965
Offset: 1062
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x9f0deb3ec897d07db7a40bb15b103dbe47d809ed.sol:27

function unwrapAllWETHFor(address account) external {
        uint256 wethBalance = _WETH.balanceOf(account);
        if (wethBalance > 0) {
            require(
                _WETH.transferFrom(account, address(this), wethBalance),
                "WETH transfer in failed — has the allowance been set?"
            );
            _WETH.withdraw(wethBalance);
    
            uint256 ethBalance = address(this).balance;
            
            (bool ok, ) = account.call.value(ethBalance)("");
            if (!ok) {
                assembly {
                    returndatacopy(0, 0, returndatasize())
                    revert(0, returndatasize())
                }
            }
            
            emit Unwrapped(account, ethBalance);
        }
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.344583
Transaction Length: 1
Severity: Low
Contract: DeWETHer
Function name: unwrapAllWETHFor(address)
PC address: 675
Estimated Gas Usage: 3678 - 39561
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f0deb3ec897d07db7a40bb15b103dbe47d809ed.sol:31

_WETH.transferFrom(account, address(this), wethBalance)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.970937
Transaction Length: 1
Severity: Low
Contract: DeWETHer
Function name: unwrapAllWETHFor(address)
PC address: 965
Estimated Gas Usage: 5776 - 76551
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f0deb3ec897d07db7a40bb15b103dbe47d809ed.sol:34

_WETH.withdraw(wethBalance)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:08.328920
Transaction Length: 1
Severity: Medium
Contract: DeWETHer
Function name: unwrapAllWETHFor(address)
PC address: 1062
Estimated Gas Usage: 6987 - 111948
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f0deb3ec897d07db7a40bb15b103dbe47d809ed.sol:38

account.call.value(ethBalance)("")

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:04.971861
Transaction Length: 1
Severity: High
Contract: DeWETHer
Function name: unwrapAllWETHFor(address)
PC address: 1062
Estimated Gas Usage: 6987 - 111948
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f0deb3ec897d07db7a40bb15b103dbe47d809ed.sol:38

account.call.value(ethBalance)("")

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x0eac9bb695be3e4b86d751cdc36716a75afdb7b2.sol
Total states:31613
99.279381
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.607007
Transaction Length: 1
Severity: High
Contract: YFG
Function name: approveAndCall(address,uint256,bytes)
PC address: 1799
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x0eac9bb695be3e4b86d751cdc36716a75afdb7b2.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:35.210585
Transaction Length: 2
Severity: High
Contract: YFG
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 4618
Estimated Gas Usage: 6015 - 43128
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x0eac9bb695be3e4b86d751cdc36716a75afdb7b2.sol:134

nonces[holder]++

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:23.827138
Transaction Length: 1
Severity: Medium
Contract: YFG
Function name: approveAndCall(address,uint256,bytes)
PC address: 6543
Estimated Gas Usage: 8284 - 32451
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop3/0x0eac9bb695be3e4b86d751cdc36716a75afdb7b2.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), data)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.788583
Transaction Length: 1
Severity: High
Contract: YFG
Function name: transferFrom(address,address,uint256)
PC address: 7630
Estimated Gas Usage: 1671 - 2526
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x0eac9bb695be3e4b86d751cdc36716a75afdb7b2.sol:52

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xe061d1a4069242b02ce48c55bdb130262cdeb341.sol
Total states:7732
29.834705
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:17.010782
Transaction Length: 2
Severity: High
Contract: NeoFinance
Function name: burnFrom(address,uint256)
PC address: 3508
Estimated Gas Usage: 7546 - 28781
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xe061d1a4069242b02ce48c55bdb130262cdeb341.sol:151

allowed[_from][msg.sender] -= _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:22.014939
Transaction Length: 2
Severity: High
Contract: NeoFinance
Function name: burnFrom(address,uint256)
PC address: 3524
Estimated Gas Usage: 12979 - 54214
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xe061d1a4069242b02ce48c55bdb130262cdeb341.sol:152

_totalSupply -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x07C5f5eb34019EB36CdaE8CBb625991c1202cbDa.sol
Total states:2191
6.105478
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.023760
Transaction Length: 1
Severity: High
Contract: Flipper
Function name: tick(uint256)
PC address: 12726
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x07C5f5eb34019EB36CdaE8CBb625991c1202cbDa.sol:135

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xE534F4f727d7F07B31eD6051e893F3dA2BE4d455.sol
Total states:9010
18.545003
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.559408
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xE534F4f727d7F07B31eD6051e893F3dA2BE4d455.sol:132

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x60bcE1c09600c777d5502e3eb1413D2efd1be425.sol
Total states:8045
16.452029
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039149
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x60bcE1c09600c777d5502e3eb1413D2efd1be425.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.575717
Transaction Length: 2
Severity: High
Contract: YFIGOLD
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x60bcE1c09600c777d5502e3eb1413D2efd1be425.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x614dc26e5add37ce2b885df7d2e1875ef2b351b0.sol
Total states:1683
2.888246
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.007974
Transaction Length: 0
Severity: Medium
Contract: SusafeReferral
Function name: constructor
PC address: 18
Estimated Gas Usage: 42 - 137
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop3/0x614dc26e5add37ce2b885df7d2e1875ef2b351b0.sol:20

tx.origin

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:02.183142
Transaction Length: 1
Severity: Medium
Contract: SusafeReferral
Function name: emergencyERC20Drain(address,uint256)
PC address: 2889
Estimated Gas Usage: 2119 - 3345
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop3/0x614dc26e5add37ce2b885df7d2e1875ef2b351b0.sol:54

token.transfer(governance, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x2B6da14f488fba03f6CF6E2a6B530d656a963755.sol
Total states:796
0.692562
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol
Total states:9807
222.74307
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.078558
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol:40

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:35.813996
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol:24

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.626095
Transaction Length: 1
Severity: High
Contract: LAZ
Function name: approveAndCall(address,uint256,bytes)
PC address: 1648
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol:3



*/



//pragma solidity ^0.4.24;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:34.120342
Transaction Length: 1
Severity: Medium
Contract: LAZ
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol:372

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens,address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:42.198498
Transaction Length: 1
Severity: High
Contract: LAZ
Function name: safeMul(uint256,uint256)
PC address: 5262
Estimated Gas Usage: 394 - 489
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol:40

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:44.218619
Transaction Length: 1
Severity: High
Contract: LAZ
Function name: safeAdd(uint256,uint256)
PC address: 5840
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol:24

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x20e0b7cde3b373900b8152c3d3db8a28b37ab7b7.sol
Total states:794
2.173724
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x7bd1EA1d70079928b3b3469c327Be718F972F588.sol
Total states:836
0.729758
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x5255bb2de3ee6ca1ba729a9f0558e99da4d43303.sol
Total states:1661
4.974981
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.036841
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x5255bb2de3ee6ca1ba729a9f0558e99da4d43303.sol:16

pragma solidity 0.6.12;


 contract Permiss

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xa69f7a10df90c4d6710588bc18ad9bf08081f545.sol
Total states:1619
3.745854
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.038477
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xa69f7a10df90c4d6710588bc18ad9bf08081f545.sol:15

 the current execution context, including t

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x8e853d6d1d8670316fcef0e9b88ed66015d7e22e.sol
Total states:8045
15.682769
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039400
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x8e853d6d1d8670316fcef0e9b88ed66015d7e22e.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.192959
Transaction Length: 2
Severity: High
Contract: YFTOP
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x8e853d6d1d8670316fcef0e9b88ed66015d7e22e.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol
Total states:4104
23.376183
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:05.377401
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 339
Estimated Gas Usage: 10986 - 154068
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1353
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:169

function supplyOrderWithDaiPermit(uint amount, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {
        DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s);
        supplyOrder(amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:07.653078
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: redeemOrder(uint256)
PC address: 385
Estimated Gas Usage: 8635 - 116441
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1961
Offset: 2326
Offset: 2583
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:147

function redeemOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        token.hasMember(msg.sender);
        tranche.redeemOrder(msg.sender, amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:14.356715
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse()
PC address: 823
Estimated Gas Usage: 4632 - 75356
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 4515
Offset: 4882
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:154

function disburse() external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:16.264838
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse(uint256)
PC address: 910
Estimated Gas Usage: 4758 - 75577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5182
Offset: 5557
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:161

function disburse(uint endEpoch) external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender, endEpoch);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:18.332960
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 1044
Estimated Gas Usage: 6568 - 79482
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:141

function supplyOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        tranche.supplyOrder(msg.sender, amount);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.408111
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1711
Estimated Gas Usage: 3914 - 40177
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:170

DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:22.150374
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 2583
Estimated Gas Usage: 8608 - 114894
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:150

tranche.redeemOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:09.832348
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 3258
Estimated Gas Usage: 3875 - 40043
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:174

EIP2612PermitLike(tranche.currency()).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.232025
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse()
PC address: 4882
Estimated Gas Usage: 3600 - 39293
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:158

tranche.disburse(msg.sender)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:16.089106
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse(uint256)
PC address: 5557
Estimated Gas Usage: 3724 - 39512
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:165

tranche.disburse(msg.sender, endEpoch)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:18.083545
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 6269
Estimated Gas Usage: 3727 - 39515
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:143

tranche.supplyOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:19.574366
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 6826
Estimated Gas Usage: 2310 - 4011
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:178

EIP2612PermitLike(address(token)).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x4690D8F53E0d367f5b68f7F571e6eb4b72D39ACe.sol
Total states:53557
107.961776
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.849829
Transaction Length: 1
Severity: High
Contract: KOMP
Function name: register(string)
PC address: 2171
Estimated Gas Usage: 428 - 523
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4690D8F53E0d367f5b68f7F571e6eb4b72D39ACe.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.625705
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 5537
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4690D8F53E0d367f5b68f7F571e6eb4b72D39ACe.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.005576
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6860
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4690D8F53E0d367f5b68f7F571e6eb4b72D39ACe.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.974990
Transaction Length: 2
Severity: High
Contract: FreezeToken
Function name: increaseApproval(address,uint256)
PC address: 7549
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4690D8F53E0d367f5b68f7F571e6eb4b72D39ACe.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.027597
Transaction Length: 2
Severity: High
Contract: KOMP
Function name: increaseApproval(address,uint256)
PC address: 9131
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4690D8F53E0d367f5b68f7F571e6eb4b72D39ACe.sol:47

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x2992a06af9b5e156cd6574049d37ad8da52b9e28.sol
Total states:3446
6.398983
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xB0B3442b632175B0b7d9521291c51060722C4e8C.sol
Total states:1555
6.76223
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040079
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xB0B3442b632175B0b7d9521291c51060722C4e8C.sol:15

*
     * @dev Returns the amount of tokens 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.083119
Transaction Length: 0
Severity: High
Contract: VaultBaselinerenBTC
Function name: constructor
PC address: 206
Estimated Gas Usage: 6661 - 61225
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xB0B3442b632175B0b7d9521291c51060722C4e8C.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.099591
Transaction Length: 0
Severity: High
Contract: VaultBaseline
Function name: constructor
PC address: 224
Estimated Gas Usage: 6794 - 64036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xB0B3442b632175B0b7d9521291c51060722C4e8C.sol:5

nzeppelin/contr

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x7fb5a3990662608df45bcce313feec7219a728ae.sol
Total states:6339
9.981278
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.780224
Transaction Length: 1
Severity: Low
Contract: WinOrLose
Function name: getWinner(uint256)
PC address: 5680
Estimated Gas Usage: 713 - 808
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x7fb5a3990662608df45bcce313feec7219a728ae.sol:73

winners[index]

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:02.672351
Transaction Length: 1
Severity: Low
Contract: WinOrLose
Function name: activeBets(uint256)
PC address: 6479
Estimated Gas Usage: 745 - 840
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x7fb5a3990662608df45bcce313feec7219a728ae.sol:9

Bet[] public activeBets

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol
Total states:44690
798.873457
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.489438
Transaction Length: 1
Severity: High
Contract: TokenLogic
Function name: initialize(string,string,uint8)
PC address: 672
Estimated Gas Usage: 386 - 481
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:3

*/

// File: @openzeppelin/upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.590597
Transaction Length: 1
Severity: High
Contract: TokenLogic
Function name: initialize(string,string,uint8)
PC address: 823
Estimated Gas Usage: 728 - 3505
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:3

*/

// File: @openzeppelin/upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:22.842091
Transaction Length: 1
Severity: High
Contract: TokenLogic
Function name: symbol()
PC address: 1667
Estimated Gas Usage: 1443 - 2478
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:565

function symbol() public view returns (string memory) {
        return _symbol;
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:11:03.333475
Transaction Length: 1
Severity: High
Contract: TokenLogic
Function name: initialize(string,string,uint8,address)
PC address: 2440
Estimated Gas Usage: 450 - 545
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:3

*/

// File: @openzeppelin/upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:11:15.821950
Transaction Length: 1
Severity: High
Contract: TokenLogic
Function name: initialize(string,string,uint8,address)
PC address: 2591
Estimated Gas Usage: 792 - 3569
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:3

*/

// File: @openzeppelin/upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.669753
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3113
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:211

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.792922
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3293
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:211

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.824415
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 4078
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:211

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.681208
Transaction Length: 2
Severity: High
Contract: ERC20Capped
Function name: increaseAllowance(address,uint256)
PC address: 4629
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:211

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:23.987237
Transaction Length: 2
Severity: High
Contract: TokenLogic
Function name: increaseAllowance(address,uint256)
PC address: 6918
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:211

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xeb2988214f6cb6a4738e733adfe0582b1c6369b4.sol
Total states:423
0.974721
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol
Total states:44973
144.913494
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.067587
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 4827
Estimated Gas Usage: 2616 - 3661
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.643264
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4840
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:36

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.208855
Transaction Length: 2
Severity: High
Contract: Pausable
Function name: transferFrom(address,address,uint256)
PC address: 5561
Estimated Gas Usage: 2639 - 3684
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.450727
Transaction Length: 2
Severity: Low
Contract: Pausable
Function name: increaseApproval(address,uint256)
PC address: 5574
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:36

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.170617
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: transferFrom(address,address,uint256)
PC address: 6243
Estimated Gas Usage: 3145 - 4520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:30.409106
Transaction Length: 2
Severity: Low
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6256
Estimated Gas Usage: 1471 - 2276
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:36

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.901384
Transaction Length: 2
Severity: High
Contract: SFG
Function name: increaseApproval(address,uint256)
PC address: 7540
Estimated Gas Usage: 1483 - 2288
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:19.220280
Transaction Length: 2
Severity: Low
Contract: SFG
Function name: increaseApproval(address,uint256)
PC address: 7553
Estimated Gas Usage: 1493 - 2298
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:36

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x0f36f2da9f935a7802a4f1af43a3740a73219a9e.sol
Total states:1585
2.871422
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039568
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x0f36f2da9f935a7802a4f1af43a3740a73219a9e.sol:20

 @dev Provides information about the curren

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x1a6ec8eb73bf404112475895d6c8814ad5a7bd96.sol
Total states:31613
100.093866
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.550744
Transaction Length: 1
Severity: High
Contract: YFG
Function name: approveAndCall(address,uint256,bytes)
PC address: 1799
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1a6ec8eb73bf404112475895d6c8814ad5a7bd96.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:34.955811
Transaction Length: 2
Severity: High
Contract: YFG
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 4618
Estimated Gas Usage: 6015 - 43128
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1a6ec8eb73bf404112475895d6c8814ad5a7bd96.sol:134

nonces[holder]++

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:24.064181
Transaction Length: 1
Severity: Medium
Contract: YFG
Function name: approveAndCall(address,uint256,bytes)
PC address: 6543
Estimated Gas Usage: 8284 - 32451
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop3/0x1a6ec8eb73bf404112475895d6c8814ad5a7bd96.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), data)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.775838
Transaction Length: 1
Severity: High
Contract: YFG
Function name: transferFrom(address,address,uint256)
PC address: 7630
Estimated Gas Usage: 1671 - 2526
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1a6ec8eb73bf404112475895d6c8814ad5a7bd96.sol:52

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol
Total states:38367
691.0731
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.337428
Transaction Length: 1
Severity: High
Contract: BurnableToken
Function name: burn(uint256,bytes)
PC address: 423
Estimated Gas Usage: 389 - 484
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.238275
Transaction Length: 1
Severity: High
Contract: MintableToken
Function name: relayMint(address,uint256,bytes32,bytes)
PC address: 561
Estimated Gas Usage: 473 - 568
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.256902
Transaction Length: 1
Severity: High
Contract: WGOVM
Function name: relayMint(address,uint256,bytes32,bytes)
PC address: 769
Estimated Gas Usage: 495 - 590
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:46.428805
Transaction Length: 1
Severity: High
Contract: WGOVM
Function name: symbol()
PC address: 1652
Estimated Gas Usage: 1993 - 3123
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:336

string public symbol

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:49.531138
Transaction Length: 1
Severity: High
Contract: WGOVM
Function name: burn(uint256,bytes)
PC address: 2217
Estimated Gas Usage: 477 - 572
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.970829
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4104
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:47

_a + _b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:30.547536
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4117
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:48

assert(c >= _a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.384988
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 5709
Estimated Gas Usage: 1441 - 2246
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:47

_a + _b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:25.657773
Transaction Length: 2
Severity: Low
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 5722
Estimated Gas Usage: 1451 - 2256
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:48

assert(c >= _a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.558617
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 7155
Estimated Gas Usage: 933 - 1408
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:47

_a + _b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:03:23.710370
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 7168
Estimated Gas Usage: 943 - 1418
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:48

assert(c >= _a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.531513
Transaction Length: 2
Severity: High
Contract: WGOVM
Function name: increaseApproval(address,uint256)
PC address: 8952
Estimated Gas Usage: 1441 - 2246
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:47

_a + _b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:35.157271
Transaction Length: 2
Severity: Low
Contract: WGOVM
Function name: increaseApproval(address,uint256)
PC address: 8965
Estimated Gas Usage: 1451 - 2256
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:48

assert(c >= _a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x82c93333e4e295aa17a05b15092159597e823e8a.sol
Total states:1515
2.085257
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.417524
Transaction Length: 1
Severity: High
Contract: OSMedianizer
Function name: read()
PC address: 3862
Estimated Gas Usage: 3911 - 39278
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x82c93333e4e295aa17a05b15092159597e823e8a.sol:35

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x4ed251f47eb55f5dff577009d5d1d89d79b54f71.sol
Total states:27574
58.546505
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.049275
Transaction Length: 0
Severity: High
Contract: BTCBase
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4ed251f47eb55f5dff577009d5d1d89d79b54f71.sol:12

 IERC20 {
    /**
     * @dev Returns the a

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.340471
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4ed251f47eb55f5dff577009d5d1d89d79b54f71.sol:109

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.058687
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4ed251f47eb55f5dff577009d5d1d89d79b54f71.sol:109

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.826521
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 3847
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4ed251f47eb55f5dff577009d5d1d89d79b54f71.sol:109

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol
Total states:3429
5.877125
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xd89A909648e28e8352b63b78007f7fF144f434E9.sol
Total states:5259
56.587095
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.145914
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xd89A909648e28e8352b63b78007f7fF144f434E9.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.294878
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xd89A909648e28e8352b63b78007f7fF144f434E9.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.794188
Transaction Length: 1
Severity: High
Contract: DEFI_Insurance
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xd89A909648e28e8352b63b78007f7fF144f434E9.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.077636
Transaction Length: 1
Severity: High
Contract: DEFI_Insurance
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xd89A909648e28e8352b63b78007f7fF144f434E9.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol
Total states:20787
1998.20308
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.401767
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeSub(uint256,uint256)
PC address: 820
Estimated Gas Usage: 309 - 404
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:34.420463
Transaction Length: 1
Severity: Low
Contract: Math
Function name: safeDiv(uint256,uint256)
PC address: 959
Estimated Gas Usage: 324 - 419
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.098217
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 985
Estimated Gas Usage: 382 - 477
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.449415
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 1128
Estimated Gas Usage: 496 - 591
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:105

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:43.455056
Transaction Length: 1
Severity: High
Contract: Interest
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 1424
Estimated Gas Usage: 570 - 665
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:207

mul(x, x)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:36.417001
Transaction Length: 1
Severity: High
Contract: Interest
Function name: rpow(uint256,uint256,uint256)
PC address: 1443
Estimated Gas Usage: 557 - 652
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:209

add(xx, half)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:43.866071
Transaction Length: 1
Severity: High
Contract: Interest
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 1473
Estimated Gas Usage: 718 - 813
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:213

mul(z, x)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:12:47.883860
Transaction Length: 1
Severity: High
Contract: Interest
Function name: safeSub(uint256,uint256)
PC address: 1594
Estimated Gas Usage: 309 - 404
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:12:50.331292
Transaction Length: 1
Severity: Low
Contract: Interest
Function name: safeDiv(uint256,uint256)
PC address: 1733
Estimated Gas Usage: 324 - 419
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.492928
Transaction Length: 1
Severity: High
Contract: Interest
Function name: rdiv(uint256,uint256)
PC address: 1759
Estimated Gas Usage: 405 - 500
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.072946
Transaction Length: 1
Severity: High
Contract: Interest
Function name: rdiv(uint256,uint256)
PC address: 2100
Estimated Gas Usage: 519 - 614
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:105

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.670576
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 6103
Estimated Gas Usage: 593 - 688
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:207

mul(x, x)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:08:13.096632
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: rpow(uint256,uint256,uint256)
PC address: 6122
Estimated Gas Usage: 513 - 608
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:209

add(xx, half)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:11.451009
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 6152
Estimated Gas Usage: 741 - 836
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:213

mul(z, x)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:17:31.106806
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: safeSub(uint256,uint256)
PC address: 7439
Estimated Gas Usage: 399 - 494
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:17:33.369054
Transaction Length: 1
Severity: Low
Contract: Assessor
Function name: safeDiv(uint256,uint256)
PC address: 7824
Estimated Gas Usage: 369 - 464
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.936660
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: rdiv(uint256,uint256)
PC address: 8344
Estimated Gas Usage: 473 - 568
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:113

x * y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:17:34.590167
Transaction Length: 1
Severity: Low
Contract: Assessor
Function name: calcUpdateNAV()
PC address: 8638
Estimated Gas Usage: 1538 - 2244
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:371

navFeed.calcUpdateNAV()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.897502
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: rdiv(uint256,uint256)
PC address: 9406
Estimated Gas Usage: 587 - 682
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:105

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xf5ae40418A5D1DDCF5F8D667343b61b9020c2c1F.sol
Total states:222
0.142293
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xc0d8b58edca5628b121adb3f7011791716eeb2dc.sol
Total states:237
8.205996
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x6a2cccda97485d26dcfe48eb85cb8da376640be5.sol
Total states:9807
216.752584
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.565740
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a2cccda97485d26dcfe48eb85cb8da376640be5.sol:70

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:31.336440
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a2cccda97485d26dcfe48eb85cb8da376640be5.sol:54

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.674600
Transaction Length: 1
Severity: High
Contract: REWARD
Function name: approveAndCall(address,uint256,bytes)
PC address: 1648
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a2cccda97485d26dcfe48eb85cb8da376640be5.sol:3



*/



//pragma solidity ^0.4.24;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:37.378274
Transaction Length: 1
Severity: Medium
Contract: REWARD
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a2cccda97485d26dcfe48eb85cb8da376640be5.sol:416

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:45.400282
Transaction Length: 1
Severity: High
Contract: REWARD
Function name: safeMul(uint256,uint256)
PC address: 5262
Estimated Gas Usage: 394 - 489
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a2cccda97485d26dcfe48eb85cb8da376640be5.sol:70

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:43.350828
Transaction Length: 1
Severity: High
Contract: REWARD
Function name: safeAdd(uint256,uint256)
PC address: 5840
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a2cccda97485d26dcfe48eb85cb8da376640be5.sol:54

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x35205c430af01707d9b945b2af604ffab1aa817b.sol
Total states:5259
62.856997
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.939366
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x35205c430af01707d9b945b2af604ffab1aa817b.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:22.108644
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x35205c430af01707d9b945b2af604ffab1aa817b.sol:29

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.796438
Transaction Length: 1
Severity: High
Contract: TheMortalCompany
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x35205c430af01707d9b945b2af604ffab1aa817b.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:32.565552
Transaction Length: 1
Severity: High
Contract: TheMortalCompany
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x35205c430af01707d9b945b2af604ffab1aa817b.sol:29

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x5ffc29af13112a640e39e167a6b17a393b6d6abd.sol
Total states:18855
41.848736
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.732986
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x5ffc29af13112a640e39e167a6b17a393b6d6abd.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.667183
Transaction Length: 2
Severity: High
Contract: Cocoafinance
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x5ffc29af13112a640e39e167a6b17a393b6d6abd.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol
Total states:2763
69.06777
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:08.503673
Transaction Length: 1
Severity: Medium
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 692
Estimated Gas Usage: 24414 - 190577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2172
Offset: 2569
Offset: 3124
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:40

function lock(uint256 amount) public {
        
        uint256 flaps = amount*ratio;
        require(flaps <= flap.balanceOf(address(this)), "This contract has run out of flapp rewards, wait for replenishment or try a different contract");
        require(uni.transferFrom(msg.sender, address(this), amount), "You need to approve UNI tokens to be transferred to this contract before locking");
        locked[msg.sender] = locked[msg.sender] + amount;
        totalLocked = totalLocked + amount;
        time[msg.sender] = now;
        flap.transfer(msg.sender, flaps);
        emit Locked(msg.sender, amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:55.182192
Transaction Length: 2
Severity: Medium
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 692
Estimated Gas Usage: 24414 - 190577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2172
Offset: 2569
Offset: 3124
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:40

function lock(uint256 amount) public {
        
        uint256 flaps = amount*ratio;
        require(flaps <= flap.balanceOf(address(this)), "This contract has run out of flapp rewards, wait for replenishment or try a different contract");
        require(uni.transferFrom(msg.sender, address(this), amount), "You need to approve UNI tokens to be transferred to this contract before locking");
        locked[msg.sender] = locked[msg.sender] + amount;
        totalLocked = totalLocked + amount;
        time[msg.sender] = now;
        flap.transfer(msg.sender, flaps);
        emit Locked(msg.sender, amount);
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.443757
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: unlock()
PC address: 1035
Estimated Gas Usage: 1055 - 1340
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:54

time[msg.sender] + duration

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.391473
Transaction Length: 2
Severity: Low
Contract: LiquidityLock
Function name: unlock()
PC address: 1656
Estimated Gas Usage: 13915 - 55571
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:59

uni.transfer(msg.sender, amount)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.792352
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: getMyStatus()
PC address: 1966
Estimated Gas Usage: 1055 - 1340
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:68

time[user] + duration

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.945769
Transaction Length: 1
Severity: High
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 1980
Estimated Gas Usage: 2811 - 37798
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:42

amount*ratio

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.183324
Transaction Length: 1
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2569
Estimated Gas Usage: 4152 - 40035
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:44

uni.transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:25.698907
Transaction Length: 2
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2569
Estimated Gas Usage: 4152 - 40035
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:44

uni.transferFrom(msg.sender, address(this), amount)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.226333
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2778
Estimated Gas Usage: 5578 - 76027
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:45

locked[msg.sender] + amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:36.208716
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2850
Estimated Gas Usage: 10998 - 101447
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:46

totalLocked + amount

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:08.019493
Transaction Length: 1
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 3124
Estimated Gas Usage: 22401 - 153841
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:48

flap.transfer(msg.sender, flaps)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:54.624965
Transaction Length: 2
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 3124
Estimated Gas Usage: 22401 - 153841
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:48

flap.transfer(msg.sender, flaps)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol
Total states:1007
129.475992
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.813318
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: external_call(address,uint256,bytes)
PC address: 319
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:3

*/

// File: contracts/IMultisigCar

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:21.828356
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 542
Estimated Gas Usage: 2718 - 38738
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:43

function parties() public view returns (address[] memory) {
        IMultisigCarrier multisigCarrier = IMultisigCarrier(_carrier);
        return multisigCarrier.vaultParties(address(this));
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.030229
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1181
Estimated Gas Usage: 2252 - 37241
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:5

racts/IMultisig

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.894876
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1184
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:3



// File: contracts/IMultisigCarrier.sol



--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:31.008619
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1205
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:45

multisigCarrier.vaultParties(address(this))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.051664
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1230
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:2


*/

// File: contrac

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:34.190748
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1236
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:7

ma solidity ^0

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:41.364574
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1256
Estimated Gas Usage: 2403 - 37578
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:16

ies(
        address 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:45.290041
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1258
Estimated Gas Usage: 2403 - 37578
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:16

    function vaultParties(
        address v

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:55.803869
Transaction Length: 1
Severity: Low
Contract: MultisigVault
Function name: approve(address,address,uint256)
PC address: 1601
Estimated Gas Usage: 1709 - 2795
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:58

multisigCarrier.approveFrom(msg.sender, destination, currencyAddress, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xb843909bb6764e137c1c963e3c80a850918a24c7.sol
Total states:17591
29.141484
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047174
Transaction Length: 0
Severity: High
Contract: Token
Function name: constructor
PC address: 98
Estimated Gas Usage: 233 - 3006
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xb843909bb6764e137c1c963e3c80a850918a24c7.sol:12

 ERC20Interface {
    /**
     * @dev Retur

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.988825
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1574
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xb843909bb6764e137c1c963e3c80a850918a24c7.sol:112

_balances[_to] += _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:21.151066
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1650
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xb843909bb6764e137c1c963e3c80a850918a24c7.sol:113

_balances[_from] -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xD4dc14409aC0beb743597Be70f062eACfeBC8bC4.sol
Total states:1947
8.409537
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.010121
Transaction Length: 1
Severity: Low
Contract: BaseUpgradeabilityProxy
Function name: fallback
PC address: 97
Estimated Gas Usage: 557 - 2956
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: ../../contracts/noloop/noloop3/0xD4dc14409aC0beb743597Be70f062eACfeBC8bC4.sol:45

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.353208
Transaction Length: 1
Severity: High
Contract: BaseAdminUpgradeabilityProxy
Function name: upgradeToAndCall(address,bytes)
PC address: 309
Estimated Gas Usage: 327 - 422
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xD4dc14409aC0beb743597Be70f062eACfeBC8bC4.sol:3

*/

// File: @openzeppelin/upgrades

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:07.178768
Transaction Length: 1
Severity: Low
Contract: BaseAdminUpgradeabilityProxy
Function name: fallback
PC address: 1699
Estimated Gas Usage: 1229 - 3628
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: ../../contracts/noloop/noloop3/0xD4dc14409aC0beb743597Be70f062eACfeBC8bC4.sol:45

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x58559349ea6cc733cf91c2374216e38a028de65b.sol
Total states:14894
33.079483
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.073661
Transaction Length: 0
Severity: Medium
Contract: CBP
Function name: constructor
PC address: 209
Estimated Gas Usage: 17133 - 78876
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop3/0x58559349ea6cc733cf91c2374216e38a028de65b.sol:501

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.818191
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3255
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x58559349ea6cc733cf91c2374216e38a028de65b.sol:292

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.057948
Transaction Length: 2
Severity: High
Contract: CBP
Function name: increaseAllowance(address,uint256)
PC address: 6492
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x58559349ea6cc733cf91c2374216e38a028de65b.sol:292

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xa520b4fde9e9501be06231eb72f3cd5b3a10a694.sol
Total states:10338
22.448013
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.037997
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xa520b4fde9e9501be06231eb72f3cd5b3a10a694.sol:8

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.791353
Transaction Length: 2
Severity: High
Contract: PaperToken
Function name: increaseAllowance(address,uint256)
PC address: 6959
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xa520b4fde9e9501be06231eb72f3cd5b3a10a694.sol:148

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x44cAef2f3917F1c337Fc2f5295C71bec26e4Df30.sol
Total states:10360
106.476494
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.934723
Transaction Length: 1
Severity: High
Contract: YFUGovernance
Function name: propose(address,string)
PC address: 3296
Estimated Gas Usage: 441 - 536
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x44cAef2f3917F1c337Fc2f5295C71bec26e4Df30.sol:3

*/

/*
   ____            __   __  

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xd48a38bad734a7c491e98367321f7abe79bb19a2.sol
Total states:618
1.136635
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xeb5fe112ea9586362d87debc8f10b1cfbdd2fd3c.sol
Total states:3399
5.760267
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x2b324bd03d824fd97c56ba412e2bb0cded70efe7.sol
Total states:9142
22.838916
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:00.069900
Transaction Length: 1
Severity: High
Contract: KPT
Function name: name()
PC address: 1204
Estimated Gas Usage: 1130 - 1508
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b324bd03d824fd97c56ba412e2bb0cded70efe7.sol:24

string public name

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.621714
Transaction Length: 2
Severity: High
Contract: KPT
Function name: transferFrom(address,address,uint256)
PC address: 1828
Estimated Gas Usage: 2014 - 2869
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b324bd03d824fd97c56ba412e2bb0cded70efe7.sol:47

balances[_to] += _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:15.664120
Transaction Length: 2
Severity: High
Contract: KPT
Function name: transferFrom(address,address,uint256)
PC address: 1905
Estimated Gas Usage: 7537 - 28582
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b324bd03d824fd97c56ba412e2bb0cded70efe7.sol:48

balances[_from] -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol
Total states:7323
6586.072837
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:15:21.618052
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 294
Estimated Gas Usage: 2021 - 2727
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:59

tokenContract.decimals()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:58:16.134787
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 294
Estimated Gas Usage: 2021 - 2727
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:59

tokenContract.decimals()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:17:20.863513
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 682
Estimated Gas Usage: 10496 - 67151
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:64

tokenContract.transfer(msg.sender, numberOfTokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 1:01:05.697974
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 682
Estimated Gas Usage: 10496 - 67151
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:64

tokenContract.transfer(msg.sender, numberOfTokens)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:11:41.586967
Transaction Length: 1
Severity: Medium
Contract: WDXSale
Function name: fallback()
PC address: 741
Estimated Gas Usage: 11278 - 102119
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 294
Offset: 682
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:14

contract WDXSale {
    IERC20Token public tokenContract;  // the token being sold
    uint256 public price;              // the price, in wei, per token
    address owner;

    uint256 public tokensSold;

    event Sold(address buyer, uint256 amount);

    constructor(IERC20Token _tokenContract, uint256 _price) public {
        owner = msg.sender;
        tokenContract = _tokenContract;
        price = _price;
    }

    // Guards against integer overflows
    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        } else {
            uint256 c = a * b;
            assert(c / a == b);
            return c;
        }
    }
    
    function safeDivision(uint256 a, uint256 b) internal pure returns(uint256) {
        assert(b > 0);
        uint256 c = a / b;
        assert(a == b * c + a % b);
        return c;
    }

    function buyTokens(uint256 numberOfTokens) public payable {
        require(msg.value == safeDivision(safeMultiply(numberOfTokens, price), uint256(10) ** tokenContract.decimals()));
        require(tokenContract.balanceOf(address(this)) >= numberOfTokens);


        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
    }
    
    function() external payable {
        uint256 numberOfTokens = safeMultiply(safeDivision(msg.value, price), uint256(10) ** tokenContract.decimals());

        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
    }
    
    
    function endSale() public {
        require(msg.sender == owner);

        // Send unsold tokens to the owner.
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        require(tokenContract.transfer(recipient, tokenContract.balanceOf(address(this))));

        recipient.transfer(address(this).balance);
    }
    
    function getEther() public {
        require(msg.sender == owner);
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    function updateWDXPrice(uint256 _price) public {
        require(msg.sender == owner);
        price = _price;
    }
}

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 1:12:37.698299
Transaction Length: 2
Severity: Medium
Contract: WDXSale
Function name: fallback()
PC address: 741
Estimated Gas Usage: 11178 - 102019
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 294
Offset: 682
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:14

contract WDXSale {
    IERC20Token public tokenContract;  // the token being sold
    uint256 public price;              // the price, in wei, per token
    address owner;

    uint256 public tokensSold;

    event Sold(address buyer, uint256 amount);

    constructor(IERC20Token _tokenContract, uint256 _price) public {
        owner = msg.sender;
        tokenContract = _tokenContract;
        price = _price;
    }

    // Guards against integer overflows
    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        } else {
            uint256 c = a * b;
            assert(c / a == b);
            return c;
        }
    }
    
    function safeDivision(uint256 a, uint256 b) internal pure returns(uint256) {
        assert(b > 0);
        uint256 c = a / b;
        assert(a == b * c + a % b);
        return c;
    }

    function buyTokens(uint256 numberOfTokens) public payable {
        require(msg.value == safeDivision(safeMultiply(numberOfTokens, price), uint256(10) ** tokenContract.decimals()));
        require(tokenContract.balanceOf(address(this)) >= numberOfTokens);


        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
    }
    
    function() external payable {
        uint256 numberOfTokens = safeMultiply(safeDivision(msg.value, price), uint256(10) ** tokenContract.decimals());

        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
    }
    
    
    function endSale() public {
        require(msg.sender == owner);

        // Send unsold tokens to the owner.
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        require(tokenContract.transfer(recipient, tokenContract.balanceOf(address(this))));

        recipient.transfer(address(this).balance);
    }
    
    function getEther() public {
        require(msg.sender == owner);
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    function updateWDXPrice(uint256 _price) public {
        require(msg.sender == owner);
        price = _price;
    }
}

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:19:02.240061
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 1078
Estimated Gas Usage: 635 - 730
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:41

assert(b > 0)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:45:53.811365
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1078
Estimated Gas Usage: 2796 - 38018
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:41

assert(b > 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:43.299451
Transaction Length: 1
Severity: High
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1155
Estimated Gas Usage: 692 - 787
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:34

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:06:19.122618
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1178
Estimated Gas Usage: 730 - 825
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:35

assert(c / a == b)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:06:21.086325
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1341
Estimated Gas Usage: 1930 - 2636
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:48

tokenContract.decimals()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:45:22.639342
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1341
Estimated Gas Usage: 1930 - 2636
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:48

tokenContract.decimals()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xf107De92785f152683b092E8D67bC8b145510A26.sol
Total states:1219
3.282277
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.050819
Transaction Length: 0
Severity: High
Contract: RebasedSwap
Function name: constructor
PC address: 323
Estimated Gas Usage: 16679 - 80442
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xf107De92785f152683b092E8D67bC8b145510A26.sol:81

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.064128
Transaction Length: 1
Severity: High
Contract: RebasedSwap
Function name: getReb2OutputAmount(uint256)
PC address: 2486
Estimated Gas Usage: 2460 - 37352
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xf107De92785f152683b092E8D67bC8b145510A26.sol:50

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x62fe4d7c2f851f5d49ec756bbbb8b051f27086e0.sol
Total states:8483
32.38911
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.792122
Transaction Length: 2
Severity: High
Contract: YFlexFinance
Function name: increaseApproval(address,uint256)
PC address: 4860
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x62fe4d7c2f851f5d49ec756bbbb8b051f27086e0.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:28.293453
Transaction Length: 2
Severity: Low
Contract: YFlexFinance
Function name: increaseApproval(address,uint256)
PC address: 4873
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x62fe4d7c2f851f5d49ec756bbbb8b051f27086e0.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x9b7a66485d73735d78980974702286e5a11b953f.sol
Total states:1945
21.912333
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:12.130457
Transaction Length: 1
Severity: Medium
Contract: TreasuryVaultRecom
Function name: getExpectedReturn(address,address,uint256)
PC address: 837
Estimated Gas Usage: 4445 - 74936
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 4461
Offset: 4786
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x9b7a66485d73735d78980974702286e5a11b953f.sol:207

function getExpectedReturn(address _from, address _to, uint parts) external view returns (uint expected) {
        uint _balance = IERC20(_from).balanceOf(address(this));
        (expected,) = OneSplitAudit(onesplit).getExpectedReturn(_from, _to, _balance, parts, 0);
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.271071
Transaction Length: 1
Severity: High
Contract: TreasuryVaultRecom
Function name: getExpectedReturn(address,address,uint256)
PC address: 4823
Estimated Gas Usage: 4153 - 74084
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9b7a66485d73735d78980974702286e5a11b953f.sol:5

se-Identifier: 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.881081
Transaction Length: 1
Severity: High
Contract: TreasuryVaultRecom
Function name: getExpectedReturn(address,address,uint256)
PC address: 4826
Estimated Gas Usage: 4273 - 74390
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9b7a66485d73735d78980974702286e5a11b953f.sol:3



// SPDX-License-Identifier: MIT

//pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.529082
Transaction Length: 1
Severity: High
Contract: TreasuryVaultRecom
Function name: getExpectedReturn(address,address,uint256)
PC address: 4847
Estimated Gas Usage: 4273 - 74390
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9b7a66485d73735d78980974702286e5a11b953f.sol:209

OneSplitAudit(onesplit).getExpectedReturn(_from, _to, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.529947
Transaction Length: 1
Severity: High
Contract: TreasuryVaultRecom
Function name: getExpectedReturn(address,address,uint256)
PC address: 4908
Estimated Gas Usage: 4331 - 74541
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9b7a66485d73735d78980974702286e5a11b953f.sol:12

6);
    function tran

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.803300
Transaction Length: 1
Severity: High
Contract: TreasuryVaultRecom
Function name: getExpectedReturn(address,address,uint256)
PC address: 4910
Estimated Gas Usage: 4331 - 74541
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9b7a66485d73735d78980974702286e5a11b953f.sol:12

l view returns (uint256);
    function trans

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xd977212e9b7464e31c702fBaE92433713509F1F3.sol
Total states:851
5.502686
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.609026
Transaction Length: 1
Severity: Low
Contract: MegaPoker
Function name: pokeTemp()
PC address: 1134
Estimated Gas Usage: 2586 - 37429
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xd977212e9b7464e31c702fBaE92433713509F1F3.sol:106

eth.poke()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.096016
Transaction Length: 1
Severity: Low
Contract: MegaPoker
Function name: pokeTemp()
PC address: 1461
Estimated Gas Usage: 5749 - 109340
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xd977212e9b7464e31c702fBaE92433713509F1F3.sol:108

bat.poke()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x4fbb8b1876858260cb0ea5e21a83c48de6f6cac0.sol
Total states:1172
1.39787
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x56aCd2E672264f1118EAE55364E31F6DE080d9A8.sol
Total states:481
4.210201
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xdcc9598f346517d6ddad903f703d2679fcb9f1fb.sol
Total states:398
1.109383
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol
Total states:40181
2121.705301
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.152723
Transaction Length: 1
Severity: Medium
Contract: Hodler
Function name: release(uint256)
PC address: 215
Estimated Gas Usage: 12859 - 104203
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1177
Offset: 3823
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:696

function release(uint256 _id) external {
    require(_id > 0);

    // user
    address _user = msg.sender;

    // get item
    Item storage item = items[_user][_id];

    // check if it exists
    require(item.id == _id);
    // check if its not already fulfilled
    require(!item.fulfilled);
    // check time
    require(block.timestamp >= item.releaseTime);

    // check if there is enough tokens
    uint256 balance = recurly.balanceOf(address(this));
    require(balance >= item.value);

    // update state
    item.fulfilled = true;

    // transfer tokens to beneficiary
    recurly.safeTransfer(item.beneficiary, item.value);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.315285
Transaction Length: 2
Severity: Medium
Contract: Hodler
Function name: release(uint256)
PC address: 215
Estimated Gas Usage: 12859 - 104203
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1177
Offset: 3823
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:696

function release(uint256 _id) external {
    require(_id > 0);

    // user
    address _user = msg.sender;

    // get item
    Item storage item = items[_user][_id];

    // check if it exists
    require(item.id == _id);
    // check if its not already fulfilled
    require(!item.fulfilled);
    // check time
    require(block.timestamp >= item.releaseTime);

    // check if there is enough tokens
    uint256 balance = recurly.balanceOf(address(this));
    require(balance >= item.value);

    // update state
    item.fulfilled = true;

    // transfer tokens to beneficiary
    recurly.safeTransfer(item.beneficiary, item.value);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.152323
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: checkRole(address,string)
PC address: 236
Estimated Gas Usage: 329 - 424
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:07.516156
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: hasRole(address,string)
PC address: 455
Estimated Gas Usage: 351 - 446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.160882
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: checkRole(address,string)
PC address: 671
Estimated Gas Usage: 419 - 514
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:59.672798
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: adminRemoveRole(address,string)
PC address: 698
Estimated Gas Usage: 373 - 468
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.222254
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: checkRole(address,string)
PC address: 760
Estimated Gas Usage: 441 - 536
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:32.010767
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: adminAddRole(address,string)
PC address: 917
Estimated Gas Usage: 395 - 490
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:55.967843
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: hasRole(address,string)
PC address: 920
Estimated Gas Usage: 374 - 469
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:52.030589
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: hasRole(address,string)
PC address: 1009
Estimated Gas Usage: 485 - 580
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:07:32.893984
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: ROLE_ADMIN()
PC address: 1102
Estimated Gas Usage: 730 - 2424
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:88

string public constant ROLE_ADMIN = "admin"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:18.772255
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: adminRemoveRole(address,string)
PC address: 1671
Estimated Gas Usage: 418 - 513
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:47.765621
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: adminRemoveRole(address,string)
PC address: 1794
Estimated Gas Usage: 396 - 491
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:07:08.115353
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: symbol()
PC address: 1856
Estimated Gas Usage: 528 - 1658
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:593

string public constant symbol = "CLERK"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:54.362631
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: ROLE_TRANSFER()
PC address: 1979
Estimated Gas Usage: 506 - 1636
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:563

string constant public ROLE_TRANSFER = "transfer"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:09:20.640124
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: adminAddRole(address,string)
PC address: 2123
Estimated Gas Usage: 373 - 468
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:07:26.309726
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: symbol()
PC address: 2184
Estimated Gas Usage: 550 - 1680
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:561

string public constant symbol = "RCR"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:10:36.600143
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: adminAddRole(address,string)
PC address: 2553
Estimated Gas Usage: 395 - 490
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.515999
Transaction Length: 1
Severity: High
Contract: Hodler
Function name: hodl(uint256,uint256,uint256)
PC address: 3957
Estimated Gas Usage: 1319 - 1794
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:247

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:12.169636
Transaction Length: 1
Severity: Low
Contract: Hodler
Function name: hodl(uint256,uint256,uint256)
PC address: 3970
Estimated Gas Usage: 1351 - 1826
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:248

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.448262
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4109
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:247

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:40.755234
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4122
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:248

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.941462
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 5581
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:247

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.874546
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 5594
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:248

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x81CdB7EB973489526370141A7E3564211dC37Ad8.sol
Total states:5737
13.417384
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x4e1bb8f9414b96d308e5586f4c9fb60ab2987a36.sol
Total states:18192
42.811793
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.742777
Transaction Length: 2
Severity: High
Contract: Syntax_API
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4e1bb8f9414b96d308e5586f4c9fb60ab2987a36.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.268092
Transaction Length: 2
Severity: High
Contract: Syntax_API
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4e1bb8f9414b96d308e5586f4c9fb60ab2987a36.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xF9f6d74a9f5db5000cB3c067C26414403781eab6.sol
Total states:1389
2.237119
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x75c476d32a4c0cc8d68206d937b3e47eb4c3bead.sol
Total states:60
0.868729
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol
Total states:46840
107.473787
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048039
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.936533
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.065606
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.996642
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.936905
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.992336
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.052933
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.187542
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.081654
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.159182
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.193641
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.458447
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.157375
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.690901
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.882001
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.044652
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.990673
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.108051
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.131240
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xcb1b5582c988b099f641ff59c8add0737c8e9b59.sol
Total states:955
1.771887
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041160
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xcb1b5582c988b099f641ff59c8add0737c8e9b59.sol:16

ction _msgSender() internal view  returns (

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x843593e182e8b2c0FBc8e25D99A448D5E614D44d.sol
Total states:9841
19.074573
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039611
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x843593e182e8b2c0FBc8e25D99A448D5E614D44d.sol:12

ncluding the
 * sender of the transaction a

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.428832
Transaction Length: 2
Severity: High
Contract: NovaToken2
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x843593e182e8b2c0FBc8e25D99A448D5E614D44d.sol:141

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xba4e16c9ae5995ff55135469d4aa1a75fdd933b9.sol
Total states:732
0.6497
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.413969
Transaction Length: 1
Severity: Medium
Contract: yyCRVPrice
Function name: getVirtulPrice()
PC address: 254
Estimated Gas Usage: 4431 - 74401
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 496
Offset: 774
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xba4e16c9ae5995ff55135469d4aa1a75fdd933b9.sol:30

function getVirtulPrice() public view returns(uint256){
    return getyyCRVPrice() * getyCRVPrice() /1e18;
  }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x8b69a75774ac4ea498b540d5b23a003631bc8282.sol
Total states:3955
7.94175
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x73a76110907fe38772b6ae9f972a091a293b86b9.sol
Total states:9807
193.99933
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.040063
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x73a76110907fe38772b6ae9f972a091a293b86b9.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.578941
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x73a76110907fe38772b6ae9f972a091a293b86b9.sol:25

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.464715
Transaction Length: 1
Severity: High
Contract: CROWNFINANCE
Function name: approveAndCall(address,uint256,bytes)
PC address: 1648
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x73a76110907fe38772b6ae9f972a091a293b86b9.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:29.923638
Transaction Length: 1
Severity: Medium
Contract: CROWNFINANCE
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop3/0x73a76110907fe38772b6ae9f972a091a293b86b9.sol:159

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:38.755350
Transaction Length: 1
Severity: High
Contract: CROWNFINANCE
Function name: safeMul(uint256,uint256)
PC address: 5262
Estimated Gas Usage: 394 - 489
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x73a76110907fe38772b6ae9f972a091a293b86b9.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:25.798674
Transaction Length: 1
Severity: High
Contract: CROWNFINANCE
Function name: safeAdd(uint256,uint256)
PC address: 5840
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x73a76110907fe38772b6ae9f972a091a293b86b9.sol:25

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x4a2412844f856cdff5fdf6909ead44d3de6ada98.sol
Total states:3451
5.685667
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x6a4457b6c88ac5c34397f0532004c0cf2739f120.sol
Total states:10492
42.32205
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.508512
Transaction Length: 1
Severity: High
Contract: yfSCAN
Function name: transfer(address,uint256)
PC address: 6338
Estimated Gas Usage: 834 - 929
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a4457b6c88ac5c34397f0532004c0cf2739f120.sol:35

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.344616
Transaction Length: 2
Severity: High
Contract: yfSCAN
Function name: increaseAllowance(address,uint256)
PC address: 6458
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a4457b6c88ac5c34397f0532004c0cf2739f120.sol:13

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x65369a3793ce9fa42a77395aa3b2f0b3dbd9ffe8.sol
Total states:1985
3.641109
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.038097
Transaction Length: 0
Severity: High
Contract: KOR2pRERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x65369a3793ce9fa42a77395aa3b2f0b3dbd9ffe8.sol:26

_______________________$_____$ 

     __$__

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x7f0c8B125040f707441cad9e5eD8a8408673b455.sol
Total states:5259
68.293041
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.490188
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7f0c8B125040f707441cad9e5eD8a8408673b455.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:31.426459
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7f0c8B125040f707441cad9e5eD8a8408673b455.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.698587
Transaction Length: 1
Severity: High
Contract: Ducks
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7f0c8B125040f707441cad9e5eD8a8408673b455.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.528636
Transaction Length: 1
Severity: High
Contract: Ducks
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7f0c8B125040f707441cad9e5eD8a8408673b455.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x81f6E65493f430D520669E2139F96036102C5331.sol
Total states:3873
7.408524
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x7C30B4c1b87bAE4828eDb0015bAd5Ff74B3ceB36.sol
Total states:15974
35.916205
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.037637
Transaction Length: 0
Severity: High
Contract: ERC20Detailed
Function name: constructor
PC address: 106
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7C30B4c1b87bAE4828eDb0015bAd5Ff74B3ceB36.sol:12

ile these are generally available
 * via ms

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.439404
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4843
Estimated Gas Usage: 1082 - 1557
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7C30B4c1b87bAE4828eDb0015bAd5Ff74B3ceB36.sol:66

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.411717
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 5140
Estimated Gas Usage: 1082 - 1557
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7C30B4c1b87bAE4828eDb0015bAd5Ff74B3ceB36.sol:66

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xD7A28808D3Af84255cAa914F5736563151A7E2D3.sol
Total states:2175
2.707503
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.287310
Transaction Length: 1
Severity: Low
Contract: UpgradeabilityProxy
Function name: fallback
PC address: 274
Estimated Gas Usage: 681 - 3503
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy))
--------------------
In file: ../../contracts/noloop/noloop3/0xD7A28808D3Af84255cAa914F5736563151A7E2D3.sol:261

delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xb43aa2c44b99bad346143fb44e264213d412b6c2.sol
Total states:808
12.888992
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.285959
Transaction Length: 0
Severity: Medium
Contract: SNXRewardUniLPStrategy
Function name: constructor
PC address: 1588
Estimated Gas Usage: 88576 - 467866
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 883
Offset: 1141
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xb43aa2c44b99bad346143fb44e264213d412b6c2.sol:1067

contract SNXRewardUniLPStrategy is IStrategy, Controllable, RewardTokenProfitNotifier {

  using SafeMath for uint256;
  using SafeERC20 for IERC20;

  ERC20Detailed public underlying; // underlying here would be Uniswap's LP Token / Pair token
  address public uniLPComponentToken0;
  address public uniLPComponentToken1;

  address public vault;
  bool pausedInvesting = false; // When this flag is true, the strategy will not be able to invest. But users should be able to withdraw.

  SNXRewardInterface public rewardPool;
  address public rewardToken; // unfortunately, the interface is not unified for rewardToken for all the variants

  // a flag for disabling selling for simplified emergency exit
  bool public sell = true;
  uint256 public sellFloor = 10e18;

  // UniswapV2Router02
  // https://uniswap.org/docs/v2/smart-contracts/router02/
  // https://etherscan.io/address/0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D
  address public constant uniswapRouterV2 = address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);

  mapping (address => address[]) public uniswapRoutes;

  // These tokens cannot be claimed by the controller
  mapping (address => bool) public unsalvagableTokens;

  event ProfitsNotCollected();

  modifier restricted() {
    require(msg.sender == vault || msg.sender == controller()
      || msg.sender == governance(),
      "The sender has to be the controller, governance, or vault");
    _;
  }

  // This is only used in `investAllUnderlying()`
  // The user can still freely withdraw from the strategy
  modifier onlyNotPausedInvesting() {
    require(!pausedInvesting, "Action blocked as the strategy is in emergency state");
    _;
  }

  constructor(
    address _storage,
    address _underlying,
    address _vault,
    address _rewardPool,
    address _rewardToken
  )
  RewardTokenProfitNotifier(_storage, _rewardToken)
  public {
    underlying = ERC20Detailed(_underlying);
    vault = _vault;
    uniLPComponentToken0 = IUniswapV2Pair(address(underlying)).token0();
    uniLPComponentToken1 = IUniswapV2Pair(address(underlying)).token1();
    rewardPool = SNXRewardInterface(_rewardPool);
    rewardToken = _rewardToken;

    unsalvagableTokens[_underlying] = true;
    unsalvagableTokens[_rewardToken] = true;
  }

  function depositArbCheck() public view returns(bool) {
    return true;
  }

  /*
  *   In case there are some issues discovered about the pool or underlying asset
  *   Governance can exit the pool properly
  *   The function is only used for emergency to exit the pool
  */
  function emergencyExit() public onlyGovernance {
    rewardPool.exit();
    pausedInvesting = true;
  }

  /*
  *   Resumes the ability to invest into the underlying reward pools
  */

  function continueInvesting() public onlyGovernance {
    pausedInvesting = false;
  }


  function setLiquidationPaths(address [] memory _uniswapRouteToToken0, address [] memory _uniswapRouteToToken1) public onlyGovernance {
    uniswapRoutes[uniLPComponentToken0] = _uniswapRouteToToken0;
    uniswapRoutes[uniLPComponentToken1] = _uniswapRouteToToken1;
  }

  // We assume that all the tradings can be done on Uniswap
  function _liquidateReward() internal {
    uint256 rewardBalance = IERC20(rewardToken).balanceOf(address(this));
    if (!sell || rewardBalance < sellFloor) {
      // Profits can be disabled for possible simplified and rapid exit
      emit ProfitsNotCollected();
      return;
    }

    notifyProfitInRewardToken(rewardBalance);
    uint256 remainingRewardBalance = IERC20(rewardToken).balanceOf(address(this));

    if (remainingRewardBalance > 0 // we have tokens to swap
      && uniswapRoutes[address(uniLPComponentToken0)].length > 1 // and we have a route to do the swap
      && uniswapRoutes[address(uniLPComponentToken1)].length > 1 // and we have a route to do the swap
    ) {

      // allow Uniswap to sell our reward
      uint256 amountOutMin = 1;

      IERC20(rewardToken).safeApprove(uniswapRouterV2, 0);
      IERC20(rewardToken).safeApprove(uniswapRouterV2, remainingRewardBalance);

      // sell Uni to token1
      // we can accept 1 as minimum because this is called only by a trusted role

      IUniswapV2Router02(uniswapRouterV2).swapExactTokensForTokens(
        remainingRewardBalance/2,
        amountOutMin,
        uniswapRoutes[address(uniLPComponentToken0)],
        address(this),
        block.timestamp
      );
      uint256 token0Amount = IERC20(uniLPComponentToken0).balanceOf(address(this));
      // sell Uni to token2
      // we can accept 1 as minimum because this is called only by a trusted role
      remainingRewardBalance = IERC20(rewardToken).balanceOf(address(this));
      
      IUniswapV2Router02(uniswapRouterV2).swapExactTokensForTokens(
        remainingRewardBalance,
        amountOutMin,
        uniswapRoutes[uniLPComponentToken1],
        address(this),
        block.timestamp
      );
      uint256 token1Amount = IERC20(uniLPComponentToken1).balanceOf(address(this));

      // provide token1 and token2 to UniLPToken

      IERC20(uniLPComponentToken0).safeApprove(uniswapRouterV2, 0);
      IERC20(uniLPComponentToken0).safeApprove(uniswapRouterV2, token0Amount);

      IERC20(uniLPComponentToken1).safeApprove(uniswapRouterV2, 0);
      IERC20(uniLPComponentToken1).safeApprove(uniswapRouterV2, token1Amount);

      uint256 liquidity;
      (,,liquidity) = IUniswapV2Router02(uniswapRouterV2).addLiquidity(
        uniLPComponentToken0,
        uniLPComponentToken1,
        token0Amount, 
        token1Amount,
        1,  // we are willing to take whatever the pair gives us
        1,  
        address(this),
        block.timestamp
      );
    }
  }

  /*
  *   Stakes everything the strategy holds into the reward pool
  */
  function investAllUnderlying() internal onlyNotPausedInvesting {
    // this check is needed, because most of the SNX reward pools will revert if
    // you try to stake(0).
    if(underlying.balanceOf(address(this)) > 0) {
      underlying.approve(address(rewardPool), underlying.balanceOf(address(this)));
      rewardPool.stake(underlying.balanceOf(address(this)));
    }
  }

  /*
  *   Withdraws all the asset to the vault
  */
  function withdrawAllToVault() public restricted {
    if (address(rewardPool) != address(0)) {
      rewardPool.exit();
    }
    _liquidateReward();
    IERC20(underlying).safeTransfer(vault, underlying.balanceOf(address(this)));
  }

  /*
  *   Withdraws all the asset to the vault
  */
  function withdrawToVault(uint256 amount) public restricted {
    // Typically there wouldn't be any amount here
    // however, it is possible because of the emergencyExit
    if(amount > underlying.balanceOf(address(this))){
      // While we have the check above, we still using SafeMath below
      // for the peace of mind (in case something gets changed in between)
      uint256 needToWithdraw = amount.sub(underlying.balanceOf(address(this)));
      rewardPool.withdraw(Math.min(rewardPool.balanceOf(address(this)), needToWithdraw));
    }

    IERC20(underlying).safeTransfer(vault, amount);
  }

  /*
  *   Note that we currently do not have a mechanism here to include the
  *   amount of reward that is accrued.
  */
  function investedUnderlyingBalance() external view returns (uint256) {
    if (address(rewardPool) == address(0)) {
      return underlying.balanceOf(address(this));
    }
    // Adding the amount locked in the reward pool and the amount that is somehow in this contract
    // both are in the units of "underlying"
    // The second part is needed because there is the emergency exit mechanism
    // which would break the assumption that all the funds are always inside of the reward pool
    return rewardPool.balanceOf(address(this)).add(underlying.balanceOf(address(this)));
  }

  /*
  *   Governance or Controller can claim coins that are somehow transferred into the contract
  *   Note that they cannot come in take away coins that are used and defined in the strategy itself
  *   Those are protected by the "unsalvagableTokens". To check, see where those are being flagged.
  */
  function salvage(address recipient, address token, uint256 amount) external onlyControllerOrGovernance {
     // To make sure that governance cannot come in and take away the coins
    require(!unsalvagableTokens[token], "token is defined as not salvagable");
    IERC20(token).safeTransfer(recipient, amount);
  }

  /*
  *   Get the reward, sell it in exchange for underlying, invest what you got.
  *   It's not much, but it's honest work.
  *
  *   Note that although `onlyNotPausedInvesting` is not added here,
  *   calling `investAllUnderlying()` affectively blocks the usage of `doHardWork`
  *   when the investing is being paused by governance.
  */
  function doHardWork() external onlyNotPausedInvesting restricted {
    rewardPool.getReward();
    _liquidateReward();
    investAllUnderlying();
  }

  /**
  * Can completely disable claiming UNI rewards and selling. Good for emergency withdraw in the
  * simplest possible way.
  */
  function setSell(bool s) public onlyGovernance {
    sell = s;
  }

  /**
  * Sets the minimum amount of CRV needed to trigger a sale.
  */
  function setSellFloor(uint256 floor) public onlyGovernance {
    sellFloor = floor;
  }
}

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x7d96b3f2fe9eb5867b597a47c988684e39cd99f3.sol
Total states:17591
29.842055
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.035738
Transaction Length: 0
Severity: High
Contract: Token
Function name: constructor
PC address: 98
Estimated Gas Usage: 233 - 3006
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7d96b3f2fe9eb5867b597a47c988684e39cd99f3.sol:21


interface ERC20Interface {

    /**

     

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:17.533995
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1574
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7d96b3f2fe9eb5867b597a47c988684e39cd99f3.sol:222

_balances[_to] += _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:21.794462
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1650
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7d96b3f2fe9eb5867b597a47c988684e39cd99f3.sol:224

_balances[_from] -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x2e77a7cdbf2aeb0b70af9f1521f9818848e7887b.sol
Total states:423
1.023579
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xdcaf872c6d1c640ddf54fb85bd9cd003b8e6103f.sol
Total states:5259
52.107053
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.734957
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xdcaf872c6d1c640ddf54fb85bd9cd003b8e6103f.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.902570
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xdcaf872c6d1c640ddf54fb85bd9cd003b8e6103f.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.495013
Transaction Length: 1
Severity: High
Contract: Orient
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xdcaf872c6d1c640ddf54fb85bd9cd003b8e6103f.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.957767
Transaction Length: 1
Severity: High
Contract: Orient
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xdcaf872c6d1c640ddf54fb85bd9cd003b8e6103f.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x34e2B546D1819fE428c072080829028aF36540DD.sol
Total states:2520
27.139465
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.536945
Transaction Length: 1
Severity: Low
Contract: StakingRewardsDecayHolder
Function name: withdraw(uint256,address)
PC address: 1090
Estimated Gas Usage: 1894 - 4952
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x34e2B546D1819fE428c072080829028aF36540DD.sol:456

address(rewarder).call(
                abi.encodeWithSelector(rewarder.withdraw.selector, msg.sender, amount, gem)
            )

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.581337
Transaction Length: 1
Severity: Low
Contract: StakingRewardsDecayHolder
Function name: stake(uint256,address)
PC address: 1969
Estimated Gas Usage: 1615 - 2606
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x34e2B546D1819fE428c072080829028aF36540DD.sol:446

rewarder.stake(msg.sender, amount, gem)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x94d29943df4968228c8c861e1db3732722f42127.sol
Total states:3859
6.186456
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x6a990206b3aa8743b62a9d24f17db955d81a3389.sol
Total states:3269
6.96694
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x0e94c0164a2b9877a30a7b40092fc22e2aee8fd1.sol
Total states:18890
38.194023
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.099892
Transaction Length: 0
Severity: High
Contract: Copenco
Function name: constructor
PC address: 282
Estimated Gas Usage: 17306 - 81727
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x0e94c0164a2b9877a30a7b40092fc22e2aee8fd1.sol:14

unction transfer(address recipient, uint256

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.995734
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4180
Estimated Gas Usage: 1033 - 1508
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x0e94c0164a2b9877a30a7b40092fc22e2aee8fd1.sol:36

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x6aad70db603f8c44a4328de0d34edf8c471e020b.sol
Total states:3467
5.785123
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x683f59aff1d52bd6d405cd45c3b5c105ef42882b.sol
Total states:1253
2.046464
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040370
Transaction Length: 0
Severity: High
Contract: BentoBoxContractTokenV1
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x683f59aff1d52bd6d405cd45c3b5c105ef42882b.sol:13

  returns (bytes memory) {
        this; //

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x4a7f3302c8c2c7f8e1471862f926099666f61c0a.sol
Total states:850
4.450629
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.042501
Transaction Length: 1
Severity: Low
Contract: TokenTimelock
Function name: release()
PC address: 1196
Estimated Gas Usage: 5049 - 42716
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x4a7f3302c8c2c7f8e1471862f926099666f61c0a.sol:187

address(token).call(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x397aa708156e2789aaa37cc4b79d8a709490b823.sol
Total states:3429
5.955525
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x6b1a790A8a127F7631A5c5Ff6a822733a2C61015.sol
Total states:214
0.233108
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x958282889d38ddb960460d8570a7202fbfc413d0.sol
Total states:1068
1.064103
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xa4f779074850d320b5553c9db5fc6a8ab15bd34a.sol
Total states:9103
21.763073
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.074377
Transaction Length: 0
Severity: Medium
Contract: YFIX
Function name: constructor
PC address: 213
Estimated Gas Usage: 17136 - 78879
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop9/0xa4f779074850d320b5553c9db5fc6a8ab15bd34a.sol:204

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.177980
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xa4f779074850d320b5553c9db5fc6a8ab15bd34a.sol:120

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x8824d3afd39b7b381bb382c34323aa7f5eb1d765.sol
Total states:31390
1014.378576
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.811315
Transaction Length: 1
Severity: High
Contract: TokenERC20
Function name: approveAndCall(address,uint256,bytes)
PC address: 1470
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x8824d3afd39b7b381bb382c34323aa7f5eb1d765.sol:3

*/

//pragma solidity >=0.5.17;
pra

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.645379
Transaction Length: 1
Severity: High
Contract: Reef_token
Function name: approveAndCall(address,uint256,bytes)
PC address: 2602
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x8824d3afd39b7b381bb382c34323aa7f5eb1d765.sol:3

*/

//pragma solidity >=0.5.17;
pra

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:35.943813
Transaction Length: 1
Severity: Medium
Contract: TokenERC20
Function name: approveAndCall(address,uint256,bytes)
PC address: 5474
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop9/0x8824d3afd39b7b381bb382c34323aa7f5eb1d765.sol:131

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.833638
Transaction Length: 1
Severity: Low
Contract: Reef_token
Function name: CreateTokenCM(address)
PC address: 7954
Estimated Gas Usage: 3287 - 3382
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x8824d3afd39b7b381bb382c34323aa7f5eb1d765.sol:177

_eth / soplPrice

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:06:46.952632
Transaction Length: 2
Severity: Low
Contract: Reef_token
Function name: CreateTokenCM(address)
PC address: 7954
Estimated Gas Usage: 3287 - 3382
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x8824d3afd39b7b381bb382c34323aa7f5eb1d765.sol:177

_eth / soplPrice

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:06.447003
Transaction Length: 1
Severity: Medium
Contract: Reef_token
Function name: approveAndCall(address,uint256,bytes)
PC address: 9525
Estimated Gas Usage: 8787 - 34505
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop9/0x8824d3afd39b7b381bb382c34323aa7f5eb1d765.sol:131

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x477b0a8aaff2c63c1071c4da254261986f542d1b.sol
Total states:59
0.685244
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x5b12dfd86b07f7306548f50526e236f3269a34ec.sol
Total states:806
1.550539
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xc83d3a7e32467c453eb1ad99f2f5c6fce399df98.sol
Total states:1052
3.79656
==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:02.926239
Transaction Length: 1
Severity: Medium
Contract: PickleJar
Function name: convertWETHPairWithPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)
PC address: 7684
Estimated Gas Usage: 1427 - 2468
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop9/0xc83d3a7e32467c453eb1ad99f2f5c6fce399df98.sol:242

IUniswapV2ERC20(fromLP).permit(
            msg.sender,
            address(this),
            value,
            deadline,
            v,
            r,
            s
        )

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x157A064ecB0cBD8111284FBdf9bF8a18BdAb8eE4.sol
Total states:2642
3.094361
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x81a9a414d4e631c9d1ac14960111171e9399410c.sol
Total states:4031
53.418836
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x84ee348617563944ffd4a23843e086a7dc0224f3.sol
Total states:60
0.723634
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xc0ba369c8db6eb3924965e5c4fd0b4c1b91e305f.sol
Total states:1644
3.2405
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.059601
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xc0ba369c8db6eb3924965e5c4fd0b4c1b91e305f.sol:13

ext, including the
 * sender of the transac

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xb76bcad81ff560348c46e07a544feec03f22d601.sol
Total states:53557
108.950684
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.861116
Transaction Length: 1
Severity: High
Contract: KOMP
Function name: register(string)
PC address: 2171
Estimated Gas Usage: 428 - 523
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xb76bcad81ff560348c46e07a544feec03f22d601.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.610667
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 5537
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xb76bcad81ff560348c46e07a544feec03f22d601.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.823583
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6860
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xb76bcad81ff560348c46e07a544feec03f22d601.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.067270
Transaction Length: 2
Severity: High
Contract: FreezeToken
Function name: increaseApproval(address,uint256)
PC address: 7549
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xb76bcad81ff560348c46e07a544feec03f22d601.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.945483
Transaction Length: 2
Severity: High
Contract: KOMP
Function name: increaseApproval(address,uint256)
PC address: 9131
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xb76bcad81ff560348c46e07a544feec03f22d601.sol:47

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x6f40802d334a09a67aca1f0d0e0cf4bc7a3d5b68.sol
Total states:7732
32.126068
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:19.135057
Transaction Length: 2
Severity: High
Contract: YearnMoney
Function name: burnFrom(address,uint256)
PC address: 3508
Estimated Gas Usage: 7546 - 28781
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x6f40802d334a09a67aca1f0d0e0cf4bc7a3d5b68.sol:151

allowed[_from][msg.sender] -= _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:23.990056
Transaction Length: 2
Severity: High
Contract: YearnMoney
Function name: burnFrom(address,uint256)
PC address: 3524
Estimated Gas Usage: 12979 - 54214
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x6f40802d334a09a67aca1f0d0e0cf4bc7a3d5b68.sol:152

_totalSupply -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xfcdc0ff8a13a32107c651d16b11bb8f60518a261.sol
Total states:18192
42.300518
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.704852
Transaction Length: 2
Severity: High
Contract: YSpaceFinance
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xfcdc0ff8a13a32107c651d16b11bb8f60518a261.sol:57

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.392215
Transaction Length: 2
Severity: High
Contract: YSpaceFinance
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xfcdc0ff8a13a32107c651d16b11bb8f60518a261.sol:58

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x989ac4c1fc5ab2b8c86924c6253aaf1ee68e9ce9.sol
Total states:18855
41.815837
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.159797
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x989ac4c1fc5ab2b8c86924c6253aaf1ee68e9ce9.sol:238

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.925110
Transaction Length: 2
Severity: High
Contract: PrimeFinance
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x989ac4c1fc5ab2b8c86924c6253aaf1ee68e9ce9.sol:238

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x04e86acc27354224ee2242caeaa84ea904bef9eb.sol
Total states:178
0.218365
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x75019407B9f8f30f2b1fD3e4905A0A39eCC14817.sol
Total states:428
1.425801
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xf9ba953ba63c43696eec85b18179af5c5734ec8b.sol
Total states:144
3.031886
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.173053
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: constructor
PC address: 606
Estimated Gas Usage: 7555 - 31379
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xf9ba953ba63c43696eec85b18179af5c5734ec8b.sol:233

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x9eb8c50459e29d2044714779df782d435577a48b.sol
Total states:23980
74.919575
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.001109
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4187
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x9eb8c50459e29d2044714779df782d435577a48b.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:33.086892
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4200
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x9eb8c50459e29d2044714779df782d435577a48b.sol:33

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.751546
Transaction Length: 2
Severity: High
Contract: DappChannel
Function name: increaseApproval(address,uint256)
PC address: 4823
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x9eb8c50459e29d2044714779df782d435577a48b.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:34.159844
Transaction Length: 2
Severity: Low
Contract: DappChannel
Function name: increaseApproval(address,uint256)
PC address: 4836
Estimated Gas Usage: 990 - 1465
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x9eb8c50459e29d2044714779df782d435577a48b.sol:33

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xc3F5d245eA6f809070F715A3feDaEE1C2c00e329.sol
Total states:120
1.609537
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x6c3e4cb2e96b01f4b866965a91ed4437839a121a.sol
Total states:2267
4.312183
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xaf1b4c2ff10796bd56a4824020ab1cdb9b0591ed.sol
Total states:18192
42.997382
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.864056
Transaction Length: 2
Severity: High
Contract: betheroio
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xaf1b4c2ff10796bd56a4824020ab1cdb9b0591ed.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.286079
Transaction Length: 2
Severity: High
Contract: betheroio
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xaf1b4c2ff10796bd56a4824020ab1cdb9b0591ed.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xfd25ec0627ba777f32a7ee04fe3bcee2b58f7939.sol
Total states:1239
0.64463
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xa188ddb3ebae55139cbc55d8f86a654f08bd9f7b.sol
Total states:1253
2.329111
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.042736
Transaction Length: 0
Severity: High
Contract: Polkaswap
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xa188ddb3ebae55139cbc55d8f86a654f08bd9f7b.sol:13

  returns (bytes memory) {
        this; //

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x612f7ad71514cb0a7dbfa6aff7494c6d3b4ab695.sol
Total states:23078
7789.031373
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.176624
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x612f7ad71514cb0a7dbfa6aff7494c6d3b4ab695.sol:122

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:43.496171
Transaction Length: 2
Severity: High
Contract: Suzu
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x612f7ad71514cb0a7dbfa6aff7494c6d3b4ab695.sol:122

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x17183c6afd3387633c53a8b2995f856d8be433f6.sol
Total states:9131
20.621575
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.199091
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x17183c6afd3387633c53a8b2995f856d8be433f6.sol:822

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x20ff4ab0cb5de8727a35ec173825f8acfd1963f9.sol
Total states:18192
45.730654
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.842598
Transaction Length: 2
Severity: High
Contract: KappiNetworkFinance
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x20ff4ab0cb5de8727a35ec173825f8acfd1963f9.sol:65

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:35.565844
Transaction Length: 2
Severity: High
Contract: KappiNetworkFinance
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x20ff4ab0cb5de8727a35ec173825f8acfd1963f9.sol:66

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xddd05c42769c2d339d9c4364326f46545190acf6.sol
Total states:9014
19.764322
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.774296
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xddd05c42769c2d339d9c4364326f46545190acf6.sol:108

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x3bd145f66203b19ce7bedaac9a8147e08ea64645.sol
Total states:3876
6.462871
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xB4dDe1cAb5012e14F49F982263d82b67e109685E.sol
Total states:2193
3.117052
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x14e549F07733aa08FF14231F9e513Ecf64Bc9Ca7.sol
Total states:248
0.209615
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x85FE3913Bc913f5C67B9AE3B7cc2785746979fec.sol
Total states:5737
13.654688
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x83e28af3b0694cd5c0d5586ed272718cb9431d23.sol
Total states:8483
33.211912
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.251172
Transaction Length: 2
Severity: High
Contract: Karatefinance
Function name: increaseApproval(address,uint256)
PC address: 4860
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x83e28af3b0694cd5c0d5586ed272718cb9431d23.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:29.335734
Transaction Length: 2
Severity: Low
Contract: Karatefinance
Function name: increaseApproval(address,uint256)
PC address: 4873
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x83e28af3b0694cd5c0d5586ed272718cb9431d23.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x9273927b1527b7b8fd21296b27b0Ab77DdC00d63.sol
Total states:727
0.777642
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x121d3aA455278B9513B53A5a80B62eb8f5e4a9B8.sol
Total states:1607
3.587106
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.038290
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x121d3aA455278B9513B53A5a80B62eb8f5e4a9B8.sol:7

   ▒▒░░░░                 //
//

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x7092E9d7aa27a1D579D80ca027CF01beAc1c41c4.sol
Total states:60
894.00366
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.085318
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 391
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7092E9d7aa27a1D579D80ca027CF01beAc1c41c4.sol:3

*/

// COPIED FROM https://github.c

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.104484
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 542
Estimated Gas Usage: 729 - 3506
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7092E9d7aa27a1D579D80ca027CF01beAc1c41c4.sol:3

*/

// COPIED FROM https://github.c

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:08:29.354503
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1025
Estimated Gas Usage: 401 - 496
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7092E9d7aa27a1D579D80ca027CF01beAc1c41c4.sol:3

*/

// COPIED FROM https://github.c

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:08:45.000460
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1176
Estimated Gas Usage: 743 - 3520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7092E9d7aa27a1D579D80ca027CF01beAc1c41c4.sol:3

*/

// COPIED FROM https://github.c

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:10:39.117444
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1529
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7092E9d7aa27a1D579D80ca027CF01beAc1c41c4.sol:3

*/

// COPIED FROM https://github.c

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:11:02.370719
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1680
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7092E9d7aa27a1D579D80ca027CF01beAc1c41c4.sol:3

*/

// COPIED FROM https://github.c

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xfc8fab237b49f148de2ff4085c0e3a72dc8890e2.sol
Total states:699
0.652925
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xcbcfbdc2ebcb7bab8633a35a9fd60101a6c5293b.sol
Total states:3871
47.278501
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.282572
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xcbcfbdc2ebcb7bab8633a35a9fd60101a6c5293b.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.552694
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xcbcfbdc2ebcb7bab8633a35a9fd60101a6c5293b.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.966684
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xcbcfbdc2ebcb7bab8633a35a9fd60101a6c5293b.sol:275

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.476513
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xcbcfbdc2ebcb7bab8633a35a9fd60101a6c5293b.sol:10

 external returns (bo

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.235684
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xcbcfbdc2ebcb7bab8633a35a9fd60101a6c5293b.sol:10

pient, uint256 amount) external returns (boo

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xeedac64009067f8543d149ce1bea869b5312fb7f.sol
Total states:3274
7.783157
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xcc1c50dac6a91f428c43ae3b6193c8499b7b0ad3.sol
Total states:878
2.371212
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x208ba1670bca38e7ba89c4fee5b5d6eb1c7ee5e3.sol
Total states:108
1.912223
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.077904
Transaction Length: 0
Severity: High
Contract: CorfiPresale
Function name: constructor
PC address: 419
Estimated Gas Usage: 48886 - 231621
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x208ba1670bca38e7ba89c4fee5b5d6eb1c7ee5e3.sol:319

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xd5a822d0d4482d2915e738ba91e3cd0668b8a365.sol
Total states:76315
150.083388
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:57.848871
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 1815
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5a822d0d4482d2915e738ba91e3cd0668b8a365.sol:48

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:01.379851
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2036
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5a822d0d4482d2915e738ba91e3cd0668b8a365.sol:50

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:09.486439
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2113
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5a822d0d4482d2915e738ba91e3cd0668b8a365.sol:51

balances[_to]+=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:56.730157
Transaction Length: 2
Severity: High
Contract: Bitney
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5a822d0d4482d2915e738ba91e3cd0668b8a365.sol:48

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:03.322996
Transaction Length: 1
Severity: High
Contract: Bitney
Function name: transferFrom(address,address,uint256)
PC address: 2357
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5a822d0d4482d2915e738ba91e3cd0668b8a365.sol:50

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.278005
Transaction Length: 1
Severity: High
Contract: Bitney
Function name: transferFrom(address,address,uint256)
PC address: 2434
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5a822d0d4482d2915e738ba91e3cd0668b8a365.sol:51

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x5a0b2b3a4fc078df020e8b73aa81c629b5aae305.sol
Total states:610
1.547302
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x658459e4317B23Bb3BD224392baAC89A68b9885a.sol
Total states:2577
6.022319
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041134
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x658459e4317B23Bb3BD224392baAC89A68b9885a.sol:14

rent execution context, including the
 * se

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.525238
Transaction Length: 1
Severity: High
Contract: YvsTaxCollector
Function name: distribute()
PC address: 4786
Estimated Gas Usage: 3195 - 38182
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x658459e4317B23Bb3BD224392baAC89A68b9885a.sol:178

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x4a01524da788f8c33079b5c1803f9d89e55b3384.sol
Total states:3381
5.946535
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol
Total states:20787
1906.640177
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:29.842609
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeSub(uint256,uint256)
PC address: 820
Estimated Gas Usage: 309 - 404
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.606543
Transaction Length: 1
Severity: Low
Contract: Math
Function name: safeDiv(uint256,uint256)
PC address: 959
Estimated Gas Usage: 324 - 419
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.910416
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 985
Estimated Gas Usage: 382 - 477
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.502011
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 1128
Estimated Gas Usage: 496 - 591
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:105

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:36.095681
Transaction Length: 1
Severity: High
Contract: Interest
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 1424
Estimated Gas Usage: 570 - 665
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:207

mul(x, x)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:07:40.729475
Transaction Length: 1
Severity: High
Contract: Interest
Function name: rpow(uint256,uint256,uint256)
PC address: 1443
Estimated Gas Usage: 557 - 652
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:209

add(xx, half)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:46.337503
Transaction Length: 1
Severity: High
Contract: Interest
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 1473
Estimated Gas Usage: 718 - 813
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:213

mul(z, x)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:11:36.838931
Transaction Length: 1
Severity: High
Contract: Interest
Function name: safeSub(uint256,uint256)
PC address: 1594
Estimated Gas Usage: 309 - 404
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:11:38.901707
Transaction Length: 1
Severity: Low
Contract: Interest
Function name: safeDiv(uint256,uint256)
PC address: 1733
Estimated Gas Usage: 324 - 419
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.576116
Transaction Length: 1
Severity: High
Contract: Interest
Function name: rdiv(uint256,uint256)
PC address: 1759
Estimated Gas Usage: 405 - 500
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.380620
Transaction Length: 1
Severity: High
Contract: Interest
Function name: rdiv(uint256,uint256)
PC address: 2100
Estimated Gas Usage: 519 - 614
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:105

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:36.021280
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 6103
Estimated Gas Usage: 593 - 688
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:207

mul(x, x)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:08:00.127832
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: rpow(uint256,uint256,uint256)
PC address: 6122
Estimated Gas Usage: 513 - 608
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:209

add(xx, half)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:14.446062
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 6152
Estimated Gas Usage: 741 - 836
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:213

mul(z, x)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:17:05.215198
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: safeSub(uint256,uint256)
PC address: 7439
Estimated Gas Usage: 399 - 494
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:17:07.650348
Transaction Length: 1
Severity: Low
Contract: Assessor
Function name: safeDiv(uint256,uint256)
PC address: 7824
Estimated Gas Usage: 369 - 464
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.042621
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: rdiv(uint256,uint256)
PC address: 8344
Estimated Gas Usage: 473 - 568
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:113

x * y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:17:08.917902
Transaction Length: 1
Severity: Low
Contract: Assessor
Function name: calcUpdateNAV()
PC address: 8638
Estimated Gas Usage: 1538 - 2244
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:371

navFeed.calcUpdateNAV()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.762332
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: rdiv(uint256,uint256)
PC address: 9406
Estimated Gas Usage: 587 - 682
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:105

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x34FADFaABc6dB2dDF7D262d999e561c8F310B6D1.sol
Total states:2777
85.982613
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:57.384704
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: join(uint256)
PC address: 1719
Estimated Gas Usage: 13726 - 55097
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x34FADFaABc6dB2dDF7D262d999e561c8F310B6D1.sol:212

vat.move(msg.sender, address(this), mul(chi, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:19.100178
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: exit(uint256)
PC address: 3541
Estimated Gas Usage: 13283 - 54654
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x34FADFaABc6dB2dDF7D262d999e561c8F310B6D1.sol:218

vat.move(address(this), msg.sender, mul(chi, wad))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.336808
Transaction Length: 1
Severity: High
Contract: Pot
Function name: join(uint256)
PC address: 5026
Estimated Gas Usage: 12821 - 53626
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x34FADFaABc6dB2dDF7D262d999e561c8F310B6D1.sol:176

x * y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:15.295465
Transaction Length: 1
Severity: High
Contract: Pot
Function name: exit(uint256)
PC address: 5064
Estimated Gas Usage: 837 - 1122
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x34FADFaABc6dB2dDF7D262d999e561c8F310B6D1.sol:172

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xEDBABeA0Ea571cCE3Bae2643ca868E6C9646824D.sol
Total states:9871
21.658516
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040053
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xEDBABeA0Ea571cCE3Bae2643ca868E6C9646824D.sol:13

nsaction and its data. While these are gene

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.989312
Transaction Length: 2
Severity: High
Contract: RevolutionSoviet
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xEDBABeA0Ea571cCE3Bae2643ca868E6C9646824D.sol:143

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xf4eea0e5064acec26bc5def978deb5da42678321.sol
Total states:18192
42.104257
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.078083
Transaction Length: 2
Severity: High
Contract: ponzischeme
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xf4eea0e5064acec26bc5def978deb5da42678321.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.229053
Transaction Length: 2
Severity: High
Contract: ponzischeme
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xf4eea0e5064acec26bc5def978deb5da42678321.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xbec1ab370e3512eb2848be97865fb1dad5087ae0.sol
Total states:14630
48.721163
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.038378
Transaction Length: 0
Severity: High
Contract: YedgeToken
Function name: constructor
PC address: 117
Estimated Gas Usage: 5263 - 28036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xbec1ab370e3512eb2848be97865fb1dad5087ae0.sol:17

 function mul(uint256 a, uint256 b) interna

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.237434
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4102
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xbec1ab370e3512eb2848be97865fb1dad5087ae0.sol:48

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:34.734948
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4115
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0xbec1ab370e3512eb2848be97865fb1dad5087ae0.sol:49

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xc0cf2cbd0c6bb1da4c671fbb07d40e88676dbe82.sol
Total states:1689
20.176524
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:15.715063
Transaction Length: 1
Severity: Low
Contract: PickleMigrator
Function name: migrateToUniswapWithPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)
PC address: 871
Estimated Gas Usage: 7291 - 112872
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0xc0cf2cbd0c6bb1da4c671fbb07d40e88676dbe82.sol:206

IUniswapV2ERC20(sushiPair).transferFrom(msg.sender, address(this), value)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:19.436624
Transaction Length: 1
Severity: Low
Contract: PickleMigrator
Function name: migrateToUniswapWithPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1128
Estimated Gas Usage: 9403 - 149971
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0xc0cf2cbd0c6bb1da4c671fbb07d40e88676dbe82.sol:207

IUniswapV2ERC20(sushiPair).approve(address(sushiswapRouter), value)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:09.345632
Transaction Length: 1
Severity: Low
Contract: PickleMigrator
Function name: migrateToUniswap(address,address,uint256)
PC address: 1516
Estimated Gas Usage: 7684 - 113781
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0xc0cf2cbd0c6bb1da4c671fbb07d40e88676dbe82.sol:208

sushiswapRouter.removeLiquidity(
            token0,
            token1,
            value,
            0,
            0,
            address(this),
            now + 60
        )

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:12.586328
Transaction Length: 1
Severity: Low
Contract: PickleMigrator
Function name: migrateToUniswapWithPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)
PC address: 4383
Estimated Gas Usage: 3515 - 39543
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0xc0cf2cbd0c6bb1da4c671fbb07d40e88676dbe82.sol:186

IUniswapV2ERC20(pair).permit(
            msg.sender,
            address(this),
            value,
            deadline,
            v,
            r,
            s
        )

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xB6BEE379CCeB482160f83e0e5018C81bb3807Ede.sol
Total states:6691
8.398176
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.039713
Transaction Length: 0
Severity: Low
Contract: UrnHandler
Function name: constructor
PC address: 223
Estimated Gas Usage: 1003 - 4059
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0xB6BEE379CCeB482160f83e0e5018C81bb3807Ede.sol:74

VatLike(vat).hope(msg.sender)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xececee5e4395bd70998f30b1413544910fa1e756.sol
Total states:8045
15.943455
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039167
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xececee5e4395bd70998f30b1413544910fa1e756.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.071920
Transaction Length: 2
Severity: High
Contract: YFW
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xececee5e4395bd70998f30b1413544910fa1e756.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x35e78b3982e87ecfd5b3f3265b601c046cdbe232.sol
Total states:1576
2.94022
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039055
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x35e78b3982e87ecfd5b3f3265b601c046cdbe232.sol:11

luding the
 * sender of the transaction and

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xd3fea825fdfefd03b0cad45487421b33ca2210a3.sol
Total states:3661
5.885722
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040264
Transaction Length: 0
Severity: High
Contract: Amaterasu
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd3fea825fdfefd03b0cad45487421b33ca2210a3.sol:24

ternal view  returns (bytes memory) {

    

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040723
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd3fea825fdfefd03b0cad45487421b33ca2210a3.sol:24

ternal view  returns (bytes memory) {

    

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xed551f18eefeeb381267a4c5658fb8c4540c1dcb.sol
Total states:8045
15.90454
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039288
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xed551f18eefeeb381267a4c5658fb8c4540c1dcb.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.050561
Transaction Length: 2
Severity: High
Contract: YFLIVE
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xed551f18eefeeb381267a4c5658fb8c4540c1dcb.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xd73573037c43bf23d8093918a8b1fedeb5a5c52b.sol
Total states:7984
18.999633
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.139407
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4094
Estimated Gas Usage: 992 - 1467
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd73573037c43bf23d8093918a8b1fedeb5a5c52b.sol:67

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xd31eba39be33893b4ceb34ea3a6c4305fc8b77e0.sol
Total states:9901
21.024424
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.029904
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd31eba39be33893b4ceb34ea3a6c4305fc8b77e0.sol:9

.data, they should not be accessed in such 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.111535
Transaction Length: 2
Severity: High
Contract: DimsumToken
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd31eba39be33893b4ceb34ea3a6c4305fc8b77e0.sol:126

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xe68301308da0f1678a0caa2eeb549c4f4c35b905.sol
Total states:23078
7776.981483
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.934665
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xe68301308da0f1678a0caa2eeb549c4f4c35b905.sol:137

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:25.036791
Transaction Length: 2
Severity: High
Contract: PEARSWAP
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xe68301308da0f1678a0caa2eeb549c4f4c35b905.sol:137

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x90b397f0962c3bc624f8ebc810c1e68655a4d0d3.sol
Total states:3625
6.123713
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.037382
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x90b397f0962c3bc624f8ebc810c1e68655a4d0d3.sol:25


 * checks.

 *

 * Arithmetic operations i

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039857
Transaction Length: 0
Severity: High
Contract: SaffronLPBalanceToken
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x90b397f0962c3bc624f8ebc810c1e68655a4d0d3.sol:25


 * checks.

 *

 * Arithmetic operations i

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x61223a7e66dc4715ef70bb7d07f95d5b051d2d06.sol
Total states:4624
8.148899
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039928
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x61223a7e66dc4715ef70bb7d07f95d5b051d2d06.sol:18

or verification at Etherscan.io on 2020-09-

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x1b54a20aa52cf36c0b115d078733a6b23b92a229.sol
Total states:1237
4.748955
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.896343
Transaction Length: 0
Severity: High
Contract: DEDXToken
Function name: constructor
PC address: 578
Estimated Gas Usage: 45086 - 211487
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x1b54a20aa52cf36c0b115d078733a6b23b92a229.sol:133

tokens * 10 ** 18

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x2B8Dd0a4757b796416B14223DCDad9C1775860Dd.sol
Total states:2143
1.794599
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x868801feb513bba4e16c84a006157850b56d5199.sol
Total states:43330
131.849516
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.586533
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4252
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x868801feb513bba4e16c84a006157850b56d5199.sol:91

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:36.419638
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4265
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x868801feb513bba4e16c84a006157850b56d5199.sol:92

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.936152
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 5311
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x868801feb513bba4e16c84a006157850b56d5199.sol:91

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.412047
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 5324
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x868801feb513bba4e16c84a006157850b56d5199.sol:92

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.891097
Transaction Length: 2
Severity: High
Contract: Yasion
Function name: increaseApproval(address,uint256)
PC address: 6116
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x868801feb513bba4e16c84a006157850b56d5199.sol:91

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:34.890893
Transaction Length: 2
Severity: Low
Contract: Yasion
Function name: increaseApproval(address,uint256)
PC address: 6129
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x868801feb513bba4e16c84a006157850b56d5199.sol:92

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol
Total states:18307
89.418898
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.137201
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2327
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:14.940673
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2340
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:94

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.955785
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2798
Estimated Gas Usage: 933 - 1408
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:15.189632
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2811
Estimated Gas Usage: 943 - 1418
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:94

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:05.018115
Transaction Length: 1
Severity: Low
Contract: JpymToken
Function name: transfer(address,uint256)
PC address: 4326
Estimated Gas Usage: 929 - 1214
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:42.383210
Transaction Length: 2
Severity: Low
Contract: JpymToken
Function name: transferFrom(address,address,uint256)
PC address: 4326
Estimated Gas Usage: 1579 - 2244
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:76

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.757519
Transaction Length: 2
Severity: High
Contract: JpymToken
Function name: increaseApproval(address,uint256)
PC address: 4886
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:46.628047
Transaction Length: 2
Severity: Low
Contract: JpymToken
Function name: increaseApproval(address,uint256)
PC address: 4899
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:94

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x4fd84194d8ebbb46e40f704a6fd295577a302eb6.sol
Total states:3871
43.712819
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.294320
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x4fd84194d8ebbb46e40f704a6fd295577a302eb6.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.526776
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x4fd84194d8ebbb46e40f704a6fd295577a302eb6.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.896542
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x4fd84194d8ebbb46e40f704a6fd295577a302eb6.sol:275

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.283590
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x4fd84194d8ebbb46e40f704a6fd295577a302eb6.sol:10

 external returns (bo

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.087290
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x4fd84194d8ebbb46e40f704a6fd295577a302eb6.sol:10

pient, uint256 amount) external returns (boo

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x46c96ca00334cbc832f421b5d066e00e281c6d67.sol
Total states:53557
109.052076
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.858176
Transaction Length: 1
Severity: High
Contract: KOMP
Function name: register(string)
PC address: 2171
Estimated Gas Usage: 428 - 523
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x46c96ca00334cbc832f421b5d066e00e281c6d67.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.945813
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 5537
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x46c96ca00334cbc832f421b5d066e00e281c6d67.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.824632
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6860
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x46c96ca00334cbc832f421b5d066e00e281c6d67.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.981649
Transaction Length: 2
Severity: High
Contract: FreezeToken
Function name: increaseApproval(address,uint256)
PC address: 7549
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x46c96ca00334cbc832f421b5d066e00e281c6d67.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.944205
Transaction Length: 2
Severity: High
Contract: KOMP
Function name: increaseApproval(address,uint256)
PC address: 9131
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x46c96ca00334cbc832f421b5d066e00e281c6d67.sol:47

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x267ae47dabb185f2999dffe550161d14364fcf7c.sol
Total states:31613
98.231395
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.383618
Transaction Length: 1
Severity: High
Contract: YFG
Function name: approveAndCall(address,uint256,bytes)
PC address: 1799
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x267ae47dabb185f2999dffe550161d14364fcf7c.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.667634
Transaction Length: 2
Severity: High
Contract: YFG
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 4618
Estimated Gas Usage: 6015 - 43128
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x267ae47dabb185f2999dffe550161d14364fcf7c.sol:134

nonces[holder]++

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:21.894109
Transaction Length: 1
Severity: Medium
Contract: YFG
Function name: approveAndCall(address,uint256,bytes)
PC address: 6543
Estimated Gas Usage: 8284 - 32451
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop9/0x267ae47dabb185f2999dffe550161d14364fcf7c.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), data)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.775691
Transaction Length: 1
Severity: High
Contract: YFG
Function name: transferFrom(address,address,uint256)
PC address: 7630
Estimated Gas Usage: 1671 - 2526
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x267ae47dabb185f2999dffe550161d14364fcf7c.sol:52

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x7D82C665EeA8b1E336D3B7508F9F3E5d52f1b661.sol
Total states:1947
8.505763
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.009725
Transaction Length: 1
Severity: Low
Contract: BaseUpgradeabilityProxy
Function name: fallback
PC address: 97
Estimated Gas Usage: 557 - 2956
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: ../../contracts/noloop/noloop9/0x7D82C665EeA8b1E336D3B7508F9F3E5d52f1b661.sol:98

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.987704
Transaction Length: 1
Severity: High
Contract: BaseAdminUpgradeabilityProxy
Function name: upgradeToAndCall(address,bytes)
PC address: 309
Estimated Gas Usage: 327 - 422
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7D82C665EeA8b1E336D3B7508F9F3E5d52f1b661.sol:3



*/



/**

 *Submitted for verifi

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:07.238205
Transaction Length: 1
Severity: Low
Contract: BaseAdminUpgradeabilityProxy
Function name: fallback
PC address: 1699
Estimated Gas Usage: 1229 - 3628
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: ../../contracts/noloop/noloop9/0x7D82C665EeA8b1E336D3B7508F9F3E5d52f1b661.sol:98

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x4df9db04a7212b0dfed2659200dd77812bcbdb1f.sol
Total states:3460
11.079558
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x0c7be37b00c1d3127c09da66fadf3d6eb600dece.sol
Total states:18855
43.022776
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.400472
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x0c7be37b00c1d3127c09da66fadf3d6eb600dece.sol:123

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.205000
Transaction Length: 2
Severity: High
Contract: MOONC
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x0c7be37b00c1d3127c09da66fadf3d6eb600dece.sol:123

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xadc9cd0c98795af6beddfa29126833fb91d00295.sol
Total states:1555
2.099937
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039782
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xadc9cd0c98795af6beddfa29126833fb91d00295.sol:24

n context, including the

 * sender of the 

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x192c2d3a3f5c535784ef5691a725d13c01603403.sol
Total states:18192
41.307875
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.797275
Transaction Length: 2
Severity: High
Contract: wing
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x192c2d3a3f5c535784ef5691a725d13c01603403.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.018835
Transaction Length: 2
Severity: High
Contract: wing
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x192c2d3a3f5c535784ef5691a725d13c01603403.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x2ee856843bb65c244f527ad302d6d2853921727e.sol
Total states:8897
22.232453
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.117443
Transaction Length: 0
Severity: High
Contract: eVault
Function name: constructor
PC address: 234
Estimated Gas Usage: 6824 - 64159
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2ee856843bb65c244f527ad302d6d2853921727e.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.840323
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2ee856843bb65c244f527ad302d6d2853921727e.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xd5f2c713354de987af07dea8e88d25acfd4c0f13.sol
Total states:18192
41.130487
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.396011
Transaction Length: 2
Severity: High
Contract: chadsvc
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5f2c713354de987af07dea8e88d25acfd4c0f13.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.168867
Transaction Length: 2
Severity: High
Contract: chadsvc
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5f2c713354de987af07dea8e88d25acfd4c0f13.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x59301d7dd9a87155916dbd9dd55a72e400167376.sol
Total states:18192
40.936268
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.752033
Transaction Length: 2
Severity: High
Contract: cyberpunk
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x59301d7dd9a87155916dbd9dd55a72e400167376.sol:106

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.960577
Transaction Length: 2
Severity: High
Contract: cyberpunk
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x59301d7dd9a87155916dbd9dd55a72e400167376.sol:108

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x679024a6328d24BA5BD566C4D6C87DbFcE005724.sol
Total states:983
0.438401
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol
Total states:46840
104.068413
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047183
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.974329
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.954455
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.044635
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.913319
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.979792
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.942772
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.074334
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.952392
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.039262
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.124385
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.087923
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.848174
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.785625
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.677456
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.799549
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.737369
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.878933
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.016358
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x7c7676f11184BA00EC760116e0b5b51668961c6F.sol
Total states:2267
4.579661
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x65bbc1d8eb15cdd17191b2db0840ad7a5c49055e.sol
Total states:3399
5.710931
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xe5cc183655b4ddbe60a397423086b6a4a148c7a8.sol
Total states:432
0.667943
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xc2620af79b99c973e2d7515a534e8c77351c04d0.sol
Total states:1111
0.686779
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x1E9DC5d843731D333544e63B2B2082D21EF78ed3.sol
Total states:13051
19.127066
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.981707
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 5473
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x1E9DC5d843731D333544e63B2B2082D21EF78ed3.sol:150

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x462e61a7c23b2d9919f7f5e8473b16eebb8bde1e.sol
Total states:2733
7.348612
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.729428
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 4168
Estimated Gas Usage: 1612 - 2603
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x462e61a7c23b2d9919f7f5e8473b16eebb8bde1e.sol:280

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.513119
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4836
Estimated Gas Usage: 1608 - 2599
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x462e61a7c23b2d9919f7f5e8473b16eebb8bde1e.sol:251

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.309509
Transaction Length: 1
Severity: High
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3374 - 38551
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x462e61a7c23b2d9919f7f5e8473b16eebb8bde1e.sol:95

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x03e8f56ad0d759bcfff960863388bfdb2efd1579.sol
Total states:18855
40.613943
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.015804
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x03e8f56ad0d759bcfff960863388bfdb2efd1579.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.927910
Transaction Length: 2
Severity: High
Contract: YFICASH
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x03e8f56ad0d759bcfff960863388bfdb2efd1579.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x7354f36fd74a656b4db8429c3fd937b99cd69e45.sol
Total states:5894
12.262249
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.606833
Transaction Length: 1
Severity: High
Contract: Staker
Function name: price()
PC address: 13889
Estimated Gas Usage: 6201 - 110737
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7354f36fd74a656b4db8429c3fd937b99cd69e45.sol:24

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x61b10135639885e00bf4d42de2fe5f2e28abad75.sol
Total states:18855
40.198876
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.810882
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x61b10135639885e00bf4d42de2fe5f2e28abad75.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.787062
Transaction Length: 2
Severity: High
Contract: YFElite
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x61b10135639885e00bf4d42de2fe5f2e28abad75.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x43f39935A10668540Ae465B8CA108F411b1d5cf5.sol
Total states:2015
455.951288
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.986081
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 391
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x43f39935A10668540Ae465B8CA108F411b1d5cf5.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.628028
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 542
Estimated Gas Usage: 729 - 3506
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x43f39935A10668540Ae465B8CA108F411b1d5cf5.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:01.112307
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1025
Estimated Gas Usage: 401 - 496
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x43f39935A10668540Ae465B8CA108F411b1d5cf5.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:14.840506
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1176
Estimated Gas Usage: 743 - 3520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x43f39935A10668540Ae465B8CA108F411b1d5cf5.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:06.929347
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1529
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x43f39935A10668540Ae465B8CA108F411b1d5cf5.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:22.187474
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1680
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x43f39935A10668540Ae465B8CA108F411b1d5cf5.sol:3

*/

/**
 *Submitted for verificatio

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x5f64ab1544d28732f0a24f4713c2c8ec0da089f0.sol
Total states:1580
2.718025
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.102556
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x5f64ab1544d28732f0a24f4713c2c8ec0da089f0.sol:12

 While these are generally available
 * via

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x1f1533d0135459e47eb562c848d60264457042dc.sol
Total states:1239
0.627889
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xf59142b05b8c02cdd8ea3066152c38423179e6cd.sol
Total states:23078
7784.660961
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.797709
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xf59142b05b8c02cdd8ea3066152c38423179e6cd.sol:135

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:49.766958
Transaction Length: 2
Severity: High
Contract: LollipopSwap
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xf59142b05b8c02cdd8ea3066152c38423179e6cd.sol:135

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xe7be03e80e546e69d2225d6a56faf3fdd4ed5970.sol
Total states:8045
17.67153
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039352
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xe7be03e80e546e69d2225d6a56faf3fdd4ed5970.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.456998
Transaction Length: 2
Severity: High
Contract: YFIN
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xe7be03e80e546e69d2225d6a56faf3fdd4ed5970.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xa83d535d460ae8fcf602a0288b63c3d31211f022.sol
Total states:1421
0.775634
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xb6ddc6638958dd3f1ddaba1d0dd9c4d1d9875412.sol
Total states:2481
1.317614
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x62fd07f05ffad28762f05426195115c194dc56a9.sol
Total states:238
0.829926
The analysis was completed successfully. No issues were detected.

---------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7675749184be843f82fa8cfec76a6071c480b0e2.sol
Total states:5259
50.333792
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.353686
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7675749184be843f82fa8cfec76a6071c480b0e2.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.447454
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7675749184be843f82fa8cfec76a6071c480b0e2.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.660031
Transaction Length: 1
Severity: High
Contract: RedFingerToken
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7675749184be843f82fa8cfec76a6071c480b0e2.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.600916
Transaction Length: 1
Severity: High
Contract: RedFingerToken
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7675749184be843f82fa8cfec76a6071c480b0e2.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x08c21791905265ff79d50f05cb08aeacd9c717bd.sol
Total states:60
0.755261
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol
Total states:8045
17.606863
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039868
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.342607
Transaction Length: 2
Severity: High
Contract: YFN
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xd4c6630095d79ee3dbb853d5540deed670d9d1ce.sol
Total states:18192
41.413369
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.567025
Transaction Length: 2
Severity: High
Contract: p0nzi
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd4c6630095d79ee3dbb853d5540deed670d9d1ce.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.390582
Transaction Length: 2
Severity: High
Contract: p0nzi
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd4c6630095d79ee3dbb853d5540deed670d9d1ce.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xc04a67adae8e7acf5681cf87cc66345117b33e73.sol
Total states:878
2.342369
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol
Total states:46840
105.015209
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047086
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.950224
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.819999
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.960613
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.935226
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.984007
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.939765
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.080241
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.007015
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.150176
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.180523
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.172514
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.974572
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.392956
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.712280
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.841667
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.869910
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.092662
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.118215
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x5bd2fc3ad675e199b3121d7710b3e1cec384e52c.sol
Total states:481
3.742797
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol
Total states:23783
494.781872
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.339232
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4387
Estimated Gas Usage: 1014 - 1489
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.778550
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4400
Estimated Gas Usage: 1024 - 1499
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol:36

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:03.126261
Transaction Length: 1
Severity: High
Contract: Token
Function name: increaseApproval(address,uint256)
PC address: 4837
Estimated Gas Usage: 1058 - 1533
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:04.844910
Transaction Length: 1
Severity: Low
Contract: Token
Function name: increaseApproval(address,uint256)
PC address: 4850
Estimated Gas Usage: 1068 - 1543
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol:36

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:05:18.468052
Transaction Length: 2
Severity: Low
Contract: Token
Function name: increaseApproval(address,uint256)
PC address: 4850
Estimated Gas Usage: 1068 - 1543
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol:36

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x730094800a48aeb70f76ab60bb628e84f8fc02cd.sol
Total states:5612
20.242373
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.637144
Transaction Length: 2
Severity: High
Contract: ERC20Impl
Function name: transferFrom(address,address,uint256)
PC address: 1926
Estimated Gas Usage: 2588 - 3633
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x730094800a48aeb70f76ab60bb628e84f8fc02cd.sol:75

balanceOf[to] + tokens

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xfB80CC205C449693b748cbd8D2fBC7927a7D6Fd6.sol
Total states:3497
11.120806
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x347934B4C20597F1546BC2fe3C5903541083f518.sol
Total states:2175
2.674383
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.289367
Transaction Length: 1
Severity: Low
Contract: UpgradeabilityProxy
Function name: fallback
PC address: 274
Estimated Gas Usage: 681 - 3503
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy))
--------------------
In file: ../../contracts/noloop/noloop4/0x347934B4C20597F1546BC2fe3C5903541083f518.sol:260

delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x0e99cc952fc2913ac7f8bc4d0d061982edd23870.sol
Total states:18192
41.810076
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.460356
Transaction Length: 2
Severity: High
Contract: applecorefinancetwenty
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x0e99cc952fc2913ac7f8bc4d0d061982edd23870.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.711201
Transaction Length: 2
Severity: High
Contract: applecorefinancetwenty
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x0e99cc952fc2913ac7f8bc4d0d061982edd23870.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol
Total states:1555
6.702877
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039981
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol:15

*
     * @dev Returns the amount of tokens 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.083866
Transaction Length: 0
Severity: High
Contract: VaultBaselinesBTC
Function name: constructor
PC address: 206
Estimated Gas Usage: 6661 - 61225
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.099854
Transaction Length: 0
Severity: High
Contract: VaultBaseline
Function name: constructor
PC address: 224
Estimated Gas Usage: 6794 - 64036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol:5

nzeppelin/contr

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x9f6076321d8524f5a397144651b26c177009ffa6.sol
Total states:20052
40.458633
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.073291
Transaction Length: 0
Severity: Medium
Contract: DYM
Function name: constructor
PC address: 209
Estimated Gas Usage: 17133 - 78876
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop4/0x9f6076321d8524f5a397144651b26c177009ffa6.sol:211

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.559953
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x9f6076321d8524f5a397144651b26c177009ffa6.sol:123

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.361540
Transaction Length: 2
Severity: High
Contract: DYM
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x9f6076321d8524f5a397144651b26c177009ffa6.sol:123

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x29117ff22c7f156ba0fcbdff92a07344e1d3440c.sol
Total states:23217
666.4666
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x92ecE48522E1aCbcda4Aaa8C2fBF2Aa9FB15D624.sol
Total states:11513
30.890919
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xd3Ed27bb5027DF1429630a6916d18152187960A9.sol
Total states:3497
10.845796
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xc15a781D649895628284D2A07212e1a7b2E17C14.sol
Total states:3016
30.039956
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.100381
Transaction Length: 0
Severity: Low
Contract: Vow
Function name: constructor
PC address: 540
Estimated Gas Usage: 23004 - 107756
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0xc15a781D649895628284D2A07212e1a7b2E17C14.sol:134

vat.hope(flapper_)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.529969
Transaction Length: 1
Severity: Low
Contract: Vow
Function name: kiss(uint256)
PC address: 3469
Estimated Gas Usage: 9605 - 65298
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0xc15a781D649895628284D2A07212e1a7b2E17C14.sol:191

vat.heal(rad)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x1b80eed6c45277b60ab6617e392e23ca7aaa8ccb.sol
Total states:8634
4.517461
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.016224
Transaction Length: 0
Severity: Medium
Contract: JellyCrowdSale
Function name: constructor
PC address: 68
Estimated Gas Usage: 15521 - 75946
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop4/0x1b80eed6c45277b60ab6617e392e23ca7aaa8ccb.sol:348

tx.origin

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xAD43BbDe9b4E1A2894984A55a2f490c4ADc1773b.sol
Total states:5259
58.25135
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.108107
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xAD43BbDe9b4E1A2894984A55a2f490c4ADc1773b.sol:34

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.609478
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xAD43BbDe9b4E1A2894984A55a2f490c4ADc1773b.sol:30

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.690274
Transaction Length: 1
Severity: High
Contract: yfMeta
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xAD43BbDe9b4E1A2894984A55a2f490c4ADc1773b.sol:34

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.313680
Transaction Length: 1
Severity: High
Contract: yfMeta
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xAD43BbDe9b4E1A2894984A55a2f490c4ADc1773b.sol:30

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x2Db6A8e83B9EBb01699012c3c7dda4Aa85e97289.sol
Total states:127
0.210747
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol
Total states:150
93.192778
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.291211
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.386823
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.533760
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:3



// File: @openzeppelin/contracts/token/ER

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.804515
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:3



// File: @openzeppelin/contracts/token/ER

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.890969
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:655

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.320417
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:655

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.293668
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:16

ce.
     */
    funct

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.811440
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:16

ce.
     */
    funct

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.050698
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:16

t of tokens in existence.
     */
    functi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.685762
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:16

t of tokens in existence.
     */
    functi

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x17f7f0fd71c930fcd8bb96f177d35e46ddf2695d.sol
Total states:3269
7.092792
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x56f95662e71f30b333b456439248c6de589082a4.sol
Total states:3429
5.605699
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7b7B367ec9FA50a921acC4dbcedeA9CF39d9bF4d.sol
Total states:6179
54.045168
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.125744
Transaction Length: 1
Severity: High
Contract: Token
Function name: initialize(string,string,uint256,address)
PC address: 1255
Estimated Gas Usage: 406 - 501
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7b7B367ec9FA50a921acC4dbcedeA9CF39d9bF4d.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.467097
Transaction Length: 1
Severity: High
Contract: Token
Function name: initialize(string,string,uint256,address)
PC address: 1406
Estimated Gas Usage: 748 - 3525
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7b7B367ec9FA50a921acC4dbcedeA9CF39d9bF4d.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.542630
Transaction Length: 2
Severity: High
Contract: Token
Function name: increaseAllowance(address,uint256)
PC address: 4678
Estimated Gas Usage: 1103 - 1578
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7b7B367ec9FA50a921acC4dbcedeA9CF39d9bF4d.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xc08E8046EB3170D03D9BE252240Db5D7c824720b.sol
Total states:138
3.021027
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.534387
Transaction Length: 0
Severity: High
Contract: HolderVesting
Function name: transferOwnership(address)
PC address: 955
Estimated Gas Usage: 7523 - 31347
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xc08E8046EB3170D03D9BE252240Db5D7c824720b.sol:515

_owner

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xb5afccef680ee1d9bca47fde712007020197591e.sol
Total states:437
1.919005
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.058909
Transaction Length: 0
Severity: High
Contract: AquaToken
Function name: constructor
PC address: 127
Estimated Gas Usage: 15275 - 78048
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xb5afccef680ee1d9bca47fde712007020197591e.sol:22

transaction and its data. While these are g

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xef7acfdb8bfcae9735b631be32357684dcc1ea96.sol
Total states:5589
451.891173
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.275005
Transaction Length: 1
Severity: High
Contract: NARToken
Function name: initialize(string,string,uint8)
PC address: 742
Estimated Gas Usage: 408 - 503
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xef7acfdb8bfcae9735b631be32357684dcc1ea96.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.020247
Transaction Length: 1
Severity: High
Contract: NARToken
Function name: initialize(string,string,uint8)
PC address: 893
Estimated Gas Usage: 750 - 3527
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xef7acfdb8bfcae9735b631be32357684dcc1ea96.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:47.557449
Transaction Length: 1
Severity: High
Contract: NARToken
Function name: symbol()
PC address: 1883
Estimated Gas Usage: 1456 - 2491
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xef7acfdb8bfcae9735b631be32357684dcc1ea96.sol:106

string public symbol

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x6f450f117114075d1d1c91dd64a61c0ba72ca68f.sol
Total states:9871
19.475483
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039287
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x6f450f117114075d1d1c91dd64a61c0ba72ca68f.sol:8

    ███   ███    ███ █

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.603661
Transaction Length: 2
Severity: High
Contract: PadThaiToken
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x6f450f117114075d1d1c91dd64a61c0ba72ca68f.sol:153

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x50040b95e06e030e90b67fe158e6c2c085acd867.sol
Total states:1389
2.212421
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xe066892b38f076798b84f3c2e8d4ed4fc0d2f30d.sol
Total states:10094
20.482959
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.035456
Transaction Length: 0
Severity: High
Contract: CARPFINANCE
Function name: constructor
PC address: 98
Estimated Gas Usage: 233 - 3006
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe066892b38f076798b84f3c2e8d4ed4fc0d2f30d.sol:22

| \ | |/ ____|  ____|

 | |       /  \  | |

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.017908
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe066892b38f076798b84f3c2e8d4ed4fc0d2f30d.sol:136

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x5614464A2d46C17750b2E34376872114a192bE68.sol
Total states:1239
0.653026
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x669Db70d3A0D7941F468B0d907E9d90BD7ddA8d1.sol
Total states:4998
47.700862
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.052223
Transaction Length: 0
Severity: High
Contract: ERC721Metadata
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x669Db70d3A0D7941F468B0d907E9d90BD7ddA8d1.sol:11

/ds-note/src/note.sol
/// note.sol -- the `

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.056384
Transaction Length: 0
Severity: High
Contract: Title
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x669Db70d3A0D7941F468B0d907E9d90BD7ddA8d1.sol:11

/ds-note/src/note.sol
/// note.sol -- the `

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.343599
Transaction Length: 1
Severity: High
Contract: ERC721
Function name: safeTransferFrom(address,address,uint256,bytes)
PC address: 1136
Estimated Gas Usage: 477 - 572
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x669Db70d3A0D7941F468B0d907E9d90BD7ddA8d1.sol:3

*/

// Verified using https://dapp.

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x2beb9e18e3ee68cecb5842cc71a80890e0b39c9e.sol
Total states:3451
5.862494
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x9e13628766e81f2ecada1e4489b5177984c3ece6.sol
Total states:2285
220.10099
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.396865
Transaction Length: 1
Severity: High
Contract: Cover_ZapIn_General_V1
Function name: ZapIn(address,address,address,address,uint256,address,address,bytes)
PC address: 1258
Estimated Gas Usage: 563 - 658
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x9e13628766e81f2ecada1e4489b5177984c3ece6.sol:3



*/



// ███████╗

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.943669
Transaction Length: 1
Severity: High
Contract: Cover_ZapIn_General_V1
Function name: ZapIn(address,address,address,address,uint256,address,address,bytes)
PC address: 7603
Estimated Gas Usage: 8110 - 29855
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x9e13628766e81f2ecada1e4489b5177984c3ece6.sol:402

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xb75c1c1bd4927cdffdee68dba577a5c209d35eca.sol
Total states:3586
5.927799
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x18e24CE6307453bca5756b6Fcf0b4b295C2adcf6.sol
Total states:3445
11.479133
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x000000003A8DBF47cD362EDA39B3a5F3FC6E99ce.sol
Total states:30
0.07227
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol
Total states:196492
2194.48146
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.029205
Transaction Length: 1
Severity: High
Contract: RequestableERC20Wrapper
Function name: applyRequestInChildChain(bool,uint256,address,bytes32,bytes)
PC address: 572
Estimated Gas Usage: 484 - 579
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:3

*/

// File: requestable-erc20-wrap

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:08:15.738807
Transaction Length: 1
Severity: High
Contract: EtherToken
Function name: applyRequestInChildChain(bool,uint256,address,bytes32,bytes)
PC address: 623
Estimated Gas Usage: 484 - 579
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:3

*/

// File: requestable-erc20-wrap

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:01.125593
Transaction Length: 1
Severity: High
Contract: RequestableERC20Wrapper
Function name: applyRequestInRootChain(bool,uint256,address,bytes32,bytes)
PC address: 1467
Estimated Gas Usage: 505 - 600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:3

*/

// File: requestable-erc20-wrap

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:09:33.454188
Transaction Length: 1
Severity: High
Contract: EtherToken
Function name: applyRequestInRootChain(bool,uint256,address,bytes32,bytes)
PC address: 1705
Estimated Gas Usage: 505 - 600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:3

*/

// File: requestable-erc20-wrap

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:22.442568
Transaction Length: 1
Severity: High
Contract: RequestableERC20Wrapper
Function name: decodeTrieValue(bytes)
PC address: 1770
Estimated Gas Usage: 340 - 435
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:3

*/

// File: requestable-erc20-wrap

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:09:56.374843
Transaction Length: 1
Severity: High
Contract: EtherToken
Function name: decodeTrieValue(bytes)
PC address: 2106
Estimated Gas Usage: 362 - 457
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:3

*/

// File: requestable-erc20-wrap

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.110247
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4104
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:54

_a + _b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:35.164584
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4117
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:55

assert(c >= _a)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:05.555852
Transaction Length: 2
Severity: Low
Contract: RequestableERC20Wrapper
Function name: withdraw(uint256)
PC address: 4324
Estimated Gas Usage: 15714 - 58489
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:356

token.transfer(msg.sender, _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:04:46.879888
Transaction Length: 2
Severity: Low
Contract: EtherToken
Function name: withdraw(uint256)
PC address: 4751
Estimated Gas Usage: 15686 - 58461
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:356

token.transfer(msg.sender, _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:35.102972
Transaction Length: 2
Severity: Low
Contract: RequestableERC20Wrapper
Function name: deposit(uint256)
PC address: 6607
Estimated Gas Usage: 15793 - 58663
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:348

token.transferFrom(msg.sender, address(this), _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:05:19.982734
Transaction Length: 2
Severity: Low
Contract: EtherToken
Function name: deposit(uint256)
PC address: 7115
Estimated Gas Usage: 15704 - 58574
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:348

token.transferFrom(msg.sender, address(this), _amount)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:08.160225
Transaction Length: 2
Severity: Low
Contract: RequestableERC20Wrapper
Function name: withdraw(uint256)
PC address: 8005
Estimated Gas Usage: 1331 - 1946
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:46

assert(_b <= _a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.002976
Transaction Length: 2
Severity: High
Contract: RequestableERC20Wrapper
Function name: increaseApproval(address,uint256)
PC address: 8022
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:54

_a + _b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:44.148569
Transaction Length: 2
Severity: Low
Contract: RequestableERC20Wrapper
Function name: increaseApproval(address,uint256)
PC address: 8035
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:55

assert(c >= _a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:04:49.390653
Transaction Length: 2
Severity: Low
Contract: EtherToken
Function name: withdraw(uint256)
PC address: 8513
Estimated Gas Usage: 1309 - 1924
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:46

assert(_b <= _a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.527310
Transaction Length: 2
Severity: High
Contract: EtherToken
Function name: increaseApproval(address,uint256)
PC address: 8530
Estimated Gas Usage: 999 - 1474
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:54

_a + _b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:05:43.157543
Transaction Length: 2
Severity: Low
Contract: EtherToken
Function name: increaseApproval(address,uint256)
PC address: 8543
Estimated Gas Usage: 1009 - 1484
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:55

assert(c >= _a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x18ec17156dac62fb1035553533eb07a92798e0b7.sol
Total states:13839
32.320881
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.034495
Transaction Length: 0
Severity: High
Contract: ERC20Detailed
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x18ec17156dac62fb1035553533eb07a92798e0b7.sol:15

 view returns (uint);
    function balanceO

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.607892
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3582
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x18ec17156dac62fb1035553533eb07a92798e0b7.sol:123

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.904691
Transaction Length: 2
Severity: High
Contract: FXCOIN
Function name: increaseAllowance(address,uint256)
PC address: 4415
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x18ec17156dac62fb1035553533eb07a92798e0b7.sol:123

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x693a932faadaf2a6f6d716d249f43462e64c646a.sol
Total states:1436
2.705081
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x396B8dB9d67075Dc59DCb40CA9FB30659A666787.sol
Total states:3497
11.227232
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x5cb611a4f27b4ba8ab8115375b8fb5d79e8afdce.sol
Total states:2906
27.207659
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.026121
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5cb611a4f27b4ba8ab8115375b8fb5d79e8afdce.sol:13

ext, including the
 * sender of the transac

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.303655
Transaction Length: 0
Severity: High
Contract: WarpVaultSC
Function name: constructor
PC address: 744
Estimated Gas Usage: 59602 - 319430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5cb611a4f27b4ba8ab8115375b8fb5d79e8afdce.sol:5

_modules\@openz

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.159773
Transaction Length: 0
Severity: High
Contract: WarpVaultSC
Function name: constructor
PC address: 2059
Estimated Gas Usage: 47404 - 231962
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5cb611a4f27b4ba8ab8115375b8fb5d79e8afdce.sol:136

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x375d4ddfbe2c53f83f0b0d41c6f1d02d42042011.sol
Total states:11841
271.669496
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.362287
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x375d4ddfbe2c53f83f0b0d41c6f1d02d42042011.sol:39

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.026751
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x375d4ddfbe2c53f83f0b0d41c6f1d02d42042011.sol:29

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.541133
Transaction Length: 1
Severity: High
Contract: LCSTToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1483
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x375d4ddfbe2c53f83f0b0d41c6f1d02d42042011.sol:3

*/

//pragma solidity ^0.4.24;
prag

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:28.118663
Transaction Length: 1
Severity: Medium
Contract: LCSTToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 4325
Estimated Gas Usage: 8823 - 34729
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop4/0x375d4ddfbe2c53f83f0b0d41c6f1d02d42042011.sol:180

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:30.092889
Transaction Length: 1
Severity: High
Contract: LCSTToken
Function name: safeMul(uint256,uint256)
PC address: 4362
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x375d4ddfbe2c53f83f0b0d41c6f1d02d42042011.sol:39

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:37.907008
Transaction Length: 1
Severity: High
Contract: LCSTToken
Function name: safeAdd(uint256,uint256)
PC address: 4546
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x375d4ddfbe2c53f83f0b0d41c6f1d02d42042011.sol:29

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xea14adfdf114eb1d3d53c605ece7da9b70781095.sol
Total states:3381
5.733725
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol
Total states:2389
5711.724939
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:08:30.132648
Transaction Length: 1
Severity: Medium
Contract: TokenSale
Function name: fallback
PC address: 195
Estimated Gas Usage: 16621 - 126851
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1326
Offset: 1647
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol:74

contract TokenSale is Owned{

    IERC20Token public tokenContract;  // the token being sold

    uint256 public price = 400;              // 1eth = 400 tokens

    uint256 public decimals = 18;

    

    uint256 public tokensSold;

    uint256 public ethRaised;

    uint256 public MaxETHAmount;



    event Sold(address buyer, uint256 amount);



    constructor(IERC20Token _tokenContract, uint256 _maxEthAmount) public{

        owner = msg.sender;

        tokenContract = _tokenContract;

        MaxETHAmount = _maxEthAmount;

    }

    

    function() external payable {

        buyTokensWithETH(msg.sender);

    }



    // Guards against integer overflows

    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {

        if (a == 0) {

            return 0;

        } else {

            uint256 c = a * b;

            assert(c / a == b);

            return c;

        }

    }

    

    function multiply(uint x, uint y) internal pure returns (uint z) {

        require(y == 0 || (z = x * y) / y == x);

    }

    

    function setPrice(uint256 price_) external onlyOwner{

        price = price_;

    }





    function buyTokensWithETH(address _receiver) public payable {

        require(ethRaised < MaxETHAmount, "Presale finished");

        uint _amount = msg.value; 

        require(_receiver != address(0), "Can't send to 0x00 address"); 

        require(_amount > 0, "Can't buy with 0 eth"); 

        

        uint tokensToBuy = multiply(_amount, price);

        require(owner.send(_amount), "Unable to transfer eth to owner");

        require(tokenContract.transfer(_receiver, tokensToBuy), "Unable to transfer token to user"); 

        tokensSold += tokensToBuy; 

        ethRaised += _amount;

        

        emit Sold(msg.sender, tokensToBuy);

    }



    



    function endSale() public {

        require(msg.sender == owner);



        // Send unsold tokens to the owner.

        require(tokenContract.transfer(owner, tokenContract.balanceOf(address(this))));



        msg.sender.transfer(address(this).balance);

    }

}

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:56:45.906834
Transaction Length: 1
Severity: Low
Contract: TokenSale
Function name: buyTokensWithETH(address)
PC address: 1647
Estimated Gas Usage: 4272 - 39684
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol:172

tokenContract.transfer(_receiver, tokensToBuy)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol
Total states:44637
142.731954
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.138725
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 4827
Estimated Gas Usage: 2616 - 3661
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:30.445458
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4840
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:33

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.178510
Transaction Length: 2
Severity: High
Contract: Pausable
Function name: transferFrom(address,address,uint256)
PC address: 5561
Estimated Gas Usage: 2639 - 3684
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.689665
Transaction Length: 2
Severity: Low
Contract: Pausable
Function name: increaseApproval(address,uint256)
PC address: 5574
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:33

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.163241
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: transferFrom(address,address,uint256)
PC address: 6243
Estimated Gas Usage: 3145 - 4520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.481470
Transaction Length: 2
Severity: Low
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6256
Estimated Gas Usage: 1471 - 2276
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:33

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.791625
Transaction Length: 2
Severity: High
Contract: Yearn20MoonFinance
Function name: increaseApproval(address,uint256)
PC address: 7345
Estimated Gas Usage: 1483 - 2288
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:19.017915
Transaction Length: 2
Severity: Low
Contract: Yearn20MoonFinance
Function name: increaseApproval(address,uint256)
PC address: 7358
Estimated Gas Usage: 1493 - 2298
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:33

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x9Ca87C82f5C5760C7C693a3cAf6801255AB8f097.sol
Total states:3134
5.738392
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xa2236b7e06135cae63edecc983245607d2eaf378.sol
Total states:76097
145.702825
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.398071
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa2236b7e06135cae63edecc983245607d2eaf378.sol:60

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:52.371437
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa2236b7e06135cae63edecc983245607d2eaf378.sol:60

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.216302
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa2236b7e06135cae63edecc983245607d2eaf378.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:02.759326
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa2236b7e06135cae63edecc983245607d2eaf378.sol:63

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:56.677866
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa2236b7e06135cae63edecc983245607d2eaf378.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:02.847871
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa2236b7e06135cae63edecc983245607d2eaf378.sol:63

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x1F995B1A9E98908cbF924f4bDa27341B298Cac62.sol
Total states:17092
32.074049
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.463263
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3255
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x1F995B1A9E98908cbF924f4bDa27341B298Cac62.sol:137

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.041332
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3435
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x1F995B1A9E98908cbF924f4bDa27341B298Cac62.sol:137

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xf893117b7195f70e5043dB58A59625a35B408007.sol
Total states:1708
1.817976
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7c67ec786f46103d78327439b87061cf2e338f80.sol
Total states:12689
22.564016
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039863
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7c67ec786f46103d78327439b87061cf2e338f80.sol:15

eturns true if `account` is a contract.
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.896767
Transaction Length: 2
Severity: High
Contract: VerifyYourContractsAssholes
Function name: increaseAllowance(address,uint256)
PC address: 4998
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7c67ec786f46103d78327439b87061cf2e338f80.sol:197

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x19dc0A94b461d081A800660b2B121485d62feaC3.sol
Total states:3455
5.78557
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x74bb785045cae68c1c72d6197245c6dadc4e48b1.sol
Total states:18192
42.400478
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.205095
Transaction Length: 2
Severity: High
Contract: yborrow
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x74bb785045cae68c1c72d6197245c6dadc4e48b1.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.844718
Transaction Length: 2
Severity: High
Contract: yborrow
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x74bb785045cae68c1c72d6197245c6dadc4e48b1.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol
Total states:44973
140.888635
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.034541
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 4827
Estimated Gas Usage: 2616 - 3661
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.477740
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4840
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:36

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.187322
Transaction Length: 2
Severity: High
Contract: Pausable
Function name: transferFrom(address,address,uint256)
PC address: 5561
Estimated Gas Usage: 2639 - 3684
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.144057
Transaction Length: 2
Severity: Low
Contract: Pausable
Function name: increaseApproval(address,uint256)
PC address: 5574
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:36

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.131042
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: transferFrom(address,address,uint256)
PC address: 6243
Estimated Gas Usage: 3145 - 4520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:29.713214
Transaction Length: 2
Severity: Low
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6256
Estimated Gas Usage: 1471 - 2276
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:36

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.858412
Transaction Length: 2
Severity: High
Contract: SFG
Function name: increaseApproval(address,uint256)
PC address: 7540
Estimated Gas Usage: 1483 - 2288
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:18.827344
Transaction Length: 2
Severity: Low
Contract: SFG
Function name: increaseApproval(address,uint256)
PC address: 7553
Estimated Gas Usage: 1493 - 2298
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:36

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol
Total states:60
247.126918
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.296006
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactOut(address,uint256)
PC address: 2347
Estimated Gas Usage: 2577 - 40951
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.404508
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactOut(address,uint256)
PC address: 2350
Estimated Gas Usage: 2509 - 40600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.254115
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2507
Estimated Gas Usage: 2509 - 40600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:174

new address[](2)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.394772
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2825
Estimated Gas Usage: 824 - 4541
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:177

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:39.888039
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2865
Estimated Gas Usage: 974 - 5067
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:177

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.027625
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2934
Estimated Gas Usage: 2416 - 40414
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.678089
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2937
Estimated Gas Usage: 2509 - 40600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.106596
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2958
Estimated Gas Usage: 2509 - 40600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:177

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.172781
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2983
Estimated Gas Usage: 2509 - 40600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:2


*/

pragma solidity 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.513928
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2989
Estimated Gas Usage: 2509 - 40600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:7

0 {
    functi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:15.771651
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3009
Estimated Gas Usage: 2567 - 40751
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:10

 returns (bool);
    

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.189058
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3011
Estimated Gas Usage: 2567 - 40751
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:10

 uint amount) external returns (bool);
    f

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.892483
Transaction Length: 1
Severity: Low
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3052
Estimated Gas Usage: 2631 - 40908
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:177

UNI.getAmountsOut(inExact, _path)[1]

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x03882d034804740e3208911bc00663e07e023336.sol
Total states:481
3.95708
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xfedcd6723042dab201087751746c320635e4a866.sol
Total states:76081
147.596026
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.592140
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xfedcd6723042dab201087751746c320635e4a866.sol:59

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.818284
Transaction Length: 2
Severity: High
Contract: YFIN
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xfedcd6723042dab201087751746c320635e4a866.sol:59

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.193586
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xfedcd6723042dab201087751746c320635e4a866.sol:61

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.357186
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xfedcd6723042dab201087751746c320635e4a866.sol:62

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.811795
Transaction Length: 2
Severity: High
Contract: YFIN
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xfedcd6723042dab201087751746c320635e4a866.sol:61

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:04.171629
Transaction Length: 2
Severity: High
Contract: YFIN
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xfedcd6723042dab201087751746c320635e4a866.sol:62

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x8f2eA106c8CDf59c72d49aFAcCa3E70bDA175F29.sol
Total states:2705
521.22472
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.029235
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 377
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8f2eA106c8CDf59c72d49aFAcCa3E70bDA175F29.sol:3

*/

// File: contracts/lib/SafeMath

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.086130
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 528
Estimated Gas Usage: 729 - 3506
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8f2eA106c8CDf59c72d49aFAcCa3E70bDA175F29.sol:3

*/

// File: contracts/lib/SafeMath

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:05.130710
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1011
Estimated Gas Usage: 401 - 496
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8f2eA106c8CDf59c72d49aFAcCa3E70bDA175F29.sol:3

*/

// File: contracts/lib/SafeMath

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:18.637427
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1162
Estimated Gas Usage: 743 - 3520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8f2eA106c8CDf59c72d49aFAcCa3E70bDA175F29.sol:3

*/

// File: contracts/lib/SafeMath

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:46.728819
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1515
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8f2eA106c8CDf59c72d49aFAcCa3E70bDA175F29.sol:3

*/

// File: contracts/lib/SafeMath

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:01.250939
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1666
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8f2eA106c8CDf59c72d49aFAcCa3E70bDA175F29.sol:3

*/

// File: contracts/lib/SafeMath

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x99a5ed75dbbe53de2429cf6c3d84b05b971f83bd.sol
Total states:7439
18.991876
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.793121
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x99a5ed75dbbe53de2429cf6c3d84b05b971f83bd.sol:41

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol
Total states:10158
33.828611
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:06.680543
Transaction Length: 1
Severity: Low
Contract: AErc20
Function name: seize(address,address,uint256)
PC address: 10140
Estimated Gas Usage: 7628 - 28809
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol:1828

controller.seizeAllowed(address(this), msg.sender, liquidator, borrower, seizeTokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.184468
Transaction Length: 1
Severity: Low
Contract: AErc20
Function name: transfer(address,uint256)
PC address: 15245
Estimated Gas Usage: 7688 - 28774
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol:819

controller.transferAllowed(address(this), src, dst, tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.708749
Transaction Length: 2
Severity: Low
Contract: AErc20
Function name: transfer(address,uint256)
PC address: 15245
Estimated Gas Usage: 7681 - 28767
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol:819

controller.transferAllowed(address(this), src, dst, tokens)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x12767ED038A80895E45EE3dFF1B7494d49400bEc.sol
Total states:1415
3.824614
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.088219
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1114
Estimated Gas Usage: 1559 - 2455
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x12767ED038A80895E45EE3dFF1B7494d49400bEc.sol:153

ilks[ilk].pip.peek()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.641379
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1457
Estimated Gas Usage: 3765 - 39836
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x12767ED038A80895E45EE3dFF1B7494d49400bEc.sol:155

vat.file(ilk, "spot", spot)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x4b88caa16837477770be263e038c15505415644e.sol
Total states:19694
41.051896
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.108751
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x4b88caa16837477770be263e038c15505415644e.sol:160

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.647146
Transaction Length: 2
Severity: High
Contract: YFVault
Function name: increaseAllowance(address,uint256)
PC address: 10530
Estimated Gas Usage: 1060 - 1535
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x4b88caa16837477770be263e038c15505415644e.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xa7f0ee18fd143001e1c249dae3e6fcb9587333d5.sol
Total states:1174
0.687431
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x76c60c0d05ca29cb0f82e181208d00fadacdb783.sol
Total states:9871
19.363564
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039399
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x76c60c0d05ca29cb0f82e181208d00fadacdb783.sol:8

    ███   ███    ███ █

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.623954
Transaction Length: 2
Severity: High
Contract: PadThaiToken
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x76c60c0d05ca29cb0f82e181208d00fadacdb783.sol:153

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xE0D3bde72B1B983129953232455a1C6E78F5D6B2.sol
Total states:0
0.011389
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xf0abbbab4a0ed1e8df15717b3513e882310c7290.sol
Total states:1595
3.774952
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.316022
Transaction Length: 1
Severity: Medium
Contract: SUSHIPOWAH
Function name: totalSupply()
PC address: 443
Estimated Gas Usage: 3856 - 73447
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1306
Offset: 1560
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop4/0xf0abbbab4a0ed1e8df15717b3513e882310c7290.sol:94

function totalSupply() public view returns (uint256) {
    IPair pair = IPair(0x795065dCc9f64b5614C407a6EFDC400DA6221FB0);
    IBar bar = IBar(0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272);
    IERC20 sushi = IERC20(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);
    (uint256 lp_totalSushi, , ) = pair.getReserves();
    uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));

    return lp_totalSushi.mul(2).add(xsushi_totalSushi);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.100399
Transaction Length: 1
Severity: High
Contract: SUSHIPOWAH
Function name: balanceOf(address)
PC address: 3504
Estimated Gas Usage: 7043 - 145570
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xf0abbbab4a0ed1e8df15717b3513e882310c7290.sol:51

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol
Total states:2675
7.620647
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.750825
Transaction Length: 1
Severity: Low
Contract: FNSPStake
Function name: ADDFUNDS(uint256)
PC address: 4385
Estimated Gas Usage: 1634 - 2625
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:284

IERC20(FNSP).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.944452
Transaction Length: 1
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 4874
Estimated Gas Usage: 1618 - 2609
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:255

IERC20(FNSP).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.648234
Transaction Length: 1
Severity: High
Contract: FNSPStake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3396 - 38573
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:96

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x06f673b052e97013d8841c463e29d3d752d7c368.sol
Total states:1253
2.180771
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041650
Transaction Length: 0
Severity: High
Contract: Deriswap
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x06f673b052e97013d8841c463e29d3d752d7c368.sol:13

  returns (bytes memory) {
        this; //

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xaC8d7dC05BaA373ec258f5C9644e859a7927F362.sol
Total states:3445
11.133148
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x36c6bafb43718b776d32f2389cdf9c25823c1965.sol
Total states:3088
58.069074
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040707
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x36c6bafb43718b776d32f2389cdf9c25823c1965.sol:13

ext, including the
 * sender of the transac

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.937002
Transaction Length: 1
Severity: High
Contract: WarpVaultLPFactory
Function name: createWarpVaultLP(uint256,address,string)
PC address: 202
Estimated Gas Usage: 356 - 451
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x36c6bafb43718b776d32f2389cdf9c25823c1965.sol:3

*/

// File: node_modules\@openzepp

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xce95896d65da8fed6e555adf6a00a50d83d9945b.sol
Total states:9807
232.623186
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.071150
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xce95896d65da8fed6e555adf6a00a50d83d9945b.sol:40

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:24.826790
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xce95896d65da8fed6e555adf6a00a50d83d9945b.sol:32

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.539951
Transaction Length: 1
Severity: High
Contract: raskaToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1648
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xce95896d65da8fed6e555adf6a00a50d83d9945b.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:28.617175
Transaction Length: 1
Severity: Medium
Contract: raskaToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop4/0xce95896d65da8fed6e555adf6a00a50d83d9945b.sol:213

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:37.085967
Transaction Length: 1
Severity: High
Contract: raskaToken
Function name: safeMul(uint256,uint256)
PC address: 5262
Estimated Gas Usage: 394 - 489
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xce95896d65da8fed6e555adf6a00a50d83d9945b.sol:40

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:04.555452
Transaction Length: 1
Severity: High
Contract: raskaToken
Function name: safeAdd(uint256,uint256)
PC address: 5840
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xce95896d65da8fed6e555adf6a00a50d83d9945b.sol:32

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x669cC97687c792fc5369d7bdd38cC9CFb2056d98.sol
Total states:0
0.016703
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x8282603eA15D6023b4075824b01fb5e1965C61AC.sol
Total states:9670
19.705902
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.034001
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8282603eA15D6023b4075824b01fb5e1965C61AC.sol:12


        this; // silence state mutability 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.297288
Transaction Length: 2
Severity: High
Contract: DimSumSwap
Function name: increaseAllowance(address,uint256)
PC address: 5292
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8282603eA15D6023b4075824b01fb5e1965C61AC.sol:172

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xcaeccb24dde852c15e9e712debb506a31fb6a835.sol
Total states:432
0.731971
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x6e0a6448056a59a8fbd1e527f63ae85b33b059ef.sol
Total states:138
2.135822
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x69692d3345010a207b759a7d1af6fc7f38b35c5e.sol
Total states:2873
18.387322
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.033920
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x69692d3345010a207b759a7d1af6fc7f38b35c5e.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.119648
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: duration()
PC address: 301
Estimated Gas Usage: 10897 - 54186
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x69692d3345010a207b759a7d1af6fc7f38b35c5e.sol:638

function releasableAmount(IERC20 _token) public view returns (uint256) {
        return vestedAmount(_token).sub(released[address(_token)]);
    }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x9a17534f976ca71695937d7b53aa9a952ad96aa4.sol
Total states:1239
0.538463
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x10c38026216d4b7edf79e38907f2ad5cb955b587.sol
Total states:5259
55.346056
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.169668
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x10c38026216d4b7edf79e38907f2ad5cb955b587.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.594723
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x10c38026216d4b7edf79e38907f2ad5cb955b587.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.818997
Transaction Length: 1
Severity: High
Contract: AmirToken
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x10c38026216d4b7edf79e38907f2ad5cb955b587.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.740093
Transaction Length: 1
Severity: High
Contract: AmirToken
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x10c38026216d4b7edf79e38907f2ad5cb955b587.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7F537e2986DCBB93708fe12223453883047eCe34.sol
Total states:3445
11.178978
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol
Total states:481
3.77168
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7ec400acb0565600915d34d50449ec6f2b592a5a.sol
Total states:2294
5.328177
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.791712
Transaction Length: 2
Severity: High
Contract: UniverseFinance
Function name: transferFrom(address,address,uint256)
PC address: 3814
Estimated Gas Usage: 7774 - 28819
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7ec400acb0565600915d34d50449ec6f2b592a5a.sol:14

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xbc77cca71fd9747255e407b241857d27e009f027.sol
Total states:10492
34.659136
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.542623
Transaction Length: 1
Severity: High
Contract: YearnToken
Function name: transfer(address,uint256)
PC address: 6338
Estimated Gas Usage: 834 - 929
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xbc77cca71fd9747255e407b241857d27e009f027.sol:31

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.282201
Transaction Length: 2
Severity: High
Contract: YearnToken
Function name: increaseAllowance(address,uint256)
PC address: 6458
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xbc77cca71fd9747255e407b241857d27e009f027.sol:9

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7b69d465c0f9fb22affae56aa86149973e9b0966.sol
Total states:5258
50.764321
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.287427
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7b69d465c0f9fb22affae56aa86149973e9b0966.sol:74

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.153210
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7b69d465c0f9fb22affae56aa86149973e9b0966.sol:66

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.417928
Transaction Length: 1
Severity: High
Contract: ProtocolFinance
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7b69d465c0f9fb22affae56aa86149973e9b0966.sol:74

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.340722
Transaction Length: 1
Severity: High
Contract: ProtocolFinance
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7b69d465c0f9fb22affae56aa86149973e9b0966.sol:66

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x2b68E5cC1D62e7682c0aE13a7ffcE2450B7846F5.sol
Total states:18855
41.421586
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.639758
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x2b68E5cC1D62e7682c0aE13a7ffcE2450B7846F5.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.990471
Transaction Length: 2
Severity: High
Contract: YFICASH
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x2b68E5cC1D62e7682c0aE13a7ffcE2450B7846F5.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xE6468EACa0e17F4fa1F80CC3c16C10ae15bA4bA1.sol
Total states:871
1.348019
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x87a5ebb2c534f0b7951954e900692760217b7d6d.sol
Total states:1665
2.813514
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039001
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x87a5ebb2c534f0b7951954e900692760217b7d6d.sol:16

agnostic to the way tokens are created. Thi

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xa59e980145a70515a51b96e14127b3ae11e36242.sol
Total states:15332
35.81198
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.464631
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 2575
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa59e980145a70515a51b96e14127b3ae11e36242.sol:64

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.487506
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 2748
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa59e980145a70515a51b96e14127b3ae11e36242.sol:64

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x15fe17da18288d1799643be1bb07fb939626f5f9.sol
Total states:21039
68.726576
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.869174
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x15fe17da18288d1799643be1bb07fb939626f5f9.sol:119

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.767384
Transaction Length: 1
Severity: Low
Contract: StableCreditProtocol
Function name: markets(address,uint256)
PC address: 3257
Estimated Gas Usage: 843 - 1128
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x15fe17da18288d1799643be1bb07fb939626f5f9.sol:257

mapping (address => address[]) public markets

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.535815
Transaction Length: 2
Severity: High
Contract: StableCreditProtocol
Function name: increaseAllowance(address,uint256)
PC address: 10725
Estimated Gas Usage: 1038 - 1513
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x15fe17da18288d1799643be1bb07fb939626f5f9.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.702961
Transaction Length: 1
Severity: High
Contract: StableCreditProtocol
Function name: deposit(address,uint256)
PC address: 18283
Estimated Gas Usage: 3733 - 73187
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x15fe17da18288d1799643be1bb07fb939626f5f9.sol:138

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol
Total states:3661
6.059903
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040591
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol:20

hru contract.

 * No presale.No dev wallet.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.042242
Transaction Length: 0
Severity: High
Contract: TRIFLECTOR
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol:20

hru contract.

 * No presale.No dev wallet.

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x890d53d8772a3cd3ad55cbd3a210e0fe88a034da.sol
Total states:1634
5.236154
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.175465
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: constructor
PC address: 606
Estimated Gas Usage: 7555 - 31379
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x890d53d8772a3cd3ad55cbd3a210e0fe88a034da.sol:253

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xB37523a39C6F3262b55b3FC81BD0357d0bEF4896.sol
Total states:0
0.018039
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7982e89febbde6dc18844550ccf6356646399eee.sol
Total states:868
3.34307
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x05dae56df5d37c6bb94fecdb56dd7176eb8d7fff.sol
Total states:1092
2.725822
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.111638
Transaction Length: 0
Severity: High
Contract: RugPullGame
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x05dae56df5d37c6bb94fecdb56dd7176eb8d7fff.sol:13

l view  returns (bytes memory) {
        th

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7bf69162b122a08b89e5c8529a242593300ffa51.sol
Total states:878
2.190284
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xb5a137bb2ab7e317756c399fd94ca215cece81d6.sol
Total states:21039
64.690627
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.191433
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xb5a137bb2ab7e317756c399fd94ca215cece81d6.sol:119

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.763723
Transaction Length: 1
Severity: Low
Contract: StableCreditProtocol
Function name: markets(address,uint256)
PC address: 3257
Estimated Gas Usage: 843 - 1128
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xb5a137bb2ab7e317756c399fd94ca215cece81d6.sol:257

mapping (address => address[]) public markets

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.493737
Transaction Length: 2
Severity: High
Contract: StableCreditProtocol
Function name: increaseAllowance(address,uint256)
PC address: 10725
Estimated Gas Usage: 1038 - 1513
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xb5a137bb2ab7e317756c399fd94ca215cece81d6.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.537833
Transaction Length: 1
Severity: High
Contract: StableCreditProtocol
Function name: deposit(address,uint256)
PC address: 17681
Estimated Gas Usage: 3733 - 73187
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xb5a137bb2ab7e317756c399fd94ca215cece81d6.sol:138

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol
Total states:4371
1847.543982
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.960470
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1219
Estimated Gas Usage: 543 - 638
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.302280
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1370
Estimated Gas Usage: 885 - 3662
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.891585
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1521
Estimated Gas Usage: 1227 - 6686
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:56.440449
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1672
Estimated Gas Usage: 1569 - 9710
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:03.244794
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: juniorName()
PC address: 1867
Estimated Gas Usage: 1524 - 2559
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol:162

string              public juniorName

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:08:55.466288
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: seniorSymbol()
PC address: 2072
Estimated Gas Usage: 1458 - 2493
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol:161

string              public seniorSymbol

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:25:58.027232
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: seniorName()
PC address: 3675
Estimated Gas Usage: 1500 - 2535
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol:160

string              public seniorName

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x54b8c98268da0055971652a95f2bfd3a9349a38c.sol
Total states:481
4.197924
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x4ed07051b9d053e442b42cb6b6083bcd7031729e.sol
Total states:10580
72.091766
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.878046
Transaction Length: 1
Severity: High
Contract: VIX
Function name: transfer(address,uint256,bytes)
PC address: 1229
Estimated Gas Usage: 466 - 561
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x4ed07051b9d053e442b42cb6b6083bcd7031729e.sol:3

*/

//pragma solidity ^0.4.23;
prag

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:18.225417
Transaction Length: 1
Severity: Low
Contract: VIX
Function name: transfer(address,uint256,bytes)
PC address: 4285
Estimated Gas Usage: 2032 - 4999
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x4ed07051b9d053e442b42cb6b6083bcd7031729e.sol:142

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:23.181928
Transaction Length: 2
Severity: Low
Contract: VIX
Function name: transfer(address,uint256,bytes)
PC address: 4285
Estimated Gas Usage: 2035 - 5002
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x4ed07051b9d053e442b42cb6b6083bcd7031729e.sol:142

assert(b <= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol
Total states:60
253.317941
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.323971
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactOut(address,uint256)
PC address: 2367
Estimated Gas Usage: 2578 - 40952
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.061438
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactOut(address,uint256)
PC address: 2370
Estimated Gas Usage: 2510 - 40601
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.909545
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2527
Estimated Gas Usage: 2510 - 40601
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:174

new address[](2)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.610418
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2865
Estimated Gas Usage: 825 - 4542
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:177

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:40.676161
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2905
Estimated Gas Usage: 975 - 5068
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:177

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.658091
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2974
Estimated Gas Usage: 2417 - 40415
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.395196
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2977
Estimated Gas Usage: 2510 - 40601
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.939569
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2998
Estimated Gas Usage: 2510 - 40601
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:177

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.829846
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3023
Estimated Gas Usage: 2510 - 40601
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:2


*/

pragma solidity 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.832422
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3029
Estimated Gas Usage: 2510 - 40601
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:7

0 {
    functi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.119488
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3049
Estimated Gas Usage: 2568 - 40752
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:10

 returns (bool);
    

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.048302
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3051
Estimated Gas Usage: 2568 - 40752
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:10

 uint amount) external returns (bool);
    f

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:27.358937
Transaction Length: 1
Severity: Low
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3092
Estimated Gas Usage: 2632 - 40909
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:177

UNI.getAmountsOut(inExact, _path)[1]

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xce40e56a4d67c41184aeb93dc2089b2224e0fe0f.sol
Total states:492
3.502595
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.082623
Transaction Length: 0
Severity: High
Contract: rSwap
Function name: constructor
PC address: 698
Estimated Gas Usage: 7449 - 31180
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xce40e56a4d67c41184aeb93dc2089b2224e0fe0f.sol:233

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xa6bb7dd137126e484bdd56c6e33b73ab4c28d8e8.sol
Total states:60
0.745752
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xd6b482d38a136f9e985e8979374aec88e2a79ed0.sol
Total states:8724
17.698522
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.168917
Transaction Length: 2
Severity: High
Contract: Paybchain
Function name: increaseAllowance(address,uint256)
PC address: 5425
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd6b482d38a136f9e985e8979374aec88e2a79ed0.sol:92

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x2e6539edc3b76f1e21b71d214527faba875f70f3.sol
Total states:18192
40.891389
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.874756
Transaction Length: 2
Severity: High
Contract: ponziv2
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2e6539edc3b76f1e21b71d214527faba875f70f3.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.868596
Transaction Length: 2
Severity: High
Contract: ponziv2
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2e6539edc3b76f1e21b71d214527faba875f70f3.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x483009c9aec73194518723db2f849f82cb8f58a4.sol
Total states:18192
42.114769
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.358643
Transaction Length: 2
Severity: High
Contract: whatever2
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x483009c9aec73194518723db2f849f82cb8f58a4.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.187761
Transaction Length: 2
Severity: High
Contract: whatever2
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x483009c9aec73194518723db2f849f82cb8f58a4.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x35E7ECeF551B0c07a418f06CCD40110466C3E5cC.sol
Total states:24
0.055795
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1828e7a548bbd4a90ac74e0b411503512dd25268.sol
Total states:18192
41.354405
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.728726
Transaction Length: 2
Severity: High
Contract: SAPI
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1828e7a548bbd4a90ac74e0b411503512dd25268.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.516715
Transaction Length: 2
Severity: High
Contract: SAPI
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1828e7a548bbd4a90ac74e0b411503512dd25268.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol
Total states:9087
42.522802
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:05.981240
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeSub(uint256,uint256)
PC address: 601
Estimated Gas Usage: 527 - 622
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:110

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:07.938916
Transaction Length: 1
Severity: Low
Contract: Math
Function name: safeDiv(uint256,uint256)
PC address: 689
Estimated Gas Usage: 542 - 637
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:118

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.806677
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 715
Estimated Gas Usage: 600 - 695
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:114

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.257968
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeAdd(uint256,uint256)
PC address: 807
Estimated Gas Usage: 593 - 688
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:106

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:03.801771
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: safeSub(uint256,uint256)
PC address: 7105
Estimated Gas Usage: 595 - 690
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:110

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.011132
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 7399
Estimated Gas Usage: 2505 - 37399
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:5

sing https://da

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.421397
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 7402
Estimated Gas Usage: 2505 - 37399
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:3



// Verified using https://dapp.tools

// 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.245018
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 7414
Estimated Gas Usage: 2505 - 37399
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:529

assessor.maxReserve()

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:10.899690
Transaction Length: 1
Severity: Low
Contract: EpochCoordinator
Function name: safeDiv(uint256,uint256)
PC address: 7786
Estimated Gas Usage: 566 - 661
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:118

x / y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:15.897891
Transaction Length: 1
Severity: Low
Contract: EpochCoordinator
Function name: closeEpoch()
PC address: 8338
Estimated Gas Usage: 13340 - 54376
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:336

reserve.balance()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.254226
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: calcAssets(uint256,uint256)
PC address: 11305
Estimated Gas Usage: 599 - 694
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:106

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:07.840156
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 14115
Estimated Gas Usage: 2505 - 37399
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:142

e as published by
// th

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:23.884655
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreImprovement((uint256),uint256)
PC address: 16145
Estimated Gas Usage: 428 - 616
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:482

value <= maxRatio

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol
Total states:2733
7.509452
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.747257
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 4168
Estimated Gas Usage: 1612 - 2603
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:280

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.656680
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4836
Estimated Gas Usage: 1608 - 2599
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:251

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.334827
Transaction Length: 1
Severity: High
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3374 - 38551
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:95

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x4792e204cefc32c25fcd34388473b255d8c9c506.sol
Total states:10011
18.678813
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.409489
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x4792e204cefc32c25fcd34388473b255d8c9c506.sol:34

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol
Total states:1007
124.813415
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.794553
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: external_call(address,uint256,bytes)
PC address: 319
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:3

*/

// File: contracts/IMultisigCar

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:18.664267
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 542
Estimated Gas Usage: 2718 - 38738
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:43

function parties() public view returns (address[] memory) {
        IMultisigCarrier multisigCarrier = IMultisigCarrier(_carrier);
        return multisigCarrier.vaultParties(address(this));
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.974344
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1181
Estimated Gas Usage: 2252 - 37241
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:5

racts/IMultisig

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.668988
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1184
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:3



// File: contracts/IMultisigCarrier.sol



--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.686293
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1205
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:45

multisigCarrier.vaultParties(address(this))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:23.909163
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1230
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:2


*/

// File: contrac

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:32.775311
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1236
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:7

ma solidity ^0

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:39.754013
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1256
Estimated Gas Usage: 2403 - 37578
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:16

ies(
        address 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:43.600063
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1258
Estimated Gas Usage: 2403 - 37578
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:16

    function vaultParties(
        address v

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:51.618174
Transaction Length: 1
Severity: Low
Contract: MultisigVault
Function name: approve(address,address,uint256)
PC address: 1601
Estimated Gas Usage: 1709 - 2795
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:58

multisigCarrier.approveFrom(msg.sender, destination, currencyAddress, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x4849d2a7fec8572f12f369659cf48a826601cc5c.sol
Total states:8897
22.44686
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.118153
Transaction Length: 0
Severity: High
Contract: eVault
Function name: constructor
PC address: 234
Estimated Gas Usage: 6824 - 64159
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x4849d2a7fec8572f12f369659cf48a826601cc5c.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.916906
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x4849d2a7fec8572f12f369659cf48a826601cc5c.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x6f3463bac33383a42e666d07e37e17df1d3d70fd.sol
Total states:7697
28.53385
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.532131
Transaction Length: 1
Severity: High
Contract: yeldDAI
Function name: updatePrice()
PC address: 4031
Estimated Gas Usage: 1068 - 1163
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6f3463bac33383a42e666d07e37e17df1d3d70fd.sol:408

lastPriceUpdate + priceUpdatePeriod

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x417538f319afddd351f33222592b60f985475a21.sol
Total states:997
24.350731
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:23.606758
Transaction Length: 1
Severity: Low
Contract: TokenVestingLock
Function name: getPendingUnlocked()
PC address: 3312
Estimated Gas Usage: 659 - 754
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x417538f319afddd351f33222592b60f985475a21.sol:29

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.534439
Transaction Length: 1
Severity: High
Contract: TokenVestingLock
Function name: getPendingUnlocked()
PC address: 3330
Estimated Gas Usage: 958 - 1053
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x417538f319afddd351f33222592b60f985475a21.sol:16

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:22.823729
Transaction Length: 1
Severity: Low
Contract: TokenVestingLock
Function name: getPendingUnlocked()
PC address: 3364
Estimated Gas Usage: 1030 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x417538f319afddd351f33222592b60f985475a21.sol:17

assert(a == 0 || c / a == b)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x31c08eb8e7caa67a3e1d1b053190edcc77c7c39d.sol
Total states:5259
56.072161
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.419621
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x31c08eb8e7caa67a3e1d1b053190edcc77c7c39d.sol:36

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.330167
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x31c08eb8e7caa67a3e1d1b053190edcc77c7c39d.sol:32

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.682685
Transaction Length: 1
Severity: High
Contract: GoatFinanceToken
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x31c08eb8e7caa67a3e1d1b053190edcc77c7c39d.sol:36

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.702069
Transaction Length: 1
Severity: High
Contract: GoatFinanceToken
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x31c08eb8e7caa67a3e1d1b053190edcc77c7c39d.sol:32

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x7827cA5dB933635bad77Aa52C837Ee98BeB1206D.sol
Total states:0
0.012039
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol
Total states:40181
2104.600901
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.154571
Transaction Length: 1
Severity: Medium
Contract: Hodler
Function name: release(uint256)
PC address: 215
Estimated Gas Usage: 12859 - 104203
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1177
Offset: 3823
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:696

function release(uint256 _id) external {
    require(_id > 0);

    // user
    address _user = msg.sender;

    // get item
    Item storage item = items[_user][_id];

    // check if it exists
    require(item.id == _id);
    // check if its not already fulfilled
    require(!item.fulfilled);
    // check time
    require(block.timestamp >= item.releaseTime);

    // check if there is enough tokens
    uint256 balance = recurly.balanceOf(address(this));
    require(balance >= item.value);

    // update state
    item.fulfilled = true;

    // transfer tokens to beneficiary
    recurly.safeTransfer(item.beneficiary, item.value);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.289646
Transaction Length: 2
Severity: Medium
Contract: Hodler
Function name: release(uint256)
PC address: 215
Estimated Gas Usage: 12859 - 104203
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1177
Offset: 3823
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:696

function release(uint256 _id) external {
    require(_id > 0);

    // user
    address _user = msg.sender;

    // get item
    Item storage item = items[_user][_id];

    // check if it exists
    require(item.id == _id);
    // check if its not already fulfilled
    require(!item.fulfilled);
    // check time
    require(block.timestamp >= item.releaseTime);

    // check if there is enough tokens
    uint256 balance = recurly.balanceOf(address(this));
    require(balance >= item.value);

    // update state
    item.fulfilled = true;

    // transfer tokens to beneficiary
    recurly.safeTransfer(item.beneficiary, item.value);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.977542
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: checkRole(address,string)
PC address: 236
Estimated Gas Usage: 329 - 424
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:06.920121
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: hasRole(address,string)
PC address: 455
Estimated Gas Usage: 351 - 446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.151372
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: checkRole(address,string)
PC address: 671
Estimated Gas Usage: 419 - 514
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:58.728738
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: adminRemoveRole(address,string)
PC address: 698
Estimated Gas Usage: 373 - 468
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.216335
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: checkRole(address,string)
PC address: 760
Estimated Gas Usage: 441 - 536
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:28.213427
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: adminAddRole(address,string)
PC address: 917
Estimated Gas Usage: 395 - 490
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:55.044982
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: hasRole(address,string)
PC address: 920
Estimated Gas Usage: 374 - 469
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:51.922617
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: hasRole(address,string)
PC address: 1009
Estimated Gas Usage: 485 - 580
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:07:24.811399
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: ROLE_ADMIN()
PC address: 1102
Estimated Gas Usage: 730 - 2424
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:88

string public constant ROLE_ADMIN = "admin"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:18.474475
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: adminRemoveRole(address,string)
PC address: 1671
Estimated Gas Usage: 418 - 513
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:47.634081
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: adminRemoveRole(address,string)
PC address: 1794
Estimated Gas Usage: 396 - 491
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:07:07.563368
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: symbol()
PC address: 1856
Estimated Gas Usage: 528 - 1658
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:593

string public constant symbol = "CLERK"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:51.633312
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: ROLE_TRANSFER()
PC address: 1979
Estimated Gas Usage: 506 - 1636
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:563

string constant public ROLE_TRANSFER = "transfer"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:09:21.296125
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: adminAddRole(address,string)
PC address: 2123
Estimated Gas Usage: 373 - 468
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:07:24.435270
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: symbol()
PC address: 2184
Estimated Gas Usage: 550 - 1680
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:561

string public constant symbol = "RCR"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:10:33.277112
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: adminAddRole(address,string)
PC address: 2553
Estimated Gas Usage: 395 - 490
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.516658
Transaction Length: 1
Severity: High
Contract: Hodler
Function name: hodl(uint256,uint256,uint256)
PC address: 3957
Estimated Gas Usage: 1319 - 1794
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:247

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:12.307994
Transaction Length: 1
Severity: Low
Contract: Hodler
Function name: hodl(uint256,uint256,uint256)
PC address: 3970
Estimated Gas Usage: 1351 - 1826
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:248

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.454991
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4109
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:247

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:39.817273
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4122
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:248

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.101634
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 5581
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:247

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:27.411948
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 5594
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:248

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x443969c7957f00371fa8a8cf63cdbb7812e2fb8b.sol
Total states:3269
7.022826
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xa4e8d5ef05dcb325f766f52686c6c570fb109899.sol
Total states:144
2.262815
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.077671
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: duration()
PC address: 301
Estimated Gas Usage: 10897 - 54186
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa4e8d5ef05dcb325f766f52686c6c570fb109899.sol:638

function releasableAmount(IERC20 _token) public view returns (uint256) {
        return vestedAmount(_token).sub(released[address(_token)]);
    }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol
Total states:4104
24.396275
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:05.679131
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 339
Estimated Gas Usage: 10986 - 154068
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1353
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:169

function supplyOrderWithDaiPermit(uint amount, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {
        DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s);
        supplyOrder(amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:08.017267
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: redeemOrder(uint256)
PC address: 385
Estimated Gas Usage: 8635 - 116441
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1961
Offset: 2326
Offset: 2583
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:147

function redeemOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        token.hasMember(msg.sender);
        tranche.redeemOrder(msg.sender, amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:14.897622
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse()
PC address: 823
Estimated Gas Usage: 4632 - 75356
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 4515
Offset: 4882
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:154

function disburse() external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:16.865174
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse(uint256)
PC address: 910
Estimated Gas Usage: 4758 - 75577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5182
Offset: 5557
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:161

function disburse(uint endEpoch) external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender, endEpoch);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:18.996996
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 1044
Estimated Gas Usage: 6568 - 79482
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:141

function supplyOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        tranche.supplyOrder(msg.sender, amount);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.586498
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1711
Estimated Gas Usage: 3914 - 40177
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:170

DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:23.137922
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 2583
Estimated Gas Usage: 8608 - 114894
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:150

tranche.redeemOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:10.279566
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 3258
Estimated Gas Usage: 3875 - 40043
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:174

EIP2612PermitLike(tranche.currency()).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.771446
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse()
PC address: 4882
Estimated Gas Usage: 3600 - 39293
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:158

tranche.disburse(msg.sender)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:16.688572
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse(uint256)
PC address: 5557
Estimated Gas Usage: 3724 - 39512
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:165

tranche.disburse(msg.sender, endEpoch)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:18.746818
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 6269
Estimated Gas Usage: 3727 - 39515
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:143

tranche.supplyOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:20.323259
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 6826
Estimated Gas Usage: 2310 - 4011
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:178

EIP2612PermitLike(address(token)).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xeb4c063f68bf4c4e807f89ae6e1f5f153a0e9006.sol
Total states:8483
30.863218
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.452638
Transaction Length: 2
Severity: High
Contract: BEANSfarm
Function name: increaseApproval(address,uint256)
PC address: 4860
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xeb4c063f68bf4c4e807f89ae6e1f5f153a0e9006.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:27.194213
Transaction Length: 2
Severity: Low
Contract: BEANSfarm
Function name: increaseApproval(address,uint256)
PC address: 4873
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xeb4c063f68bf4c4e807f89ae6e1f5f153a0e9006.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x82B8617A16e388256617FeBBa1826093401a3fE5.sol
Total states:3279
4.74733
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x59ec1d5869133a3fbd4421421e48bb94c5644a49.sol
Total states:1088
9.432263
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1a9C8182C09F50C8318d769245beA52c32BE35BC.sol
Total states:60
0.75589
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x73efb2b57c32fa146a9e1a5fbc5d4e77c072a5fb.sol
Total states:4879
8.668627
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x38d4cdC85656467E46337793a0Dd53376f8b58e5.sol
Total states:7773
17.942705
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.863185
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x38d4cdC85656467E46337793a0Dd53376f8b58e5.sol:10

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x3D7E6eb99F55dfAc62a56Fb7a7331d81aD6F3f73.sol
Total states:1239
0.642421
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xc690d096e8e3e90e2ba8b31c70aa63d86a82a845.sol
Total states:10535
116.596761
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:42.512058
Transaction Length: 1
Severity: High
Contract: UniHourglass
Function name: setSymbol(string)
PC address: 2783
Estimated Gas Usage: 385 - 480
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc690d096e8e3e90e2ba8b31c70aa63d86a82a845.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:58.508215
Transaction Length: 1
Severity: High
Contract: UniHourglass
Function name: setName(string)
PC address: 3069
Estimated Gas Usage: 451 - 546
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc690d096e8e3e90e2ba8b31c70aa63d86a82a845.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:41.521598
Transaction Length: 1
Severity: Low
Contract: UniHourglass
Function name: distribute(uint256)
PC address: 7820
Estimated Gas Usage: 8804 - 63981
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc690d096e8e3e90e2ba8b31c70aa63d86a82a845.sol:193

(_amount * magnitude) / tokenSupply_

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.800354
Transaction Length: 1
Severity: High
Contract: UniHourglass
Function name: calculateTokensReceived(uint256)
PC address: 11213
Estimated Gas Usage: 831 - 926
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc690d096e8e3e90e2ba8b31c70aa63d86a82a845.sol:13

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:34.858658
Transaction Length: 1
Severity: Low
Contract: UniHourglass
Function name: calculateTokensReceived(uint256)
PC address: 11236
Estimated Gas Usage: 869 - 964
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc690d096e8e3e90e2ba8b31c70aa63d86a82a845.sol:14

assert(c / a == b)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:39.908751
Transaction Length: 1
Severity: Low
Contract: UniHourglass
Function name: distribute(uint256)
PC address: 11550
Estimated Gas Usage: 1679 - 2670
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xc690d096e8e3e90e2ba8b31c70aa63d86a82a845.sol:186

erc20.transferFrom(msg.sender, address(this), _amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xa38279a6fc9a9bcb1e9735d646c39d8f6e1ef5b0.sol
Total states:120
4.297932
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1ec9ad3e8fc72aa0a7cbaa1de816c11eb82157a3.sol
Total states:17314
61.289737
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.050600
Transaction Length: 2
Severity: High
Contract: ELTK2
Function name: fallback()
PC address: 1325
Estimated Gas Usage: 574 - 859
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1ec9ad3e8fc72aa0a7cbaa1de816c11eb82157a3.sol:48

balanceOf[msg.sender] += msg.value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:40.820451
Transaction Length: 2
Severity: High
Contract: ELTK2
Function name: transferFrom(address,address,uint256)
PC address: 2476
Estimated Gas Usage: 8277 - 29892
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1ec9ad3e8fc72aa0a7cbaa1de816c11eb82157a3.sol:118

balanceOf[src] -= wad

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:46.535295
Transaction Length: 2
Severity: High
Contract: ELTK2
Function name: transferFrom(address,address,uint256)
PC address: 2553
Estimated Gas Usage: 13800 - 55605
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1ec9ad3e8fc72aa0a7cbaa1de816c11eb82157a3.sol:120

balanceOf[dst] += wad

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x3553ea6eb523a36b86961ec90ecbd8f5ab15d2d4.sol
Total states:3429
5.988465
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x435a28250bf5a2b453103ff0827c75d18094504d.sol
Total states:7332
10.233259
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040617
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x435a28250bf5a2b453103ff0827c75d18094504d.sol:13

available, which can be applied to function

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x48BcB97E63f91c8e064307E9ff35E86e4CAb6F98.sol
Total states:5254
53.900379
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.137569
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x48BcB97E63f91c8e064307E9ff35E86e4CAb6F98.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.759306
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x48BcB97E63f91c8e064307E9ff35E86e4CAb6F98.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.835204
Transaction Length: 1
Severity: High
Contract: chadcoin
Function name: safeMul(uint256,uint256)
PC address: 3820
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x48BcB97E63f91c8e064307E9ff35E86e4CAb6F98.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:24.152031
Transaction Length: 1
Severity: High
Contract: chadcoin
Function name: safeAdd(uint256,uint256)
PC address: 4004
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x48BcB97E63f91c8e064307E9ff35E86e4CAb6F98.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xec8318cb5b5d2892d92a473a32a2bc2fa2a7604a.sol
Total states:10158
34.270647
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:07.006136
Transaction Length: 1
Severity: Low
Contract: AErc20
Function name: seize(address,address,uint256)
PC address: 10140
Estimated Gas Usage: 7628 - 28809
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xec8318cb5b5d2892d92a473a32a2bc2fa2a7604a.sol:1828

controller.seizeAllowed(address(this), msg.sender, liquidator, borrower, seizeTokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.404737
Transaction Length: 1
Severity: Low
Contract: AErc20
Function name: transfer(address,uint256)
PC address: 15245
Estimated Gas Usage: 7688 - 28774
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xec8318cb5b5d2892d92a473a32a2bc2fa2a7604a.sol:819

controller.transferAllowed(address(this), src, dst, tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.599172
Transaction Length: 2
Severity: Low
Contract: AErc20
Function name: transfer(address,uint256)
PC address: 15245
Estimated Gas Usage: 7681 - 28767
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xec8318cb5b5d2892d92a473a32a2bc2fa2a7604a.sol:819

controller.transferAllowed(address(this), src, dst, tokens)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x0ce02cbb973c12a178415ba81d090e985924643d.sol
Total states:5259
56.694475
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.229484
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x0ce02cbb973c12a178415ba81d090e985924643d.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.224246
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x0ce02cbb973c12a178415ba81d090e985924643d.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.702765
Transaction Length: 1
Severity: High
Contract: JakeToken
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x0ce02cbb973c12a178415ba81d090e985924643d.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.178319
Transaction Length: 1
Severity: High
Contract: JakeToken
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x0ce02cbb973c12a178415ba81d090e985924643d.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol
Total states:2698
8.561181
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.743623
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 4092
Estimated Gas Usage: 1590 - 2581
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:285

IERC20(XFI).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:06.462483
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4581
Estimated Gas Usage: 1588 - 2579
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:256

IERC20(XFI).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.085983
Transaction Length: 1
Severity: High
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3352 - 38529
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:100

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xCe90991255932cE3A19defBb288370023d264369.sol
Total states:2655
4.474977
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol
Total states:21575
185.626332
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.028108
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:9

dress constant BUSD_DEPOSIT_ADDRESS   = 0xb

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.477267
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: fallback
PC address: 142
Estimated Gas Usage: 2311 - 39600
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x594153a000000000000000000000000000000000000000000000000000000000
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1035

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.479830
Transaction Length: 1
Severity: Medium
Contract: PoolProxy
Function name: fallback
PC address: 160
Estimated Gas Usage: 3056 - 74345
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 931
Offset: 142
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1044

return(ptr, size)

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.147161
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: fallback
PC address: 264
Estimated Gas Usage: 725 - 3547
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy))
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:902

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.057203
Transaction Length: 1
Severity: Low
Contract: Deposit3Tokens
Function name: period_timestamp(uint256)
PC address: 380
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:992

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.143808
Transaction Length: 1
Severity: Low
Contract: Deposit2Tokens
Function name: period_timestamp(uint256)
PC address: 393
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:986

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:55.874194
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 537
Estimated Gas Usage: 1433 - 2470
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:00.678913
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 577
Estimated Gas Usage: 1583 - 2996
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.692365
Transaction Length: 1
Severity: Low
Contract: TokenManager
Function name: supportAddresses(address,uint256)
PC address: 613
Estimated Gas Usage: 752 - 1037
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.318770
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: supportAddresses(address,uint256)
PC address: 1317
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:03.174481
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1575
Estimated Gas Usage: 4173 - 40386
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1082

IERC20(tokenAddress).transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:09.150659
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1891
Estimated Gas Usage: 5889 - 76759
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1085

IERC20(tokenAddress).approve(EXCHANGE_CONTRACT, amount)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.049144
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: supportAddresses(address,uint256)
PC address: 2114
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.657140
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2259
Estimated Gas Usage: 8446 - 148446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:5

enManager {
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.731972
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2262
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:3



 contract TokenManager {
    
    address

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.675338
Transaction Length: 2
Severity: High
Contract: PoolToken
Function name: increaseAllowance(address,uint256)
PC address: 4840
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:139

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.548998
Transaction Length: 1
Severity: Low
Contract: PoolFactory
Function name: supportAddresses(address,uint256)
PC address: 5037
Estimated Gas Usage: 796 - 1081
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:15.896801
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: supportAddresses(address,uint256)
PC address: 8485
Estimated Gas Usage: 818 - 1103
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.195203
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17754
Estimated Gas Usage: 5008 - 75599
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:5

enManager {
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.428789
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17757
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:3



 contract TokenManager {
    
    address

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:35.577843
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17778
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1241

IOneSplit(EXCHANGE_CONTRACT).getExpectedReturn(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, 100, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.009445
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17813
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:2


*/

 contract TokenM

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:42.667259
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17819
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:7

ant COMPOUND_D

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:50.565414
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17839
Estimated Gas Usage: 5186 - 76056
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:9

POSIT_ADDRESS   = 0xb

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:59.832391
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17841
Estimated Gas Usage: 5186 - 76056
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:9

dress constant BUSD_DEPOSIT_ADDRESS   = 0xb6

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:42.551223
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18208
Estimated Gas Usage: 5661 - 77946
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:42.065660
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18245
Estimated Gas Usage: 6389 - 78579
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.598223
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 19161
Estimated Gas Usage: 5923 - 76793
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1257

IERC20(DAI_ADDRESS).approve(_depositPool, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xf3ce0c622b004b0f11636edbd082d1d4718c2cae.sol
Total states:9384
375.9755
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol
Total states:44637
144.935582
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.169354
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 4827
Estimated Gas Usage: 2616 - 3661
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.768363
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4840
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:33

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.231154
Transaction Length: 2
Severity: High
Contract: Pausable
Function name: transferFrom(address,address,uint256)
PC address: 5561
Estimated Gas Usage: 2639 - 3684
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.915467
Transaction Length: 2
Severity: Low
Contract: Pausable
Function name: increaseApproval(address,uint256)
PC address: 5574
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:33

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.162822
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: transferFrom(address,address,uint256)
PC address: 6243
Estimated Gas Usage: 3145 - 4520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:30.829907
Transaction Length: 2
Severity: Low
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6256
Estimated Gas Usage: 1471 - 2276
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:33

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.833807
Transaction Length: 2
Severity: High
Contract: Yearn20MoonFinance
Function name: increaseApproval(address,uint256)
PC address: 7345
Estimated Gas Usage: 1483 - 2288
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:19.569021
Transaction Length: 2
Severity: Low
Contract: Yearn20MoonFinance
Function name: increaseApproval(address,uint256)
PC address: 7358
Estimated Gas Usage: 1493 - 2298
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:33

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x579353231f3540b218239774422962c64a3693e7.sol
Total states:18855
39.295955
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.182301
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x579353231f3540b218239774422962c64a3693e7.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.707148
Transaction Length: 2
Severity: High
Contract: BCTR
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x579353231f3540b218239774422962c64a3693e7.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x4A7c5B572792F3D14B2cE51B8D948044b6deC07F.sol
Total states:2081
4.641456
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.765990
Transaction Length: 1
Severity: High
Contract: Flopper
Function name: tick(uint256)
PC address: 8988
Estimated Gas Usage: 8046 - 29891
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x4A7c5B572792F3D14B2cE51B8D948044b6deC07F.sol:132

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol
Total states:18307
98.549278
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.207621
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2327
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:16.631067
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2340
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:94

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.012283
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2798
Estimated Gas Usage: 933 - 1408
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:16.979819
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2811
Estimated Gas Usage: 943 - 1418
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:94

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.418057
Transaction Length: 1
Severity: Low
Contract: CnymToken
Function name: transfer(address,uint256)
PC address: 4326
Estimated Gas Usage: 929 - 1214
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:47.725549
Transaction Length: 2
Severity: Low
Contract: CnymToken
Function name: transferFrom(address,address,uint256)
PC address: 4326
Estimated Gas Usage: 1579 - 2244
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:76

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.067606
Transaction Length: 2
Severity: High
Contract: CnymToken
Function name: increaseApproval(address,uint256)
PC address: 4886
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:52.575176
Transaction Length: 2
Severity: Low
Contract: CnymToken
Function name: increaseApproval(address,uint256)
PC address: 4899
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:94

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1f1ccf377d4fc66f600a60ca66f7bb8000843068.sol
Total states:3825
9.633531
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.537430
Transaction Length: 1
Severity: Medium
Contract: NUXPresale
Function name: finalize()
PC address: 754
Estimated Gas Usage: 4923 - 75041
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2704
Offset: 2896
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x1f1ccf377d4fc66f600a60ca66f7bb8000843068.sol:601

function finalize() public {
        require(presaleEnded(), 'Presale not ended yet');
        INUXAsset(address(NUXToken)).transferLock(treasury, NUXToken.balanceOf(address(this)));
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.531785
Transaction Length: 1
Severity: Low
Contract: NUXPresale
Function name: finalize()
PC address: 2896
Estimated Gas Usage: 4183 - 40301
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1f1ccf377d4fc66f600a60ca66f7bb8000843068.sol:603

INUXAsset(address(NUXToken)).transferLock(treasury, NUXToken.balanceOf(address(this)))

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x693eea0cf4671748211fe97d0de6a33076a89169.sol
Total states:1432
3.545504
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048449
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 141
Estimated Gas Usage: 20281 - 103054
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x693eea0cf4671748211fe97d0de6a33076a89169.sol:10

ta. While these are generally available
 * 

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xde8607ccad60814c8d9cd6f5ce8e9031e4675c8f.sol
Total states:3847
8.270002
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol
Total states:4511
251.832798
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:01.102180
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1060
Estimated Gas Usage: 1753 - 2744
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:223

vat.move(address(this), usr, mul(ONE, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.810336
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: join(address)
PC address: 1239
Estimated Gas Usage: 2405 - 3396
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:186

vat.slip(ilk, usr, int(msg.value))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:42.957280
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1281
Estimated Gas Usage: 3783 - 39575
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:224

dai.burn(msg.sender, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.417597
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1322
Estimated Gas Usage: 2474 - 3465
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:150

vat.slip(ilk, usr, int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.395917
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1595
Estimated Gas Usage: 4535 - 40422
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:151

gem.transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:11.972990
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2573
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:190

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:36.868443
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2633
Estimated Gas Usage: 2224 - 3215
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:228

vat.move(msg.sender, address(this), mul(ONE, wad))

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:13.981106
Transaction Length: 1
Severity: High
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2642
Estimated Gas Usage: 2899 - 38076
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:191

usr.transfer(wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:14.548384
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2854
Estimated Gas Usage: 4255 - 40047
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:229

dai.mint(usr, wad)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.473210
Transaction Length: 1
Severity: High
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 2984
Estimated Gas Usage: 848 - 1273
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:220

x * y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:18.024572
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3118
Estimated Gas Usage: 2122 - 3113
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:155

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:21.749995
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3339
Estimated Gas Usage: 4153 - 39945
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:156

gem.transfer(usr, wad)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x96267a9781522498fd4c280b791bd135780693a1.sol
Total states:1947
8.151985
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.009630
Transaction Length: 1
Severity: Low
Contract: BaseUpgradeabilityProxy
Function name: fallback
PC address: 97
Estimated Gas Usage: 557 - 2956
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: ../../contracts/noloop/noloop8/0x96267a9781522498fd4c280b791bd135780693a1.sol:45

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.983300
Transaction Length: 1
Severity: High
Contract: BaseAdminUpgradeabilityProxy
Function name: upgradeToAndCall(address,bytes)
PC address: 309
Estimated Gas Usage: 327 - 422
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x96267a9781522498fd4c280b791bd135780693a1.sol:3

*/

// File: @openzeppelin/upgrades

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:06.989923
Transaction Length: 1
Severity: Low
Contract: BaseAdminUpgradeabilityProxy
Function name: fallback
PC address: 1699
Estimated Gas Usage: 1229 - 3628
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: ../../contracts/noloop/noloop8/0x96267a9781522498fd4c280b791bd135780693a1.sol:45

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x8e14d03061705eb48fda6bc6e244c5eabe5d322e.sol
Total states:9065
21.199737
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.193917
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x8e14d03061705eb48fda6bc6e244c5eabe5d322e.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x2c110c115e3892388cfccdf7925a072b6e1543a4.sol
Total states:418
1.238823
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xeC08219378c3bBc560D19f442E87323A740399f8.sol
Total states:1043
2.109749
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol
Total states:46840
107.634842
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047192
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.950393
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.850329
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.992074
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.949736
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.981007
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.058295
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.194489
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.075243
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.185475
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.198433
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.443057
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.123881
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.744696
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.887037
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.035494
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.976833
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.135739
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.149158
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xb58d25db06b84118843c0ab79b6ff51571d443c6.sol
Total states:138
2.637109
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.097761
Transaction Length: 0
Severity: High
Contract: HolderVesting
Function name: transferOwnership(address)
PC address: 955
Estimated Gas Usage: 7523 - 31347
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xb58d25db06b84118843c0ab79b6ff51571d443c6.sol:515

_owner

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xcd9fe5772caf239972b6e1452baf0103b49e8e15.sol
Total states:678
3.08741
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xC65E282a82b5F0b02Dec20d32DCf12A89f5580bc.sol
Total states:796
0.497079
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xC35D2d946F304E26eEb04eED5E3f5eFAD0F1e865.sol
Total states:2175
2.774466
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.283130
Transaction Length: 1
Severity: Low
Contract: UpgradeabilityProxy
Function name: fallback
PC address: 274
Estimated Gas Usage: 681 - 3503
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy))
--------------------
In file: ../../contracts/noloop/noloop8/0xC35D2d946F304E26eEb04eED5E3f5eFAD0F1e865.sol:260

delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xfd4240e76016e039d44228cbfed3a120c004e03d.sol
Total states:2939
5.375852
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:02.328672
Transaction Length: 1
Severity: Low
Contract: WaltContract
Function name: transfer(address,uint256)
PC address: 4109
Estimated Gas Usage: 1075 - 1360
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xfd4240e76016e039d44228cbfed3a120c004e03d.sol:172

assert(b <= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x46a36b6bcbebd54b07b0f0fac88e89e3c6013ee3.sol
Total states:1237
3.482817
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.274085
Transaction Length: 0
Severity: High
Contract: DEDXToken
Function name: constructor
PC address: 575
Estimated Gas Usage: 45086 - 211487
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x46a36b6bcbebd54b07b0f0fac88e89e3c6013ee3.sol:133

tokens * 10 ** 10

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1bfbd6bdee80f74e9973b0328c56bad009fc62ea.sol
Total states:248
0.221619
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x86af7b477f87c6b20b1d27496e7355230eb49724.sol
Total states:1218
0.989687
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1a389c381a8242B7acFf0eB989173Cd5d0EFc3e3.sol
Total states:21039
71.370434
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.220818
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a389c381a8242B7acFf0eB989173Cd5d0EFc3e3.sol:119

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.791629
Transaction Length: 1
Severity: Low
Contract: StableCreditProtocol
Function name: markets(address,uint256)
PC address: 3257
Estimated Gas Usage: 843 - 1128
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a389c381a8242B7acFf0eB989173Cd5d0EFc3e3.sol:257

mapping (address => address[]) public markets

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.786088
Transaction Length: 2
Severity: High
Contract: StableCreditProtocol
Function name: increaseAllowance(address,uint256)
PC address: 10725
Estimated Gas Usage: 1038 - 1513
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a389c381a8242B7acFf0eB989173Cd5d0EFc3e3.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.106383
Transaction Length: 1
Severity: High
Contract: StableCreditProtocol
Function name: deposit(address,uint256)
PC address: 18283
Estimated Gas Usage: 3733 - 73187
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a389c381a8242B7acFf0eB989173Cd5d0EFc3e3.sol:138

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xb9f45edeffe5abd7a1a1dffc65068a065b98524d.sol
Total states:1555
6.696307
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040789
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xb9f45edeffe5abd7a1a1dffc65068a065b98524d.sol:15

*
     * @dev Returns the amount of tokens 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.083839
Transaction Length: 0
Severity: High
Contract: VaultBaselineTUSD
Function name: constructor
PC address: 201
Estimated Gas Usage: 6661 - 61225
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xb9f45edeffe5abd7a1a1dffc65068a065b98524d.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.100499
Transaction Length: 0
Severity: High
Contract: VaultBaseline
Function name: constructor
PC address: 224
Estimated Gas Usage: 6794 - 64036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xb9f45edeffe5abd7a1a1dffc65068a065b98524d.sol:5

nzeppelin/contr

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xa73c6492a31da95eaef3fcbf31425dd92d290e15.sol
Total states:1239
0.585007
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x8c3f684c79c19518b8df3b86ea0b23905972d14e.sol
Total states:942
0.917118
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x87761e886399ef8e1624cb0db3230b075a322c88.sol
Total states:13581
21.00054
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.595499
Transaction Length: 2
Severity: High
Contract: CBK
Function name: increaseAllowance(address,uint256)
PC address: 5539
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x87761e886399ef8e1624cb0db3230b075a322c88.sol:41

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xe51fdc2c202a95ba9dff434b4297184b62f67d0b.sol
Total states:10492
33.650446
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.643784
Transaction Length: 1
Severity: High
Contract: yfALPHA
Function name: transfer(address,uint256)
PC address: 6338
Estimated Gas Usage: 834 - 929
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xe51fdc2c202a95ba9dff434b4297184b62f67d0b.sol:31

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.378239
Transaction Length: 2
Severity: High
Contract: yfALPHA
Function name: increaseAllowance(address,uint256)
PC address: 6458
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xe51fdc2c202a95ba9dff434b4297184b62f67d0b.sol:9

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xd63a757dc917486da1050847428393d2a91f0bfb.sol
Total states:21546
73.000169
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.493851
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4101
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd63a757dc917486da1050847428393d2a91f0bfb.sol:23

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.336079
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4114
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xd63a757dc917486da1050847428393d2a91f0bfb.sol:24

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.339435
Transaction Length: 2
Severity: High
Contract: yfcredit
Function name: increaseApproval(address,uint256)
PC address: 5190
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd63a757dc917486da1050847428393d2a91f0bfb.sol:23

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.774324
Transaction Length: 2
Severity: Low
Contract: yfcredit
Function name: increaseApproval(address,uint256)
PC address: 5203
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xd63a757dc917486da1050847428393d2a91f0bfb.sol:24

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol
Total states:2763
66.802319
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:07.023880
Transaction Length: 1
Severity: Medium
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 692
Estimated Gas Usage: 24414 - 190577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2172
Offset: 2569
Offset: 3124
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:40

function lock(uint256 amount) public {
        
        uint256 flaps = amount*ratio;
        require(flaps <= flap.balanceOf(address(this)), "This contract has run out of flapp rewards, wait for replenishment or try a different contract");
        require(uni.transferFrom(msg.sender, address(this), amount), "You need to approve UNI tokens to be transferred to this contract before locking");
        locked[msg.sender] = locked[msg.sender] + amount;
        totalLocked = totalLocked + amount;
        time[msg.sender] = now;
        flap.transfer(msg.sender, flaps);
        emit Locked(msg.sender, amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:54.717895
Transaction Length: 2
Severity: Medium
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 692
Estimated Gas Usage: 24414 - 190577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2172
Offset: 2569
Offset: 3124
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:40

function lock(uint256 amount) public {
        
        uint256 flaps = amount*ratio;
        require(flaps <= flap.balanceOf(address(this)), "This contract has run out of flapp rewards, wait for replenishment or try a different contract");
        require(uni.transferFrom(msg.sender, address(this), amount), "You need to approve UNI tokens to be transferred to this contract before locking");
        locked[msg.sender] = locked[msg.sender] + amount;
        totalLocked = totalLocked + amount;
        time[msg.sender] = now;
        flap.transfer(msg.sender, flaps);
        emit Locked(msg.sender, amount);
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.822611
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: unlock()
PC address: 1035
Estimated Gas Usage: 1055 - 1340
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:54

time[msg.sender] + duration

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:15.912066
Transaction Length: 2
Severity: Low
Contract: LiquidityLock
Function name: unlock()
PC address: 1656
Estimated Gas Usage: 13915 - 55571
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:59

uni.transfer(msg.sender, amount)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.809314
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: getMyStatus()
PC address: 1966
Estimated Gas Usage: 1055 - 1340
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:68

time[user] + duration

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.852190
Transaction Length: 1
Severity: High
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 1980
Estimated Gas Usage: 2811 - 37798
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:42

amount*ratio

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.023565
Transaction Length: 1
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2569
Estimated Gas Usage: 4152 - 40035
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:44

uni.transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:25.024337
Transaction Length: 2
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2569
Estimated Gas Usage: 4152 - 40035
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:44

uni.transferFrom(msg.sender, address(this), amount)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.668123
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2778
Estimated Gas Usage: 5578 - 76027
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:45

locked[msg.sender] + amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:35.861136
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2850
Estimated Gas Usage: 10998 - 101447
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:46

totalLocked + amount

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:06.627433
Transaction Length: 1
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 3124
Estimated Gas Usage: 22401 - 153841
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:48

flap.transfer(msg.sender, flaps)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:53.630298
Transaction Length: 2
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 3124
Estimated Gas Usage: 22401 - 153841
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:48

flap.transfer(msg.sender, flaps)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xa56f81c849a78558c725fa742f090398ed8a5cf1.sol
Total states:9009
19.528868
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.244607
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa56f81c849a78558c725fa742f090398ed8a5cf1.sol:137

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol
Total states:10229
128.482227
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.027966
Transaction Length: 0
Severity: Medium
Contract: Controller
Function name: constructor
PC address: 24
Estimated Gas Usage: 5048 - 25143
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:183

tx.origin

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:04.207681
Transaction Length: 1
Severity: Medium
Contract: Controller
Function name: yearn(address,address,uint256)
PC address: 476
Estimated Gas Usage: 5257 - 108852
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2521
Offset: 2737
Offset: 2916
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:265

function yearn(address _strategy, address _token, uint parts) public {
        // This contract should never have value in it, but just incase since this is a public call
        uint _before = IERC20(_token).balanceOf(address(this));
        Strategy(_strategy).withdraw(_token);
        uint _after =  IERC20(_token).balanceOf(address(this));
        if (_after > _before) {
            uint _amount = _after.sub(_before);
            address _want = Strategy(_strategy).want();
            uint[] memory _distribution;
            uint _expected;
            _before = IERC20(_want).balanceOf(address(this));
            IERC20(_token).safeApprove(onesplit, 0);
            IERC20(_token).safeApprove(onesplit, _amount);
            (_expected, _distribution) = OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _amount, parts, 0);
            OneSplitAudit(onesplit).swap(_token, _want, _amount, _expected, _distribution, 0);
            _after = IERC20(_want).balanceOf(address(this));
            if (_after > _before) {
                _amount = _after.sub(_before);
                uint _reward = _amount.mul(split).div(max);
                earn(_want, _amount.sub(_reward));
                IERC20(_want).safeTransfer(rewards, _reward);
            }
        }
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:01:11.691394
Transaction Length: 2
Severity: Medium
Contract: Controller
Function name: yearn(address,address,uint256)
PC address: 476
Estimated Gas Usage: 5257 - 108852
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2521
Offset: 2737
Offset: 2916
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:265

function yearn(address _strategy, address _token, uint parts) public {
        // This contract should never have value in it, but just incase since this is a public call
        uint _before = IERC20(_token).balanceOf(address(this));
        Strategy(_strategy).withdraw(_token);
        uint _after =  IERC20(_token).balanceOf(address(this));
        if (_after > _before) {
            uint _amount = _after.sub(_before);
            address _want = Strategy(_strategy).want();
            uint[] memory _distribution;
            uint _expected;
            _before = IERC20(_want).balanceOf(address(this));
            IERC20(_token).safeApprove(onesplit, 0);
            IERC20(_token).safeApprove(onesplit, _amount);
            (_expected, _distribution) = OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _amount, parts, 0);
            OneSplitAudit(onesplit).swap(_token, _want, _amount, _expected, _distribution, 0);
            _after = IERC20(_want).balanceOf(address(this));
            if (_after > _before) {
                _amount = _after.sub(_before);
                uint _reward = _amount.mul(split).div(max);
                earn(_want, _amount.sub(_reward));
                IERC20(_want).safeTransfer(rewards, _reward);
            }
        }
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:19.096878
Transaction Length: 1
Severity: Medium
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 956
Estimated Gas Usage: 6089 - 111047
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5495
Offset: 5656
Offset: 5981
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:258

function getExpectedReturn(address _strategy, address _token, uint parts) public view returns (uint expected) {
        uint _balance = IERC20(_token).balanceOf(_strategy);//获取策略器 某个代币的余额
        address _want = Strategy(_strategy).want();//策略器需要的代币.
        (expected,) = OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:28.746011
Transaction Length: 2
Severity: Medium
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 956
Estimated Gas Usage: 6101 - 111059
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5495
Offset: 5656
Offset: 5981
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:258

function getExpectedReturn(address _strategy, address _token, uint parts) public view returns (uint expected) {
        uint _balance = IERC20(_token).balanceOf(_strategy);//获取策略器 某个代币的余额
        address _want = Strategy(_strategy).want();//策略器需要的代币.
        (expected,) = OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:04.054390
Transaction Length: 1
Severity: Medium
Contract: Controller
Function name: yearn(address,address,uint256)
PC address: 2737
Estimated Gas Usage: 2823 - 37856
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:268

Strategy(_strategy).withdraw(_token)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:11.490554
Transaction Length: 2
Severity: Medium
Contract: Controller
Function name: yearn(address,address,uint256)
PC address: 2737
Estimated Gas Usage: 2823 - 37856
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:268

Strategy(_strategy).withdraw(_token)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.215880
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 6018
Estimated Gas Usage: 5795 - 110193
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:6

ed for verifica

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.664363
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 6021
Estimated Gas Usage: 5915 - 110499
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:3



/**
 *Submitted for verification at Ether

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.278507
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 6042
Estimated Gas Usage: 5915 - 110499
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:261

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.846921
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 6103
Estimated Gas Usage: 5973 - 110650
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:15

s account) external v

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:15.897993
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 6105
Estimated Gas Usage: 5973 - 110650
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:15

ction balanceOf(address account) external vi

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:43.991135
Transaction Length: 2
Severity: Medium
Contract: Controller
Function name: setStrategy(address,address)
PC address: 7277
Estimated Gas Usage: 2229 - 3455
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:224

Strategy(_current).withdrawAll()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:01.825025
Transaction Length: 2
Severity: Medium
Contract: Controller
Function name: withdraw(address,uint256)
PC address: 10274
Estimated Gas Usage: 2254 - 3765
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:292

Strategy(strategies[_token]).withdraw(_amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:51.149684
Transaction Length: 1
Severity: Low
Contract: Controller
Function name: withdrawAll(address)
PC address: 10737
Estimated Gas Usage: 2166 - 3392
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:250

Strategy(strategies[_token]).withdrawAll()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.183453
Transaction Length: 2
Severity: Low
Contract: Controller
Function name: withdrawAll(address)
PC address: 10737
Estimated Gas Usage: 2166 - 3392
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:250

Strategy(strategies[_token]).withdrawAll()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:55.699251
Transaction Length: 2
Severity: Medium
Contract: Controller
Function name: withdrawAll(address)
PC address: 10737
Estimated Gas Usage: 2166 - 3392
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:250

Strategy(strategies[_token]).withdrawAll()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xcb6c15c01232c679f3362b07eb958e91a617da36.sol
Total states:237
7.579843
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xeceecdb396ce5e3e48afd15d04c6388c9b57d016.sol
Total states:18192
45.223506
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.222650
Transaction Length: 2
Severity: High
Contract: xbtc
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xeceecdb396ce5e3e48afd15d04c6388c9b57d016.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:35.124010
Transaction Length: 2
Severity: High
Contract: xbtc
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xeceecdb396ce5e3e48afd15d04c6388c9b57d016.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x580969a8fff9228b493a6995b8e3be5f581c3055.sol
Total states:1239
0.423648
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xdaae16d48512b334fed0045816e58d89c401c934.sol
Total states:120
58.993612
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.368961
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xdaae16d48512b334fed0045816e58d89c401c934.sol:9

@openzeppelin\c

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.265994
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xdaae16d48512b334fed0045816e58d89c401c934.sol:5

*/



// File: @openzeppelin\contracts\toke

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.998913
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xdaae16d48512b334fed0045816e58d89c401c934.sol:1383

IOneSplitAudit(onesplit).getExpectedReturn(

            _token,

            _want,

            _balance,

            parts,

            0

        )

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.728278
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xdaae16d48512b334fed0045816e58d89c401c934.sol:28

e IERC20 {

    /**



--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.985321
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xdaae16d48512b334fed0045816e58d89c401c934.sol:24

he EIP.

 */

interface IERC20 {

    /**

 

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:31.886417
Transaction Length: 1
Severity: Low
Contract: Controller
Function name: earn(address,uint256)
PC address: 16050
Estimated Gas Usage: 3890 - 40994
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xdaae16d48512b334fed0045816e58d89c401c934.sol:742

target.call.value(weiValue)(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xea004e8fa3701b8e58e41b78d50996e0f7176cbd.sol
Total states:20052
46.090482
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.078542
Transaction Length: 0
Severity: Medium
Contract: yffctoken
Function name: constructor
PC address: 209
Estimated Gas Usage: 17133 - 78876
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop8/0xea004e8fa3701b8e58e41b78d50996e0f7176cbd.sol:207

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.752177
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xea004e8fa3701b8e58e41b78d50996e0f7176cbd.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.483308
Transaction Length: 2
Severity: High
Contract: yffctoken
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xea004e8fa3701b8e58e41b78d50996e0f7176cbd.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x8d12d52d7bbcd6bcde6323f7b6522c870bfa1ae9.sol
Total states:144
2.289041
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.080987
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: duration()
PC address: 301
Estimated Gas Usage: 10897 - 54186
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x8d12d52d7bbcd6bcde6323f7b6522c870bfa1ae9.sol:638

function releasableAmount(IERC20 _token) public view returns (uint256) {
        return vestedAmount(_token).sub(released[address(_token)]);
    }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xba4666ab6d69ed32eb549e4cfb9eb2fbfb8663f4.sol
Total states:850
4.529886
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.078576
Transaction Length: 1
Severity: Low
Contract: ShieldLockedProjectfund
Function name: release()
PC address: 1196
Estimated Gas Usage: 5049 - 42716
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xba4666ab6d69ed32eb549e4cfb9eb2fbfb8663f4.sol:167

address(token).call(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x63c658af7ebacdf2fe3fec1d925b2eedd4be0bc5.sol
Total states:480
0.910569
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol
Total states:88397
1010.473853
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.795901
Transaction Length: 1
Severity: High
Contract: DSPauseProxy
Function name: exec(address,bytes)
PC address: 277
Estimated Gas Usage: 351 - 446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3



*/



//pragma solidity ^0.5.12;


--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.073313
Transaction Length: 0
Severity: Low
Contract: Vow
Function name: constructor
PC address: 540
Estimated Gas Usage: 23004 - 107756
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:4510

vat.hope(flapper_)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:23.961911
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1060
Estimated Gas Usage: 1753 - 2744
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3014

vat.move(address(this), usr, mul(ONE, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.094003
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1114
Estimated Gas Usage: 1559 - 2455
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3880

ilks[ilk].pip.peek()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.127182
Transaction Length: 1
Severity: Low
Contract: ESM
Function name: join(uint256)
PC address: 1202
Estimated Gas Usage: 13618 - 55319
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:378

gem.transferFrom(msg.sender, pit, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.824418
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: join(address)
PC address: 1239
Estimated Gas Usage: 2405 - 3396
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2940

vat.slip(ilk, usr, int(msg.value))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:40.106087
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1281
Estimated Gas Usage: 3783 - 39575
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3016

dai.burn(msg.sender, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.600359
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1322
Estimated Gas Usage: 2474 - 3465
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2868

vat.slip(ilk, usr, int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.929509
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1457
Estimated Gas Usage: 3765 - 39836
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3884

vat.file(ilk, "spot", spot)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.084993
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1595
Estimated Gas Usage: 4535 - 40422
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2870

gem.transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:46.148694
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: join(uint256)
PC address: 1719
Estimated Gas Usage: 13726 - 55097
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3710

vat.move(msg.sender, address(this), mul(chi, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.054472
Transaction Length: 1
Severity: Low
Contract: ESM
Function name: fire()
PC address: 1817
Estimated Gas Usage: 2686 - 3392
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:356

end.cage()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:12.698564
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2573
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2948

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:04:06.641225
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2633
Estimated Gas Usage: 2224 - 3215
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3024

vat.move(msg.sender, address(this), mul(ONE, wad))

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:14.665520
Transaction Length: 1
Severity: High
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2642
Estimated Gas Usage: 2899 - 38076
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2950

usr.transfer(wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.516570
Transaction Length: 1
Severity: Low
Contract: Jug
Function name: drip(bytes32)
PC address: 2706
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3214

vat.ilks(ilk)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:04:38.954977
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2854
Estimated Gas Usage: 4255 - 40047
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3026

dai.mint(usr, wad)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.639952
Transaction Length: 1
Severity: High
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 2984
Estimated Gas Usage: 848 - 1273
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3008

x * y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:20.277700
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3118
Estimated Gas Usage: 2122 - 3113
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2878

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:24.052391
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3339
Estimated Gas Usage: 4153 - 39945
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2880

gem.transfer(usr, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.423085
Transaction Length: 1
Severity: Low
Contract: Vow
Function name: kiss(uint256)
PC address: 3469
Estimated Gas Usage: 9605 - 65298
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:4624

vat.heal(rad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:06.605149
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: exit(uint256)
PC address: 3541
Estimated Gas Usage: 13283 - 54654
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3722

vat.move(address(this), msg.sender, mul(chi, wad))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.269186
Transaction Length: 1
Severity: High
Contract: Pot
Function name: join(uint256)
PC address: 5026
Estimated Gas Usage: 12821 - 53626
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3638

x * y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:03.198628
Transaction Length: 1
Severity: High
Contract: Pot
Function name: exit(uint256)
PC address: 5064
Estimated Gas Usage: 837 - 1122
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3630

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.219940
Transaction Length: 2
Severity: High
Contract: Dai
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 5769
Estimated Gas Usage: 5999 - 43112
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:1706

nonces[holder]++

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.789425
Transaction Length: 1
Severity: High
Contract: Cat
Function name: bite(bytes32,address)
PC address: 6281
Estimated Gas Usage: 5176 - 75429
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:1358

x * y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:11.222662
Transaction Length: 2
Severity: High
Contract: Dai
Function name: burn(address,uint256)
PC address: 7856
Estimated Gas Usage: 7087 - 27752
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:1532

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.235031
Transaction Length: 1
Severity: High
Contract: Flopper
Function name: tick(uint256)
PC address: 8156
Estimated Gas Usage: 8046 - 29891
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2672

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.967380
Transaction Length: 1
Severity: High
Contract: Flapper
Function name: tick(uint256)
PC address: 9122
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2152

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.314615
Transaction Length: 1
Severity: High
Contract: Flipper
Function name: tick(uint256)
PC address: 11459
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2398

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.251568
Transaction Length: 1
Severity: High
Contract: Vat
Function name: flux(bytes32,address,address,uint256)
PC address: 13158
Estimated Gas Usage: 1738 - 2593
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:4092

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.582847
Transaction Length: 1
Severity: High
Contract: Vat
Function name: frob(bytes32,address,address,address,int256,int256)
PC address: 13213
Estimated Gas Usage: 4552 - 7485
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:4056

x + uint(y)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xed6b58e76204a40524e09756fbaa8e3cb7b2a254.sol
Total states:481
3.948668
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xcb1F5bbFbe6dFdcE9c59e726C12e5Da69f2C3075.sol
Total states:14766
19.561085
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.004783
Transaction Length: 0
Severity: Medium
Contract: Governance
Function name: constructor
PC address: 18
Estimated Gas Usage: 42 - 137
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop8/0xcb1F5bbFbe6dFdcE9c59e726C12e5Da69f2C3075.sol:216

tx.origin

--------------------

==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.040830
Transaction Length: 0
Severity: Medium
Contract: BullToken
Function name: constructor
PC address: 351
Estimated Gas Usage: 41597 - 203438
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop8/0xcb1F5bbFbe6dFdcE9c59e726C12e5Da69f2C3075.sol:216

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.278713
Transaction Length: 2
Severity: High
Contract: BullToken
Function name: transfer(address,uint256)
PC address: 9953
Estimated Gas Usage: 1462 - 1887
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xcb1F5bbFbe6dFdcE9c59e726C12e5Da69f2C3075.sol:58

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x826e64E15af1CdcEd00032E985Ee51918397E60F.sol
Total states:5737
13.414073
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x0b3e174a2170083e770d5d4cf56774d221b7063e.sol
Total states:1708
1.792848
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xe2281a43e8b8c7621822a360cbeb3ba201d452e6.sol
Total states:11841
291.793922
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.147906
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xe2281a43e8b8c7621822a360cbeb3ba201d452e6.sol:72

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.740988
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xe2281a43e8b8c7621822a360cbeb3ba201d452e6.sol:52

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.623597
Transaction Length: 1
Severity: High
Contract: WOAHHToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1483
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xe2281a43e8b8c7621822a360cbeb3ba201d452e6.sol:3



*/



//pragma solidity ^0.4.24;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:36.369762
Transaction Length: 1
Severity: Medium
Contract: WOAHHToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 4325
Estimated Gas Usage: 8823 - 34729
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xe2281a43e8b8c7621822a360cbeb3ba201d452e6.sol:354

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:38.482286
Transaction Length: 1
Severity: High
Contract: WOAHHToken
Function name: safeMul(uint256,uint256)
PC address: 4362
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xe2281a43e8b8c7621822a360cbeb3ba201d452e6.sol:72

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:00.549420
Transaction Length: 1
Severity: High
Contract: WOAHHToken
Function name: safeAdd(uint256,uint256)
PC address: 4546
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xe2281a43e8b8c7621822a360cbeb3ba201d452e6.sol:52

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x97f160c220e121ec5496db17965cd63e4a9202c9.sol
Total states:5259
56.999405
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.896336
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x97f160c220e121ec5496db17965cd63e4a9202c9.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.746293
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x97f160c220e121ec5496db17965cd63e4a9202c9.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.712044
Transaction Length: 1
Severity: High
Contract: YUYI
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x97f160c220e121ec5496db17965cd63e4a9202c9.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.758905
Transaction Length: 1
Severity: High
Contract: YUYI
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x97f160c220e121ec5496db17965cd63e4a9202c9.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xe8e26b90ef6313e5695436030b28758ebcdca938.sol
Total states:426
0.749584
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xf09a190203d7cad3cdb43ee281e29b947cb1c16f.sol
Total states:1756
2.8804
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x59e7b5db9be0bdd26fa048d39e01fee456ab674e.sol
Total states:5259
58.442187
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.951410
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x59e7b5db9be0bdd26fa048d39e01fee456ab674e.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.536749
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x59e7b5db9be0bdd26fa048d39e01fee456ab674e.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.802964
Transaction Length: 1
Severity: High
Contract: YearnFinanceBitToken2
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x59e7b5db9be0bdd26fa048d39e01fee456ab674e.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.316364
Transaction Length: 1
Severity: High
Contract: YearnFinanceBitToken2
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x59e7b5db9be0bdd26fa048d39e01fee456ab674e.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x3aadc3BCe49724ce299fD9F3850211211c399C8c.sol
Total states:366
0.541819
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x98ffc2cac7f302b43f14e1b5e82a54d7b2bcc1b9.sol
Total states:30
0.240575
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x42bf80a92734de221889049e91187a07464607b1.sol
Total states:796
0.709403
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol
Total states:18307
94.275835
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.149836
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2327
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:16.809794
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2340
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:94

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.950472
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2798
Estimated Gas Usage: 933 - 1408
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:16.194590
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2811
Estimated Gas Usage: 943 - 1418
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:94

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.286733
Transaction Length: 1
Severity: Low
Contract: UsdmToken
Function name: transfer(address,uint256)
PC address: 4326
Estimated Gas Usage: 929 - 1214
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:44.842518
Transaction Length: 2
Severity: Low
Contract: UsdmToken
Function name: transferFrom(address,address,uint256)
PC address: 4326
Estimated Gas Usage: 1579 - 2244
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:76

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.722840
Transaction Length: 2
Severity: High
Contract: UsdmToken
Function name: increaseApproval(address,uint256)
PC address: 4886
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:49.147763
Transaction Length: 2
Severity: Low
Contract: UsdmToken
Function name: increaseApproval(address,uint256)
PC address: 4899
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:94

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xf2b94ce4d96f7d4465aa0588a51bfc64db31b4c9.sol
Total states:24634
62.212688
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.831088
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 2575
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xf2b94ce4d96f7d4465aa0588a51bfc64db31b4c9.sol:276

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.701981
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 2748
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xf2b94ce4d96f7d4465aa0588a51bfc64db31b4c9.sol:276

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.968951
Transaction Length: 2
Severity: High
Contract: ERC20Burnnable
Function name: increaseAllowance(address,uint256)
PC address: 3435
Estimated Gas Usage: 1033 - 1508
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xf2b94ce4d96f7d4465aa0588a51bfc64db31b4c9.sol:276

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xb3B4d0A62a373bBD3Cff045f26eAc9F87905ed86.sol
Total states:2414
2.356157
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040746
Transaction Length: 0
Severity: High
Contract: Alimony
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xb3B4d0A62a373bBD3Cff045f26eAc9F87905ed86.sol:12

 data. While these are generally available


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040407
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xb3B4d0A62a373bBD3Cff045f26eAc9F87905ed86.sol:12

 data. While these are generally available


--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x87ee9bdb7241ebd95b22c0237e7bbc5d6be658eb.sol
Total states:60
0.751851
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x2501e303708445caf8117d1ec8d3acb6b80e8da4.sol
Total states:8498
31.272302
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.446794
Transaction Length: 1
Severity: High
Contract: BananaFarm
Function name: transfer(address,uint256)
PC address: 7029
Estimated Gas Usage: 900 - 995
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2501e303708445caf8117d1ec8d3acb6b80e8da4.sol:47

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.092473
Transaction Length: 2
Severity: High
Contract: BananaFarm
Function name: increaseAllowance(address,uint256)
PC address: 7149
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2501e303708445caf8117d1ec8d3acb6b80e8da4.sol:25

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x40561e765d4614980260cc6cc143fbdd2f7467c2.sol
Total states:1576
2.834089
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039039
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x40561e765d4614980260cc6cc143fbdd2f7467c2.sol:11

luding the
 * sender of the transaction and

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xef133080d202579634ddb425a0fa43d2608e4e95.sol
Total states:3311
6.096389
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xc8f4df60d0a8b106ea5f83eda40081a8250c9e07.sol
Total states:29041
58.262649
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.032203
Transaction Length: 0
Severity: Medium
Contract: YYFFII
Function name: constructor
PC address: 129
Estimated Gas Usage: 166 - 1017
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop5/0xc8f4df60d0a8b106ea5f83eda40081a8250c9e07.sol:240

tx.origin

--------------------

==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.089657
Transaction Length: 0
Severity: Medium
Contract: YYFFII
Function name: constructor
PC address: 303
Estimated Gas Usage: 28071 - 130474
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop5/0xc8f4df60d0a8b106ea5f83eda40081a8250c9e07.sol:241

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:17.003176
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4590
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xc8f4df60d0a8b106ea5f83eda40081a8250c9e07.sol:153

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.842033
Transaction Length: 2
Severity: High
Contract: YYFFII
Function name: increaseAllowance(address,uint256)
PC address: 6932
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xc8f4df60d0a8b106ea5f83eda40081a8250c9e07.sol:153

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x9d8c7fcebd041a78d00acb26a08c5e888478822e.sol
Total states:6398
69.627979
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:58.202106
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3636
Estimated Gas Usage: 1025 - 1500
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x9d8c7fcebd041a78d00acb26a08c5e888478822e.sol:103

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol
Total states:4104
23.508116
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:05.295175
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 339
Estimated Gas Usage: 10986 - 154068
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1353
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:169

function supplyOrderWithDaiPermit(uint amount, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {
        DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s);
        supplyOrder(amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:07.558174
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: redeemOrder(uint256)
PC address: 385
Estimated Gas Usage: 8635 - 116441
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1961
Offset: 2326
Offset: 2583
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:147

function redeemOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        token.hasMember(msg.sender);
        tranche.redeemOrder(msg.sender, amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:14.232243
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse()
PC address: 823
Estimated Gas Usage: 4632 - 75356
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 4515
Offset: 4882
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:154

function disburse() external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:16.322033
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse(uint256)
PC address: 910
Estimated Gas Usage: 4758 - 75577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5182
Offset: 5557
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:161

function disburse(uint endEpoch) external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender, endEpoch);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:18.356033
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 1044
Estimated Gas Usage: 6568 - 79482
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:141

function supplyOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        tranche.supplyOrder(msg.sender, amount);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.373633
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1711
Estimated Gas Usage: 3914 - 40177
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:170

DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:22.278887
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 2583
Estimated Gas Usage: 8608 - 114894
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:150

tranche.redeemOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:09.727546
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 3258
Estimated Gas Usage: 3875 - 40043
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:174

EIP2612PermitLike(tranche.currency()).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.044205
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse()
PC address: 4882
Estimated Gas Usage: 3600 - 39293
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:158

tranche.disburse(msg.sender)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:16.147504
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse(uint256)
PC address: 5557
Estimated Gas Usage: 3724 - 39512
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:165

tranche.disburse(msg.sender, endEpoch)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:18.106967
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 6269
Estimated Gas Usage: 3727 - 39515
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:143

tranche.supplyOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:19.623747
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 6826
Estimated Gas Usage: 2310 - 4011
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:178

EIP2612PermitLike(address(token)).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol
Total states:3658
32.348495
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.918884
Transaction Length: 1
Severity: High
Contract: ScamChecker
Function name: execute(bytes)
PC address: 251
Estimated Gas Usage: 295 - 390
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol:3



*/



//pragma solidity ^0.6.6;
p

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:12.926543
Transaction Length: 1
Severity: Low
Contract: ScamChecker
Function name: testTokenWeth(address)
PC address: 1415
Estimated Gas Usage: 1135 - 1701
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol:194

token0.approve(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:04.574179
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testToken(address,address)
PC address: 1415
Estimated Gas Usage: 1185 - 1751
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol:194

token0.approve(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:15.655001
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testTokenWeth(address)
PC address: 1690
Estimated Gas Usage: 2811 - 38034
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol:196

token1.approve(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, uint(-1))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:16.946364
Transaction Length: 1
Severity: Low
Contract: ScamChecker
Function name: testFeeTokenWeth(address,address)
PC address: 4577
Estimated Gas Usage: 1199 - 1765
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol:258

token0.approve(router, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:27.149638
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testFeeToken(address,address,address)
PC address: 4577
Estimated Gas Usage: 1271 - 1837
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol:258

token0.approve(router, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:31.281540
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testFeeToken(address,address,address)
PC address: 4832
Estimated Gas Usage: 2947 - 38170
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol:260

token1.approve(router, uint(-1))

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x4e5ee20900898054e998fd1862742c28c651bf5d.sol
Total states:2424
3.465855
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040005
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x4e5ee20900898054e998fd1862742c28c651bf5d.sol:24

he

 * sender of the transaction and its da

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.042728
Transaction Length: 0
Severity: High
Contract: SaffronLPBalanceToken
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x4e5ee20900898054e998fd1862742c28c651bf5d.sol:24

he

 * sender of the transaction and its da

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x964944eb8e707deec36af172ce2c6216d210a0c9.sol
Total states:8965
258.551187
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.432764
Transaction Length: 1
Severity: High
Contract: GPC
Function name: approveAndCall(address,uint256,bytes)
PC address: 1372
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x964944eb8e707deec36af172ce2c6216d210a0c9.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:31.649106
Transaction Length: 1
Severity: Medium
Contract: GPC
Function name: approveAndCall(address,uint256,bytes)
PC address: 4762
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x964944eb8e707deec36af172ce2c6216d210a0c9.sol:209

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x3e12272152125184e9F631864929fCA1cA7c7252.sol
Total states:2344
3.071053
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xdae1bcba551c33beeaaa576962b10dc317e4546c.sol
Total states:3429
5.904779
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xd03b6ae96cae26b743a6207dcee7cbe60a425c70.sol
Total states:10271
21.120487
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.983193
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4470
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd03b6ae96cae26b743a6207dcee7cbe60a425c70.sol:29

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x2e79a7aa136b78f2967a7d29822785d44052a436.sol
Total states:3381
5.650991
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x7b6322c0022c9065f8d512910af552eb72c64111.sol
Total states:10492
28.60895
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.863894
Transaction Length: 1
Severity: High
Contract: yLiquid
Function name: transfer(address,uint256)
PC address: 6339
Estimated Gas Usage: 834 - 929
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x7b6322c0022c9065f8d512910af552eb72c64111.sol:31

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.254737
Transaction Length: 2
Severity: High
Contract: yLiquid
Function name: increaseAllowance(address,uint256)
PC address: 6459
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x7b6322c0022c9065f8d512910af552eb72c64111.sol:9

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x47f792b29d63faa5485ecf48751fd208203ce67e.sol
Total states:10155
409.587388
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.199015
Transaction Length: 1
Severity: High
Contract: UFragments
Function name: initialize(string,string,uint8)
PC address: 694
Estimated Gas Usage: 386 - 481
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x47f792b29d63faa5485ecf48751fd208203ce67e.sol:3



*/



/**

 *Submitted for verifi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.931374
Transaction Length: 1
Severity: High
Contract: UFragments
Function name: initialize(string,string,uint8)
PC address: 845
Estimated Gas Usage: 728 - 3505
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x47f792b29d63faa5485ecf48751fd208203ce67e.sol:3



*/



/**

 *Submitted for verifi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:40.852964
Transaction Length: 1
Severity: High
Contract: UFragments
Function name: symbol()
PC address: 1933
Estimated Gas Usage: 1420 - 2455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x47f792b29d63faa5485ecf48751fd208203ce67e.sol:590

function symbol() public view returns(string memory) {

    return _symbol;

  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.166212
Transaction Length: 2
Severity: High
Contract: UFragments
Function name: increaseAllowance(address,uint256)
PC address: 8375
Estimated Gas Usage: 1443 - 2248
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x47f792b29d63faa5485ecf48751fd208203ce67e.sol:124

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:38.358359
Transaction Length: 1
Severity: High
Contract: UFragments
Function name: initialize(address)
PC address: 9123
Estimated Gas Usage: 25564 - 109243
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x47f792b29d63faa5485ecf48751fd208203ce67e.sol:874

contract UFragments is ERC20Detailed, Ownable {

    // PLEASE READ BEFORE CHANGING ANY ACCOUNTING OR MATH

    // Anytime there is division, there is a risk of numerical instability from rounding errors. In

    // order to minimize this risk, we adhere to the following guidelines:

    // 1) The conversion rate adopted is the number of gons that equals 1 fragment.

    //    The inverse rate must not be used--TOTAL_GONS is always the numerator and _totalSupply is

    //    always the denominator. (i.e. If you want to convert gons to fragments instead of

    //    multiplying by the inverse rate, you should divide by the normal rate)

    // 2) Gon balances converted into Fragments are always rounded down (truncated).

    //

    // We make the following guarantees:

    // - If address 'A' transfers x Fragments to address 'B'. A's resulting external balance will

    //   be decreased by precisely x Fragments, and B's external balance will be precisely

    //   increased by x Fragments.

    //

    // We do not guarantee that the sum of all balances equals the result of calling totalSupply().

    // This is because, for any conversion function 'f()' that has non-zero rounding error,

    // f(x0) + f(x1) + ... + f(xn) is not always equal to f(x0 + x1 + ... xn).

    using SafeMath for uint256;

    using SafeMathInt for int256;



    event LogRebase(uint256 indexed epoch, uint256 totalSupply);

    event LogRebasePaused(bool paused);

    event LogTokenPaused(bool paused);

    event LogMonetaryPolicyUpdated(address monetaryPolicy);



    // Used for authentication

    address public monetaryPolicy;



    modifier onlyMonetaryPolicy() {

        require(msg.sender == monetaryPolicy);

        _;

    }



    // Precautionary emergency controls.

    bool public rebasePaused;

    bool public tokenPaused;



    modifier whenRebaseNotPaused() {

        require(!rebasePaused);

        _;

    }



    modifier whenTokenNotPaused() {

        require(!tokenPaused);

        _;

    }



    modifier validRecipient(address to) {

        require(to != address(0x0));

        require(to != address(this));

        _;

    }



    uint256 private constant DECIMALS = 9;

    uint256 private constant MAX_UINT256 = ~uint256(0);

    uint256 private constant INITIAL_FRAGMENTS_SUPPLY = 10 * 10**6 * 10**DECIMALS;



    // TOTAL_GONS is a multiple of INITIAL_FRAGMENTS_SUPPLY so that _gonsPerFragment is an integer.

    // Use the highest value that fits in a uint256 for max granularity.

    uint256 private constant TOTAL_GONS = MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY);



    // MAX_SUPPLY = maximum integer < (sqrt(4*TOTAL_GONS + 1) - 1) / 2

    uint256 private constant MAX_SUPPLY = ~uint128(0);  // (2^128) - 1



    uint256 private _totalSupply;

    uint256 private _gonsPerFragment;

    mapping(address => uint256) private _gonBalances;



    // This is denominated in Fragments, because the gons-fragments conversion might change before

    // it's fully paid.

    mapping (address => mapping (address => uint256)) private _allowedFragments;



    /**

     * @param monetaryPolicy_ The address of the monetary policy contract to use for authentication.

     */

    function setMonetaryPolicy(address monetaryPolicy_)

        external

        onlyOwner

    {

        monetaryPolicy = monetaryPolicy_;

        emit LogMonetaryPolicyUpdated(monetaryPolicy_);

    }



    /**

     * @dev Pauses or unpauses the execution of rebase operations.

     * @param paused Pauses rebase operations if this is true.

     */

    function setRebasePaused(bool paused)

        external

        onlyOwner

    {

        rebasePaused = paused;

        emit LogRebasePaused(paused);

    }



    /**

     * @dev Pauses or unpauses execution of ERC-20 transactions.

     * @param paused Pauses ERC-20 transactions if this is true.

     */

    function setTokenPaused(bool paused)

        external

        onlyOwner

    {

        tokenPaused = paused;

        emit LogTokenPaused(paused);

    }



    /**

     * @dev Notifies Fragments contract about a new rebase cycle.

     * @param supplyDelta The number of new fragment tokens to add into circulation via expansion.

     * @return The total number of fragments after the supply adjustment.

     */

    function rebase(uint256 epoch, int256 supplyDelta)

        external

        onlyMonetaryPolicy

        whenRebaseNotPaused

        returns (uint256)

    {

        if (supplyDelta == 0) {

            emit LogRebase(epoch, _totalSupply);

            return _totalSupply;

        }



        if (supplyDelta < 0) {

            _totalSupply = _totalSupply.sub(uint256(supplyDelta.abs()));

        } else {

            _totalSupply = _totalSupply.add(uint256(supplyDelta));

        }



        if (_totalSupply > MAX_SUPPLY) {

            _totalSupply = MAX_SUPPLY;

        }



        _gonsPerFragment = TOTAL_GONS.div(_totalSupply);



        // From this point forward, _gonsPerFragment is taken as the source of truth.

        // We recalculate a new _totalSupply to be in agreement with the _gonsPerFragment

        // conversion rate.

        // This means our applied supplyDelta can deviate from the requested supplyDelta,

        // but this deviation is guaranteed to be < (_totalSupply^2)/(TOTAL_GONS - _totalSupply).

        //

        // In the case of _totalSupply <= MAX_UINT128 (our current supply cap), this

        // deviation is guaranteed to be < 1, so we can omit this step. If the supply cap is

        // ever increased, it must be re-included.

        // _totalSupply = TOTAL_GONS.div(_gonsPerFragment)



        emit LogRebase(epoch, _totalSupply);

        return _totalSupply;

    }



    function initialize(address owner_)

        public

        initializer

    {

        ERC20Detailed.initialize("Krbase", "KRB", uint8(DECIMALS));

        Ownable.initialize(owner_);



        rebasePaused = false;

        tokenPaused = false;



        _totalSupply = INITIAL_FRAGMENTS_SUPPLY;

        _gonBalances[owner_] = TOTAL_GONS;

        _gonsPerFragment = TOTAL_GONS.div(_totalSupply);



        emit Transfer(address(0x0), owner_, _totalSupply);

    }



    /**

     * @return The total number of fragments.

     */

    function totalSupply()

        public

        view

        returns (uint256)

    {

        return _totalSupply;

    }



    /**

     * @param who The address to query.

     * @return The balance of the specified address.

     */

    function balanceOf(address who)

        public

        view

        returns (uint256)

    {

        return _gonBalances[who].div(_gonsPerFragment);

    }



    /**

     * @dev Transfer tokens to a specified address.

     * @param to The address to transfer to.

     * @param value The amount to be transferred.

     * @return True on success, false otherwise.

     */

    function transfer(address to, uint256 value)

        public

        validRecipient(to)

        whenTokenNotPaused

        returns (bool)

    {

        uint256 gonValue = value.mul(_gonsPerFragment);

        _gonBalances[msg.sender] = _gonBalances[msg.sender].sub(gonValue);

        _gonBalances[to] = _gonBalances[to].add(gonValue);

        emit Transfer(msg.sender, to, value);

        return true;

    }



    /**

     * @dev Function to check the amount of tokens that an owner has allowed to a spender.

     * @param owner_ The address which owns the funds.

     * @param spender The address which will spend the funds.

     * @return The number of tokens still available for the spender.

     */

    function allowance(address owner_, address spender)

        public

        view

        returns (uint256)

    {

        return _allowedFragments[owner_][spender];

    }



    /**

     * @dev Transfer tokens from one address to another.

     * @param from The address you want to send tokens from.

     * @param to The address you want to transfer to.

     * @param value The amount of tokens to be transferred.

     */

    function transferFrom(address from, address to, uint256 value)

        public

        validRecipient(to)

        whenTokenNotPaused

        returns (bool)

    {

        _allowedFragments[from][msg.sender] = _allowedFragments[from][msg.sender].sub(value);



        uint256 gonValue = value.mul(_gonsPerFragment);

        _gonBalances[from] = _gonBalances[from].sub(gonValue);

        _gonBalances[to] = _gonBalances[to].add(gonValue);

        emit Transfer(from, to, value);



        return true;

    }



    /**

     * @dev Approve the passed address to spend the specified amount of tokens on behalf of

     * msg.sender. This method is included for ERC20 compatibility.

     * increaseAllowance and decreaseAllowance should be used instead.

     * Changing an allowance with this method brings the risk that someone may transfer both

     * the old and the new allowance - if they are both greater than zero - if a transfer

     * transaction is mined before the later approve() call is mined.

     *

     * @param spender The address which will spend the funds.

     * @param value The amount of tokens to be spent.

     */

    function approve(address spender, uint256 value)

        public

        whenTokenNotPaused

        returns (bool)

    {

        _allowedFragments[msg.sender][spender] = value;

        emit Approval(msg.sender, spender, value);

        return true;

    }



    /**

     * @dev Increase the amount of tokens that an owner has allowed to a spender.

     * This method should be used instead of approve() to avoid the double approval vulnerability

     * described above.

     * @param spender The address which will spend the funds.

     * @param addedValue The amount of tokens to increase the allowance by.

     */

    function increaseAllowance(address spender, uint256 addedValue)

        public

        whenTokenNotPaused

        returns (bool)

    {

        _allowedFragments[msg.sender][spender] =

            _allowedFragments[msg.sender][spender].add(addedValue);

        emit Approval(msg.sender, spender, _allowedFragments[msg.sender][spender]);

        return true;

    }



    /**

     * @dev Decrease the amount of tokens that an owner has allowed to a spender.

     *

     * @param spender The address which will spend the funds.

     * @param subtractedValue The amount of tokens to decrease the allowance by.

     */

    function decreaseAllowance(address spender, uint256 subtractedValue)

        public

        whenTokenNotPaused

        returns (bool)

    {

        uint256 oldValue = _allowedFragments[msg.sender][spender];

        if (subtractedValue >= oldValue) {

            _allowedFragments[msg.sender][spender] = 0;

        } else {

            _allowedFragments[msg.sender][spender] = oldValue.sub(subtractedValue);

        }

        emit Approval(msg.sender, spender, _allowedFragments[msg.sender][spender]);

        return true;

    }

}

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x661cedb088918820e6893F01356F8D745010452a.sol
Total states:1203
14.171725
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:03.380976
Transaction Length: 1
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 374
Estimated Gas Usage: 256 - 351
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0x661cedb088918820e6893F01356F8D745010452a.sol:69

_batches[b]

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:10.409206
Transaction Length: 2
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 374
Estimated Gas Usage: 256 - 351
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0x661cedb088918820e6893F01356F8D745010452a.sol:69

_batches[b]

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.146005
Transaction Length: 1
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 686
Estimated Gas Usage: 2977 - 4203
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x661cedb088918820e6893F01356F8D745010452a.sol:71

_token.transfer(_beneficiary, _batches[b].amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.795611
Transaction Length: 2
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 686
Estimated Gas Usage: 2977 - 4203
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x661cedb088918820e6893F01356F8D745010452a.sol:71

_token.transfer(_beneficiary, _batches[b].amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x3f6dbe0364fa76d98cb6fadb3f52c6d343220ce2.sol
Total states:18192
42.51441
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.932034
Transaction Length: 2
Severity: High
Contract: Mega_Upload_Token
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x3f6dbe0364fa76d98cb6fadb3f52c6d343220ce2.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.285117
Transaction Length: 2
Severity: High
Contract: Mega_Upload_Token
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x3f6dbe0364fa76d98cb6fadb3f52c6d343220ce2.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xfc56274810a81320e140cba2b4143bfa3ea9420f.sol
Total states:5259
58.893993
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.903268
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xfc56274810a81320e140cba2b4143bfa3ea9420f.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.700385
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xfc56274810a81320e140cba2b4143bfa3ea9420f.sol:29

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.770933
Transaction Length: 1
Severity: High
Contract: Sarnado
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xfc56274810a81320e140cba2b4143bfa3ea9420f.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.942957
Transaction Length: 1
Severity: High
Contract: Sarnado
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xfc56274810a81320e140cba2b4143bfa3ea9420f.sol:29

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x1a7fa04ee5d638e8224aedcc42d94af840a376fe.sol
Total states:9807
212.01748
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.442923
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x1a7fa04ee5d638e8224aedcc42d94af840a376fe.sol:35

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.809989
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x1a7fa04ee5d638e8224aedcc42d94af840a376fe.sol:27

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.410508
Transaction Length: 1
Severity: High
Contract: GreenFinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 1648
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x1a7fa04ee5d638e8224aedcc42d94af840a376fe.sol:3

*/

//pragma solidity ^0.4.24;
prag

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:33.802070
Transaction Length: 1
Severity: Medium
Contract: GreenFinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x1a7fa04ee5d638e8224aedcc42d94af840a376fe.sol:207

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:41.776051
Transaction Length: 1
Severity: High
Contract: GreenFinance
Function name: safeMul(uint256,uint256)
PC address: 5262
Estimated Gas Usage: 394 - 489
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x1a7fa04ee5d638e8224aedcc42d94af840a376fe.sol:35

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:45.036347
Transaction Length: 1
Severity: High
Contract: GreenFinance
Function name: safeAdd(uint256,uint256)
PC address: 5840
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x1a7fa04ee5d638e8224aedcc42d94af840a376fe.sol:27

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xb19501f5a1c4623fe150134925ae339463b258f3.sol
Total states:7732
32.280645
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:19.242596
Transaction Length: 2
Severity: High
Contract: UAB
Function name: burnFrom(address,uint256)
PC address: 3508
Estimated Gas Usage: 7546 - 28781
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb19501f5a1c4623fe150134925ae339463b258f3.sol:151

allowed[_from][msg.sender] -= _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:24.151645
Transaction Length: 2
Severity: High
Contract: UAB
Function name: burnFrom(address,uint256)
PC address: 3524
Estimated Gas Usage: 12979 - 54214
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb19501f5a1c4623fe150134925ae339463b258f3.sol:152

_totalSupply -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x31900c186658ef7edbe7aa8c195f63df51757ce1.sol
Total states:10094
21.181885
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.036554
Transaction Length: 0
Severity: High
Contract: Aqua
Function name: constructor
PC address: 98
Estimated Gas Usage: 233 - 3006
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x31900c186658ef7edbe7aa8c195f63df51757ce1.sol:9

s water is there. It's the blue heart of th

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.594627
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x31900c186658ef7edbe7aa8c195f63df51757ce1.sol:88

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x3d46C3d1F62eB36aA287d73387D198E62709D8E7.sol
Total states:10360
106.476705
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.076565
Transaction Length: 1
Severity: High
Contract: YFUGovernance
Function name: propose(address,string)
PC address: 3296
Estimated Gas Usage: 441 - 536
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x3d46C3d1F62eB36aA287d73387D198E62709D8E7.sol:3

*/

/*
   ____            __   __  

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x75b6c7ba67488319b13d305be80ff2067412a483.sol
Total states:76081
147.010782
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.784981
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x75b6c7ba67488319b13d305be80ff2067412a483.sol:58

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:54.048004
Transaction Length: 2
Severity: High
Contract: DexCloud
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x75b6c7ba67488319b13d305be80ff2067412a483.sol:58

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.451979
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x75b6c7ba67488319b13d305be80ff2067412a483.sol:60

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.305752
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x75b6c7ba67488319b13d305be80ff2067412a483.sol:61

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.818104
Transaction Length: 2
Severity: High
Contract: DexCloud
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x75b6c7ba67488319b13d305be80ff2067412a483.sol:60

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.693983
Transaction Length: 2
Severity: High
Contract: DexCloud
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x75b6c7ba67488319b13d305be80ff2067412a483.sol:61

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x1BdC2454cb0b000C0c253883eF8d87524E014b79.sol
Total states:3378
5.962786
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x3bace839095cb4a488f5940805ff50d6102d3011.sol
Total states:1239
0.487998
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x2b9dde565ddf9b736c9051286b216f66a8219e36.sol
Total states:3274
7.758665
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x27496b898c449dc6c218574143c5be3c305f05bf.sol
Total states:18192
43.800292
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.982377
Transaction Length: 2
Severity: High
Contract: bella
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x27496b898c449dc6c218574143c5be3c305f05bf.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.223880
Transaction Length: 2
Severity: High
Contract: bella
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x27496b898c449dc6c218574143c5be3c305f05bf.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x392c6A09Ea482C894B63FC96dC2c389d1f485885.sol
Total states:24
0.040579
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x0713c9b4177005413e020e2c48711f81697884b3.sol
Total states:1585
2.807828
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039494
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x0713c9b4177005413e020e2c48711f81697884b3.sol:20

 @dev Provides information about the curren

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol
Total states:60
559.680785
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.983584
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactOut(address,uint256)
PC address: 4479
Estimated Gas Usage: 2622 - 40996
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.699249
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactOut(address,uint256)
PC address: 4482
Estimated Gas Usage: 2465 - 40556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.525265
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 4889
Estimated Gas Usage: 2465 - 40556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:196

new address[](2)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.310520
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5227
Estimated Gas Usage: 780 - 4497
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:199

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:54.542120
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5267
Estimated Gas Usage: 930 - 5023
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:199

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.351000
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5336
Estimated Gas Usage: 2372 - 40370
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.991485
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5339
Estimated Gas Usage: 2465 - 40556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.574008
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5360
Estimated Gas Usage: 2465 - 40556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:199

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.438058
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5385
Estimated Gas Usage: 2465 - 40556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:2


*/

pragma solidity 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:17.987941
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5391
Estimated Gas Usage: 2465 - 40556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:7

0 {
    functi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.976976
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5411
Estimated Gas Usage: 2523 - 40707
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:11

tion transfer(address

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:22.593520
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5413
Estimated Gas Usage: 2523 - 40707
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:10

turns (uint);
    function transfer(address 

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:54.340046
Transaction Length: 1
Severity: Low
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5454
Estimated Gas Usage: 2662 - 41127
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:199

UNI.getAmountsOut(inExact, _path)[1]

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xf2DB0ac56c159bdd8B76FcE5Be38A679dc908858.sol
Total states:150
1.96146
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x6B65c4760F56ea89A21193af5B909395766eF2E5.sol
Total states:428
1.403525
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol
Total states:1948
4.902401
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.694924
Transaction Length: 1
Severity: High
Contract: Flapper
Function name: tick(uint256)
PC address: 9230
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol:124

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x3ba7bc627cbea7c3a6cfb7b7f4a3589e22ad1dca.sol
Total states:18192
43.190795
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.200183
Transaction Length: 2
Severity: High
Contract: Straight_Fire_Finance
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x3ba7bc627cbea7c3a6cfb7b7f4a3589e22ad1dca.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.544755
Transaction Length: 2
Severity: High
Contract: Straight_Fire_Finance
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x3ba7bc627cbea7c3a6cfb7b7f4a3589e22ad1dca.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xb1941be73fbb8cfc5cc911ca04d1e5d96a054e1b.sol
Total states:1756
2.92794
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xb47ac409fd451f89eadaefc4cf1e76daf7ae0650.sol
Total states:7809
17.744246
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039454
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb47ac409fd451f89eadaefc4cf1e76daf7ae0650.sol:12

t of tokens owned by `account`.
     */
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.413273
Transaction Length: 2
Severity: High
Contract: YFDToken
Function name: increaseAllowance(address,uint256)
PC address: 5475
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb47ac409fd451f89eadaefc4cf1e76daf7ae0650.sol:87

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xd65794890dd6c2209ff921dda3940a605f1d9b26.sol
Total states:942
0.946229
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xff26b5f615743c6fc0e9cc1ceabe61e540f73fdb.sol
Total states:19464
69.784633
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.032032
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4109
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xff26b5f615743c6fc0e9cc1ceabe61e540f73fdb.sol:37

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.556088
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4122
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xff26b5f615743c6fc0e9cc1ceabe61e540f73fdb.sol:38

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.204797
Transaction Length: 2
Severity: High
Contract: Altcoin
Function name: increaseApproval(address,uint256)
PC address: 4822
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xff26b5f615743c6fc0e9cc1ceabe61e540f73fdb.sol:37

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:27.590098
Transaction Length: 2
Severity: Low
Contract: Altcoin
Function name: increaseApproval(address,uint256)
PC address: 4835
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xff26b5f615743c6fc0e9cc1ceabe61e540f73fdb.sol:38

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x37E808F084101F75783612407e7C3f5F92d8ee3F.sol
Total states:10044
22.289192
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039083
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x37E808F084101F75783612407e7C3f5F92d8ee3F.sol:9

MMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMM

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.513424
Transaction Length: 2
Severity: High
Contract: RI
Function name: increaseAllowance(address,uint256)
PC address: 5988
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x37E808F084101F75783612407e7C3f5F92d8ee3F.sol:98

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x41a379957fd588b0cc262b5faab17d46a501b0a7.sol
Total states:4025
45.352197
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x469b73bb8cd6d98f22b5f610609be7a9ee90a9ba.sol
Total states:9044
32.45638
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.767276
Transaction Length: 2
Severity: High
Contract: SWSHX
Function name: increaseApproval(address,uint256)
PC address: 5497
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x469b73bb8cd6d98f22b5f610609be7a9ee90a9ba.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:27.811983
Transaction Length: 2
Severity: Low
Contract: SWSHX
Function name: increaseApproval(address,uint256)
PC address: 5510
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0x469b73bb8cd6d98f22b5f610609be7a9ee90a9ba.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xa7d8d230a09cc8c35afc6ca0a9bd31a941c4148d.sol
Total states:12444
25.858829
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.175248
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3913
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xa7d8d230a09cc8c35afc6ca0a9bd31a941c4148d.sol:225

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x618cd15883050dde5637fadf218f266f2df310de.sol
Total states:177
0.220917
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x2dbce82984595d977564888e08476053c6dbb0e3.sol
Total states:1587
3.763865
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.430734
Transaction Length: 1
Severity: Medium
Contract: SUSHIPOWAH
Function name: totalSupply()
PC address: 443
Estimated Gas Usage: 3856 - 73447
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1306
Offset: 1560
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x2dbce82984595d977564888e08476053c6dbb0e3.sol:94

function totalSupply() public view returns (uint256) {
    IPair pair = IPair(0x795065dCc9f64b5614C407a6EFDC400DA6221FB0);
    IBar bar = IBar(0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272);
    IERC20 sushi = IERC20(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);
    (uint256 lp_totalSushi, , ) = pair.getReserves();
    uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));

    return lp_totalSushi.mul(2).add(xsushi_totalSushi);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.304103
Transaction Length: 1
Severity: High
Contract: SUSHIPOWAH
Function name: balanceOf(address)
PC address: 3521
Estimated Gas Usage: 7019 - 145455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x2dbce82984595d977564888e08476053c6dbb0e3.sol:51

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x7a625b88b229b4451a6abc28a4d1c30dc708da19.sol
Total states:16612
155.473869
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.086111
Transaction Length: 0
Severity: Medium
Contract: PulotoGovernance
Function name: constructor
PC address: 411
Estimated Gas Usage: 53243 - 257448
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop5/0x7a625b88b229b4451a6abc28a4d1c30dc708da19.sol:700

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.205811
Transaction Length: 1
Severity: High
Contract: PulotoGovernance
Function name: propose(address,string)
PC address: 3513
Estimated Gas Usage: 418 - 513
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x7a625b88b229b4451a6abc28a4d1c30dc708da19.sol:3

*/

// File: @openzeppelin/contract

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x3b297e358207f43d878f2a8a11a3ba49c54d0802.sol
Total states:9586
19.795848
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039318
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x3b297e358207f43d878f2a8a11a3ba49c54d0802.sol:26

 * sender of the transaction and its data. 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.424217
Transaction Length: 2
Severity: High
Contract: FarmBBR
Function name: increaseAllowance(address,uint256)
PC address: 5735
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x3b297e358207f43d878f2a8a11a3ba49c54d0802.sol:288

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol
Total states:3604
62.72708
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:30.742758
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeSub(uint256,uint256)
PC address: 820
Estimated Gas Usage: 309 - 404
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.875827
Transaction Length: 1
Severity: Low
Contract: Math
Function name: safeDiv(uint256,uint256)
PC address: 959
Estimated Gas Usage: 324 - 419
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.111701
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 985
Estimated Gas Usage: 382 - 477
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.242648
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 1128
Estimated Gas Usage: 496 - 591
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:105

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:24.645563
Transaction Length: 1
Severity: High
Contract: Reserve
Function name: safeSub(uint256,uint256)
PC address: 3211
Estimated Gas Usage: 376 - 471
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.707804
Transaction Length: 1
Severity: Low
Contract: Reserve
Function name: safeDiv(uint256,uint256)
PC address: 3360
Estimated Gas Usage: 303 - 398
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:117

x / y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:27.307050
Transaction Length: 1
Severity: Low
Contract: Reserve
Function name: balance()
PC address: 3509
Estimated Gas Usage: 1431 - 2137
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:237

shelf.balanceRequest()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.529566
Transaction Length: 1
Severity: High
Contract: Reserve
Function name: rdiv(uint256,uint256)
PC address: 4293
Estimated Gas Usage: 428 - 523
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.376572
Transaction Length: 1
Severity: High
Contract: Reserve
Function name: rdiv(uint256,uint256)
PC address: 4576
Estimated Gas Usage: 542 - 637
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:105

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x1b926fbb24a9f78dcdd3272f2d86f5d0660e59c0.sol
Total states:93
0.175842
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x1616243ec5acaab0f2484b3d4aafe8f63232d2f9.sol
Total states:120
1.326563
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol
Total states:21575
183.476078
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.027772
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:9

dress constant BUSD_DEPOSIT_ADDRESS   = 0xb

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.390864
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: fallback
PC address: 142
Estimated Gas Usage: 2311 - 39600
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x594153a000000000000000000000000000000000000000000000000000000000
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1035

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.393411
Transaction Length: 1
Severity: Medium
Contract: PoolProxy
Function name: fallback
PC address: 160
Estimated Gas Usage: 3056 - 74345
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 931
Offset: 142
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1044

return(ptr, size)

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.670279
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: fallback
PC address: 264
Estimated Gas Usage: 725 - 3547
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy))
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:902

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.026701
Transaction Length: 1
Severity: Low
Contract: Deposit3Tokens
Function name: period_timestamp(uint256)
PC address: 380
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:992

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.095893
Transaction Length: 1
Severity: Low
Contract: Deposit2Tokens
Function name: period_timestamp(uint256)
PC address: 393
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:986

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:53.131180
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 537
Estimated Gas Usage: 1433 - 2470
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:58.273849
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 577
Estimated Gas Usage: 1583 - 2996
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.606228
Transaction Length: 1
Severity: Low
Contract: TokenManager
Function name: supportAddresses(address,uint256)
PC address: 613
Estimated Gas Usage: 752 - 1037
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.235781
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: supportAddresses(address,uint256)
PC address: 1317
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:03.354983
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1575
Estimated Gas Usage: 4173 - 40386
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1082

IERC20(tokenAddress).transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:09.472515
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1891
Estimated Gas Usage: 5889 - 76759
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1085

IERC20(tokenAddress).approve(EXCHANGE_CONTRACT, amount)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.537870
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: supportAddresses(address,uint256)
PC address: 2114
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.972258
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2259
Estimated Gas Usage: 8446 - 148446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:5

enManager {
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.597701
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2262
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:3



 contract TokenManager {
    
    address

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.106254
Transaction Length: 2
Severity: High
Contract: PoolToken
Function name: increaseAllowance(address,uint256)
PC address: 4840
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:139

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.791041
Transaction Length: 1
Severity: Low
Contract: PoolFactory
Function name: supportAddresses(address,uint256)
PC address: 5037
Estimated Gas Usage: 796 - 1081
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:13.472290
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: supportAddresses(address,uint256)
PC address: 8485
Estimated Gas Usage: 818 - 1103
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.615277
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17754
Estimated Gas Usage: 5008 - 75599
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:5

enManager {
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.232093
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17757
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:3



 contract TokenManager {
    
    address

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:34.343009
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17778
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1241

IOneSplit(EXCHANGE_CONTRACT).getExpectedReturn(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, 100, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.191406
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17813
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:2


*/

 contract TokenM

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:41.048785
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17819
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:7

ant COMPOUND_D

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:48.933951
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17839
Estimated Gas Usage: 5186 - 76056
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:9

POSIT_ADDRESS   = 0xb

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:58.000364
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17841
Estimated Gas Usage: 5186 - 76056
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:9

dress constant BUSD_DEPOSIT_ADDRESS   = 0xb6

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:39.657008
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18208
Estimated Gas Usage: 5661 - 77946
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:39.112708
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18245
Estimated Gas Usage: 6389 - 78579
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.657044
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 19161
Estimated Gas Usage: 5923 - 76793
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1257

IERC20(DAI_ADDRESS).approve(_depositPool, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol
Total states:481
3.892342
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xbD1c6eFE7fE953205465855E0670CE94b34BB22f.sol
Total states:495
0.250382
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xe5b677c7aae044135f81feb4c38b877272e6f6dd.sol
Total states:2115
6.068186
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x46b24cf9159fc05b9060760ed4d5a18dd207346b.sol
Total states:9807
214.125424
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.350817
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x46b24cf9159fc05b9060760ed4d5a18dd207346b.sol:70

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:40.836704
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x46b24cf9159fc05b9060760ed4d5a18dd207346b.sol:54

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.473968
Transaction Length: 1
Severity: High
Contract: ARKFinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 1648
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x46b24cf9159fc05b9060760ed4d5a18dd207346b.sol:3



*/



//pragma solidity ^0.4.24;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:31.887446
Transaction Length: 1
Severity: Medium
Contract: ARKFinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x46b24cf9159fc05b9060760ed4d5a18dd207346b.sol:416

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:40.034015
Transaction Length: 1
Severity: High
Contract: ARKFinance
Function name: safeMul(uint256,uint256)
PC address: 5262
Estimated Gas Usage: 394 - 489
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x46b24cf9159fc05b9060760ed4d5a18dd207346b.sol:70

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:29.810384
Transaction Length: 1
Severity: High
Contract: ARKFinance
Function name: safeAdd(uint256,uint256)
PC address: 5840
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x46b24cf9159fc05b9060760ed4d5a18dd207346b.sol:54

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol
Total states:150
95.562239
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.309982
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.253024
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.623738
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:3



// File: @openzeppelin/contracts/token/ER

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.674429
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:3



// File: @openzeppelin/contracts/token/ER

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.044565
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:655

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.245531
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:655

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.516320
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:16

ce.
     */
    funct

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.759558
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:16

ce.
     */
    funct

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.391924
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:16

t of tokens in existence.
     */
    functi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.680929
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:16

t of tokens in existence.
     */
    functi

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x55a290f08bb4cae8dcf1ea5635a3fcfd4da60456.sol
Total states:8705
250.242712
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.417177
Transaction Length: 1
Severity: High
Contract: BITTO
Function name: approveAndCall(address,uint256,bytes)
PC address: 1242
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x55a290f08bb4cae8dcf1ea5635a3fcfd4da60456.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:28.303456
Transaction Length: 1
Severity: Medium
Contract: BITTO
Function name: approveAndCall(address,uint256,bytes)
PC address: 4580
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x55a290f08bb4cae8dcf1ea5635a3fcfd4da60456.sol:127

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x835317C1D587971c03940b16d306DF8f4D19bf62.sol
Total states:2191
6.026957
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.986010
Transaction Length: 1
Severity: High
Contract: Flipper
Function name: tick(uint256)
PC address: 12726
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x835317C1D587971c03940b16d306DF8f4D19bf62.sol:135

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xb5eb2247cd16166d86925dccfa5b3d083daa0e5c.sol
Total states:76097
153.354659
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:58.690563
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb5eb2247cd16166d86925dccfa5b3d083daa0e5c.sol:60

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.556119
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb5eb2247cd16166d86925dccfa5b3d083daa0e5c.sol:60

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:02.625132
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb5eb2247cd16166d86925dccfa5b3d083daa0e5c.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:08.324637
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb5eb2247cd16166d86925dccfa5b3d083daa0e5c.sol:63

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.878509
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb5eb2247cd16166d86925dccfa5b3d083daa0e5c.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:04.181602
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb5eb2247cd16166d86925dccfa5b3d083daa0e5c.sol:63

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xc08144aa808c06a39b8ca1afeac3e737cfdf747a.sol
Total states:18509
51.303682
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.431925
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xc08144aa808c06a39b8ca1afeac3e737cfdf747a.sol:286

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.324769
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 3847
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xc08144aa808c06a39b8ca1afeac3e737cfdf747a.sol:286

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x65a6b7222Ea6f118DBA8C21d293D0c29e23420C9.sol
Total states:6625
12.202991
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.806093
Transaction Length: 1
Severity: High
Contract: LPTokenWrapper
Function name: stake(uint256)
PC address: 1964
Estimated Gas Usage: 402 - 497
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x65a6b7222Ea6f118DBA8C21d293D0c29e23420C9.sol:158

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x7f1AE7A1fC275B5B9C3ad4497Fa94E3b9424E76e.sol
Total states:180
3.779541
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x0c212728e3cdb57ed62ddfca917fe7df17a63979.sol
Total states:150
3.600221
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xb0f1aa4b8a64eb0be44fd0b39a486bee2255a8c5.sol
Total states:1239
0.655068
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xC30e3C0f121a5E357E321CED6504d31A71Abcdcc.sol
Total states:9086
21.925017
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.348249
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xC30e3C0f121a5E357E321CED6504d31A71Abcdcc.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x526548c12d392c4a12a477596aa18076490ba624.sol
Total states:8045
16.465692
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041565
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x526548c12d392c4a12a477596aa18076490ba624.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.563696
Transaction Length: 2
Severity: High
Contract: YFIGOLD
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x526548c12d392c4a12a477596aa18076490ba624.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xf13acac1bf183bebaf94c7af7723837192f3d0d6.sol
Total states:3381
6.23783
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xcc23ef76b46ed576caa5a1481f4400d2543f8006.sol
Total states:839
5.923378
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.895998
Transaction Length: 1
Severity: Low
Contract: Swapico
Function name: purchase(uint256)
PC address: 1477
Estimated Gas Usage: 6253 - 76933
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0xcc23ef76b46ed576caa5a1481f4400d2543f8006.sol:218

IERC20(synthetico).burnFrom(msg.sender, _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.737426
Transaction Length: 1
Severity: Low
Contract: Swapico
Function name: purchase(uint256)
PC address: 1698
Estimated Gas Usage: 8283 - 113764
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0xcc23ef76b46ed576caa5a1481f4400d2543f8006.sol:220

IERC20(authentico).transfer(msg.sender, _amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x2c3eeead12224129742e7841a2f3d7787dabb58c.sol
Total states:17591
28.961911
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.037888
Transaction Length: 0
Severity: High
Contract: Token
Function name: constructor
PC address: 98
Estimated Gas Usage: 233 - 3006
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x2c3eeead12224129742e7841a2f3d7787dabb58c.sol:21


interface ERC20Interface {

    /**

     

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:17.123930
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1574
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x2c3eeead12224129742e7841a2f3d7787dabb58c.sol:222

_balances[_to] += _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:21.243615
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1650
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x2c3eeead12224129742e7841a2f3d7787dabb58c.sol:224

_balances[_from] -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xe46ec14432033ede29343e9692a32c9adc314271.sol
Total states:130
0.216661
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xa0fdd7e5ba097c8a57897a063266d48f9cf5a0a0.sol
Total states:3497
11.602778
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x0d3e8d6a33e7af33b86221ff8c24a74b8dee8583.sol
Total states:1033
1.101083
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x2C576fF1c2Fd70c1555F64Bd61E4dB271Bff2f99.sol
Total states:0
0.011859
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xd4501b7449b444072ccaaa53a2fca348c7c34e0a.sol
Total states:18192
43.441236
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.199967
Transaction Length: 2
Severity: High
Contract: ponzi
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd4501b7449b444072ccaaa53a2fca348c7c34e0a.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.188533
Transaction Length: 2
Severity: High
Contract: ponzi
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd4501b7449b444072ccaaa53a2fca348c7c34e0a.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x1457dd7eee6457b727840e985750aeb7c065ae0b.sol
Total states:3455
5.811203
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x78a24c16a719e4b1578509c4b60320b20d06badc.sol
Total states:10492
37.871584
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.939771
Transaction Length: 1
Severity: High
Contract: yfOMEGA
Function name: transfer(address,uint256)
PC address: 6338
Estimated Gas Usage: 834 - 929
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x78a24c16a719e4b1578509c4b60320b20d06badc.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.277748
Transaction Length: 2
Severity: High
Contract: yfOMEGA
Function name: increaseAllowance(address,uint256)
PC address: 6458
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x78a24c16a719e4b1578509c4b60320b20d06badc.sol:11

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x73d2e2e1368c1b39cf0f39da60e8f44e96c64930.sol
Total states:8020
137.51688
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.359759
Transaction Length: 1
Severity: High
Contract: GTR
Function name: approveAndCall(address,uint256,bytes)
PC address: 1845
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x73d2e2e1368c1b39cf0f39da60e8f44e96c64930.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:35.456618
Transaction Length: 1
Severity: Medium
Contract: GTR
Function name: approveAndCall(address,uint256,bytes)
PC address: 6733
Estimated Gas Usage: 9711 - 36091
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x73d2e2e1368c1b39cf0f39da60e8f44e96c64930.sol:225

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.307130
Transaction Length: 2
Severity: High
Contract: GTR
Function name: transferFrom(address,address,uint256)
PC address: 7435
Estimated Gas Usage: 2690 - 4205
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x73d2e2e1368c1b39cf0f39da60e8f44e96c64930.sol:18

a + b

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.584755
Transaction Length: 1
Severity: High
Contract: GTR
Function name: transfer(address,uint256)
PC address: 7462
Estimated Gas Usage: 2780 - 3915
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x73d2e2e1368c1b39cf0f39da60e8f44e96c64930.sol:14

a - b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x643e34976d68a678e56634405ca4d6fc5e52b039.sol
Total states:60
0.718787
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xe135f5669c29fe91a1779991f5a6c79afb6b56ee.sol
Total states:9014
19.355104
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.587202
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xe135f5669c29fe91a1779991f5a6c79afb6b56ee.sol:108

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x8d26371703b9856c79726b0bd7668ce2fd4f823b.sol
Total states:3365
5.912939
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x41bc0913ed789428e107c4ea9ed007815c5a8230.sol
Total states:53557
108.619849
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.165183
Transaction Length: 1
Severity: High
Contract: KOMP
Function name: register(string)
PC address: 2171
Estimated Gas Usage: 428 - 523
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x41bc0913ed789428e107c4ea9ed007815c5a8230.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.641255
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 5537
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x41bc0913ed789428e107c4ea9ed007815c5a8230.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.995904
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6860
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x41bc0913ed789428e107c4ea9ed007815c5a8230.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.060894
Transaction Length: 2
Severity: High
Contract: FreezeToken
Function name: increaseApproval(address,uint256)
PC address: 7549
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x41bc0913ed789428e107c4ea9ed007815c5a8230.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.030901
Transaction Length: 2
Severity: High
Contract: KOMP
Function name: increaseApproval(address,uint256)
PC address: 9131
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x41bc0913ed789428e107c4ea9ed007815c5a8230.sol:47

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x45e31a35078e0d9a82c4041bd4fd1f136f736068.sol
Total states:53557
108.317204
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.756806
Transaction Length: 1
Severity: High
Contract: KOMP
Function name: register(string)
PC address: 2171
Estimated Gas Usage: 428 - 523
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x45e31a35078e0d9a82c4041bd4fd1f136f736068.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.674398
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 5537
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x45e31a35078e0d9a82c4041bd4fd1f136f736068.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.975402
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6860
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x45e31a35078e0d9a82c4041bd4fd1f136f736068.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.069662
Transaction Length: 2
Severity: High
Contract: FreezeToken
Function name: increaseApproval(address,uint256)
PC address: 7549
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x45e31a35078e0d9a82c4041bd4fd1f136f736068.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.012927
Transaction Length: 2
Severity: High
Contract: KOMP
Function name: increaseApproval(address,uint256)
PC address: 9131
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x45e31a35078e0d9a82c4041bd4fd1f136f736068.sol:47

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x1cf607013db83dd9c622ba4976bdc6959b34bfdc.sol
Total states:3209
7.856722
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.124359
Transaction Length: 1
Severity: Low
Contract: UPLOADstaking
Function name: deposit(uint256)
PC address: 4300
Estimated Gas Usage: 1234 - 1895
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x1cf607013db83dd9c622ba4976bdc6959b34bfdc.sol:256

Token(tokenAddress).transferFrom(msg.sender, address(this), amountToStake)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.095053
Transaction Length: 2
Severity: Low
Contract: UPLOADstaking
Function name: deposit(uint256)
PC address: 4300
Estimated Gas Usage: 1234 - 1895
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x1cf607013db83dd9c622ba4976bdc6959b34bfdc.sol:256

Token(tokenAddress).transferFrom(msg.sender, address(this), amountToStake)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x94d17e458e437d02b358f8154a83a7f024024d72.sol
Total states:11570
21.952513
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039462
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x94d17e458e437d02b358f8154a83a7f024024d72.sol:11

        ██║ ██║ ██║
  

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.053519
Transaction Length: 2
Severity: High
Contract: YFIII
Function name: increaseAllowance(address,uint256)
PC address: 5693
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x94d17e458e437d02b358f8154a83a7f024024d72.sol:157

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x1c71eff16ea2328d6392838c8773c805f352799d.sol
Total states:3429
5.733773
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xf8C3527CC04340b208C854E985240c02F7B7793f.sol
Total states:3871
45.746796
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.351661
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf8C3527CC04340b208C854E985240c02F7B7793f.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.709819
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf8C3527CC04340b208C854E985240c02F7B7793f.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.211383
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf8C3527CC04340b208C854E985240c02F7B7793f.sol:275

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.731012
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf8C3527CC04340b208C854E985240c02F7B7793f.sol:10

 external returns (bo

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.684953
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf8C3527CC04340b208C854E985240c02F7B7793f.sol:10

pient, uint256 amount) external returns (boo

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x845cc90dc30dd20f8e05bdf346218ba19f376973.sol
Total states:2129
3.202707
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039766
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x845cc90dc30dd20f8e05bdf346218ba19f376973.sol:13

ext, including the
 * sender of the transac

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xa3dbaeeb5bd9e98ade30631d5450f6b18ce72eed.sol
Total states:1438
3.599528
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048033
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 147
Estimated Gas Usage: 25287 - 128060
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xa3dbaeeb5bd9e98ade30631d5450f6b18ce72eed.sol:10

ta. While these are generally available
 * 

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x55ceb773c494cf7ad4f2e3170936866bd7eff1c9.sol
Total states:2790
6.397068
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xbb4e0913884e3798ab7d71013f773546036afa8b.sol
Total states:3269
6.903917
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x320ec29c92a0436c0927199d221e7a38a3610439.sol
Total states:9010
18.345839
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.679265
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x320ec29c92a0436c0927199d221e7a38a3610439.sol:286

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xCbE931C20541ff86f048908Db456bEE8823d3F1A.sol
Total states:2330
3.100451
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x15bf96d8f21f3e4d4cffaff9617a6b7895f91890.sol
Total states:850
4.352612
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.021119
Transaction Length: 1
Severity: Low
Contract: QYFMarketingFundLock
Function name: release()
PC address: 1196
Estimated Gas Usage: 5049 - 42716
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x15bf96d8f21f3e4d4cffaff9617a6b7895f91890.sol:163

address(token).call(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xb4a679cfab115f2fcc6bb087a20e81b5dcd27c45.sol
Total states:5259
56.433951
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.402393
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb4a679cfab115f2fcc6bb087a20e81b5dcd27c45.sol:36

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.332474
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb4a679cfab115f2fcc6bb087a20e81b5dcd27c45.sol:32

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.702694
Transaction Length: 1
Severity: High
Contract: AppleFinanceToken
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb4a679cfab115f2fcc6bb087a20e81b5dcd27c45.sol:36

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.953653
Transaction Length: 1
Severity: High
Contract: AppleFinanceToken
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb4a679cfab115f2fcc6bb087a20e81b5dcd27c45.sol:32

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xEDC15272648DCA9948649f14f846301d0Ef788b4.sol
Total states:6625
12.086698
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.807221
Transaction Length: 1
Severity: High
Contract: LPTokenWrapper
Function name: stake(uint256)
PC address: 1964
Estimated Gas Usage: 402 - 497
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xEDC15272648DCA9948649f14f846301d0Ef788b4.sol:158

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xba9B45AE4AA08B5312b905Cc9b793b23269727e1.sol
Total states:3445
11.585843
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xecd78d9b6b6daa268ea7524557c361fcc8a323b7.sol
Total states:871
0.494366
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xd67b92809ecdc088e0706a092ce2b06f3871fe17.sol
Total states:26868
172.239185
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:44.941368
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3739
Estimated Gas Usage: 1025 - 1500
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd67b92809ecdc088e0706a092ce2b06f3871fe17.sol:57

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:45.080098
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 4169
Estimated Gas Usage: 1025 - 1500
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd67b92809ecdc088e0706a092ce2b06f3871fe17.sol:57

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:39.735386
Transaction Length: 2
Severity: High
Contract: Defietherfund
Function name: increaseAllowance(address,uint256)
PC address: 4651
Estimated Gas Usage: 1025 - 1500
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd67b92809ecdc088e0706a092ce2b06f3871fe17.sol:57

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x50e1a50e244aeD8Cf3e76a063BbE8a5C6F69Ea83.sol
Total states:93
0.069375
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.002356
Transaction Length: 1
Severity: Low
Contract: Proxy
Function name: fallback
PC address: 54
Estimated Gas Usage: 459 - 2951
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy))
--------------------
In file: ../../contracts/noloop/noloop5/0x50e1a50e244aeD8Cf3e76a063BbE8a5C6F69Ea83.sol:24

delegatecall(gas, contractLogic, ptr, calldatasize, 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x533b1d83998f8b2beacfac1b268f7e4d2a31ea9b.sol
Total states:670
11.415436
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:05.632793
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFreeFrom(address,uint256,address,uint256,bytes32)
PC address: 217
Estimated Gas Usage: 3768 - 73177
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 514
Offset: 1130
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x533b1d83998f8b2beacfac1b268f7e4d2a31ea9b.sol:88

function burnGasAndFreeFrom(address gas_token, uint256 free, address mToken, uint256 nonce, bytes32 challenge_digest) public {

        require(GasToken1(gas_token).freeFrom(msg.sender, free), "Could not free");

        expensiveStuff(mToken, nonce, challenge_digest);

    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:11.300001
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFree(address,uint256,address,uint256,bytes32)
PC address: 347
Estimated Gas Usage: 3744 - 73058
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 818
Offset: 1130
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x533b1d83998f8b2beacfac1b268f7e4d2a31ea9b.sol:62

function burnGasAndFree(address gas_token, uint256 free, address mToken, uint256 nonce, bytes32 challenge_digest) public {

        require(GasToken1(gas_token).free(free), "Could not free");

        expensiveStuff(mToken, nonce, challenge_digest);

    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:01.852782
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFreeFrom(address,uint256,address,uint256,bytes32)
PC address: 514
Estimated Gas Usage: 1198 - 1764
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x533b1d83998f8b2beacfac1b268f7e4d2a31ea9b.sol:90

GasToken1(gas_token).freeFrom(msg.sender, free)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:07.581545
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFree(address,uint256,address,uint256,bytes32)
PC address: 818
Estimated Gas Usage: 1174 - 1645
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x533b1d83998f8b2beacfac1b268f7e4d2a31ea9b.sol:64

GasToken1(gas_token).free(free)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:11.179102
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFree(address,uint256,address,uint256,bytes32)
PC address: 1130
Estimated Gas Usage: 2880 - 38008
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x533b1d83998f8b2beacfac1b268f7e4d2a31ea9b.sol:44

ERC918Interface(mToken).mint(nonce, challenge_digest)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xbe23e67938d40f2a9e1672f2c99c0de3d079417e.sol
Total states:942
0.734659
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xd6fA35E9Cc07131e60bc1BbE0541AE1d373B4026.sol
Total states:11841
272.425633
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.646588
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd6fA35E9Cc07131e60bc1BbE0541AE1d373B4026.sol:39

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:15.624776
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd6fA35E9Cc07131e60bc1BbE0541AE1d373B4026.sol:29

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.439862
Transaction Length: 1
Severity: High
Contract: ARBTToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1483
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd6fA35E9Cc07131e60bc1BbE0541AE1d373B4026.sol:3

*/

//pragma solidity ^0.4.24;
prag

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:36.896175
Transaction Length: 1
Severity: Medium
Contract: ARBTToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 4325
Estimated Gas Usage: 8823 - 34729
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xd6fA35E9Cc07131e60bc1BbE0541AE1d373B4026.sol:180

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:38.940484
Transaction Length: 1
Severity: High
Contract: ARBTToken
Function name: safeMul(uint256,uint256)
PC address: 4362
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd6fA35E9Cc07131e60bc1BbE0541AE1d373B4026.sol:39

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:49.295976
Transaction Length: 1
Severity: High
Contract: ARBTToken
Function name: safeAdd(uint256,uint256)
PC address: 4546
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd6fA35E9Cc07131e60bc1BbE0541AE1d373B4026.sol:29

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol
Total states:9087
45.240817
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:06.198931
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeSub(uint256,uint256)
PC address: 601
Estimated Gas Usage: 527 - 622
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:110

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:08.160336
Transaction Length: 1
Severity: Low
Contract: Math
Function name: safeDiv(uint256,uint256)
PC address: 689
Estimated Gas Usage: 542 - 637
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:118

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.866961
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 715
Estimated Gas Usage: 600 - 695
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:114

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.492140
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeAdd(uint256,uint256)
PC address: 807
Estimated Gas Usage: 593 - 688
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:106

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:04.580705
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: safeSub(uint256,uint256)
PC address: 7105
Estimated Gas Usage: 595 - 690
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:110

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.304741
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 7399
Estimated Gas Usage: 2505 - 37399
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:5

sing https://da

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.569674
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 7402
Estimated Gas Usage: 2505 - 37399
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:3



// Verified using https://dapp.tools

// 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.507232
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 7414
Estimated Gas Usage: 2505 - 37399
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:529

assessor.maxReserve()

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:12.490019
Transaction Length: 1
Severity: Low
Contract: EpochCoordinator
Function name: safeDiv(uint256,uint256)
PC address: 7786
Estimated Gas Usage: 566 - 661
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:118

x / y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.704542
Transaction Length: 1
Severity: Low
Contract: EpochCoordinator
Function name: closeEpoch()
PC address: 8338
Estimated Gas Usage: 13340 - 54376
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:336

reserve.balance()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.267169
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: calcAssets(uint256,uint256)
PC address: 11305
Estimated Gas Usage: 599 - 694
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:106

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:09.185192
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 14115
Estimated Gas Usage: 2505 - 37399
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:142

e as published by
// th

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.104797
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreImprovement((uint256),uint256)
PC address: 16145
Estimated Gas Usage: 428 - 616
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:482

value <= maxRatio

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x93a56223743a0a83d86267df4868d51e23d832f1.sol
Total states:3395
6.336518
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x689CF5f8DD09BBB4417514C88909bb64ebA2547D.sol
Total states:7439
17.868148
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.866933
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x689CF5f8DD09BBB4417514C88909bb64ebA2547D.sol:118

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x30763939b717Efe725d0E221D77237BC419E4732.sol
Total states:848
4.965133
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.053136
Transaction Length: 1
Severity: Low
Contract: TokenLockerII
Function name: unlockToken(address,uint256)
PC address: 1034
Estimated Gas Usage: 2348 - 4004
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x30763939b717Efe725d0E221D77237BC419E4732.sol:79

ERC20Token(lockedTokensData[msg.sender][tokenAddress].tokenAddress).approve(address(this),withdrawAmount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.496884
Transaction Length: 1
Severity: Low
Contract: TokenLockerII
Function name: unlockToken(address,uint256)
PC address: 1468
Estimated Gas Usage: 4681 - 41799
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x30763939b717Efe725d0E221D77237BC419E4732.sol:80

ERC20Token(lockedTokensData[msg.sender][tokenAddress].tokenAddress).transferFrom(address(this),address(msg.sender),withdrawAmount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:04.442643
Transaction Length: 1
Severity: Medium
Contract: TokenLockerII
Function name: lockToken(address,uint256,uint256)
PC address: 1689
Estimated Gas Usage: 1128 - 1599
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0x30763939b717Efe725d0E221D77237BC419E4732.sol:71

ERC20Token(tokenAddress).balanceOf(address(this))

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xa8ea49a9e242fffbdecc4583551c3bcb111456e6.sol
Total states:8882
23.194567
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.109301
Transaction Length: 0
Severity: High
Contract: iVault
Function name: constructor
PC address: 227
Estimated Gas Usage: 11770 - 88919
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xa8ea49a9e242fffbdecc4583551c3bcb111456e6.sol:6

ed for verifica

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.294556
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xa8ea49a9e242fffbdecc4583551c3bcb111456e6.sol:132

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol
Total states:114
501.539327
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.022938
Transaction Length: 1
Severity: High
Contract: TimelockWrapper
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 304
Estimated Gas Usage: 355 - 450
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.242505
Transaction Length: 1
Severity: High
Contract: TimelockWrapper
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 455
Estimated Gas Usage: 706 - 3483
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:57.225924
Transaction Length: 1
Severity: High
Contract: TimelockWrapper
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 851
Estimated Gas Usage: 423 - 518
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:09.016820
Transaction Length: 1
Severity: High
Contract: TimelockWrapper
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1002
Estimated Gas Usage: 765 - 3542
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:31.280408
Transaction Length: 1
Severity: High
Contract: TimelockWrapper
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1274
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:48.188839
Transaction Length: 1
Severity: High
Contract: TimelockWrapper
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1425
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:38.754839
Transaction Length: 1
Severity: High
Contract: TimelockWrapper
Function name: setSig()
PC address: 1656
Estimated Gas Usage: 439 - 1569
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol:337

string constant public setSig =  "set(uint256,uint256,bool)"

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol
Total states:150
100.096016
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.344550
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.435065
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.776377
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:3



// File: @openzeppelin/contracts/token/ER

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.941122
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:3



// File: @openzeppelin/contracts/token/ER

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.353296
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:655

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.606673
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:655

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.140641
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:16

ce.
     */
    funct

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.370319
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:16

ce.
     */
    funct

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.597576
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:16

t of tokens in existence.
     */
    functi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.042070
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:16

t of tokens in existence.
     */
    functi

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x66b5b6d471CC69BcF19b2a50CB744b47d63191b5.sol
Total states:30
0.143247
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x8019ea9d5f7a7a58a259ff69d4a9572f4c34a058.sol
Total states:1576
1.851814
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x4af5d39772bd9d6e152ac3c083e0d9a4f345c3af.sol
Total states:3429
5.950352
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x97d8cc53bee67872ae4ee5dd904389fe992e509a.sol
Total states:8045
18.111424
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.062920
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x97d8cc53bee67872ae4ee5dd904389fe992e509a.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.738026
Transaction Length: 2
Severity: High
Contract: YFIB
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x97d8cc53bee67872ae4ee5dd904389fe992e509a.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xc2fb644cd18325c58889cf8bb0573e4a8774bcd2.sol
Total states:1564
1.59582
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol
Total states:38294
130.726698
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.962322
Transaction Length: 2
Severity: High
Contract: BasicToken
Function name: increaseApproval(address,uint256)
PC address: 4101
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol:65

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:33.653134
Transaction Length: 2
Severity: Low
Contract: BasicToken
Function name: increaseApproval(address,uint256)
PC address: 4114
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol:66

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:44.996453
Transaction Length: 2
Severity: Low
Contract: ERC20Burnable
Function name: burnFrom(address,uint256)
PC address: 4264
Estimated Gas Usage: 6613 - 29675
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol:54

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.356547
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseApproval(address,uint256)
PC address: 4281
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol:65

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:48.571091
Transaction Length: 2
Severity: Low
Contract: ERC20Burnable
Function name: increaseApproval(address,uint256)
PC address: 4294
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol:66

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.435312
Transaction Length: 2
Severity: High
Contract: Mintable
Function name: increaseApproval(address,uint256)
PC address: 5869
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol:65

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.350837
Transaction Length: 2
Severity: Low
Contract: Mintable
Function name: increaseApproval(address,uint256)
PC address: 5882
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol:66

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x2fd851d98211038ef59a0755584888350d14b71c.sol
Total states:23078
7824.33975
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.017253
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2fd851d98211038ef59a0755584888350d14b71c.sol:135

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:50.865282
Transaction Length: 2
Severity: High
Contract: AvocadoSwap
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2fd851d98211038ef59a0755584888350d14b71c.sol:135

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xb53189eb5ab4a0c866736b3a17ac5a847cdb5b55.sol
Total states:6443
22.130027
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.628753
Transaction Length: 2
Severity: High
Contract: GoBrrrToken
Function name: transferFrom(address,address,uint256)
PC address: 7114
Estimated Gas Usage: 2245 - 2910
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xb53189eb5ab4a0c866736b3a17ac5a847cdb5b55.sol:200

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.634919
Transaction Length: 2
Severity: High
Contract: GoBrrrToken
Function name: increaseAllowance(address,uint256)
PC address: 7237
Estimated Gas Usage: 959 - 1434
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xb53189eb5ab4a0c866736b3a17ac5a847cdb5b55.sol:244

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x0cea4024d09d75066cd1aaace6682035f0ebea3c.sol
Total states:9014
19.87949
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.897497
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0cea4024d09d75066cd1aaace6682035f0ebea3c.sol:108

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x613f654c7bbb948219f3952173518debcd963718.sol
Total states:7772
11.331551
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040638
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x613f654c7bbb948219f3952173518debcd963718.sol:14

 available, which can be applied to functio

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x35e805BA2FB7Ad4C8Ad9D644Ca9Bd34a49f5500d.sol
Total states:774
1.10778
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x07eb8cb8aedb581a2d73cc29f6c7860226808ca2.sol
Total states:7948
18.860295
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.934836
Transaction Length: 0
Severity: High
Contract: YFVGovernanceVault
Function name: constructor
PC address: 672
Estimated Gas Usage: 109006 - 534790
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x07eb8cb8aedb581a2d73cc29f6c7860226808ca2.sol:448

_earnLowerlimit * 1e18

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.894263
Transaction Length: 1
Severity: Low
Contract: YFVGovernanceVault
Function name: doHardWork()
PC address: 17538
Estimated Gas Usage: 1711 - 2607
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x07eb8cb8aedb581a2d73cc29f6c7860226808ca2.sol:359

chi.freeFromUpTo(msg.sender, (gasSpent + 14154) / 41130)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.863479
Transaction Length: 1
Severity: High
Contract: YFVGovernanceVault
Function name: available()
PC address: 30045
Estimated Gas Usage: 2828 - 37815
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x07eb8cb8aedb581a2d73cc29f6c7860226808ca2.sol:87

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x97151f1c5e61ce60fa1378a6985ceaecfa341b0e.sol
Total states:8841
8.675674
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x39ee9b9ea9e4b9cc90747ab4714a7ffcc59f313f.sol
Total states:7697
29.345756
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.529399
Transaction Length: 1
Severity: High
Contract: yeldDAI
Function name: updatePrice()
PC address: 4031
Estimated Gas Usage: 1068 - 1163
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x39ee9b9ea9e4b9cc90747ab4714a7ffcc59f313f.sol:408

lastPriceUpdate + priceUpdatePeriod

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol
Total states:19786
486.783324
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:16.321837
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 186
Estimated Gas Usage: 8339 - 180876
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 290
Offset: 687
Offset: 1095
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:120

function daiJoin_join(address apt, address urn, uint wad) public {
        // Gets DAI from the user's wallet
        DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad);
        // Approves adapter to take the DAI amount
        DaiJoinLike(apt).dai().approve(apt, wad);
        // Joins DAI into the vat
        DaiJoinLike(apt).join(urn, wad);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:02.153428
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 290
Estimated Gas Usage: 1076 - 1452
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai()

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:01:59.883199
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 439
Estimated Gas Usage: 8362 - 180899
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 3185
Offset: 3582
Offset: 3990
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:120

function daiJoin_join(address apt, address urn, uint wad) public {
        // Gets DAI from the user's wallet
        DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad);
        // Approves adapter to take the DAI amount
        DaiJoinLike(apt).dai().approve(apt, wad);
        // Joins DAI into the vat
        DaiJoinLike(apt).join(urn, wad);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:01:43.700288
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashGem(address,address,bytes32,uint256)
PC address: 481
Estimated Gas Usage: 5342 - 108941
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2670
Offset: 2849
Offset: 3056
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:892

function cashGem(
        address gemJoin,
        address end,
        bytes32 ilk,
        uint wad
    ) public {
        EndLike(end).cash(ilk, wad);
        // Exits token amount to the user's wallet as a token
        GemJoinLike(gemJoin).exit(msg.sender, mul(wad, EndLike(end).fix(ilk)) / RAY);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.187781
Transaction Length: 1
Severity: Low
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 563
Estimated Gas Usage: 2792 - 37920
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:02:01.466999
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 591
Estimated Gas Usage: 8384 - 180921
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 3186
Offset: 3583
Offset: 3991
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:120

function daiJoin_join(address apt, address urn, uint wad) public {
        // Gets DAI from the user's wallet
        DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad);
        // Approves adapter to take the DAI amount
        DaiJoinLike(apt).dai().approve(apt, wad);
        // Joins DAI into the vat
        DaiJoinLike(apt).join(urn, wad);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:02.298108
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 645
Estimated Gas Usage: 1079 - 1455
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:928

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:08.234445
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 687
Estimated Gas Usage: 4327 - 73736
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:06.016748
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 808
Estimated Gas Usage: 2701 - 37544
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:930

PotLike(pot).drip()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:10.890789
Transaction Length: 1
Severity: Low
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 908
Estimated Gas Usage: 5998 - 110064
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:25.125543
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: pack(address,address,uint256)
PC address: 992
Estimated Gas Usage: 9169 - 181987
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:868

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:41.981219
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 1017
Estimated Gas Usage: 4537 - 73942
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:934

PotLike(pot).exit(pie)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:16.300805
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 1095
Estimated Gas Usage: 7593 - 146130
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:126

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:20.720753
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 1143
Estimated Gas Usage: 6075 - 109761
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:936

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:26.969262
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 1765
Estimated Gas Usage: 1167 - 1733
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:882

EndLike(end).cash(ilk, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:23.018081
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 2156
Estimated Gas Usage: 4583 - 74182
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:885

GemJoinLike(ethJoin).exit(address(this), wadC)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:22.837844
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: join(address,address,uint256)
PC address: 2224
Estimated Gas Usage: 1095 - 1471
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:910

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:32.517317
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 2280
Estimated Gas Usage: 6118 - 109998
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:887

GemJoinLike(ethJoin).gem()

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:40.371864
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: giveToProxy(address,address,uint256,address)
PC address: 2309
Estimated Gas Usage: 3756 - 72884
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 12617
Offset: 10643
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:271

function giveToProxy(
        address proxyRegistry,
        address manager,
        uint cdp,
        address dst
    ) public {
        // Gets actual proxy address
        address proxy = ProxyRegistryLike(proxyRegistry).proxies(dst);
        // Checks if the proxy address already existed and dst address is still the owner
        if (proxy == address(0) || ProxyLike(proxy).owner() != dst) {
            uint csize;
            assembly {
                csize := extcodesize(dst)
            }
            // We want to avoid creating a proxy for a contract address that might not be able to handle proxies, then losing the CDP
            require(csize == 0, "Dst-is-a-contract");
            // Creates the proxy for the dst address
            proxy = ProxyRegistryLike(proxyRegistry).build(dst);
        }
        // Transfers CDP to the dst proxy
        give(manager, cdp, proxy);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:26.666185
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: join(address,address,uint256)
PC address: 2387
Estimated Gas Usage: 2717 - 37560
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:912

PotLike(pot).drip()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:34.362160
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashGem(address,address,bytes32,uint256)
PC address: 2670
Estimated Gas Usage: 1189 - 1755
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:898

EndLike(end).cash(ilk, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:43.678982
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashGem(address,address,bytes32,uint256)
PC address: 3056
Estimated Gas Usage: 4594 - 74193
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:900

GemJoinLike(gemJoin).exit(msg.sender, mul(wad, EndLike(end).fix(ilk)) / RAY)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:43.527263
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3185
Estimated Gas Usage: 1114 - 1490
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:45.884722
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3186
Estimated Gas Usage: 1136 - 1512
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:45.632129
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3458
Estimated Gas Usage: 2815 - 37943
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:48.270516
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3459
Estimated Gas Usage: 2837 - 37965
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:50.240048
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3582
Estimated Gas Usage: 4350 - 73759
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:52.811132
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3583
Estimated Gas Usage: 4372 - 73781
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:53.497991
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3803
Estimated Gas Usage: 6021 - 110087
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:55.796972
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3804
Estimated Gas Usage: 6043 - 110109
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:59.861898
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3990
Estimated Gas Usage: 7616 - 146153
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:126

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:01.446317
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3991
Estimated Gas Usage: 7638 - 146175
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:126

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:01.665748
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exitAll(address,address)
PC address: 4121
Estimated Gas Usage: 1112 - 1488
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:953

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:05.109008
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exitAll(address,address)
PC address: 4284
Estimated Gas Usage: 2734 - 37577
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:955

PotLike(pot).drip()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:09.810219
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exitAll(address,address)
PC address: 4672
Estimated Gas Usage: 6039 - 110006
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:959

PotLike(pot).exit(pie)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:42.173333
Transaction Length: 1
Severity: High
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 4815
Estimated Gas Usage: 3657 - 72785
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:115

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.327723
Transaction Length: 1
Severity: High
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 5387
Estimated Gas Usage: 3639 - 72668
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:115

x * y

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:05.352693
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8321
Estimated Gas Usage: 2911 - 38043
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:471

GemJoinLike(ethJoin).exit(address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:08.865130
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8445
Estimated Gas Usage: 4446 - 73859
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:473

GemJoinLike(ethJoin).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:11.348269
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8614
Estimated Gas Usage: 6085 - 110060
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:473

GemJoinLike(ethJoin).gem().withdraw(wad)

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:14.814754
Transaction Length: 1
Severity: High
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8683
Estimated Gas Usage: 6883 - 145044
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:475

msg.sender.transfer(wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:05.290430
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: freeETH(address,address,uint256,uint256)
PC address: 9233
Estimated Gas Usage: 3042 - 38269
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:317

ManagerLike(manager).flux(cdp, dst, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:47.577426
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: giveToProxy(address,address,uint256,address)
PC address: 10643
Estimated Gas Usage: 5392 - 75082
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:268

ManagerLike(manager).give(cdp, usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:21.935959
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: move(address,uint256,address,uint256)
PC address: 10843
Estimated Gas Usage: 1267 - 1928
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:326

ManagerLike(manager).move(cdp, dst, rad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:39.756135
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: quit(address,uint256,address)
PC address: 12433
Estimated Gas Usage: 1198 - 1764
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:343

ManagerLike(manager).quit(cdp, dst)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:52.014443
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: giveToProxy(address,address,uint256,address)
PC address: 13223
Estimated Gas Usage: 5320 - 74820
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:288

ProxyRegistryLike(proxyRegistry).build(dst)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:54.711516
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: urnAllow(address,address,uint256)
PC address: 15084
Estimated Gas Usage: 1264 - 1830
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:308

ManagerLike(manager).urnAllow(usr, ok)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:03.320965
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: openLockETHAndDraw(address,address,address,address,bytes32,uint256)
PC address: 15278
Estimated Gas Usage: 1294 - 1860
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:260

ManagerLike(manager).open(ilk, usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:07.252972
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: shift(address,uint256,uint256)
PC address: 17663
Estimated Gas Usage: 1245 - 1811
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:359

ManagerLike(manager).shift(cdpSrc, cdpOrg)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:14.113287
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: safeLockGem(address,address,uint256,uint256,bool,address)
PC address: 17798
Estimated Gas Usage: 3003 - 37941
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:233

GemJoinLike(apt).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:17.305223
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: safeLockGem(address,address,uint256,uint256,bool,address)
PC address: 18071
Estimated Gas Usage: 4704 - 74394
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:233

GemJoinLike(apt).gem().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:18.684200
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: gemJoin_join(address,address,uint256,bool)
PC address: 18195
Estimated Gas Usage: 4513 - 73922
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:235

GemJoinLike(apt).gem()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:08.661264
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: safeLockGem(address,address,uint256,uint256,bool,address)
PC address: 18604
Estimated Gas Usage: 3064 - 38192
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:238

GemJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:20.675295
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: frob(address,uint256,int256,int256)
PC address: 18761
Estimated Gas Usage: 1227 - 1888
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:335

ManagerLike(manager).frob(cdp, dink, dart)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:28.120439
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: nope(address,address)
PC address: 20145
Estimated Gas Usage: 1195 - 1666
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:252

HopeLike(obj).nope(usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:24.541394
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: safeLockETH(address,address,uint256,address)
PC address: 20273
Estimated Gas Usage: 2932 - 37870
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:222

GemJoinLike(apt).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:27.636320
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: safeLockETH(address,address,uint256,address)
PC address: 20431
Estimated Gas Usage: 4545 - 73950
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:222

GemJoinLike(apt).gem().deposit.value(msg.value)()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:56.510379
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: lockETH(address,address,uint256)
PC address: 20556
Estimated Gas Usage: 4371 - 73495
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:224

GemJoinLike(apt).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:59.843886
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: lockETH(address,address,uint256)
PC address: 20777
Estimated Gas Usage: 6041 - 109822
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:224

GemJoinLike(apt).gem().approve(address(apt), msg.value)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:46.797506
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: ethJoin_join(address,address)
PC address: 20964
Estimated Gas Usage: 7567 - 145819
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:226

GemJoinLike(apt).join(urn, msg.value)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:55.026935
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: hope(address,address)
PC address: 22277
Estimated Gas Usage: 1150 - 1621
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:245

HopeLike(obj).hope(usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:56.995542
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: cdpAllow(address,uint256,address,uint256)
PC address: 22476
Estimated Gas Usage: 1266 - 1927
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:300

ManagerLike(manager).cdpAllow(cdp, usr, ok)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:11.844866
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: transfer(address,address,uint256)
PC address: 25160
Estimated Gas Usage: 1285 - 1851
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:217

GemLike(gem).transfer(dst, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:16.073969
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: openLockGNTAndDraw(address,address,address,address,bytes32,uint256,uint256)
PC address: 25571
Estimated Gas Usage: 2956 - 37894
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:689

GemJoinLike(gntJoin).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:19.157006
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: openLockGNTAndDraw(address,address,address,address,bytes32,uint256,uint256)
PC address: 25792
Estimated Gas Usage: 4627 - 74222
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:689

GemLike(GemJoinLike(gntJoin).gem()).transfer(bag, wadC)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:27.690434
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 25947
Estimated Gas Usage: 1159 - 1535
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:29.661933
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26220
Estimated Gas Usage: 2860 - 37988
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:33.805416
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26344
Estimated Gas Usage: 4395 - 73804
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:36.472357
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26565
Estimated Gas Usage: 6066 - 110132
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:42.100356
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26752
Estimated Gas Usage: 7661 - 146198
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:126

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:19.463207
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: enter(address,address,uint256)
PC address: 29428
Estimated Gas Usage: 1240 - 1806
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:351

ManagerLike(manager).enter(src, cdp)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:29.260644
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: makeGemBag(address)
PC address: 29961
Estimated Gas Usage: 1206 - 1677
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:365

GNTJoinLike(gemJoin).make(address(this))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:26.063090
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: draw(address,address,address,uint256,uint256)
PC address: 31041
Estimated Gas Usage: 6209 - 110271
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:163

JugLike(jug).drip(ilk)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:58.651040
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: freeGem(address,address,uint256,uint256)
PC address: 31598
Estimated Gas Usage: 1197 - 1573
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:151

GemJoinLike(gemJoin).dec()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x621629915d4e7Bef4184602FDBa6d951fF29314F.sol
Total states:11841
292.6096
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.623256
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x621629915d4e7Bef4184602FDBa6d951fF29314F.sol:31

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:32.096875
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x621629915d4e7Bef4184602FDBa6d951fF29314F.sol:21

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.730128
Transaction Length: 1
Severity: High
Contract: PeerCashToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1483
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x621629915d4e7Bef4184602FDBa6d951fF29314F.sol:3

*/

//pragma solidity ^0.4.24;
prag

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:33.750637
Transaction Length: 1
Severity: Medium
Contract: PeerCashToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 4325
Estimated Gas Usage: 8823 - 34729
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0x621629915d4e7Bef4184602FDBa6d951fF29314F.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:35.936397
Transaction Length: 1
Severity: High
Contract: PeerCashToken
Function name: safeMul(uint256,uint256)
PC address: 4362
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x621629915d4e7Bef4184602FDBa6d951fF29314F.sol:31

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:50.359072
Transaction Length: 1
Severity: High
Contract: PeerCashToken
Function name: safeAdd(uint256,uint256)
PC address: 4546
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x621629915d4e7Bef4184602FDBa6d951fF29314F.sol:21

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x52540ac320dad8ce3e855b40fd5fb62d56690e43.sol
Total states:180
4.154923
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x71a808fd21171d992ebc17678e8ae139079922d0.sol
Total states:2783
4.952498
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xA40522994c6C85E5717Cd12D5F50dE50a2A2c4e3.sol
Total states:60
0.728198
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xb29ffcf4eaaf88094a692471de278b31a15ee430.sol
Total states:1239
0.668803
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xf6537fe0df7f0cc0985cf00792cc98249e73efa0.sol
Total states:37619
56.478548
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.639882
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6537fe0df7f0cc0985cf00792cc98249e73efa0.sol:132

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.020309
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6537fe0df7f0cc0985cf00792cc98249e73efa0.sol:132

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.620643
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 3847
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6537fe0df7f0cc0985cf00792cc98249e73efa0.sol:132

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xdd0cb1231de7bfb14023d2406a448b61e96d8afc.sol
Total states:3433
5.946263
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol
Total states:8687
20.968478
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.072053
Transaction Length: 0
Severity: High
Contract: Bethero
Function name: constructor
PC address: 240
Estimated Gas Usage: 37143 - 181236
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol:13

the optional functions; to access them see 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.610685
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol:115

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x6ec55b030b8b27f9167a5b0351a4d751a5ae54dd.sol
Total states:726
2.236216
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.409784
Transaction Length: 1
Severity: High
Contract: MiningEcoPriceFeedUniswap
Function name: from_usdt_to_token(uint256,address)
PC address: 949
Estimated Gas Usage: 2506 - 37584
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x6ec55b030b8b27f9167a5b0351a4d751a5ae54dd.sol:194

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xf647e3e6dd5c512495bc2e4932cc4d2082d58684.sol
Total states:623
14.216226
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:14.067812
Transaction Length: 1
Severity: Medium
Contract: GenerateTAX
Function name: generate()
PC address: 84
Estimated Gas Usage: 10847 - 218935
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 236
Offset: 472
Offset: 588
Offset: 682
Offset: 958
Offset: 1150
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0xf647e3e6dd5c512495bc2e4932cc4d2082d58684.sol:73

function generate() public payable {
        uint256 amount = msg.value;
        Lending.depositEth.value(amount)();
        Lending.borrow(address(0), amount - amount / 200);
        owner.transfer(amount / 1000);
        msg.sender.transfer(address(this).balance);
        IERC20(TAX).transfer(msg.sender, IERC20(TAX).balanceOf(address(this)));
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.077180
Transaction Length: 1
Severity: Low
Contract: GenerateTAX
Function name: generate()
PC address: 236
Estimated Gas Usage: 1353 - 2059
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xf647e3e6dd5c512495bc2e4932cc4d2082d58684.sol:75

Lending.depositEth.value(amount)()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.845044
Transaction Length: 1
Severity: Low
Contract: GenerateTAX
Function name: generate()
PC address: 472
Estimated Gas Usage: 3432 - 38939
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xf647e3e6dd5c512495bc2e4932cc4d2082d58684.sol:76

Lending.borrow(address(0), amount - amount / 200)

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:11.340477
Transaction Length: 1
Severity: High
Contract: GenerateTAX
Function name: generate()
PC address: 682
Estimated Gas Usage: 5906 - 110115
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop7/0xf647e3e6dd5c512495bc2e4932cc4d2082d58684.sol:78

msg.sender.transfer(address(this).balance)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:13.960295
Transaction Length: 1
Severity: Low
Contract: GenerateTAX
Function name: generate()
PC address: 1150
Estimated Gas Usage: 10024 - 183926
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xf647e3e6dd5c512495bc2e4932cc4d2082d58684.sol:79

IERC20(TAX).transfer(msg.sender, IERC20(TAX).balanceOf(address(this)))

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xe5ba0689485b4785f4e8859ee7e1a65b96d6e7b4.sol
Total states:18192
43.614234
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.682704
Transaction Length: 2
Severity: High
Contract: ponz1
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xe5ba0689485b4785f4e8859ee7e1a65b96d6e7b4.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:34.159052
Transaction Length: 2
Severity: High
Contract: ponz1
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xe5ba0689485b4785f4e8859ee7e1a65b96d6e7b4.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x5084d389f2176f012128c5cde6dab457f4917dee.sol
Total states:2417
2.459041
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040214
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5084d389f2176f012128c5cde6dab457f4917dee.sol:28

e current execution context, including the


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039908
Transaction Length: 0
Severity: High
Contract: TrokeraCoin
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5084d389f2176f012128c5cde6dab457f4917dee.sol:28

e current execution context, including the


--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xD2e2Bbb8FdA55780532894eeb9F2439bd183069B.sol
Total states:59
0.681752
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xda7b940be1bce0d6e2eecd96f5cf6ed0504b64c3.sol
Total states:311
1.051035
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x7ff146d4eD59cE4379f6016cE9189173a2677E71.sol
Total states:4787
7.129187
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x6e4ae385d1f68e4d4feb455e0526c08c77464ed6.sol
Total states:685
2.306469
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x8e6469c328d33956fe921efd4179c604ad79d3c4.sol
Total states:9901
21.749267
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040266
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x8e6469c328d33956fe921efd4179c604ad79d3c4.sol:7


██║░░░░░██║░░

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.727216
Transaction Length: 2
Severity: High
Contract: LogicToken
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x8e6469c328d33956fe921efd4179c604ad79d3c4.sol:137

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x7742565647682abe90a7f7497e05c4403cb50265.sol
Total states:60
0.445667
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x0f416bd36fdee5e6afc88a6238bff5a5fad6c7fb.sol
Total states:4701
83.315824
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039982
Transaction Length: 0
Severity: High
Contract: ComptorllersAuctionIndividual
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0f416bd36fdee5e6afc88a6238bff5a5fad6c7fb.sol:13

  returns (bytes memory) {
        this; //

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.050364
Transaction Length: 0
Severity: High
Contract: SimpleAuction
Function name: constructor
PC address: 142
Estimated Gas Usage: 5668 - 28771
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0f416bd36fdee5e6afc88a6238bff5a5fad6c7fb.sol:219

now + _biddingTime

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.020074
Transaction Length: 1
Severity: High
Contract: ReceiverPays
Function name: claimPayment(uint256,uint256,bytes)
PC address: 201
Estimated Gas Usage: 372 - 467
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0f416bd36fdee5e6afc88a6238bff5a5fad6c7fb.sol:3

*/

//pragma solidity ^0.6.0;
pragm

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:01:04.427594
Transaction Length: 1
Severity: Medium
Contract: ReceiverPays
Function name: claimPayment(uint256,uint256,bytes)
PC address: 304
Estimated Gas Usage: 9555 - 104899
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1064
Offset: 850
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0x0f416bd36fdee5e6afc88a6238bff5a5fad6c7fb.sol:314

function claimPayment(uint256 amount, uint256 nonce, bytes memory signature) public {
        require(!usedNonces[nonce]);
        usedNonces[nonce] = true;

        // this recreates the message that was signed on the client
        bytes32 message = prefixed(keccak256(abi.encodePacked(msg.sender, amount, nonce, this)));

        require(recoverSigner(message, signature) == owner);

        msg.sender.transfer(amount);
    }

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:01:03.991251
Transaction Length: 1
Severity: High
Contract: ReceiverPays
Function name: claimPayment(uint256,uint256,bytes)
PC address: 850
Estimated Gas Usage: 8802 - 70146
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop7/0x0f416bd36fdee5e6afc88a6238bff5a5fad6c7fb.sol:323

msg.sender.transfer(amount)

--------------------

==== Dependence on predictable environment variable ====
SWC ID: 116
FOUND TIME: 0:00:00.668083
Transaction Length: 2
Severity: Low
Contract: SimpleAuction
Function name: auctionEnd()
PC address: 1515
Estimated Gas Usage: 9100 - 31333
Sending of Ether depends on a predictable variable.
The contract sends Ether depending on the values of the following variables:
- block.timestamp
- block.timestamp
Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and/or can be manipulated by a malicious miner. Don't use them for random number generation or to make critical decisions.
--------------------
In file: ../../contracts/noloop/noloop7/0x0f416bd36fdee5e6afc88a6238bff5a5fad6c7fb.sol:303

beneficiary.transfer(highestBid)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x044324535936ede7d3971f21a393841f7a00cadb.sol
Total states:150
1.828749
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xa322AEa77769666453377CC697fbE4C6390b9942.sol
Total states:1555
6.838253
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040395
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xa322AEa77769666453377CC697fbE4C6390b9942.sol:15

*
     * @dev Returns the amount of tokens 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.083520
Transaction Length: 0
Severity: High
Contract: VaultBaselineTUSD
Function name: constructor
PC address: 201
Estimated Gas Usage: 6661 - 61225
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xa322AEa77769666453377CC697fbE4C6390b9942.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.141900
Transaction Length: 0
Severity: High
Contract: VaultBaseline
Function name: constructor
PC address: 224
Estimated Gas Usage: 6794 - 64036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xa322AEa77769666453377CC697fbE4C6390b9942.sol:5

nzeppelin/contr

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xa1b337021a78102d79ebc73634ab145e32fdba5b.sol
Total states:18192
44.097777
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.838440
Transaction Length: 2
Severity: High
Contract: chads
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xa1b337021a78102d79ebc73634ab145e32fdba5b.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:34.380793
Transaction Length: 2
Severity: High
Contract: chads
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xa1b337021a78102d79ebc73634ab145e32fdba5b.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x8bfb7ac05bf9bdc6bc3a635d4dd209c8ba39e554.sol
Total states:878
2.251077
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x701a0c2987158420f4602495b523e2edb15192d0.sol
Total states:8045
16.578588
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039448
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x701a0c2987158420f4602495b523e2edb15192d0.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.599620
Transaction Length: 2
Severity: High
Contract: YFIC
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x701a0c2987158420f4602495b523e2edb15192d0.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x70aabe1fb9d3d753f67e9f6bfcc47f94ac9f6892.sol
Total states:2559
4.992857
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x44b622a7cd27653dbef271e30e9359dadc02c768.sol
Total states:7697
28.581823
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.533300
Transaction Length: 1
Severity: High
Contract: yeldDAI
Function name: updatePrice()
PC address: 4031
Estimated Gas Usage: 1068 - 1163
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x44b622a7cd27653dbef271e30e9359dadc02c768.sol:408

lastPriceUpdate + priceUpdatePeriod

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x88f5ae63b6adfe2e77667671d9c0a3d94975f2d3.sol
Total states:9103
21.349892
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.073245
Transaction Length: 0
Severity: Medium
Contract: YieldTermFinance
Function name: constructor
PC address: 213
Estimated Gas Usage: 17136 - 78879
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop7/0x88f5ae63b6adfe2e77667671d9c0a3d94975f2d3.sol:203

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.183115
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x88f5ae63b6adfe2e77667671d9c0a3d94975f2d3.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x734e8a384e0acd3b3f54a5aeb5ef1a9e39ca7503.sol
Total states:9901
22.228089
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040010
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x734e8a384e0acd3b3f54a5aeb5ef1a9e39ca7503.sol:10

ailable
 * via msg.sender and msg.data, the

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.850839
Transaction Length: 2
Severity: High
Contract: GAMJA777Token
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x734e8a384e0acd3b3f54a5aeb5ef1a9e39ca7503.sol:128

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x6ac99c82836d77b92a0cb5366cb6c6b6899ac0d9.sol
Total states:504
0.402209
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xe5049922abe965304ac0f6b5ee1a3470e45b9ff8.sol
Total states:174
4.237955
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.065228
Transaction Length: 0
Severity: High
Contract: TeamVesting
Function name: constructor
PC address: 591
Estimated Gas Usage: 7479 - 31024
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xe5049922abe965304ac0f6b5ee1a3470e45b9ff8.sol:251

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.094310
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: constructor
PC address: 606
Estimated Gas Usage: 7555 - 31379
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xe5049922abe965304ac0f6b5ee1a3470e45b9ff8.sol:251

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x2B4200A8D373d484993C37d63eE14AeE0096cd12.sol
Total states:56674
155.791573
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:02.151459
Transaction Length: 2
Severity: High
Contract: USDFL
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 5769
Estimated Gas Usage: 5999 - 43112
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2B4200A8D373d484993C37d63eE14AeE0096cd12.sol:210

nonces[holder]++

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:09.999018
Transaction Length: 2
Severity: High
Contract: USDFL
Function name: burn(address,uint256)
PC address: 7856
Estimated Gas Usage: 7087 - 27752
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2B4200A8D373d484993C37d63eE14AeE0096cd12.sol:123

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x001F7C987996DBD4f1Dba243b0d8891D0Bf693A2.sol
Total states:2520
27.098533
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.532088
Transaction Length: 1
Severity: Low
Contract: StakingRewardsDecayHolder
Function name: withdraw(uint256,address)
PC address: 1090
Estimated Gas Usage: 1894 - 4952
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x001F7C987996DBD4f1Dba243b0d8891D0Bf693A2.sol:456

address(rewarder).call(
                abi.encodeWithSelector(rewarder.withdraw.selector, msg.sender, amount, gem)
            )

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.951742
Transaction Length: 1
Severity: Low
Contract: StakingRewardsDecayHolder
Function name: stake(uint256,address)
PC address: 1969
Estimated Gas Usage: 1615 - 2606
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x001F7C987996DBD4f1Dba243b0d8891D0Bf693A2.sol:446

rewarder.stake(msg.sender, amount, gem)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xeb60d429e02928e494516ce0a81f185ef52f20d4.sol
Total states:641
1.16432
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x7e72e907bb7e85e7b7a829aabd86b7d3132b2b77.sol
Total states:3495
5.635143
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xf599c68E4C0cb3F2243DC724626690Ac323A1D29.sol
Total states:8045
18.261279
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039687
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf599c68E4C0cb3F2243DC724626690Ac323A1D29.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.450060
Transaction Length: 2
Severity: High
Contract: YFONE
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf599c68E4C0cb3F2243DC724626690Ac323A1D29.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x70806c363c8f9ba2b5dbb9947767c9c6918ea15e.sol
Total states:1663
10.073483
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.302106
Transaction Length: 1
Severity: High
Contract: IcbPurchase
Function name: getIcbFromContractAllowance(uint256)
PC address: 438
Estimated Gas Usage: 2785 - 38197
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x70806c363c8f9ba2b5dbb9947767c9c6918ea15e.sol:84

_amount * 10 ** 4

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.008002
Transaction Length: 1
Severity: High
Contract: IcbPurchase
Function name: getIcbFromContractAllowance(uint256)
PC address: 2083
Estimated Gas Usage: 5177 - 75758
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x70806c363c8f9ba2b5dbb9947767c9c6918ea15e.sol:19

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x81c98bedddea60c10cedcd57be68a44776be9c25.sol
Total states:8697
11.440951
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol
Total states:88397
974.948233
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.994400
Transaction Length: 1
Severity: High
Contract: DSPauseProxy
Function name: exec(address,bytes)
PC address: 277
Estimated Gas Usage: 351 - 446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3



*/



/**

 *Submitted for verifi

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.074781
Transaction Length: 0
Severity: Low
Contract: Vow
Function name: constructor
PC address: 540
Estimated Gas Usage: 23004 - 107756
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:4526

vat.hope(flapper_)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:54.970210
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1060
Estimated Gas Usage: 1753 - 2744
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3030

vat.move(address(this), usr, mul(ONE, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.096932
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1114
Estimated Gas Usage: 1559 - 2455
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3896

ilks[ilk].pip.peek()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.156185
Transaction Length: 1
Severity: Low
Contract: ESM
Function name: join(uint256)
PC address: 1202
Estimated Gas Usage: 13618 - 55319
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:394

gem.transferFrom(msg.sender, pit, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.857711
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: join(address)
PC address: 1239
Estimated Gas Usage: 2405 - 3396
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2956

vat.slip(ilk, usr, int(msg.value))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:26.706048
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1281
Estimated Gas Usage: 3783 - 39575
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3032

dai.burn(msg.sender, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.451561
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1322
Estimated Gas Usage: 2474 - 3465
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2884

vat.slip(ilk, usr, int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.001132
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1457
Estimated Gas Usage: 3765 - 39836
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3900

vat.file(ilk, "spot", spot)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.465327
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1595
Estimated Gas Usage: 4535 - 40422
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2886

gem.transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:52.452111
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: join(uint256)
PC address: 1719
Estimated Gas Usage: 13726 - 55097
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3726

vat.move(msg.sender, address(this), mul(chi, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.568432
Transaction Length: 1
Severity: Low
Contract: ESM
Function name: fire()
PC address: 1817
Estimated Gas Usage: 2686 - 3392
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:372

end.cage()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.411034
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2573
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2964

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:17.612433
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2633
Estimated Gas Usage: 2224 - 3215
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3040

vat.move(msg.sender, address(this), mul(ONE, wad))

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:16.365381
Transaction Length: 1
Severity: High
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2642
Estimated Gas Usage: 2899 - 38076
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2966

usr.transfer(wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.463907
Transaction Length: 1
Severity: Low
Contract: Jug
Function name: drip(bytes32)
PC address: 2706
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3230

vat.ilks(ilk)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:45.334469
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2854
Estimated Gas Usage: 4255 - 40047
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3042

dai.mint(usr, wad)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.401300
Transaction Length: 1
Severity: High
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 2984
Estimated Gas Usage: 848 - 1273
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3024

x * y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.999596
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3118
Estimated Gas Usage: 2122 - 3113
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2894

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:21.931034
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3339
Estimated Gas Usage: 4153 - 39945
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2896

gem.transfer(usr, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.604249
Transaction Length: 1
Severity: Low
Contract: Vow
Function name: kiss(uint256)
PC address: 3469
Estimated Gas Usage: 9605 - 65298
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:4640

vat.heal(rad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:23.669895
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: exit(uint256)
PC address: 3541
Estimated Gas Usage: 13283 - 54654
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3738

vat.move(address(this), msg.sender, mul(chi, wad))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.664605
Transaction Length: 1
Severity: High
Contract: Pot
Function name: join(uint256)
PC address: 5026
Estimated Gas Usage: 12821 - 53626
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3654

x * y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:20.576433
Transaction Length: 1
Severity: High
Contract: Pot
Function name: exit(uint256)
PC address: 5064
Estimated Gas Usage: 837 - 1122
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3646

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.299002
Transaction Length: 2
Severity: High
Contract: Dai
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 5769
Estimated Gas Usage: 5999 - 43112
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:1722

nonces[holder]++

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.781707
Transaction Length: 1
Severity: High
Contract: Cat
Function name: bite(bytes32,address)
PC address: 6281
Estimated Gas Usage: 5176 - 75429
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:1374

x * y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:10.308997
Transaction Length: 2
Severity: High
Contract: Dai
Function name: burn(address,uint256)
PC address: 7856
Estimated Gas Usage: 7087 - 27752
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:1548

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.120894
Transaction Length: 1
Severity: High
Contract: Flopper
Function name: tick(uint256)
PC address: 8156
Estimated Gas Usage: 8046 - 29891
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2688

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.948095
Transaction Length: 1
Severity: High
Contract: Flapper
Function name: tick(uint256)
PC address: 9122
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2168

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.311581
Transaction Length: 1
Severity: High
Contract: Flipper
Function name: tick(uint256)
PC address: 11459
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2414

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.292851
Transaction Length: 1
Severity: High
Contract: Vat
Function name: flux(bytes32,address,address,uint256)
PC address: 13158
Estimated Gas Usage: 1738 - 2593
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:4108

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.382380
Transaction Length: 1
Severity: High
Contract: Vat
Function name: frob(bytes32,address,address,address,int256,int256)
PC address: 13213
Estimated Gas Usage: 4552 - 7485
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:4072

x + uint(y)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x083b5343783cb3f31813e321540a668c37041874.sol
Total states:76081
151.200263
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:55.224819
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x083b5343783cb3f31813e321540a668c37041874.sol:60

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:54.848750
Transaction Length: 2
Severity: High
Contract: YFIDAOFINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x083b5343783cb3f31813e321540a668c37041874.sol:60

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:58.880190
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x083b5343783cb3f31813e321540a668c37041874.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:05.060953
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x083b5343783cb3f31813e321540a668c37041874.sol:63

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:59.237791
Transaction Length: 2
Severity: High
Contract: YFIDAOFINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x083b5343783cb3f31813e321540a668c37041874.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:05.536960
Transaction Length: 2
Severity: High
Contract: YFIDAOFINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x083b5343783cb3f31813e321540a668c37041874.sol:63

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xee5c75c2f1e8892c84d6d32b730eff5c4181bd10.sol
Total states:17090
15.349087
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.005413
Transaction Length: 0
Severity: Medium
Contract: Governance
Function name: constructor
PC address: 18
Estimated Gas Usage: 42 - 137
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop7/0xee5c75c2f1e8892c84d6d32b730eff5c4181bd10.sol:340

tx.origin

--------------------

==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.055798
Transaction Length: 0
Severity: Medium
Contract: DegoToken
Function name: constructor
PC address: 351
Estimated Gas Usage: 41597 - 203438
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop7/0xee5c75c2f1e8892c84d6d32b730eff5c4181bd10.sol:340

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.957208
Transaction Length: 1
Severity: High
Contract: DegoToken
Function name: transfer(address,uint256)
PC address: 10212
Estimated Gas Usage: 1921 - 2676
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xee5c75c2f1e8892c84d6d32b730eff5c4181bd10.sol:119

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x2119d2e70920d230deccd2508f935c1754d2534b.sol
Total states:3209
7.8011
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.179000
Transaction Length: 1
Severity: Low
Contract: MoshiachCoinStaking
Function name: deposit(uint256)
PC address: 4298
Estimated Gas Usage: 1234 - 1895
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x2119d2e70920d230deccd2508f935c1754d2534b.sol:510

Token(tokenAddress).transferFrom(msg.sender, address(this), amountToStake)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.100429
Transaction Length: 2
Severity: Low
Contract: MoshiachCoinStaking
Function name: deposit(uint256)
PC address: 4298
Estimated Gas Usage: 1234 - 1895
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x2119d2e70920d230deccd2508f935c1754d2534b.sol:510

Token(tokenAddress).transferFrom(msg.sender, address(this), amountToStake)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x61af5c8e6fc334df1f2b644f6aec1492ceff822d.sol
Total states:988
6.554706
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.177109
Transaction Length: 0
Severity: High
Contract: PoolReward
Function name: constructor
PC address: 589
Estimated Gas Usage: 62721 - 307093
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x61af5c8e6fc334df1f2b644f6aec1492ceff822d.sol:117

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x3d2e26f8c9c9de25a241662d011502e4fca84e02.sol
Total states:60
0.648396
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x0d1991cb428fe815899525a938134d596eab4cac.sol
Total states:3871
46.316796
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.315333
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0d1991cb428fe815899525a938134d596eab4cac.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.713856
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0d1991cb428fe815899525a938134d596eab4cac.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.243566
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0d1991cb428fe815899525a938134d596eab4cac.sol:275

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.810143
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0d1991cb428fe815899525a938134d596eab4cac.sol:10

 external returns (bo

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.812147
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0d1991cb428fe815899525a938134d596eab4cac.sol:10

pient, uint256 amount) external returns (boo

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x792560e6FeD8887a7B7b22E179d3A3fc43933AcB.sol
Total states:2191
6.16577
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.024094
Transaction Length: 1
Severity: High
Contract: Flipper
Function name: tick(uint256)
PC address: 12726
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x792560e6FeD8887a7B7b22E179d3A3fc43933AcB.sol:135

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x46281aadac735236a867c31f01e2358e533592db.sol
Total states:27574
59.725251
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048856
Transaction Length: 0
Severity: High
Contract: BTCBase
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x46281aadac735236a867c31f01e2358e533592db.sol:12

 IERC20 {
    /**
     * @dev Returns the a

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.341196
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x46281aadac735236a867c31f01e2358e533592db.sol:109

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.113223
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x46281aadac735236a867c31f01e2358e533592db.sol:109

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.019517
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 3847
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x46281aadac735236a867c31f01e2358e533592db.sol:109

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol
Total states:46840
108.885895
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047485
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.167552
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.982421
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.970550
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.945779
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.990528
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.046513
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.444952
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.051983
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.451711
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.197676
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.614329
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.191927
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.634823
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.861918
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.257172
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.942171
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.751862
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.120662
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x88EF27e69108B2633F8E1C184CC37940A075cC02.sol
Total states:17090
15.214063
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.005408
Transaction Length: 0
Severity: Medium
Contract: Governance
Function name: constructor
PC address: 18
Estimated Gas Usage: 42 - 137
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop7/0x88EF27e69108B2633F8E1C184CC37940A075cC02.sol:340

tx.origin

--------------------

==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.056093
Transaction Length: 0
Severity: Medium
Contract: DegoToken
Function name: constructor
PC address: 351
Estimated Gas Usage: 41597 - 203438
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop7/0x88EF27e69108B2633F8E1C184CC37940A075cC02.sol:340

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.648283
Transaction Length: 1
Severity: High
Contract: DegoToken
Function name: transfer(address,uint256)
PC address: 10212
Estimated Gas Usage: 1921 - 2676
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x88EF27e69108B2633F8E1C184CC37940A075cC02.sol:119

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x87b5ef63fa5579b40875b66c68cd485656b86259.sol
Total states:2389
5716.217174
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:08:30.777375
Transaction Length: 1
Severity: Medium
Contract: TokenSale
Function name: fallback
PC address: 195
Estimated Gas Usage: 16621 - 126851
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1326
Offset: 1647
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0x87b5ef63fa5579b40875b66c68cd485656b86259.sol:42

contract TokenSale is Owned{
    IERC20Token public tokenContract;  // the token being sold
    uint256 public price = 500;              // 1eth = 500 tokens
    uint256 public decimals = 18;
    
    uint256 public tokensSold;
    uint256 public ethRaised;
    uint256 public MaxETHAmount;

    event Sold(address buyer, uint256 amount);

    constructor(IERC20Token _tokenContract, uint256 _maxEthAmount) public{
        owner = msg.sender;
        tokenContract = _tokenContract;
        MaxETHAmount = _maxEthAmount;
    }
    
    function() external payable {
        buyTokensWithETH(msg.sender);
    }

    // Guards against integer overflows
    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        } else {
            uint256 c = a * b;
            assert(c / a == b);
            return c;
        }
    }
    
    function multiply(uint x, uint y) internal pure returns (uint z) {
        require(y == 0 || (z = x * y) / y == x);
    }
    
    function setPrice(uint256 price_) external onlyOwner{
        price = price_;
    }


    function buyTokensWithETH(address _receiver) public payable {
        require(ethRaised < MaxETHAmount, "Presale finished");
        uint _amount = msg.value; 
        require(_receiver != address(0), "Can't send to 0x00 address"); 
        require(_amount > 0, "Can't buy with 0 eth"); 
        
        uint tokensToBuy = multiply(_amount, price);
        require(owner.send(_amount), "Unable to transfer eth to owner");
        require(tokenContract.transfer(_receiver, tokensToBuy), "Unable to transfer token to user"); 
        tokensSold += tokensToBuy; 
        ethRaised += _amount;
        
        emit Sold(msg.sender, tokensToBuy);
    }

    

    function endSale() public {
        require(msg.sender == owner);

        // Send unsold tokens to the owner.
        require(tokenContract.transfer(owner, tokenContract.balanceOf(address(this))));

        msg.sender.transfer(address(this).balance);
    }
}

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:56:49.180043
Transaction Length: 1
Severity: Low
Contract: TokenSale
Function name: buyTokensWithETH(address)
PC address: 1647
Estimated Gas Usage: 4272 - 39684
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x87b5ef63fa5579b40875b66c68cd485656b86259.sol:91

tokenContract.transfer(_receiver, tokensToBuy)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x05829318dd0904fa9ba346dad05962773f9892e0.sol
Total states:18192
43.164484
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.245115
Transaction Length: 2
Severity: High
Contract: bifrost
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x05829318dd0904fa9ba346dad05962773f9892e0.sol:106

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.326670
Transaction Length: 2
Severity: High
Contract: bifrost
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x05829318dd0904fa9ba346dad05962773f9892e0.sol:108

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x81d0d9fe44fd54c4cdd2ccb2379b893389c7a015.sol
Total states:481
4.373349
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x9b2b8166115d009fa117b7009fa660274ec24927.sol
Total states:1067
1.264453
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x3963d55cbdea34c2452b6637d36d1db9f4240c1f.sol
Total states:18192
44.525965
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.870988
Transaction Length: 2
Severity: High
Contract: NaughtyorNice
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x3963d55cbdea34c2452b6637d36d1db9f4240c1f.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:34.191501
Transaction Length: 2
Severity: High
Contract: NaughtyorNice
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x3963d55cbdea34c2452b6637d36d1db9f4240c1f.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol
Total states:1007
129.586609
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.049054
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: external_call(address,uint256,bytes)
PC address: 319
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:3

*/

// File: contracts/IMultisigCar

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:21.786168
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 542
Estimated Gas Usage: 2718 - 38738
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:43

function parties() public view returns (address[] memory) {
        IMultisigCarrier multisigCarrier = IMultisigCarrier(_carrier);
        return multisigCarrier.vaultParties(address(this));
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.666755
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1181
Estimated Gas Usage: 2252 - 37241
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:5

racts/IMultisig

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.559882
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1184
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:3



// File: contracts/IMultisigCarrier.sol



--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:31.674764
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1205
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:45

multisigCarrier.vaultParties(address(this))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.705862
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1230
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:2


*/

// File: contrac

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:34.869056
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1236
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:7

ma solidity ^0

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:42.064710
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1256
Estimated Gas Usage: 2403 - 37578
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:16

ies(
        address 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:46.042411
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1258
Estimated Gas Usage: 2403 - 37578
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:16

    function vaultParties(
        address v

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:55.892694
Transaction Length: 1
Severity: Low
Contract: MultisigVault
Function name: approve(address,address,uint256)
PC address: 1601
Estimated Gas Usage: 1709 - 2795
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:58

multisigCarrier.approveFrom(msg.sender, destination, currencyAddress, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x1652d0194dbf2737e156baa5674ed80d545f60d1.sol
Total states:2604
5.02974
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040489
Transaction Length: 0
Severity: High
Contract: PolkaOracleTokenContract
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x1652d0194dbf2737e156baa5674ed80d545f60d1.sol:13

  returns (bytes memory) {
        this; //

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.228260
Transaction Length: 1
Severity: High
Contract: MyTheContract
Function name: foo(uint256)
PC address: 159
Estimated Gas Usage: 218 - 313
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x1652d0194dbf2737e156baa5674ed80d545f60d1.sol:209

10 + _x

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x9A41b2C10B8384B23f3efEa06599f20CDcc6a51F.sol
Total states:2481
4.467376
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041062
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x9A41b2C10B8384B23f3efEa06599f20CDcc6a51F.sol:13

can easily result
 * in bugs, because progr

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x1cc811afa7e997cdeaeab3f5879b028e765b0c57.sol
Total states:6207
11.121761
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.400709
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 381
Estimated Gas Usage: 287 - 382
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x1cc811afa7e997cdeaeab3f5879b028e765b0c57.sol:42

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.345323
Transaction Length: 1
Severity: High
Contract: Gifatoken
Function name: safeAdd(uint256,uint256)
PC address: 4260
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x1cc811afa7e997cdeaeab3f5879b028e765b0c57.sol:42

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x143f7a7e642eccaa7be8bd604639fd13eef6bebc.sol
Total states:13051
19.945981
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.539685
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 5473
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x143f7a7e642eccaa7be8bd604639fd13eef6bebc.sol:150

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x5a7c2647fc1f309b3a91b0e6d66d960997865874.sol
Total states:1756
2.912033
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol
Total states:18307
93.949823
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.193146
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2327
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:15.992822
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2340
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:94

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.001797
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2798
Estimated Gas Usage: 933 - 1408
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:16.342484
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2811
Estimated Gas Usage: 943 - 1418
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:94

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.224375
Transaction Length: 1
Severity: Low
Contract: GbpmToken
Function name: transfer(address,uint256)
PC address: 4326
Estimated Gas Usage: 929 - 1214
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:44.795209
Transaction Length: 2
Severity: Low
Contract: GbpmToken
Function name: transferFrom(address,address,uint256)
PC address: 4326
Estimated Gas Usage: 1579 - 2244
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:76

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.370894
Transaction Length: 2
Severity: High
Contract: GbpmToken
Function name: increaseApproval(address,uint256)
PC address: 4886
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:49.267844
Transaction Length: 2
Severity: Low
Contract: GbpmToken
Function name: increaseApproval(address,uint256)
PC address: 4899
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:94

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xa125e351dec307e131eefdba1fab9db34ed99c1b.sol
Total states:4736
8.530607
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x6ea18b68de0c06e7f402ae45f68b1df8199a2fc9.sol
Total states:610
1.455422
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x8e298734681adbfc41ee5d17ff8b0d6d803e7098.sol
Total states:18174
30.459425
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.183396
Transaction Length: 0
Severity: High
Contract: Vault
Function name: constructor
PC address: 240
Estimated Gas Usage: 1854 - 39282
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x8e298734681adbfc41ee5d17ff8b0d6d803e7098.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.826499
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x8e298734681adbfc41ee5d17ff8b0d6d803e7098.sol:138

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xd413cAaFd86c3F9AE76cF1e19d95240D3f7176d9.sol
Total states:1059
14.936113
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.014875
Transaction Length: 1
Severity: High
Contract: DSPauseProxy
Function name: exec(address,bytes)
PC address: 277
Estimated Gas Usage: 351 - 446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd413cAaFd86c3F9AE76cF1e19d95240D3f7176d9.sol:3

*/

/**
 *Submitted for verificatio

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x61ab6033999fd2de9c0833a6a32f0c17269dc7d4.sol
Total states:8705
250.506922
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.336754
Transaction Length: 1
Severity: High
Contract: BITTO
Function name: approveAndCall(address,uint256,bytes)
PC address: 1242
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x61ab6033999fd2de9c0833a6a32f0c17269dc7d4.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:28.675239
Transaction Length: 1
Severity: Medium
Contract: BITTO
Function name: approveAndCall(address,uint256,bytes)
PC address: 4580
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0x61ab6033999fd2de9c0833a6a32f0c17269dc7d4.sol:127

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x2db45ac597614be5adb75c26e0f427448856278a.sol
Total states:677
0.665868
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xc6358c02a4bafcbcd85360ae046e6bee556429c1.sol
Total states:3099
6.052039
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xd075e95423c5c4ba1e122cae0f4cdfa19b82881b.sol
Total states:18855
41.711298
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.393141
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd075e95423c5c4ba1e122cae0f4cdfa19b82881b.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.113333
Transaction Length: 2
Severity: High
Contract: WPE
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd075e95423c5c4ba1e122cae0f4cdfa19b82881b.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xd0d620996209cfb24d090faec21bb16549031f65.sol
Total states:237
7.158307
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x22962a4a71d09f34bab99aaba5d34e6e35ff2f0c.sol
Total states:8407
16.308562
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.839713
Transaction Length: 2
Severity: High
Contract: Smarts
Function name: increaseAllowance(address,uint256)
PC address: 9088
Estimated Gas Usage: 1126 - 1601
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x22962a4a71d09f34bab99aaba5d34e6e35ff2f0c.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xb68ba1f874a8984dc8f9e2b414b42003a877fbce.sol
Total states:5589
487.864207
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.310049
Transaction Length: 1
Severity: High
Contract: NarToken
Function name: initialize(string,string,uint8)
PC address: 742
Estimated Gas Usage: 408 - 503
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xb68ba1f874a8984dc8f9e2b414b42003a877fbce.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.363558
Transaction Length: 1
Severity: High
Contract: NarToken
Function name: initialize(string,string,uint8)
PC address: 893
Estimated Gas Usage: 750 - 3527
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xb68ba1f874a8984dc8f9e2b414b42003a877fbce.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:15.668159
Transaction Length: 1
Severity: High
Contract: NarToken
Function name: symbol()
PC address: 1883
Estimated Gas Usage: 1456 - 2491
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xb68ba1f874a8984dc8f9e2b414b42003a877fbce.sol:106

string public symbol

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x1fd20e571C895f728be72EB9F2D09621f2Bf9291.sol
Total states:18192
43.161885
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.251905
Transaction Length: 2
Severity: High
Contract: wing
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x1fd20e571C895f728be72EB9F2D09621f2Bf9291.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.743252
Transaction Length: 2
Severity: High
Contract: wing
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x1fd20e571C895f728be72EB9F2D09621f2Bf9291.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x7ee352f173c9b7c666248547fa681f43ebe72978.sol
Total states:1576
2.855579
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.035937
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x7ee352f173c9b7c666248547fa681f43ebe72978.sol:12

saction and its data. While these are gener

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xdf33f62007f5bdd78cabf0ada5009ae42620ae2b.sol
Total states:23995
101.850073
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.287416
Transaction Length: 1
Severity: High
Contract: Crowdsale
Function name: fallback()
PC address: 1508
Estimated Gas Usage: 6553 - 26648
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdf33f62007f5bdd78cabf0ada5009ae42620ae2b.sol:37

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.481993
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3645
Estimated Gas Usage: 1025 - 1500
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdf33f62007f5bdd78cabf0ada5009ae42620ae2b.sol:57

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.760919
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 4075
Estimated Gas Usage: 1025 - 1500
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdf33f62007f5bdd78cabf0ada5009ae42620ae2b.sol:57

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x03DB2C9cd4Fcfa6d4D641166D3B4FbB5cc447Ce6.sol
Total states:2175
2.683799
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.307518
Transaction Length: 1
Severity: Low
Contract: UpgradeabilityProxy
Function name: fallback
PC address: 274
Estimated Gas Usage: 681 - 3503
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy))
--------------------
In file: ../../new_contracts/0x03DB2C9cd4Fcfa6d4D641166D3B4FbB5cc447Ce6.sol:261

delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x6b8b3993cfb253968894c8ecb430caf2455b51aa.sol
Total states:1372
53.045743
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xcb5c7656523d533fac0658ac359ed6d44068527a.sol
Total states:8045
16.977327
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.044647
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xcb5c7656523d533fac0658ac359ed6d44068527a.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.018648
Transaction Length: 2
Severity: High
Contract: BTT
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xcb5c7656523d533fac0658ac359ed6d44068527a.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x73133781e37d2c99c9868608410877b4e096fe0f.sol
Total states:7732
28.255415
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:16.832230
Transaction Length: 2
Severity: High
Contract: HOLDI
Function name: burnFrom(address,uint256)
PC address: 3508
Estimated Gas Usage: 7546 - 28781
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x73133781e37d2c99c9868608410877b4e096fe0f.sol:151

allowed[_from][msg.sender] -= _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:21.444407
Transaction Length: 2
Severity: High
Contract: HOLDI
Function name: burnFrom(address,uint256)
PC address: 3524
Estimated Gas Usage: 12979 - 54214
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x73133781e37d2c99c9868608410877b4e096fe0f.sol:152

_totalSupply -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x7ab68eb7359f8a90bab880a2759263fe7e3cccc4.sol
Total states:2558
9.686499
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.807688
Transaction Length: 2
Severity: High
Contract: ESP
Function name: transferFrom(address,address,uint256)
PC address: 1895
Estimated Gas Usage: 1942 - 2607
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7ab68eb7359f8a90bab880a2759263fe7e3cccc4.sol:105

balanceOf[_to] + _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x34870322f473830d28d28bef7f1d4178edf832d8.sol
Total states:9871
19.224904
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.034100
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x34870322f473830d28d28bef7f1d4178edf832d8.sol:14

ansaction and its data. While these are gen

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.163904
Transaction Length: 2
Severity: High
Contract: DollarToken
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x34870322f473830d28d28bef7f1d4178edf832d8.sol:144

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xb1e8dd67a9ce15b3c7be9951e9207a4c8c12993d.sol
Total states:18192
41.512685
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.479390
Transaction Length: 2
Severity: High
Contract: SunBalancer
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb1e8dd67a9ce15b3c7be9951e9207a4c8c12993d.sol:65

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.584827
Transaction Length: 2
Severity: High
Contract: SunBalancer
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb1e8dd67a9ce15b3c7be9951e9207a4c8c12993d.sol:66

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol
Total states:3604
64.079886
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:29.658491
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeSub(uint256,uint256)
PC address: 820
Estimated Gas Usage: 309 - 404
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.760421
Transaction Length: 1
Severity: Low
Contract: Math
Function name: safeDiv(uint256,uint256)
PC address: 959
Estimated Gas Usage: 324 - 419
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.089243
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 985
Estimated Gas Usage: 382 - 477
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.395411
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 1128
Estimated Gas Usage: 496 - 591
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:105

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:26.969476
Transaction Length: 1
Severity: High
Contract: Reserve
Function name: safeSub(uint256,uint256)
PC address: 3211
Estimated Gas Usage: 376 - 471
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:29.170470
Transaction Length: 1
Severity: Low
Contract: Reserve
Function name: safeDiv(uint256,uint256)
PC address: 3360
Estimated Gas Usage: 303 - 398
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:117

x / y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:29.776864
Transaction Length: 1
Severity: Low
Contract: Reserve
Function name: balance()
PC address: 3509
Estimated Gas Usage: 1431 - 2137
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:237

shelf.balanceRequest()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.472218
Transaction Length: 1
Severity: High
Contract: Reserve
Function name: rdiv(uint256,uint256)
PC address: 4293
Estimated Gas Usage: 428 - 523
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.162412
Transaction Length: 1
Severity: High
Contract: Reserve
Function name: rdiv(uint256,uint256)
PC address: 4576
Estimated Gas Usage: 542 - 637
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:105

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol
Total states:1421
2.499562
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.289955
Transaction Length: 1
Severity: Low
Contract: Jug
Function name: drip(bytes32)
PC address: 2706
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol:161

vat.ilks(ilk)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x33674fac4069109e21329437ad6ae8c92b82e3a0.sol
Total states:3647
5.79452
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol
Total states:1330
128.796756
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.967085
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: canHandle(address,address,uint256,uint256,bytes)
PC address: 288
Estimated Gas Usage: 416 - 511
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol:3

*/

// File: contracts/libs/SafeMat

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.090201
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 701
Estimated Gas Usage: 480 - 575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol:3

*/

// File: contracts/libs/SafeMat

--------------------

==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:03.331168
Transaction Length: 1
Severity: Medium
Contract: OneinchHandler
Function name: receive()
PC address: 812
Estimated Gas Usage: 138 - 233
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol:390

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:15.120246
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1164
Estimated Gas Usage: 2623 - 37280
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol:5

ontracts/libs/SafeMat

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:34.474916
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1166
Estimated Gas Usage: 2623 - 37280
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol:3

*/

// File: contracts/libs/SafeMath

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:24.975002
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1312
Estimated Gas Usage: 1724 - 4501
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol:5

ontracts/libs/SafeMat

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:44.038398
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1314
Estimated Gas Usage: 1724 - 4501
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol:3

*/

// File: contracts/libs/SafeMath

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xc08c44110b9b4cfeb3fab842ef9be4f59c0b5990.sol
Total states:2617
5.264544
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.090093
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: release(address)
PC address: 749
Estimated Gas Usage: 477 - 3529
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc08c44110b9b4cfeb3fab842ef9be4f59c0b5990.sol:336

function owner() public view returns (address) {
        return _owner;
    }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol
Total states:481
3.934582
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x89F070eB998Ee1ed7dC92eD165F1043DD0CfcEd4.sol
Total states:12284
255.333016
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.384444
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x89F070eB998Ee1ed7dC92eD165F1043DD0CfcEd4.sol:76

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:35.344063
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x89F070eB998Ee1ed7dC92eD165F1043DD0CfcEd4.sol:56

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.544763
Transaction Length: 1
Severity: High
Contract: CRIPToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1483
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x89F070eB998Ee1ed7dC92eD165F1043DD0CfcEd4.sol:3



*/



//pragma solidity ^0.4.24;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:25.253024
Transaction Length: 1
Severity: Medium
Contract: CRIPToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 4325
Estimated Gas Usage: 8823 - 34729
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x89F070eB998Ee1ed7dC92eD165F1043DD0CfcEd4.sol:416

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:27.262765
Transaction Length: 1
Severity: High
Contract: CRIPToken
Function name: safeMul(uint256,uint256)
PC address: 4362
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x89F070eB998Ee1ed7dC92eD165F1043DD0CfcEd4.sol:76

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:11.805186
Transaction Length: 1
Severity: High
Contract: CRIPToken
Function name: safeAdd(uint256,uint256)
PC address: 4546
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x89F070eB998Ee1ed7dC92eD165F1043DD0CfcEd4.sol:56

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xb2886f8b28d6b382ac21d5d6c43663caa1b75987.sol
Total states:1995
463.420376
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.081737
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 391
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb2886f8b28d6b382ac21d5d6c43663caa1b75987.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.345288
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 542
Estimated Gas Usage: 729 - 3506
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb2886f8b28d6b382ac21d5d6c43663caa1b75987.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:04.150272
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1025
Estimated Gas Usage: 401 - 496
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb2886f8b28d6b382ac21d5d6c43663caa1b75987.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:15.565739
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1176
Estimated Gas Usage: 743 - 3520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb2886f8b28d6b382ac21d5d6c43663caa1b75987.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:04.313666
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1529
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb2886f8b28d6b382ac21d5d6c43663caa1b75987.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:18.176812
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1680
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb2886f8b28d6b382ac21d5d6c43663caa1b75987.sol:3

*/

// File: @openzeppelin/contract

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x4a7adcb083fe5e3d6b58edc3d260e2e61668e7a2.sol
Total states:10248
18.302142
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.383980
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4470
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x4a7adcb083fe5e3d6b58edc3d260e2e61668e7a2.sol:44

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x8d587a2386b9ea792a4c6e1744199349db3bc269.sol
Total states:1543
4.692031
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.050872
Transaction Length: 0
Severity: High
Contract: DeflationaryERC20
Function name: constructor
PC address: 139
Estimated Gas Usage: 5724 - 28827
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x8d587a2386b9ea792a4c6e1744199349db3bc269.sol:24

  return msg.sender;

    }



    function

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x59a04d94a3b80e8ad294d3337147a26e53aaffff.sol
Total states:19492
58.29745
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.863514
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4101
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x59a04d94a3b80e8ad294d3337147a26e53aaffff.sol:69

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:28.640724
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4114
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x59a04d94a3b80e8ad294d3337147a26e53aaffff.sol:70

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.684053
Transaction Length: 2
Severity: High
Contract: SocialRocket
Function name: increaseApproval(address,uint256)
PC address: 7957
Estimated Gas Usage: 1497 - 2302
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x59a04d94a3b80e8ad294d3337147a26e53aaffff.sol:69

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:18.843751
Transaction Length: 2
Severity: Low
Contract: SocialRocket
Function name: increaseApproval(address,uint256)
PC address: 7970
Estimated Gas Usage: 1507 - 2312
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x59a04d94a3b80e8ad294d3337147a26e53aaffff.sol:70

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xe692c8d72bd4ac7764090d54842a305546dd1de5.sol
Total states:18001
93.526346
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.062155
Transaction Length: 1
Severity: High
Contract: BlockSwapAssetV2
Function name: Swapout(uint256,string)
PC address: 1404
Estimated Gas Usage: 367 - 462
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe692c8d72bd4ac7764090d54842a305546dd1de5.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.324751
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe692c8d72bd4ac7764090d54842a305546dd1de5.sol:147

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.814506
Transaction Length: 2
Severity: High
Contract: BlockSwapAssetV2
Function name: increaseAllowance(address,uint256)
PC address: 5752
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe692c8d72bd4ac7764090d54842a305546dd1de5.sol:147

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x78426Ee0749Bd02c99DEF802589195F9CDBBcFB9.sol
Total states:60
0.784728
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x48381Dec5f3438Ef2dC95Ca08237397565D80D80.sol
Total states:3399
5.786646
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x0c3E69eF29cbD32e0732409B748ef317a5F4f0a5.sol
Total states:9014
19.268988
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.455624
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x0c3E69eF29cbD32e0732409B748ef317a5F4f0a5.sol:109

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xe3ccc23abd51a6d8de4696a6e17035456eb16444.sol
Total states:1995
471.679934
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.029642
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 391
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe3ccc23abd51a6d8de4696a6e17035456eb16444.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.580135
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 542
Estimated Gas Usage: 729 - 3506
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe3ccc23abd51a6d8de4696a6e17035456eb16444.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:14.387911
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1025
Estimated Gas Usage: 401 - 496
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe3ccc23abd51a6d8de4696a6e17035456eb16444.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:26.826290
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1176
Estimated Gas Usage: 743 - 3520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe3ccc23abd51a6d8de4696a6e17035456eb16444.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:14.147797
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1529
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe3ccc23abd51a6d8de4696a6e17035456eb16444.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:27.588285
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1680
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe3ccc23abd51a6d8de4696a6e17035456eb16444.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x14d68678eADf7781F52F675BFc782A2C966249d3.sol
Total states:1653
3.303744
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.060593
Transaction Length: 1
Severity: Low
Contract: Collector
Function name: seize(uint256)
PC address: 1275
Estimated Gas Usage: 1503 - 2304
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x14d68678eADf7781F52F675BFc782A2C966249d3.sol:180

pile.debt(loan)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x6f83c2381642c215c47d8c52baa6fadd6b67e326.sol
Total states:1203
13.544865
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:03.224009
Transaction Length: 1
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 374
Estimated Gas Usage: 256 - 351
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x6f83c2381642c215c47d8c52baa6fadd6b67e326.sol:69

_batches[b]

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:09.937029
Transaction Length: 2
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 374
Estimated Gas Usage: 256 - 351
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x6f83c2381642c215c47d8c52baa6fadd6b67e326.sol:69

_batches[b]

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.050362
Transaction Length: 1
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 686
Estimated Gas Usage: 2977 - 4203
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x6f83c2381642c215c47d8c52baa6fadd6b67e326.sol:71

_token.transfer(_beneficiary, _batches[b].amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.501942
Transaction Length: 2
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 686
Estimated Gas Usage: 2977 - 4203
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x6f83c2381642c215c47d8c52baa6fadd6b67e326.sol:71

_token.transfer(_beneficiary, _batches[b].amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x196a17b539bd7f273e117e55fb1997effa024224.sol
Total states:18192
39.639924
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.307227
Transaction Length: 2
Severity: High
Contract: chadsvccontract
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x196a17b539bd7f273e117e55fb1997effa024224.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:30.932651
Transaction Length: 2
Severity: High
Contract: chadsvccontract
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x196a17b539bd7f273e117e55fb1997effa024224.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol
Total states:46840
101.08956
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.049479
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.910907
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.953016
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.949924
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.909823
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.959679
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.859467
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.004628
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.894632
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.935972
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.997816
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.957205
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.789800
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.199438
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.517094
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.685602
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.598668
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.697342
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.746820
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xed03421a257a4d9a9623b4d59e85ba9ca5356cd4.sol
Total states:18192
41.348898
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.275001
Transaction Length: 2
Severity: High
Contract: p0nziprotocol
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xed03421a257a4d9a9623b4d59e85ba9ca5356cd4.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.406579
Transaction Length: 2
Severity: High
Contract: p0nziprotocol
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xed03421a257a4d9a9623b4d59e85ba9ca5356cd4.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xA70d82F271B38e931c5c16173fCF73560e21e4D7.sol
Total states:725
3.880388
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.158878
Transaction Length: 0
Severity: High
Contract: FrontierTokenVesting
Function name: constructor
PC address: 518
Estimated Gas Usage: 23496 - 107986
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xA70d82F271B38e931c5c16173fCF73560e21e4D7.sol:555

now + 30 * day

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x6a71f460d90eef13980a00c98481bbfa8316a51b.sol
Total states:1473
7.787887
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.042339
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x6a71f460d90eef13980a00c98481bbfa8316a51b.sol:24

cution context, including the

 * sender of

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.121409
Transaction Length: 0
Severity: High
Contract: sVault
Function name: constructor
PC address: 234
Estimated Gas Usage: 6824 - 64159
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x6a71f460d90eef13980a00c98481bbfa8316a51b.sol:9

node_modules\@o

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x7B0F66fA5cf5cc28280c1e7051af881E06579362.sol
Total states:9149
20.463837
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.653677
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7B0F66fA5cf5cc28280c1e7051af881E06579362.sol:143

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x9be6f1ad00431e80c69cb31f59caa26dc92af9fc.sol
Total states:8045
15.001282
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041469
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x9be6f1ad00431e80c69cb31f59caa26dc92af9fc.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.988588
Transaction Length: 2
Severity: High
Contract: YFTOP
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x9be6f1ad00431e80c69cb31f59caa26dc92af9fc.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x94371dae62e159b563ec6810ad7f752239e6e50c.sol
Total states:806
1.635493
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x001f265fcf3dc40f373a44bac600c6cb1eea64bd.sol
Total states:9014
15.995876
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.919100
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x001f265fcf3dc40f373a44bac600c6cb1eea64bd.sol:103

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol
Total states:46840
101.735321
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048966
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.905060
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.955916
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.957303
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.909319
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.965611
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.883805
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.038439
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.897223
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.965980
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.021447
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.010175
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.821567
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.193259
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.551992
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.717583
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.615612
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.748614
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.789986
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x3C23E612F4C19f1A21c1613e09AD71433c3FEDf4.sol
Total states:30
0.12791
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xe26de319e8a434c71711109c598f304f4c773ad0.sol
Total states:88186
148.603704
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:51.335770
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 1815
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe26de319e8a434c71711109c598f304f4c773ad0.sol:46

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:54.837494
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2036
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe26de319e8a434c71711109c598f304f4c773ad0.sol:48

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:00.741398
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2113
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe26de319e8a434c71711109c598f304f4c773ad0.sol:49

balances[_to]+=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:05.861180
Transaction Length: 2
Severity: High
Contract: VGSToken
Function name: transferFrom(address,address,uint256)
PC address: 2176
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe26de319e8a434c71711109c598f304f4c773ad0.sol:46

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:03.766571
Transaction Length: 1
Severity: High
Contract: VGSToken
Function name: transferFrom(address,address,uint256)
PC address: 2397
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe26de319e8a434c71711109c598f304f4c773ad0.sol:48

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.724766
Transaction Length: 1
Severity: High
Contract: VGSToken
Function name: transferFrom(address,address,uint256)
PC address: 2474
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe26de319e8a434c71711109c598f304f4c773ad0.sol:49

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xefd2f117edc2ff06a953e21869daf93ed1559d15.sol
Total states:5258
45.085412
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.824869
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xefd2f117edc2ff06a953e21869daf93ed1559d15.sol:28

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.755475
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xefd2f117edc2ff06a953e21869daf93ed1559d15.sol:24

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.702762
Transaction Length: 1
Severity: High
Contract: YShellMoney
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xefd2f117edc2ff06a953e21869daf93ed1559d15.sol:28

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.269487
Transaction Length: 1
Severity: High
Contract: YShellMoney
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xefd2f117edc2ff06a953e21869daf93ed1559d15.sol:24

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x929CF614C917944dD278BC2134714EaA4121BC6A.sol
Total states:30
0.050902
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x6ad758757c2764ed8958b04ec03338159b03d59f.sol
Total states:7984
17.226402
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.252836
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4094
Estimated Gas Usage: 992 - 1467
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x6ad758757c2764ed8958b04ec03338159b03d59f.sol:67

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x853b8045BB6390FA6Bff4e2aBe9140307A2C02f6.sol
Total states:0
0.016841
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x933B0d1C324f6703536E888ce8C42175e8474283.sol
Total states:1124
1.264278
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x1806b797d00c4c8f6c92967b4def1d8c7d62f39e.sol
Total states:3378
5.952103
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x0ce84a346a98661f54d735517ec8d1dbf56c8bd6.sol
Total states:165
0.175163
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xeddc0d98485845a0400b9aec621b168d0faf8572.sol
Total states:10798
32.008827
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:16.463745
Transaction Length: 2
Severity: High
Contract: ForlyToken
Function name: transferFrom(address,address,uint256)
PC address: 4278
Estimated Gas Usage: 8551 - 30546
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xeddc0d98485845a0400b9aec621b168d0faf8572.sol:58

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xc7592687c7f14e3a713460ca7f20385b9fdaa993.sol
Total states:11266
196.486542
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.529646
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc7592687c7f14e3a713460ca7f20385b9fdaa993.sol:36

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:24.048999
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc7592687c7f14e3a713460ca7f20385b9fdaa993.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.714097
Transaction Length: 1
Severity: High
Contract: BTCMerchant
Function name: approveAndCall(address,uint256,bytes)
PC address: 1742
Estimated Gas Usage: 489 - 584
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc7592687c7f14e3a713460ca7f20385b9fdaa993.sol:3

*/

//pragma solidity ^0.4.24;
prag

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:27.556458
Transaction Length: 1
Severity: Medium
Contract: BTCMerchant
Function name: approveAndCall(address,uint256,bytes)
PC address: 5501
Estimated Gas Usage: 8756 - 34286
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0xc7592687c7f14e3a713460ca7f20385b9fdaa993.sol:210

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:29.473881
Transaction Length: 1
Severity: High
Contract: BTCMerchant
Function name: safeMul(uint256,uint256)
PC address: 5538
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc7592687c7f14e3a713460ca7f20385b9fdaa993.sol:36

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:31.042160
Transaction Length: 1
Severity: High
Contract: BTCMerchant
Function name: safeAdd(uint256,uint256)
PC address: 6116
Estimated Gas Usage: 397 - 492
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc7592687c7f14e3a713460ca7f20385b9fdaa993.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x5ab4c93a366ca13698a18c74c69a07b43ac18e29.sol
Total states:2928
21.169261
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.025828
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x5ab4c93a366ca13698a18c74c69a07b43ac18e29.sol:24

he EIP.

 */

interface IERC20 {

    /**



--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol
Total states:44637
139.241844
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.054301
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 4827
Estimated Gas Usage: 2616 - 3661
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:76

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:29.843184
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4840
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:78

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.044186
Transaction Length: 2
Severity: High
Contract: Pausable
Function name: transferFrom(address,address,uint256)
PC address: 5561
Estimated Gas Usage: 2639 - 3684
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:76

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:30.287007
Transaction Length: 2
Severity: Low
Contract: Pausable
Function name: increaseApproval(address,uint256)
PC address: 5574
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:78

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.110088
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: transferFrom(address,address,uint256)
PC address: 6243
Estimated Gas Usage: 3145 - 4520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:76

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:27.794078
Transaction Length: 2
Severity: Low
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6256
Estimated Gas Usage: 1471 - 2276
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:78

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.769103
Transaction Length: 2
Severity: High
Contract: DexTradeCoin
Function name: increaseApproval(address,uint256)
PC address: 7345
Estimated Gas Usage: 1483 - 2288
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:76

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:21.409063
Transaction Length: 2
Severity: Low
Contract: DexTradeCoin
Function name: increaseApproval(address,uint256)
PC address: 7358
Estimated Gas Usage: 1493 - 2298
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:78

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xc210b05e093a164cfa11c18180c37bf15a98e414.sol
Total states:18192
40.823085
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.642452
Transaction Length: 2
Severity: High
Contract: AzbiBalancePool
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc210b05e093a164cfa11c18180c37bf15a98e414.sol:69

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.696653
Transaction Length: 2
Severity: High
Contract: AzbiBalancePool
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc210b05e093a164cfa11c18180c37bf15a98e414.sol:70

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x516679068375b3a15E7a10347970FC14a6d3997b.sol
Total states:774
0.987158
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x7F21BF217CE843bd5968f05440A3c1F2b9eAcd4f.sol
Total states:2175
2.63889
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.297162
Transaction Length: 1
Severity: Low
Contract: UpgradeabilityProxy
Function name: fallback
PC address: 274
Estimated Gas Usage: 681 - 3503
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy))
--------------------
In file: ../../new_contracts/0x7F21BF217CE843bd5968f05440A3c1F2b9eAcd4f.sol:260

delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x86c49eb4a022d550cd41676bec69106bfdfdd3b7.sol
Total states:14080
25.807094
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:13.214091
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2252
Estimated Gas Usage: 7658 - 28893
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x86c49eb4a022d550cd41676bec69106bfdfdd3b7.sol:68

_allowed[from][msg.sender]-=amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.000746
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2329
Estimated Gas Usage: 13181 - 54606
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x86c49eb4a022d550cd41676bec69106bfdfdd3b7.sol:69

_balances[to]+=amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol
Total states:21575
169.025908
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.028053
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:8

6D39296F0cbB648873a5d3;
    address constan

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.331214
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: fallback
PC address: 142
Estimated Gas Usage: 2311 - 39600
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x594153a000000000000000000000000000000000000000000000000000000000
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1035

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.333577
Transaction Length: 1
Severity: Medium
Contract: PoolProxy
Function name: fallback
PC address: 160
Estimated Gas Usage: 3056 - 74345
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 931
Offset: 142
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1044

return(ptr, size)

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.052481
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: fallback
PC address: 264
Estimated Gas Usage: 725 - 3547
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy))
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:902

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.974694
Transaction Length: 1
Severity: Low
Contract: Deposit3Tokens
Function name: period_timestamp(uint256)
PC address: 380
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:992

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.048485
Transaction Length: 1
Severity: Low
Contract: Deposit2Tokens
Function name: period_timestamp(uint256)
PC address: 393
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:986

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:43.833373
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 537
Estimated Gas Usage: 1433 - 2470
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:48.392523
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 577
Estimated Gas Usage: 1583 - 2996
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.615664
Transaction Length: 1
Severity: Low
Contract: TokenManager
Function name: supportAddresses(address,uint256)
PC address: 613
Estimated Gas Usage: 752 - 1037
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.183664
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: supportAddresses(address,uint256)
PC address: 1317
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:02.835636
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1575
Estimated Gas Usage: 4173 - 40386
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1082

IERC20(tokenAddress).transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:08.565635
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1891
Estimated Gas Usage: 5889 - 76759
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1085

IERC20(tokenAddress).approve(EXCHANGE_CONTRACT, amount)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.960142
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: supportAddresses(address,uint256)
PC address: 2114
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.046230
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2259
Estimated Gas Usage: 8446 - 148446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:4

y >=0.5 <0.7.17

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:23.790631
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2262
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:3


pragma solidity >=0.5 <0.7.17;
 contract T

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.604507
Transaction Length: 2
Severity: High
Contract: PoolToken
Function name: increaseAllowance(address,uint256)
PC address: 4840
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:139

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.466611
Transaction Length: 1
Severity: Low
Contract: PoolFactory
Function name: supportAddresses(address,uint256)
PC address: 5037
Estimated Gas Usage: 796 - 1081
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:02.014285
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: supportAddresses(address,uint256)
PC address: 8485
Estimated Gas Usage: 818 - 1103
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.432931
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17754
Estimated Gas Usage: 5008 - 75599
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:4

y >=0.5 <0.7.17

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.162085
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17757
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:3


pragma solidity >=0.5 <0.7.17;
 contract T

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:31.710804
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17778
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1241

IOneSplit(EXCHANGE_CONTRACT).getExpectedReturn(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, 100, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:17.909953
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17813
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:2


*/
pragma solidity >

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:37.728387
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17819
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:5

nager {
    
 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:44.911202
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17839
Estimated Gas Usage: 5186 - 76056
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:8

;
    address constan

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.282100
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17841
Estimated Gas Usage: 5186 - 76056
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:8

6D39296F0cbB648873a5d3;
    address constant

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:31.403567
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18208
Estimated Gas Usage: 5661 - 77946
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:30.897668
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18245
Estimated Gas Usage: 6389 - 78579
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.017509
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 19161
Estimated Gas Usage: 5923 - 76793
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1257

IERC20(DAI_ADDRESS).approve(_depositPool, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x959078a92dB4Ea7a4668993aC5DD615ce4ca56DF.sol
Total states:6625
11.936454
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.818878
Transaction Length: 1
Severity: High
Contract: LPTokenWrapper
Function name: stake(uint256)
PC address: 1964
Estimated Gas Usage: 402 - 497
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x959078a92dB4Ea7a4668993aC5DD615ce4ca56DF.sol:158

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x6a81de75ccb4dd12aa118becfb24d242853614ad.sol
Total states:23078
7765.98193
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.718799
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x6a81de75ccb4dd12aa118becfb24d242853614ad.sol:135

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:23.464214
Transaction Length: 2
Severity: High
Contract: IceSwap
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x6a81de75ccb4dd12aa118becfb24d242853614ad.sol:135

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x714a35f232c0e478015f383ae0a69b1af1a2fa4a.sol
Total states:923
0.881462
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x5863c92b31f777ebd4f7d79a54a7dc6348a19972.sol
Total states:8851
24.623638
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.145848
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x5863c92b31f777ebd4f7d79a54a7dc6348a19972.sol:142

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x87491de2e8395b420eddfb4f266077c89798d63e.sol
Total states:1714
1.838631
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.823111
Transaction Length: 1
Severity: Medium
Contract: xETHGRebaser
Function name: rebase()
PC address: 2591
Estimated Gas Usage: 162 - 257
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../new_contracts/0x87491de2e8395b420eddfb4f266077c89798d63e.sol:159

tx.origin

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x1C77d15857646687005dbbAfFf5873F4495a9731.sol
Total states:632
0.374805
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x23C67BF183adc404ca07f79462D8E90A2975aD0a.sol
Total states:4998
46.040536
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.053120
Transaction Length: 0
Severity: High
Contract: ERC721Metadata
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x23C67BF183adc404ca07f79462D8E90A2975aD0a.sol:11

/ds-note/src/note.sol
/// note.sol -- the `

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.057200
Transaction Length: 0
Severity: High
Contract: Title
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x23C67BF183adc404ca07f79462D8E90A2975aD0a.sol:11

/ds-note/src/note.sol
/// note.sol -- the `

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.020220
Transaction Length: 1
Severity: High
Contract: ERC721
Function name: safeTransferFrom(address,address,uint256,bytes)
PC address: 1136
Estimated Gas Usage: 477 - 572
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x23C67BF183adc404ca07f79462D8E90A2975aD0a.sol:3

*/

// Verified using https://dapp.

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x3d96c77427ed6aa42f71b8e3c5de3dfca4d6fb8f.sol
Total states:18192
40.586417
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.654821
Transaction Length: 2
Severity: High
Contract: applecorefinancetwenty
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x3d96c77427ed6aa42f71b8e3c5de3dfca4d6fb8f.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.796605
Transaction Length: 2
Severity: High
Contract: applecorefinancetwenty
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x3d96c77427ed6aa42f71b8e3c5de3dfca4d6fb8f.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x881797bbd657b16672c3dfa8148bc7d10cc48ca6.sol
Total states:1239
0.408379
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x28e484dbd6bb501d37efc8cd4b8dc33121cc78be.sol
Total states:677
0.488416
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol
Total states:1653
3.238374
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.079511
Transaction Length: 1
Severity: Low
Contract: Collector
Function name: seize(uint256)
PC address: 1275
Estimated Gas Usage: 1503 - 2304
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol:180

pile.debt(loan)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xB7C4f7c4c2e815690D872ffF8F9b7DBBa1B1a76E.sol
Total states:90
1.151686
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xb0e1682d17a96e8551191c089673346df7e1d467.sol
Total states:7240
287.33612
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.946807
Transaction Length: 1
Severity: High
Contract: DefisaverLogger
Function name: Log(address,address,string,bytes)
PC address: 224
Estimated Gas Usage: 362 - 457
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb0e1682d17a96e8551191c089673346df7e1d467.sol:3



*/



//pragma solidity ^0.7.0;  

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.477778
Transaction Length: 1
Severity: High
Contract: DefisaverLogger
Function name: Log(address,address,string,bytes)
PC address: 375
Estimated Gas Usage: 713 - 3490
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb0e1682d17a96e8551191c089673346df7e1d467.sol:3



*/



//pragma solidity ^0.7.0;  

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xB5215bFf55f3bB7d23A71b783F994c754F61c494.sol
Total states:24
0.041536
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x44001a5656baafa5a3359ced8fa38e150a71eea2.sol
Total states:15326
34.838922
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.410125
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 2575
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x44001a5656baafa5a3359ced8fa38e150a71eea2.sol:86

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.040876
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 2748
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x44001a5656baafa5a3359ced8fa38e150a71eea2.sol:86

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x94e18801ab975a1f2cbe42acc2eb49dd1edd7ffc.sol
Total states:8483
28.329055
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.007659
Transaction Length: 2
Severity: High
Contract: LynxFinance
Function name: increaseApproval(address,uint256)
PC address: 4860
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x94e18801ab975a1f2cbe42acc2eb49dd1edd7ffc.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:25.022211
Transaction Length: 2
Severity: Low
Contract: LynxFinance
Function name: increaseApproval(address,uint256)
PC address: 4873
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x94e18801ab975a1f2cbe42acc2eb49dd1edd7ffc.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x48285154b9775fbc241f1ed0e61cff56cacf617e.sol
Total states:9010
17.322752
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.234854
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x48285154b9775fbc241f1ed0e61cff56cacf617e.sol:139

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x9c1394c0c7ca013499053608bed5b01e54a3fef0.sol
Total states:3429
5.498126
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xf2425d8c7b5194f9c95d826bb969cf17ad88d154.sol
Total states:1576
2.670543
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.042652
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xf2425d8c7b5194f9c95d826bb969cf17ad88d154.sol:10

g.data, they should not be accessed in such

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x0b8e150ebcf0bcf2dc850bbb6e2ded286ae213b5.sol
Total states:8888
21.794311
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.114611
Transaction Length: 0
Severity: High
Contract: darkUSDCvault
Function name: constructor
PC address: 224
Estimated Gas Usage: 6794 - 64036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x0b8e150ebcf0bcf2dc850bbb6e2ded286ae213b5.sol:6

ed for verifica

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.699058
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x0b8e150ebcf0bcf2dc850bbb6e2ded286ae213b5.sol:173

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x5e8a0b1629dd519ddda805d1a36dc404fc3efdd7.sol
Total states:13051
18.870917
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.935545
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 5473
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x5e8a0b1629dd519ddda805d1a36dc404fc3efdd7.sol:150

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol
Total states:18307
86.13273
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.122065
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2327
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:14.779930
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2340
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:94

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.954935
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2798
Estimated Gas Usage: 933 - 1408
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:14.705731
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2811
Estimated Gas Usage: 943 - 1418
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:94

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:03.995465
Transaction Length: 1
Severity: Low
Contract: EurmToken
Function name: transfer(address,uint256)
PC address: 4326
Estimated Gas Usage: 929 - 1214
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:40.927806
Transaction Length: 2
Severity: Low
Contract: EurmToken
Function name: transferFrom(address,address,uint256)
PC address: 4326
Estimated Gas Usage: 1579 - 2244
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:76

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.496438
Transaction Length: 2
Severity: High
Contract: EurmToken
Function name: increaseApproval(address,uint256)
PC address: 4886
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:45.050673
Transaction Length: 2
Severity: Low
Contract: EurmToken
Function name: increaseApproval(address,uint256)
PC address: 4899
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:94

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x0000000000095413afC295d19EDeb1Ad7B71c952.sol
Total states:24
0.042666
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol
Total states:5538
93.381674
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:34.588296
Transaction Length: 1
Severity: High
Contract: SPIClub
Function name: setSymbol(string)
PC address: 2163
Estimated Gas Usage: 385 - 480
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol:3

*/

/*
    SPI CLUB
    SPI Staking

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:44.576317
Transaction Length: 1
Severity: High
Contract: SPIClub
Function name: setName(string)
PC address: 2406
Estimated Gas Usage: 429 - 524
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol:3

*/

/*
    SPI CLUB
    SPI Staking

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:33.671489
Transaction Length: 1
Severity: Low
Contract: SPIClub
Function name: distribute(uint256)
PC address: 4797
Estimated Gas Usage: 8804 - 63981
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol:176

(_amount * magnitude) / tokenSupply_

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.506771
Transaction Length: 1
Severity: High
Contract: SPIClub
Function name: calculateTokensReceived(uint256)
PC address: 8084
Estimated Gas Usage: 809 - 904
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol:27

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:27.420305
Transaction Length: 1
Severity: Low
Contract: SPIClub
Function name: calculateTokensReceived(uint256)
PC address: 8107
Estimated Gas Usage: 847 - 942
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol:28

assert(c / a == b)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:31.836863
Transaction Length: 1
Severity: Low
Contract: SPIClub
Function name: distribute(uint256)
PC address: 8421
Estimated Gas Usage: 1679 - 2670
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol:169

erc20.transferFrom(msg.sender, address(this), _amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xc26337e6f3b064c3a93d728dc4eb32531f783cfa.sol
Total states:5259
82.580628
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:23.802806
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc26337e6f3b064c3a93d728dc4eb32531f783cfa.sol:52

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:45.426433
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc26337e6f3b064c3a93d728dc4eb32531f783cfa.sol:46

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.728126
Transaction Length: 1
Severity: High
Contract: LPFfinance
Function name: safeMul(uint256,uint256)
PC address: 3167
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc26337e6f3b064c3a93d728dc4eb32531f783cfa.sol:52

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.999846
Transaction Length: 1
Severity: High
Contract: LPFfinance
Function name: safeAdd(uint256,uint256)
PC address: 3351
Estimated Gas Usage: 353 - 448
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc26337e6f3b064c3a93d728dc4eb32531f783cfa.sol:46

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xB5639130ce84dE9684dA10B5E6d6Ec49828E0987.sol
Total states:76097
141.535912
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:52.879358
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xB5639130ce84dE9684dA10B5E6d6Ec49828E0987.sol:60

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:51.080890
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xB5639130ce84dE9684dA10B5E6d6Ec49828E0987.sol:60

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:56.455351
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xB5639130ce84dE9684dA10B5E6d6Ec49828E0987.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:01.607398
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xB5639130ce84dE9684dA10B5E6d6Ec49828E0987.sol:63

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:55.097628
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xB5639130ce84dE9684dA10B5E6d6Ec49828E0987.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:00.933148
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xB5639130ce84dE9684dA10B5E6d6Ec49828E0987.sol:63

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x4e015af8e1c5eb020f91063661cc5ce43719ebcf.sol
Total states:3565
27.199177
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.107388
Transaction Length: 0
Severity: Low
Contract: CompoundInteractor
Function name: constructor
PC address: 733
Estimated Gas Usage: 29263 - 137729
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x4e015af8e1c5eb020f91063661cc5ce43719ebcf.sol:1871

comptroller.enterMarkets(cTokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.136669
Transaction Length: 0
Severity: High
Contract: CompoundInteractor
Function name: constructor
PC address: 770
Estimated Gas Usage: 30063 - 172717
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x4e015af8e1c5eb020f91063661cc5ce43719ebcf.sol:5

nzeppelin/contr

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.187157
Transaction Length: 0
Severity: Low
Contract: WETHCreamNoFoldStrategy
Function name: constructor
PC address: 1228
Estimated Gas Usage: 51247 - 240745
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x4e015af8e1c5eb020f91063661cc5ce43719ebcf.sol:1871

comptroller.enterMarkets(cTokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.217424
Transaction Length: 0
Severity: High
Contract: WETHCreamNoFoldStrategy
Function name: constructor
PC address: 1266
Estimated Gas Usage: 52047 - 275733
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x4e015af8e1c5eb020f91063661cc5ce43719ebcf.sol:5

nzeppelin/contr

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xa7ebc87173be2fea30214dab05c25c16d24312a8.sol
Total states:3099
4.650228
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x5f1d7707c4c233059e84674ccac35eb68aedc57c.sol
Total states:1578
5.902579
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xf46485b3fecc87c73821ae310b579d3c6390821a.sol
Total states:3586
6.014029
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xc8d238f341310bcbcc06f6a024f79aa03d091d7c.sol
Total states:18192
42.848198
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.786506
Transaction Length: 2
Severity: High
Contract: bethero
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc8d238f341310bcbcc06f6a024f79aa03d091d7c.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.268482
Transaction Length: 2
Severity: High
Contract: bethero
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc8d238f341310bcbcc06f6a024f79aa03d091d7c.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x7efd0d656572c269aafa6e21b35c10ca9d5ba779.sol
Total states:76315
135.807061
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:51.289053
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 1815
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7efd0d656572c269aafa6e21b35c10ca9d5ba779.sol:48

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:54.878169
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2036
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7efd0d656572c269aafa6e21b35c10ca9d5ba779.sol:50

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:00.807261
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2113
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7efd0d656572c269aafa6e21b35c10ca9d5ba779.sol:51

balances[_to]+=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.506902
Transaction Length: 2
Severity: High
Contract: UPLOAD
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7efd0d656572c269aafa6e21b35c10ca9d5ba779.sol:48

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:03.873911
Transaction Length: 1
Severity: High
Contract: UPLOAD
Function name: transferFrom(address,address,uint256)
PC address: 2357
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7efd0d656572c269aafa6e21b35c10ca9d5ba779.sol:50

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.807948
Transaction Length: 1
Severity: High
Contract: UPLOAD
Function name: transferFrom(address,address,uint256)
PC address: 2434
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7efd0d656572c269aafa6e21b35c10ca9d5ba779.sol:51

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xc30d9776f088e72686e69cd274d446f94f10c4a4.sol
Total states:7787
16.85208
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.385422
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc30d9776f088e72686e69cd274d446f94f10c4a4.sol:32

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x8bd8ec1e69e19b23db4e9cb31472f143d0e093cc.sol
Total states:2332
7.8956
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.880804
Transaction Length: 1
Severity: Medium
Contract: Liquidator
Function name: triggerLiquidation(address)
PC address: 4941
Estimated Gas Usage: 280 - 375
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../new_contracts/0x8bd8ec1e69e19b23db4e9cb31472f143d0e093cc.sol:848

tx.origin

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xfae0adb2d30e2a63730ac927e4e15e96d69b4add.sol
Total states:3424
5.628933
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x01d127f52fa0988f7ce82e70f30ef9edd360a8df.sol
Total states:643
2.23899
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xe2fa8314fc0f654f350adddaf9139d2f0d59067f.sol
Total states:17827
37.185059
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.345144
Transaction Length: 2
Severity: High
Contract: ERC20UpgradeSafe
Function name: increaseAllowance(address,uint256)
PC address: 3938
Estimated Gas Usage: 992 - 1467
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe2fa8314fc0f654f350adddaf9139d2f0d59067f.sol:1062

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.436075
Transaction Length: 2
Severity: High
Contract: NewToken
Function name: increaseAllowance(address,uint256)
PC address: 8495
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe2fa8314fc0f654f350adddaf9139d2f0d59067f.sol:1062

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol
Total states:2010
27.795227
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:08.121044
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: dripAndFile(address,bytes32,bytes32,uint256)
PC address: 614
Estimated Gas Usage: 3559 - 72596
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2070
Offset: 2221
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:56

function dripAndFile(address who, bytes32 ilk, bytes32 what, uint data) public {
        Setter(who).drip(ilk);
        Setter(who).file(ilk, what, data);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:16.957983
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: setAuthorityAndDelay(address,address,uint256)
PC address: 980
Estimated Gas Usage: 3486 - 72333
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2864
Offset: 2999
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:85

function setAuthorityAndDelay(address pause, address newAuthority, uint newDelay) public {
        PauseLike(pause).setAuthority(newAuthority);
        PauseLike(pause).setDelay(newDelay);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:20.846984
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: dripAndFile(address,bytes32,uint256)
PC address: 1068
Estimated Gas Usage: 3482 - 72329
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 3128
Offset: 3271
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:51

function dripAndFile(address who, bytes32 what, uint data) public {
        Setter(who).drip();
        Setter(who).file(what, data);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:01.528801
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: init(address,bytes32)
PC address: 1591
Estimated Gas Usage: 1097 - 1568
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:70

Setter(who).init(ilk)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:03.136312
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: file(address,bytes32,bytes32,address)
PC address: 1790
Estimated Gas Usage: 1234 - 1895
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:48

Setter(who).file(ilk, what, data)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:04.660264
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: setDelay(address,uint256)
PC address: 1931
Estimated Gas Usage: 1132 - 1603
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:82

PauseLike(pause).setDelay(newDelay)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:06.160743
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: dripAndFile(address,bytes32,bytes32,uint256)
PC address: 2070
Estimated Gas Usage: 1208 - 1679
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:57

Setter(who).drip(ilk)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:08.100964
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: dripAndFile(address,bytes32,bytes32,uint256)
PC address: 2221
Estimated Gas Usage: 2811 - 37848
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:58

Setter(who).file(ilk, what, data)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:09.550138
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: cage(address)
PC address: 2351
Estimated Gas Usage: 1121 - 1497
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:74

EndLike(end).cage()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:11.307268
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: file(address,bytes32,uint256)
PC address: 2497
Estimated Gas Usage: 1245 - 1811
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:40

Setter(who).file(what, data)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:12.882828
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: rely(address,address)
PC address: 2681
Estimated Gas Usage: 1128 - 1599
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:62

Setter(who).rely(to)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:14.703010
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: setAuthorityAndDelay(address,address,uint256)
PC address: 2864
Estimated Gas Usage: 1177 - 1648
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:86

PauseLike(pause).setAuthority(newAuthority)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:16.938029
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: setAuthorityAndDelay(address,address,uint256)
PC address: 2999
Estimated Gas Usage: 2740 - 37587
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:87

PauseLike(pause).setDelay(newDelay)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:18.657855
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: dripAndFile(address,bytes32,uint256)
PC address: 3128
Estimated Gas Usage: 1153 - 1529
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:52

Setter(who).drip()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:20.826908
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: dripAndFile(address,bytes32,uint256)
PC address: 3271
Estimated Gas Usage: 2736 - 37583
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:53

Setter(who).file(what, data)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:22.401164
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: deny(address,address)
PC address: 3455
Estimated Gas Usage: 1127 - 1598
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:66

Setter(who).deny(to)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:23.996649
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: setAuthority(address,address)
PC address: 3638
Estimated Gas Usage: 1149 - 1620
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:78

PauseLike(pause).setAuthority(newAuthority)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:25.837720
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: file(address,bytes32,address)
PC address: 3829
Estimated Gas Usage: 1218 - 1784
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:36

Setter(who).file(what, data)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:27.399453
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: file(address,bytes32,bytes32,uint256)
PC address: 3985
Estimated Gas Usage: 1269 - 1930
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:44

Setter(who).file(ilk, what, data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xa6b87963a81e1128dA4763E3748504E5046cE730.sol
Total states:1267
7.82074
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.085797
Transaction Length: 1
Severity: Low
Contract: timeLockAnrx
Function name: withdrawTokens()
PC address: 965
Estimated Gas Usage: 2471 - 3747
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0xa6b87963a81e1128dA4763E3748504E5046cE730.sol:239

anrToken.transfer(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.404483
Transaction Length: 2
Severity: Low
Contract: timeLockAnrx
Function name: withdrawTokens()
PC address: 965
Estimated Gas Usage: 2471 - 3747
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0xa6b87963a81e1128dA4763E3748504E5046cE730.sol:239

anrToken.transfer(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.993030
Transaction Length: 1
Severity: Low
Contract: timeLockAnrx
Function name: deposit(uint256)
PC address: 1284
Estimated Gas Usage: 1577 - 2568
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0xa6b87963a81e1128dA4763E3748504E5046cE730.sol:207

anrToken.transferFrom(msg.sender,address(this),amount)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.161093
Transaction Length: 1
Severity: High
Contract: timeLockAnrx
Function name: deposit(uint256)
PC address: 1374
Estimated Gas Usage: 7704 - 64203
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xa6b87963a81e1128dA4763E3748504E5046cE730.sol:215

now + 31363200

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x22b858cac15fffcdc5efb9fea4ab6b3b4bef9de6.sol
Total states:65
0.665489
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xd5a4dc51229774223e288528e03192e2342bda00.sol
Total states:450
0.325863
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xce4c91f4b7a583b6547bd140b61d25aa79a37427.sol
Total states:6075
398.495844
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x0374f3dC6D09FD9C804547F7E22a043Ed72b7156.sol
Total states:354
5.209738
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:05.128451
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFree(address,uint256,address,uint256,bytes32)
PC address: 206
Estimated Gas Usage: 3737 - 73051
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 321
Offset: 633
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x0374f3dC6D09FD9C804547F7E22a043Ed72b7156.sol:60

function burnGasAndFree(address gas_token, uint256 free, address mToken, uint256 nonce, bytes32 challenge_digest) public {

        require(GasToken1(gas_token).free(free), "Could not free");

        expensiveStuff(mToken, nonce, challenge_digest);

    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:01.689121
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFree(address,uint256,address,uint256,bytes32)
PC address: 321
Estimated Gas Usage: 1161 - 1632
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x0374f3dC6D09FD9C804547F7E22a043Ed72b7156.sol:62

GasToken1(gas_token).free(free)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:04.991412
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFree(address,uint256,address,uint256,bytes32)
PC address: 633
Estimated Gas Usage: 2873 - 38001
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x0374f3dC6D09FD9C804547F7E22a043Ed72b7156.sol:42

ERC918Interface(mToken).mint(nonce, challenge_digest)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x8b347235c4b6571cfe18ef7bac4be2029e1a3d25.sol
Total states:402
0.65988
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x10f69079977c443e7e3c62b79e7ced16d696b175.sol
Total states:1389
2.19705
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xd0501e2c8e603b3f48a9a6283dc9744068b843b7.sol
Total states:766
5.145363
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.142637
Transaction Length: 0
Severity: High
Contract: PoolReward
Function name: constructor
PC address: 555
Estimated Gas Usage: 62285 - 306327
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xd0501e2c8e603b3f48a9a6283dc9744068b843b7.sol:60

a * b

--------------------




