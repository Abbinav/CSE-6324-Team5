$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x448ff6d5ca4cdf28f9c61de671108df310903eb1.sol
Total states:4708
8.21788
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040435
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x448ff6d5ca4cdf28f9c61de671108df310903eb1.sol:17

dentifier: MIT

//pragma solidity ^0.6.0;
p

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xfb9fc4ccc2538172fe76f7dc231a6969950e57c8.sol
Total states:20052
44.931572
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.279117
Transaction Length: 0
Severity: Medium
Contract: WEV
Function name: constructor
PC address: 209
Estimated Gas Usage: 17133 - 78876
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop3/0xfb9fc4ccc2538172fe76f7dc231a6969950e57c8.sol:733

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.328710
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xfb9fc4ccc2538172fe76f7dc231a6969950e57c8.sol:33

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.306227
Transaction Length: 2
Severity: High
Contract: WEV
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xfb9fc4ccc2538172fe76f7dc231a6969950e57c8.sol:33

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol
Total states:4104
25.104261
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:05.867761
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 339
Estimated Gas Usage: 10986 - 154068
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1353
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:169

function supplyOrderWithDaiPermit(uint amount, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {
        DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s);
        supplyOrder(amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:08.179451
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: redeemOrder(uint256)
PC address: 385
Estimated Gas Usage: 8635 - 116441
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1961
Offset: 2326
Offset: 2583
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:147

function redeemOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        token.hasMember(msg.sender);
        tranche.redeemOrder(msg.sender, amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:14.974060
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse()
PC address: 823
Estimated Gas Usage: 4632 - 75356
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 4515
Offset: 4882
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:154

function disburse() external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:16.943158
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse(uint256)
PC address: 910
Estimated Gas Usage: 4758 - 75577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5182
Offset: 5557
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:161

function disburse(uint endEpoch) external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender, endEpoch);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:19.300014
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 1044
Estimated Gas Usage: 6568 - 79482
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:141

function supplyOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        tranche.supplyOrder(msg.sender, amount);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.480822
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1711
Estimated Gas Usage: 3914 - 40177
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:170

DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:23.830342
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 2583
Estimated Gas Usage: 8608 - 114894
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:150

tranche.redeemOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:10.408233
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 3258
Estimated Gas Usage: 3875 - 40043
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:174

EIP2612PermitLike(tranche.currency()).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.847867
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse()
PC address: 4882
Estimated Gas Usage: 3600 - 39293
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:158

tranche.disburse(msg.sender)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:16.765180
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse(uint256)
PC address: 5557
Estimated Gas Usage: 3724 - 39512
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:165

tranche.disburse(msg.sender, endEpoch)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:18.975736
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 6269
Estimated Gas Usage: 3727 - 39515
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:143

tranche.supplyOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:20.615223
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 6826
Estimated Gas Usage: 2310 - 4011
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEDCD9e36017689c6Fc51C65c517f488E3Cb6C381.sol:178

EIP2612PermitLike(address(token)).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x98b689a88e421E4CdC3A27b61b99c039a8ae9885.sol
Total states:2175
2.702243
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.286201
Transaction Length: 1
Severity: Low
Contract: UpgradeabilityProxy
Function name: fallback
PC address: 274
Estimated Gas Usage: 681 - 3503
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy))
--------------------
In file: ../../contracts/noloop/noloop3/0x98b689a88e421E4CdC3A27b61b99c039a8ae9885.sol:260

delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x87a59a9f2c2caf9c7ec3fa62d7496d9fc7449b01.sol
Total states:2389
11.941628
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.890333
Transaction Length: 1
Severity: Medium
Contract: Liquidator
Function name: triggerLiquidation(address)
PC address: 4941
Estimated Gas Usage: 280 - 375
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop3/0x87a59a9f2c2caf9c7ec3fa62d7496d9fc7449b01.sol:1111

tx.origin

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x03542773ff03e6bfc17f70cb29c0b43115399a8b.sol
Total states:1585
2.749191
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.119338
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x03542773ff03e6bfc17f70cb29c0b43115399a8b.sol:11

sg.data, they should not be accessed in suc

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xf0190fa7d63e9c5fefb54e720200c0e86641d08f.sol
Total states:5259
57.304149
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.514834
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xf0190fa7d63e9c5fefb54e720200c0e86641d08f.sol:64

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:22.930640
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xf0190fa7d63e9c5fefb54e720200c0e86641d08f.sol:56

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.140634
Transaction Length: 1
Severity: High
Contract: YellowBitcoin
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xf0190fa7d63e9c5fefb54e720200c0e86641d08f.sol:64

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.864727
Transaction Length: 1
Severity: High
Contract: YellowBitcoin
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xf0190fa7d63e9c5fefb54e720200c0e86641d08f.sol:56

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x73fd787288e109f690feb2a319a8348196c926a2.sol
Total states:1239
0.612134
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xe8fcf5e2ada14994e734adc05620a5aaf7d3300c.sol
Total states:10492
46.298105
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.325944
Transaction Length: 1
Severity: High
Contract: yfOMEGA
Function name: transfer(address,uint256)
PC address: 6338
Estimated Gas Usage: 834 - 929
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xe8fcf5e2ada14994e734adc05620a5aaf7d3300c.sol:31

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.335956
Transaction Length: 2
Severity: High
Contract: yfOMEGA
Function name: increaseAllowance(address,uint256)
PC address: 6458
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xe8fcf5e2ada14994e734adc05620a5aaf7d3300c.sol:9

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xce8a7e421646447ca993dbd015886d5a3fc1eaf3.sol
Total states:3409
5.681381
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xfa96a422c59e5bc44ba24f10fc3ad0c6e4fd12a2.sol
Total states:18192
43.113717
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.811085
Transaction Length: 2
Severity: High
Contract: ponzis
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xfa96a422c59e5bc44ba24f10fc3ad0c6e4fd12a2.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.776886
Transaction Length: 2
Severity: High
Contract: ponzis
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xfa96a422c59e5bc44ba24f10fc3ad0c6e4fd12a2.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xc91352f98f96ec86dfdd5ed1bd151ca53adb4700.sol
Total states:1432
3.596523
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047111
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 141
Estimated Gas Usage: 20281 - 103054
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xc91352f98f96ec86dfdd5ed1bd151ca53adb4700.sol:10

ta. While these are generally available
 * 

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol
Total states:8394
466.117918
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.043232
Transaction Length: 1
Severity: High
Contract: vnxManager
Function name: addRole(string,uint256)
PC address: 776
Estimated Gas Usage: 363 - 458
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol:3



*/



// File: contracts\IRBAC.so

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:18.979591
Transaction Length: 1
Severity: High
Contract: vnxManager
Function name: addRootRole(string)
PC address: 1354
Estimated Gas Usage: 406 - 501
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol:3



*/



// File: contracts\IRBAC.so

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.280533
Transaction Length: 1
Severity: High
Contract: vnxManager
Function name: addRole(string,uint256)
PC address: 3863
Estimated Gas Usage: 12340 - 55966
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol:451

roles.push(

      Role({

        description: _roleDescription,

        admin: _admin,

        bearersCount: 0

      })

    )

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:53.671902
Transaction Length: 1
Severity: Low
Contract: vnxManager
Function name: roles(uint256)
PC address: 3998
Estimated Gas Usage: 678 - 773
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol:383

Role[] public roles

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:15.278253
Transaction Length: 1
Severity: High
Contract: vnxManager
Function name: addRole(string,uint256)
PC address: 5841
Estimated Gas Usage: 7296 - 30922
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol:287

contract vnxManager is IRBAC, Ownable {

  /**

   * @dev Throws if called by any account other than the admin

   */

  modifier onlyAdmin() {

    require(isAdmin(), "RBAC: caller is not the admin");

    _;

  }



  /**

   * @dev Returns true if the caller is the admin role

   */

  function isAdmin() public view returns (bool) {

    return hasRole(msg.sender, 0);

  }



  function transferContractOwnership(address targetContract, address newOwner) onlyAdmin external returns(bool)

  {

    require(targetContract != address(0), "Target contract cannot be zero address");

    require(newOwner != address(0), "newOwner cannot be zero address");



    Ownable c = Ownable(targetContract);

    require(c.owner()!=newOwner, "New owner should differ from current");

    c.transferOwnership(newOwner);



    return true;

  }



  uint256 constant SUPERADMIN_ROLE = 0;

  /**

   * @notice A role which will be used to group users.

   * @dev The role id is its position in the roles array.

   * @param description A description for the role.

   * @param admin The only role that can add or remove bearers from

   * this role. To have the role bearers to be also the role admins 

   * you should pass roles.length as the admin role.

   * @param bearers Addresses belonging to this role.

   * @param bearersCount total count of addresses belonging to this role.

   */

  struct Role {

    string description;

    uint256 admin;

    mapping (address => bool) bearers;

    uint256 bearersCount;

  }

  /**

   * @notice All roles ever created.

   */

  Role[] public roles;

  /**

   * @notice The contract constructor, empty as of now.

   */

  constructor() public {

    addRootRole("Superadmin");

  }

  /**

   * @notice Create a new role that has itself as an admin. 

   * msg.sender is added as a bearer.

   * @param _roleDescription The description of the role created.

   * @return The role id.

   */

  function addRootRole(string memory _roleDescription)

    public

    returns(uint256)

  {

    uint256 role = addRole(_roleDescription, roles.length);

    roles[role].bearers[msg.sender] = true;

    roles[role].bearersCount++;

    emit BearerAdded(msg.sender, role);

  }

  /**

   * @notice Create a new role.

   * @param _roleDescription The description of the role created.

   * @param _admin The role that is allowed to add and remove

   * bearers from the role being created.

   * @return The role id.

   */

  function addRole(string memory _roleDescription, uint256 _admin)

    public

    returns(uint256)

  {

    require(_admin <= roles.length, "Admin role doesn't exist.");

    uint256 role = roles.push(

      Role({

        description: _roleDescription,

        admin: _admin,

        bearersCount: 0

      })

    ) - 1;

    emit RoleCreated(role);

    return role;

  }

  /**

   * @notice Retrieve the number of roles in the contract.

   */

  function totalRoles()

    external

    view

    returns(uint256)

  {

    return roles.length;

  }

  /**

   * @notice Verify whether an account is a bearer of a role

   * @param _account The account to verify.

   * @param _role The role to look into.

   * @return Whether the account is a bearer of the role.

   */

  function hasRole(address _account, uint256 _role)

    public

    view

    returns(bool)

  {

    return _role < roles.length && roles[_role].bearers[_account];

  }

  /**

   * @notice A method to add a bearer to a role

   * @param _account The account to add as a bearer.

   * @param _role The role to add the bearer to.

   */

  function addBearer(address _account, uint256 _role)

    external

  {

    require(

      _role < roles.length,

      "Role doesn't exist."

    );

    require(

      hasRole(msg.sender, roles[_role].admin),

      "User can't add bearers."

    );

    require(

      !hasRole(_account, _role),

      "Account is bearer of role."

    );

    roles[_role].bearers[_account] = true;

    roles[_role].bearersCount++;

    emit BearerAdded(_account, _role);

  }

  /**

   * @notice A method to remove a bearer from a role

   * @param _account The account to remove as a bearer.

   * @param _role The role to remove the bearer from.

   */

  function removeBearer(address _account, uint256 _role)

    external

  {

    require(

      _role < roles.length,

      "Role doesn't exist."

    );

    require(

      hasRole(msg.sender, roles[_role].admin),

      "User can't remove bearers."

    );

    require(

      hasRole(_account, _role),

      "Account is not bearer of role."

    );

    if ( _role == roles[_role].admin && roles[_role].bearersCount == 1) {

      revert("Cannot remove last role admin");

    }



    delete roles[_role].bearers[_account];

    roles[_role].bearersCount--;

    emit BearerRemoved(_account, _role);

  }

}

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:37.817092
Transaction Length: 1
Severity: High
Contract: vnxManager
Function name: addRole(string,uint256)
PC address: 5855
Estimated Gas Usage: 12340 - 55966
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol:287

contract vnxManager is IRBAC, Ownable {

  /**

   * @dev Throws if called by any account other than the admin

   */

  modifier onlyAdmin() {

    require(isAdmin(), "RBAC: caller is not the admin");

    _;

  }



  /**

   * @dev Returns true if the caller is the admin role

   */

  function isAdmin() public view returns (bool) {

    return hasRole(msg.sender, 0);

  }



  function transferContractOwnership(address targetContract, address newOwner) onlyAdmin external returns(bool)

  {

    require(targetContract != address(0), "Target contract cannot be zero address");

    require(newOwner != address(0), "newOwner cannot be zero address");



    Ownable c = Ownable(targetContract);

    require(c.owner()!=newOwner, "New owner should differ from current");

    c.transferOwnership(newOwner);



    return true;

  }



  uint256 constant SUPERADMIN_ROLE = 0;

  /**

   * @notice A role which will be used to group users.

   * @dev The role id is its position in the roles array.

   * @param description A description for the role.

   * @param admin The only role that can add or remove bearers from

   * this role. To have the role bearers to be also the role admins 

   * you should pass roles.length as the admin role.

   * @param bearers Addresses belonging to this role.

   * @param bearersCount total count of addresses belonging to this role.

   */

  struct Role {

    string description;

    uint256 admin;

    mapping (address => bool) bearers;

    uint256 bearersCount;

  }

  /**

   * @notice All roles ever created.

   */

  Role[] public roles;

  /**

   * @notice The contract constructor, empty as of now.

   */

  constructor() public {

    addRootRole("Superadmin");

  }

  /**

   * @notice Create a new role that has itself as an admin. 

   * msg.sender is added as a bearer.

   * @param _roleDescription The description of the role created.

   * @return The role id.

   */

  function addRootRole(string memory _roleDescription)

    public

    returns(uint256)

  {

    uint256 role = addRole(_roleDescription, roles.length);

    roles[role].bearers[msg.sender] = true;

    roles[role].bearersCount++;

    emit BearerAdded(msg.sender, role);

  }

  /**

   * @notice Create a new role.

   * @param _roleDescription The description of the role created.

   * @param _admin The role that is allowed to add and remove

   * bearers from the role being created.

   * @return The role id.

   */

  function addRole(string memory _roleDescription, uint256 _admin)

    public

    returns(uint256)

  {

    require(_admin <= roles.length, "Admin role doesn't exist.");

    uint256 role = roles.push(

      Role({

        description: _roleDescription,

        admin: _admin,

        bearersCount: 0

      })

    ) - 1;

    emit RoleCreated(role);

    return role;

  }

  /**

   * @notice Retrieve the number of roles in the contract.

   */

  function totalRoles()

    external

    view

    returns(uint256)

  {

    return roles.length;

  }

  /**

   * @notice Verify whether an account is a bearer of a role

   * @param _account The account to verify.

   * @param _role The role to look into.

   * @return Whether the account is a bearer of the role.

   */

  function hasRole(address _account, uint256 _role)

    public

    view

    returns(bool)

  {

    return _role < roles.length && roles[_role].bearers[_account];

  }

  /**

   * @notice A method to add a bearer to a role

   * @param _account The account to add as a bearer.

   * @param _role The role to add the bearer to.

   */

  function addBearer(address _account, uint256 _role)

    external

  {

    require(

      _role < roles.length,

      "Role doesn't exist."

    );

    require(

      hasRole(msg.sender, roles[_role].admin),

      "User can't add bearers."

    );

    require(

      !hasRole(_account, _role),

      "Account is bearer of role."

    );

    roles[_role].bearers[_account] = true;

    roles[_role].bearersCount++;

    emit BearerAdded(_account, _role);

  }

  /**

   * @notice A method to remove a bearer from a role

   * @param _account The account to remove as a bearer.

   * @param _role The role to remove the bearer from.

   */

  function removeBearer(address _account, uint256 _role)

    external

  {

    require(

      _role < roles.length,

      "Role doesn't exist."

    );

    require(

      hasRole(msg.sender, roles[_role].admin),

      "User can't remove bearers."

    );

    require(

      hasRole(_account, _role),

      "Account is not bearer of role."

    );

    if ( _role == roles[_role].admin && roles[_role].bearersCount == 1) {

      revert("Cannot remove last role admin");

    }



    delete roles[_role].bearers[_account];

    roles[_role].bearersCount--;

    emit BearerRemoved(_account, _role);

  }

}

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.480480
Transaction Length: 1
Severity: High
Contract: vnxManager
Function name: addRole(string,uint256)
PC address: 5872
Estimated Gas Usage: 22480 - 106292
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1681587843234DD5a5EEC542c004aCdc5DFebc6B.sol:287

contract vnxManager is IRBAC, Ownable {

  /**

   * @dev Throws if called by any account other than the admin

   */

  modifier onlyAdmin() {

    require(isAdmin(), "RBAC: caller is not the admin");

    _;

  }



  /**

   * @dev Returns true if the caller is the admin role

   */

  function isAdmin() public view returns (bool) {

    return hasRole(msg.sender, 0);

  }



  function transferContractOwnership(address targetContract, address newOwner) onlyAdmin external returns(bool)

  {

    require(targetContract != address(0), "Target contract cannot be zero address");

    require(newOwner != address(0), "newOwner cannot be zero address");



    Ownable c = Ownable(targetContract);

    require(c.owner()!=newOwner, "New owner should differ from current");

    c.transferOwnership(newOwner);



    return true;

  }



  uint256 constant SUPERADMIN_ROLE = 0;

  /**

   * @notice A role which will be used to group users.

   * @dev The role id is its position in the roles array.

   * @param description A description for the role.

   * @param admin The only role that can add or remove bearers from

   * this role. To have the role bearers to be also the role admins 

   * you should pass roles.length as the admin role.

   * @param bearers Addresses belonging to this role.

   * @param bearersCount total count of addresses belonging to this role.

   */

  struct Role {

    string description;

    uint256 admin;

    mapping (address => bool) bearers;

    uint256 bearersCount;

  }

  /**

   * @notice All roles ever created.

   */

  Role[] public roles;

  /**

   * @notice The contract constructor, empty as of now.

   */

  constructor() public {

    addRootRole("Superadmin");

  }

  /**

   * @notice Create a new role that has itself as an admin. 

   * msg.sender is added as a bearer.

   * @param _roleDescription The description of the role created.

   * @return The role id.

   */

  function addRootRole(string memory _roleDescription)

    public

    returns(uint256)

  {

    uint256 role = addRole(_roleDescription, roles.length);

    roles[role].bearers[msg.sender] = true;

    roles[role].bearersCount++;

    emit BearerAdded(msg.sender, role);

  }

  /**

   * @notice Create a new role.

   * @param _roleDescription The description of the role created.

   * @param _admin The role that is allowed to add and remove

   * bearers from the role being created.

   * @return The role id.

   */

  function addRole(string memory _roleDescription, uint256 _admin)

    public

    returns(uint256)

  {

    require(_admin <= roles.length, "Admin role doesn't exist.");

    uint256 role = roles.push(

      Role({

        description: _roleDescription,

        admin: _admin,

        bearersCount: 0

      })

    ) - 1;

    emit RoleCreated(role);

    return role;

  }

  /**

   * @notice Retrieve the number of roles in the contract.

   */

  function totalRoles()

    external

    view

    returns(uint256)

  {

    return roles.length;

  }

  /**

   * @notice Verify whether an account is a bearer of a role

   * @param _account The account to verify.

   * @param _role The role to look into.

   * @return Whether the account is a bearer of the role.

   */

  function hasRole(address _account, uint256 _role)

    public

    view

    returns(bool)

  {

    return _role < roles.length && roles[_role].bearers[_account];

  }

  /**

   * @notice A method to add a bearer to a role

   * @param _account The account to add as a bearer.

   * @param _role The role to add the bearer to.

   */

  function addBearer(address _account, uint256 _role)

    external

  {

    require(

      _role < roles.length,

      "Role doesn't exist."

    );

    require(

      hasRole(msg.sender, roles[_role].admin),

      "User can't add bearers."

    );

    require(

      !hasRole(_account, _role),

      "Account is bearer of role."

    );

    roles[_role].bearers[_account] = true;

    roles[_role].bearersCount++;

    emit BearerAdded(_account, _role);

  }

  /**

   * @notice A method to remove a bearer from a role

   * @param _account The account to remove as a bearer.

   * @param _role The role to remove the bearer from.

   */

  function removeBearer(address _account, uint256 _role)

    external

  {

    require(

      _role < roles.length,

      "Role doesn't exist."

    );

    require(

      hasRole(msg.sender, roles[_role].admin),

      "User can't remove bearers."

    );

    require(

      hasRole(_account, _role),

      "Account is not bearer of role."

    );

    if ( _role == roles[_role].admin && roles[_role].bearersCount == 1) {

      revert("Cannot remove last role admin");

    }



    delete roles[_role].bearers[_account];

    roles[_role].bearersCount--;

    emit BearerRemoved(_account, _role);

  }

}

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x93627187a39da0aed8fc121c5595082b93fc1ced.sol
Total states:7280
10.840552
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.167696
Transaction Length: 2
Severity: High
Contract: LidTimeLock
Function name: startRelease(address)
PC address: 5176
Estimated Gas Usage: 15980 - 126519
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x93627187a39da0aed8fc121c5595082b93fc1ced.sol:169

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x6201bf2f2f1325e1e7deb50eb15cf2b384ba029c.sol
Total states:10158
33.722488
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:06.895487
Transaction Length: 1
Severity: Low
Contract: AErc20
Function name: seize(address,address,uint256)
PC address: 10140
Estimated Gas Usage: 7628 - 28809
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x6201bf2f2f1325e1e7deb50eb15cf2b384ba029c.sol:1828

controller.seizeAllowed(address(this), msg.sender, liquidator, borrower, seizeTokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.333534
Transaction Length: 1
Severity: Low
Contract: AErc20
Function name: transfer(address,uint256)
PC address: 15245
Estimated Gas Usage: 7688 - 28774
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x6201bf2f2f1325e1e7deb50eb15cf2b384ba029c.sol:819

controller.transferAllowed(address(this), src, dst, tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.353836
Transaction Length: 2
Severity: Low
Contract: AErc20
Function name: transfer(address,uint256)
PC address: 15245
Estimated Gas Usage: 7681 - 28767
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x6201bf2f2f1325e1e7deb50eb15cf2b384ba029c.sol:819

controller.transferAllowed(address(this), src, dst, tokens)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xc732a299684726a9feb2a72ff29f1af785940747.sol
Total states:76097
149.841838
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:55.644147
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xc732a299684726a9feb2a72ff29f1af785940747.sol:60

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.688902
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xc732a299684726a9feb2a72ff29f1af785940747.sol:60

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:59.541809
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xc732a299684726a9feb2a72ff29f1af785940747.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:05.129954
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xc732a299684726a9feb2a72ff29f1af785940747.sol:63

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:58.032275
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xc732a299684726a9feb2a72ff29f1af785940747.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:04.405776
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xc732a299684726a9feb2a72ff29f1af785940747.sol:63

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x6af48fd9f1daec3ea48a710c776800ae258d08db.sol
Total states:3429
5.795833
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x93bb0df4bf901e44e4c998543cd7284015694923.sol
Total states:8045
17.060305
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039991
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x93bb0df4bf901e44e4c998543cd7284015694923.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.881512
Transaction Length: 2
Severity: High
Contract: YFIC
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x93bb0df4bf901e44e4c998543cd7284015694923.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x9f0deb3ec897d07db7a40bb15b103dbe47d809ed.sol
Total states:631
9.468054
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:09.353921
Transaction Length: 1
Severity: Medium
Contract: DeWETHer
Function name: unwrapAllWETHFor(address)
PC address: 155
Estimated Gas Usage: 8687 - 148563
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 357
Offset: 675
Offset: 965
Offset: 1062
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x9f0deb3ec897d07db7a40bb15b103dbe47d809ed.sol:27

function unwrapAllWETHFor(address account) external {
        uint256 wethBalance = _WETH.balanceOf(account);
        if (wethBalance > 0) {
            require(
                _WETH.transferFrom(account, address(this), wethBalance),
                "WETH transfer in failed — has the allowance been set?"
            );
            _WETH.withdraw(wethBalance);
    
            uint256 ethBalance = address(this).balance;
            
            (bool ok, ) = account.call.value(ethBalance)("");
            if (!ok) {
                assembly {
                    returndatacopy(0, 0, returndatasize())
                    revert(0, returndatasize())
                }
            }
            
            emit Unwrapped(account, ethBalance);
        }
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.344583
Transaction Length: 1
Severity: Low
Contract: DeWETHer
Function name: unwrapAllWETHFor(address)
PC address: 675
Estimated Gas Usage: 3678 - 39561
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f0deb3ec897d07db7a40bb15b103dbe47d809ed.sol:31

_WETH.transferFrom(account, address(this), wethBalance)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.970937
Transaction Length: 1
Severity: Low
Contract: DeWETHer
Function name: unwrapAllWETHFor(address)
PC address: 965
Estimated Gas Usage: 5776 - 76551
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f0deb3ec897d07db7a40bb15b103dbe47d809ed.sol:34

_WETH.withdraw(wethBalance)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:08.328920
Transaction Length: 1
Severity: Medium
Contract: DeWETHer
Function name: unwrapAllWETHFor(address)
PC address: 1062
Estimated Gas Usage: 6987 - 111948
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f0deb3ec897d07db7a40bb15b103dbe47d809ed.sol:38

account.call.value(ethBalance)("")

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:04.971861
Transaction Length: 1
Severity: High
Contract: DeWETHer
Function name: unwrapAllWETHFor(address)
PC address: 1062
Estimated Gas Usage: 6987 - 111948
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f0deb3ec897d07db7a40bb15b103dbe47d809ed.sol:38

account.call.value(ethBalance)("")

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x0eac9bb695be3e4b86d751cdc36716a75afdb7b2.sol
Total states:31613
99.279381
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.607007
Transaction Length: 1
Severity: High
Contract: YFG
Function name: approveAndCall(address,uint256,bytes)
PC address: 1799
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x0eac9bb695be3e4b86d751cdc36716a75afdb7b2.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:35.210585
Transaction Length: 2
Severity: High
Contract: YFG
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 4618
Estimated Gas Usage: 6015 - 43128
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x0eac9bb695be3e4b86d751cdc36716a75afdb7b2.sol:134

nonces[holder]++

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:23.827138
Transaction Length: 1
Severity: Medium
Contract: YFG
Function name: approveAndCall(address,uint256,bytes)
PC address: 6543
Estimated Gas Usage: 8284 - 32451
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop3/0x0eac9bb695be3e4b86d751cdc36716a75afdb7b2.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), data)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.788583
Transaction Length: 1
Severity: High
Contract: YFG
Function name: transferFrom(address,address,uint256)
PC address: 7630
Estimated Gas Usage: 1671 - 2526
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x0eac9bb695be3e4b86d751cdc36716a75afdb7b2.sol:52

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xe061d1a4069242b02ce48c55bdb130262cdeb341.sol
Total states:7732
29.834705
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:17.010782
Transaction Length: 2
Severity: High
Contract: NeoFinance
Function name: burnFrom(address,uint256)
PC address: 3508
Estimated Gas Usage: 7546 - 28781
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xe061d1a4069242b02ce48c55bdb130262cdeb341.sol:151

allowed[_from][msg.sender] -= _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:22.014939
Transaction Length: 2
Severity: High
Contract: NeoFinance
Function name: burnFrom(address,uint256)
PC address: 3524
Estimated Gas Usage: 12979 - 54214
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xe061d1a4069242b02ce48c55bdb130262cdeb341.sol:152

_totalSupply -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x07C5f5eb34019EB36CdaE8CBb625991c1202cbDa.sol
Total states:2191
6.105478
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.023760
Transaction Length: 1
Severity: High
Contract: Flipper
Function name: tick(uint256)
PC address: 12726
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x07C5f5eb34019EB36CdaE8CBb625991c1202cbDa.sol:135

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xE534F4f727d7F07B31eD6051e893F3dA2BE4d455.sol
Total states:9010
18.545003
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.559408
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xE534F4f727d7F07B31eD6051e893F3dA2BE4d455.sol:132

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x60bcE1c09600c777d5502e3eb1413D2efd1be425.sol
Total states:8045
16.452029
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039149
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x60bcE1c09600c777d5502e3eb1413D2efd1be425.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.575717
Transaction Length: 2
Severity: High
Contract: YFIGOLD
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x60bcE1c09600c777d5502e3eb1413D2efd1be425.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x614dc26e5add37ce2b885df7d2e1875ef2b351b0.sol
Total states:1683
2.888246
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.007974
Transaction Length: 0
Severity: Medium
Contract: SusafeReferral
Function name: constructor
PC address: 18
Estimated Gas Usage: 42 - 137
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop3/0x614dc26e5add37ce2b885df7d2e1875ef2b351b0.sol:20

tx.origin

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:02.183142
Transaction Length: 1
Severity: Medium
Contract: SusafeReferral
Function name: emergencyERC20Drain(address,uint256)
PC address: 2889
Estimated Gas Usage: 2119 - 3345
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop3/0x614dc26e5add37ce2b885df7d2e1875ef2b351b0.sol:54

token.transfer(governance, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x2B6da14f488fba03f6CF6E2a6B530d656a963755.sol
Total states:796
0.692562
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol
Total states:9807
222.74307
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.078558
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol:40

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:35.813996
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol:24

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.626095
Transaction Length: 1
Severity: High
Contract: LAZ
Function name: approveAndCall(address,uint256,bytes)
PC address: 1648
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol:3



*/



//pragma solidity ^0.4.24;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:34.120342
Transaction Length: 1
Severity: Medium
Contract: LAZ
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol:372

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens,address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:42.198498
Transaction Length: 1
Severity: High
Contract: LAZ
Function name: safeMul(uint256,uint256)
PC address: 5262
Estimated Gas Usage: 394 - 489
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol:40

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:44.218619
Transaction Length: 1
Severity: High
Contract: LAZ
Function name: safeAdd(uint256,uint256)
PC address: 5840
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x70c333d1415a0a8c54282a006b584151b8360ad6.sol:24

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x20e0b7cde3b373900b8152c3d3db8a28b37ab7b7.sol
Total states:794
2.173724
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x7bd1EA1d70079928b3b3469c327Be718F972F588.sol
Total states:836
0.729758
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x5255bb2de3ee6ca1ba729a9f0558e99da4d43303.sol
Total states:1661
4.974981
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.036841
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x5255bb2de3ee6ca1ba729a9f0558e99da4d43303.sol:16

pragma solidity 0.6.12;


 contract Permiss

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xa69f7a10df90c4d6710588bc18ad9bf08081f545.sol
Total states:1619
3.745854
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.038477
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xa69f7a10df90c4d6710588bc18ad9bf08081f545.sol:15

 the current execution context, including t

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x8e853d6d1d8670316fcef0e9b88ed66015d7e22e.sol
Total states:8045
15.682769
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039400
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x8e853d6d1d8670316fcef0e9b88ed66015d7e22e.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.192959
Transaction Length: 2
Severity: High
Contract: YFTOP
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x8e853d6d1d8670316fcef0e9b88ed66015d7e22e.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol
Total states:4104
23.376183
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:05.377401
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 339
Estimated Gas Usage: 10986 - 154068
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1353
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:169

function supplyOrderWithDaiPermit(uint amount, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {
        DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s);
        supplyOrder(amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:07.653078
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: redeemOrder(uint256)
PC address: 385
Estimated Gas Usage: 8635 - 116441
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1961
Offset: 2326
Offset: 2583
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:147

function redeemOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        token.hasMember(msg.sender);
        tranche.redeemOrder(msg.sender, amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:14.356715
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse()
PC address: 823
Estimated Gas Usage: 4632 - 75356
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 4515
Offset: 4882
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:154

function disburse() external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:16.264838
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse(uint256)
PC address: 910
Estimated Gas Usage: 4758 - 75577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5182
Offset: 5557
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:161

function disburse(uint endEpoch) external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender, endEpoch);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:18.332960
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 1044
Estimated Gas Usage: 6568 - 79482
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:141

function supplyOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        tranche.supplyOrder(msg.sender, amount);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.408111
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1711
Estimated Gas Usage: 3914 - 40177
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:170

DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:22.150374
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 2583
Estimated Gas Usage: 8608 - 114894
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:150

tranche.redeemOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:09.832348
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 3258
Estimated Gas Usage: 3875 - 40043
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:174

EIP2612PermitLike(tranche.currency()).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.232025
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse()
PC address: 4882
Estimated Gas Usage: 3600 - 39293
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:158

tranche.disburse(msg.sender)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:16.089106
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse(uint256)
PC address: 5557
Estimated Gas Usage: 3724 - 39512
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:165

tranche.disburse(msg.sender, endEpoch)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:18.083545
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 6269
Estimated Gas Usage: 3727 - 39515
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:143

tranche.supplyOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:19.574366
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 6826
Estimated Gas Usage: 2310 - 4011
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xEa9988207B63232A46F50019f6Cd28dd65a5c40e.sol:178

EIP2612PermitLike(address(token)).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x4690D8F53E0d367f5b68f7F571e6eb4b72D39ACe.sol
Total states:53557
107.961776
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.849829
Transaction Length: 1
Severity: High
Contract: KOMP
Function name: register(string)
PC address: 2171
Estimated Gas Usage: 428 - 523
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4690D8F53E0d367f5b68f7F571e6eb4b72D39ACe.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.625705
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 5537
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4690D8F53E0d367f5b68f7F571e6eb4b72D39ACe.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.005576
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6860
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4690D8F53E0d367f5b68f7F571e6eb4b72D39ACe.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.974990
Transaction Length: 2
Severity: High
Contract: FreezeToken
Function name: increaseApproval(address,uint256)
PC address: 7549
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4690D8F53E0d367f5b68f7F571e6eb4b72D39ACe.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.027597
Transaction Length: 2
Severity: High
Contract: KOMP
Function name: increaseApproval(address,uint256)
PC address: 9131
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4690D8F53E0d367f5b68f7F571e6eb4b72D39ACe.sol:47

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x2992a06af9b5e156cd6574049d37ad8da52b9e28.sol
Total states:3446
6.398983
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xB0B3442b632175B0b7d9521291c51060722C4e8C.sol
Total states:1555
6.76223
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040079
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xB0B3442b632175B0b7d9521291c51060722C4e8C.sol:15

*
     * @dev Returns the amount of tokens 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.083119
Transaction Length: 0
Severity: High
Contract: VaultBaselinerenBTC
Function name: constructor
PC address: 206
Estimated Gas Usage: 6661 - 61225
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xB0B3442b632175B0b7d9521291c51060722C4e8C.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.099591
Transaction Length: 0
Severity: High
Contract: VaultBaseline
Function name: constructor
PC address: 224
Estimated Gas Usage: 6794 - 64036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xB0B3442b632175B0b7d9521291c51060722C4e8C.sol:5

nzeppelin/contr

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x7fb5a3990662608df45bcce313feec7219a728ae.sol
Total states:6339
9.981278
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.780224
Transaction Length: 1
Severity: Low
Contract: WinOrLose
Function name: getWinner(uint256)
PC address: 5680
Estimated Gas Usage: 713 - 808
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x7fb5a3990662608df45bcce313feec7219a728ae.sol:73

winners[index]

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:02.672351
Transaction Length: 1
Severity: Low
Contract: WinOrLose
Function name: activeBets(uint256)
PC address: 6479
Estimated Gas Usage: 745 - 840
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x7fb5a3990662608df45bcce313feec7219a728ae.sol:9

Bet[] public activeBets

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol
Total states:44690
798.873457
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.489438
Transaction Length: 1
Severity: High
Contract: TokenLogic
Function name: initialize(string,string,uint8)
PC address: 672
Estimated Gas Usage: 386 - 481
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:3

*/

// File: @openzeppelin/upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.590597
Transaction Length: 1
Severity: High
Contract: TokenLogic
Function name: initialize(string,string,uint8)
PC address: 823
Estimated Gas Usage: 728 - 3505
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:3

*/

// File: @openzeppelin/upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:22.842091
Transaction Length: 1
Severity: High
Contract: TokenLogic
Function name: symbol()
PC address: 1667
Estimated Gas Usage: 1443 - 2478
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:565

function symbol() public view returns (string memory) {
        return _symbol;
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:11:03.333475
Transaction Length: 1
Severity: High
Contract: TokenLogic
Function name: initialize(string,string,uint8,address)
PC address: 2440
Estimated Gas Usage: 450 - 545
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:3

*/

// File: @openzeppelin/upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:11:15.821950
Transaction Length: 1
Severity: High
Contract: TokenLogic
Function name: initialize(string,string,uint8,address)
PC address: 2591
Estimated Gas Usage: 792 - 3569
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:3

*/

// File: @openzeppelin/upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.669753
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3113
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:211

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.792922
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3293
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:211

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.824415
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 4078
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:211

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.681208
Transaction Length: 2
Severity: High
Contract: ERC20Capped
Function name: increaseAllowance(address,uint256)
PC address: 4629
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:211

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:23.987237
Transaction Length: 2
Severity: High
Contract: TokenLogic
Function name: increaseAllowance(address,uint256)
PC address: 6918
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7c3eeb458732ccd34b0339edb34f1e340929290a.sol:211

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xeb2988214f6cb6a4738e733adfe0582b1c6369b4.sol
Total states:423
0.974721
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol
Total states:44973
144.913494
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.067587
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 4827
Estimated Gas Usage: 2616 - 3661
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.643264
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4840
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:36

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.208855
Transaction Length: 2
Severity: High
Contract: Pausable
Function name: transferFrom(address,address,uint256)
PC address: 5561
Estimated Gas Usage: 2639 - 3684
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.450727
Transaction Length: 2
Severity: Low
Contract: Pausable
Function name: increaseApproval(address,uint256)
PC address: 5574
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:36

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.170617
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: transferFrom(address,address,uint256)
PC address: 6243
Estimated Gas Usage: 3145 - 4520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:30.409106
Transaction Length: 2
Severity: Low
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6256
Estimated Gas Usage: 1471 - 2276
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:36

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.901384
Transaction Length: 2
Severity: High
Contract: SFG
Function name: increaseApproval(address,uint256)
PC address: 7540
Estimated Gas Usage: 1483 - 2288
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:19.220280
Transaction Length: 2
Severity: Low
Contract: SFG
Function name: increaseApproval(address,uint256)
PC address: 7553
Estimated Gas Usage: 1493 - 2298
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x9f03913c14d11150479595e140a52ee2d20c862b.sol:36

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x0f36f2da9f935a7802a4f1af43a3740a73219a9e.sol
Total states:1585
2.871422
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039568
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x0f36f2da9f935a7802a4f1af43a3740a73219a9e.sol:20

 @dev Provides information about the curren

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x1a6ec8eb73bf404112475895d6c8814ad5a7bd96.sol
Total states:31613
100.093866
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.550744
Transaction Length: 1
Severity: High
Contract: YFG
Function name: approveAndCall(address,uint256,bytes)
PC address: 1799
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1a6ec8eb73bf404112475895d6c8814ad5a7bd96.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:34.955811
Transaction Length: 2
Severity: High
Contract: YFG
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 4618
Estimated Gas Usage: 6015 - 43128
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1a6ec8eb73bf404112475895d6c8814ad5a7bd96.sol:134

nonces[holder]++

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:24.064181
Transaction Length: 1
Severity: Medium
Contract: YFG
Function name: approveAndCall(address,uint256,bytes)
PC address: 6543
Estimated Gas Usage: 8284 - 32451
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop3/0x1a6ec8eb73bf404112475895d6c8814ad5a7bd96.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), data)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.775838
Transaction Length: 1
Severity: High
Contract: YFG
Function name: transferFrom(address,address,uint256)
PC address: 7630
Estimated Gas Usage: 1671 - 2526
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x1a6ec8eb73bf404112475895d6c8814ad5a7bd96.sol:52

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol
Total states:38367
691.0731
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.337428
Transaction Length: 1
Severity: High
Contract: BurnableToken
Function name: burn(uint256,bytes)
PC address: 423
Estimated Gas Usage: 389 - 484
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.238275
Transaction Length: 1
Severity: High
Contract: MintableToken
Function name: relayMint(address,uint256,bytes32,bytes)
PC address: 561
Estimated Gas Usage: 473 - 568
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.256902
Transaction Length: 1
Severity: High
Contract: WGOVM
Function name: relayMint(address,uint256,bytes32,bytes)
PC address: 769
Estimated Gas Usage: 495 - 590
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:46.428805
Transaction Length: 1
Severity: High
Contract: WGOVM
Function name: symbol()
PC address: 1652
Estimated Gas Usage: 1993 - 3123
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:336

string public symbol

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:49.531138
Transaction Length: 1
Severity: High
Contract: WGOVM
Function name: burn(uint256,bytes)
PC address: 2217
Estimated Gas Usage: 477 - 572
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.970829
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4104
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:47

_a + _b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:30.547536
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4117
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:48

assert(c >= _a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.384988
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 5709
Estimated Gas Usage: 1441 - 2246
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:47

_a + _b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:25.657773
Transaction Length: 2
Severity: Low
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 5722
Estimated Gas Usage: 1451 - 2256
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:48

assert(c >= _a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.558617
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 7155
Estimated Gas Usage: 933 - 1408
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:47

_a + _b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:03:23.710370
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 7168
Estimated Gas Usage: 943 - 1418
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:48

assert(c >= _a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.531513
Transaction Length: 2
Severity: High
Contract: WGOVM
Function name: increaseApproval(address,uint256)
PC address: 8952
Estimated Gas Usage: 1441 - 2246
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:47

_a + _b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:35.157271
Transaction Length: 2
Severity: Low
Contract: WGOVM
Function name: increaseApproval(address,uint256)
PC address: 8965
Estimated Gas Usage: 1451 - 2256
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0xac5d7dff150b195c97fca77001f8ad596eda1761.sol:48

assert(c >= _a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x82c93333e4e295aa17a05b15092159597e823e8a.sol
Total states:1515
2.085257
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.417524
Transaction Length: 1
Severity: High
Contract: OSMedianizer
Function name: read()
PC address: 3862
Estimated Gas Usage: 3911 - 39278
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x82c93333e4e295aa17a05b15092159597e823e8a.sol:35

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x4ed251f47eb55f5dff577009d5d1d89d79b54f71.sol
Total states:27574
58.546505
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.049275
Transaction Length: 0
Severity: High
Contract: BTCBase
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4ed251f47eb55f5dff577009d5d1d89d79b54f71.sol:12

 IERC20 {
    /**
     * @dev Returns the a

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.340471
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4ed251f47eb55f5dff577009d5d1d89d79b54f71.sol:109

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.058687
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4ed251f47eb55f5dff577009d5d1d89d79b54f71.sol:109

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.826521
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 3847
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4ed251f47eb55f5dff577009d5d1d89d79b54f71.sol:109

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x668d052775ca6f11a07fafe7859db777e253eaf9.sol
Total states:3429
5.877125
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xd89A909648e28e8352b63b78007f7fF144f434E9.sol
Total states:5259
56.587095
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.145914
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xd89A909648e28e8352b63b78007f7fF144f434E9.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.294878
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xd89A909648e28e8352b63b78007f7fF144f434E9.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.794188
Transaction Length: 1
Severity: High
Contract: DEFI_Insurance
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xd89A909648e28e8352b63b78007f7fF144f434E9.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.077636
Transaction Length: 1
Severity: High
Contract: DEFI_Insurance
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xd89A909648e28e8352b63b78007f7fF144f434E9.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol
Total states:20787
1998.20308
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.401767
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeSub(uint256,uint256)
PC address: 820
Estimated Gas Usage: 309 - 404
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:34.420463
Transaction Length: 1
Severity: Low
Contract: Math
Function name: safeDiv(uint256,uint256)
PC address: 959
Estimated Gas Usage: 324 - 419
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.098217
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 985
Estimated Gas Usage: 382 - 477
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.449415
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 1128
Estimated Gas Usage: 496 - 591
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:105

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:43.455056
Transaction Length: 1
Severity: High
Contract: Interest
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 1424
Estimated Gas Usage: 570 - 665
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:207

mul(x, x)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:36.417001
Transaction Length: 1
Severity: High
Contract: Interest
Function name: rpow(uint256,uint256,uint256)
PC address: 1443
Estimated Gas Usage: 557 - 652
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:209

add(xx, half)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:43.866071
Transaction Length: 1
Severity: High
Contract: Interest
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 1473
Estimated Gas Usage: 718 - 813
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:213

mul(z, x)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:12:47.883860
Transaction Length: 1
Severity: High
Contract: Interest
Function name: safeSub(uint256,uint256)
PC address: 1594
Estimated Gas Usage: 309 - 404
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:12:50.331292
Transaction Length: 1
Severity: Low
Contract: Interest
Function name: safeDiv(uint256,uint256)
PC address: 1733
Estimated Gas Usage: 324 - 419
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.492928
Transaction Length: 1
Severity: High
Contract: Interest
Function name: rdiv(uint256,uint256)
PC address: 1759
Estimated Gas Usage: 405 - 500
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.072946
Transaction Length: 1
Severity: High
Contract: Interest
Function name: rdiv(uint256,uint256)
PC address: 2100
Estimated Gas Usage: 519 - 614
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:105

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.670576
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 6103
Estimated Gas Usage: 593 - 688
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:207

mul(x, x)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:08:13.096632
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: rpow(uint256,uint256,uint256)
PC address: 6122
Estimated Gas Usage: 513 - 608
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:209

add(xx, half)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:11.451009
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 6152
Estimated Gas Usage: 741 - 836
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:213

mul(z, x)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:17:31.106806
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: safeSub(uint256,uint256)
PC address: 7439
Estimated Gas Usage: 399 - 494
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:17:33.369054
Transaction Length: 1
Severity: Low
Contract: Assessor
Function name: safeDiv(uint256,uint256)
PC address: 7824
Estimated Gas Usage: 369 - 464
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.936660
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: rdiv(uint256,uint256)
PC address: 8344
Estimated Gas Usage: 473 - 568
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:113

x * y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:17:34.590167
Transaction Length: 1
Severity: Low
Contract: Assessor
Function name: calcUpdateNAV()
PC address: 8638
Estimated Gas Usage: 1538 - 2244
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:371

navFeed.calcUpdateNAV()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.897502
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: rdiv(uint256,uint256)
PC address: 9406
Estimated Gas Usage: 587 - 682
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6e40A9d1eE2c8eF95322b879CBae35BE6Dd2D143.sol:105

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xf5ae40418A5D1DDCF5F8D667343b61b9020c2c1F.sol
Total states:222
0.142293
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xc0d8b58edca5628b121adb3f7011791716eeb2dc.sol
Total states:237
8.205996
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x6a2cccda97485d26dcfe48eb85cb8da376640be5.sol
Total states:9807
216.752584
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.565740
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a2cccda97485d26dcfe48eb85cb8da376640be5.sol:70

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:31.336440
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a2cccda97485d26dcfe48eb85cb8da376640be5.sol:54

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.674600
Transaction Length: 1
Severity: High
Contract: REWARD
Function name: approveAndCall(address,uint256,bytes)
PC address: 1648
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a2cccda97485d26dcfe48eb85cb8da376640be5.sol:3



*/



//pragma solidity ^0.4.24;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:37.378274
Transaction Length: 1
Severity: Medium
Contract: REWARD
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a2cccda97485d26dcfe48eb85cb8da376640be5.sol:416

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:45.400282
Transaction Length: 1
Severity: High
Contract: REWARD
Function name: safeMul(uint256,uint256)
PC address: 5262
Estimated Gas Usage: 394 - 489
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a2cccda97485d26dcfe48eb85cb8da376640be5.sol:70

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:43.350828
Transaction Length: 1
Severity: High
Contract: REWARD
Function name: safeAdd(uint256,uint256)
PC address: 5840
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a2cccda97485d26dcfe48eb85cb8da376640be5.sol:54

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x35205c430af01707d9b945b2af604ffab1aa817b.sol
Total states:5259
62.856997
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.939366
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x35205c430af01707d9b945b2af604ffab1aa817b.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:22.108644
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x35205c430af01707d9b945b2af604ffab1aa817b.sol:29

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.796438
Transaction Length: 1
Severity: High
Contract: TheMortalCompany
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x35205c430af01707d9b945b2af604ffab1aa817b.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:32.565552
Transaction Length: 1
Severity: High
Contract: TheMortalCompany
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x35205c430af01707d9b945b2af604ffab1aa817b.sol:29

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x5ffc29af13112a640e39e167a6b17a393b6d6abd.sol
Total states:18855
41.848736
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.732986
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x5ffc29af13112a640e39e167a6b17a393b6d6abd.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.667183
Transaction Length: 2
Severity: High
Contract: Cocoafinance
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x5ffc29af13112a640e39e167a6b17a393b6d6abd.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol
Total states:2763
69.06777
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:08.503673
Transaction Length: 1
Severity: Medium
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 692
Estimated Gas Usage: 24414 - 190577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2172
Offset: 2569
Offset: 3124
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:40

function lock(uint256 amount) public {
        
        uint256 flaps = amount*ratio;
        require(flaps <= flap.balanceOf(address(this)), "This contract has run out of flapp rewards, wait for replenishment or try a different contract");
        require(uni.transferFrom(msg.sender, address(this), amount), "You need to approve UNI tokens to be transferred to this contract before locking");
        locked[msg.sender] = locked[msg.sender] + amount;
        totalLocked = totalLocked + amount;
        time[msg.sender] = now;
        flap.transfer(msg.sender, flaps);
        emit Locked(msg.sender, amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:55.182192
Transaction Length: 2
Severity: Medium
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 692
Estimated Gas Usage: 24414 - 190577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2172
Offset: 2569
Offset: 3124
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:40

function lock(uint256 amount) public {
        
        uint256 flaps = amount*ratio;
        require(flaps <= flap.balanceOf(address(this)), "This contract has run out of flapp rewards, wait for replenishment or try a different contract");
        require(uni.transferFrom(msg.sender, address(this), amount), "You need to approve UNI tokens to be transferred to this contract before locking");
        locked[msg.sender] = locked[msg.sender] + amount;
        totalLocked = totalLocked + amount;
        time[msg.sender] = now;
        flap.transfer(msg.sender, flaps);
        emit Locked(msg.sender, amount);
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.443757
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: unlock()
PC address: 1035
Estimated Gas Usage: 1055 - 1340
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:54

time[msg.sender] + duration

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.391473
Transaction Length: 2
Severity: Low
Contract: LiquidityLock
Function name: unlock()
PC address: 1656
Estimated Gas Usage: 13915 - 55571
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:59

uni.transfer(msg.sender, amount)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.792352
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: getMyStatus()
PC address: 1966
Estimated Gas Usage: 1055 - 1340
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:68

time[user] + duration

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.945769
Transaction Length: 1
Severity: High
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 1980
Estimated Gas Usage: 2811 - 37798
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:42

amount*ratio

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.183324
Transaction Length: 1
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2569
Estimated Gas Usage: 4152 - 40035
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:44

uni.transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:25.698907
Transaction Length: 2
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2569
Estimated Gas Usage: 4152 - 40035
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:44

uni.transferFrom(msg.sender, address(this), amount)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.226333
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2778
Estimated Gas Usage: 5578 - 76027
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:45

locked[msg.sender] + amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:36.208716
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2850
Estimated Gas Usage: 10998 - 101447
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:46

totalLocked + amount

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:08.019493
Transaction Length: 1
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 3124
Estimated Gas Usage: 22401 - 153841
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:48

flap.transfer(msg.sender, flaps)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:54.624965
Transaction Length: 2
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 3124
Estimated Gas Usage: 22401 - 153841
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b0edd293958e5d19db0003556632add510833b4.sol:48

flap.transfer(msg.sender, flaps)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol
Total states:1007
129.475992
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.813318
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: external_call(address,uint256,bytes)
PC address: 319
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:3

*/

// File: contracts/IMultisigCar

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:21.828356
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 542
Estimated Gas Usage: 2718 - 38738
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:43

function parties() public view returns (address[] memory) {
        IMultisigCarrier multisigCarrier = IMultisigCarrier(_carrier);
        return multisigCarrier.vaultParties(address(this));
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.030229
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1181
Estimated Gas Usage: 2252 - 37241
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:5

racts/IMultisig

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.894876
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1184
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:3



// File: contracts/IMultisigCarrier.sol



--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:31.008619
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1205
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:45

multisigCarrier.vaultParties(address(this))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.051664
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1230
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:2


*/

// File: contrac

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:34.190748
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1236
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:7

ma solidity ^0

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:41.364574
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1256
Estimated Gas Usage: 2403 - 37578
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:16

ies(
        address 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:45.290041
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1258
Estimated Gas Usage: 2403 - 37578
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:16

    function vaultParties(
        address v

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:55.803869
Transaction Length: 1
Severity: Low
Contract: MultisigVault
Function name: approve(address,address,uint256)
PC address: 1601
Estimated Gas Usage: 1709 - 2795
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x661d469f17b49c93fa19c98d149088d3858f8b94.sol:58

multisigCarrier.approveFrom(msg.sender, destination, currencyAddress, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xb843909bb6764e137c1c963e3c80a850918a24c7.sol
Total states:17591
29.141484
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047174
Transaction Length: 0
Severity: High
Contract: Token
Function name: constructor
PC address: 98
Estimated Gas Usage: 233 - 3006
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xb843909bb6764e137c1c963e3c80a850918a24c7.sol:12

 ERC20Interface {
    /**
     * @dev Retur

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.988825
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1574
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xb843909bb6764e137c1c963e3c80a850918a24c7.sol:112

_balances[_to] += _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:21.151066
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1650
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xb843909bb6764e137c1c963e3c80a850918a24c7.sol:113

_balances[_from] -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xD4dc14409aC0beb743597Be70f062eACfeBC8bC4.sol
Total states:1947
8.409537
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.010121
Transaction Length: 1
Severity: Low
Contract: BaseUpgradeabilityProxy
Function name: fallback
PC address: 97
Estimated Gas Usage: 557 - 2956
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: ../../contracts/noloop/noloop3/0xD4dc14409aC0beb743597Be70f062eACfeBC8bC4.sol:45

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.353208
Transaction Length: 1
Severity: High
Contract: BaseAdminUpgradeabilityProxy
Function name: upgradeToAndCall(address,bytes)
PC address: 309
Estimated Gas Usage: 327 - 422
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xD4dc14409aC0beb743597Be70f062eACfeBC8bC4.sol:3

*/

// File: @openzeppelin/upgrades

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:07.178768
Transaction Length: 1
Severity: Low
Contract: BaseAdminUpgradeabilityProxy
Function name: fallback
PC address: 1699
Estimated Gas Usage: 1229 - 3628
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: ../../contracts/noloop/noloop3/0xD4dc14409aC0beb743597Be70f062eACfeBC8bC4.sol:45

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x58559349ea6cc733cf91c2374216e38a028de65b.sol
Total states:14894
33.079483
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.073661
Transaction Length: 0
Severity: Medium
Contract: CBP
Function name: constructor
PC address: 209
Estimated Gas Usage: 17133 - 78876
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop3/0x58559349ea6cc733cf91c2374216e38a028de65b.sol:501

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.818191
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3255
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x58559349ea6cc733cf91c2374216e38a028de65b.sol:292

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.057948
Transaction Length: 2
Severity: High
Contract: CBP
Function name: increaseAllowance(address,uint256)
PC address: 6492
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x58559349ea6cc733cf91c2374216e38a028de65b.sol:292

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xa520b4fde9e9501be06231eb72f3cd5b3a10a694.sol
Total states:10338
22.448013
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.037997
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xa520b4fde9e9501be06231eb72f3cd5b3a10a694.sol:8

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.791353
Transaction Length: 2
Severity: High
Contract: PaperToken
Function name: increaseAllowance(address,uint256)
PC address: 6959
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xa520b4fde9e9501be06231eb72f3cd5b3a10a694.sol:148

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x44cAef2f3917F1c337Fc2f5295C71bec26e4Df30.sol
Total states:10360
106.476494
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.934723
Transaction Length: 1
Severity: High
Contract: YFUGovernance
Function name: propose(address,string)
PC address: 3296
Estimated Gas Usage: 441 - 536
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x44cAef2f3917F1c337Fc2f5295C71bec26e4Df30.sol:3

*/

/*
   ____            __   __  

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xd48a38bad734a7c491e98367321f7abe79bb19a2.sol
Total states:618
1.136635
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xeb5fe112ea9586362d87debc8f10b1cfbdd2fd3c.sol
Total states:3399
5.760267
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x2b324bd03d824fd97c56ba412e2bb0cded70efe7.sol
Total states:9142
22.838916
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:00.069900
Transaction Length: 1
Severity: High
Contract: KPT
Function name: name()
PC address: 1204
Estimated Gas Usage: 1130 - 1508
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b324bd03d824fd97c56ba412e2bb0cded70efe7.sol:24

string public name

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.621714
Transaction Length: 2
Severity: High
Contract: KPT
Function name: transferFrom(address,address,uint256)
PC address: 1828
Estimated Gas Usage: 2014 - 2869
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b324bd03d824fd97c56ba412e2bb0cded70efe7.sol:47

balances[_to] += _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:15.664120
Transaction Length: 2
Severity: High
Contract: KPT
Function name: transferFrom(address,address,uint256)
PC address: 1905
Estimated Gas Usage: 7537 - 28582
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2b324bd03d824fd97c56ba412e2bb0cded70efe7.sol:48

balances[_from] -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol
Total states:7323
6586.072837
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:15:21.618052
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 294
Estimated Gas Usage: 2021 - 2727
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:59

tokenContract.decimals()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:58:16.134787
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 294
Estimated Gas Usage: 2021 - 2727
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:59

tokenContract.decimals()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:17:20.863513
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 682
Estimated Gas Usage: 10496 - 67151
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:64

tokenContract.transfer(msg.sender, numberOfTokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 1:01:05.697974
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 682
Estimated Gas Usage: 10496 - 67151
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:64

tokenContract.transfer(msg.sender, numberOfTokens)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:11:41.586967
Transaction Length: 1
Severity: Medium
Contract: WDXSale
Function name: fallback()
PC address: 741
Estimated Gas Usage: 11278 - 102119
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 294
Offset: 682
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:14

contract WDXSale {
    IERC20Token public tokenContract;  // the token being sold
    uint256 public price;              // the price, in wei, per token
    address owner;

    uint256 public tokensSold;

    event Sold(address buyer, uint256 amount);

    constructor(IERC20Token _tokenContract, uint256 _price) public {
        owner = msg.sender;
        tokenContract = _tokenContract;
        price = _price;
    }

    // Guards against integer overflows
    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        } else {
            uint256 c = a * b;
            assert(c / a == b);
            return c;
        }
    }
    
    function safeDivision(uint256 a, uint256 b) internal pure returns(uint256) {
        assert(b > 0);
        uint256 c = a / b;
        assert(a == b * c + a % b);
        return c;
    }

    function buyTokens(uint256 numberOfTokens) public payable {
        require(msg.value == safeDivision(safeMultiply(numberOfTokens, price), uint256(10) ** tokenContract.decimals()));
        require(tokenContract.balanceOf(address(this)) >= numberOfTokens);


        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
    }
    
    function() external payable {
        uint256 numberOfTokens = safeMultiply(safeDivision(msg.value, price), uint256(10) ** tokenContract.decimals());

        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
    }
    
    
    function endSale() public {
        require(msg.sender == owner);

        // Send unsold tokens to the owner.
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        require(tokenContract.transfer(recipient, tokenContract.balanceOf(address(this))));

        recipient.transfer(address(this).balance);
    }
    
    function getEther() public {
        require(msg.sender == owner);
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    function updateWDXPrice(uint256 _price) public {
        require(msg.sender == owner);
        price = _price;
    }
}

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 1:12:37.698299
Transaction Length: 2
Severity: Medium
Contract: WDXSale
Function name: fallback()
PC address: 741
Estimated Gas Usage: 11178 - 102019
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 294
Offset: 682
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:14

contract WDXSale {
    IERC20Token public tokenContract;  // the token being sold
    uint256 public price;              // the price, in wei, per token
    address owner;

    uint256 public tokensSold;

    event Sold(address buyer, uint256 amount);

    constructor(IERC20Token _tokenContract, uint256 _price) public {
        owner = msg.sender;
        tokenContract = _tokenContract;
        price = _price;
    }

    // Guards against integer overflows
    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        } else {
            uint256 c = a * b;
            assert(c / a == b);
            return c;
        }
    }
    
    function safeDivision(uint256 a, uint256 b) internal pure returns(uint256) {
        assert(b > 0);
        uint256 c = a / b;
        assert(a == b * c + a % b);
        return c;
    }

    function buyTokens(uint256 numberOfTokens) public payable {
        require(msg.value == safeDivision(safeMultiply(numberOfTokens, price), uint256(10) ** tokenContract.decimals()));
        require(tokenContract.balanceOf(address(this)) >= numberOfTokens);


        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
    }
    
    function() external payable {
        uint256 numberOfTokens = safeMultiply(safeDivision(msg.value, price), uint256(10) ** tokenContract.decimals());

        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
    }
    
    
    function endSale() public {
        require(msg.sender == owner);

        // Send unsold tokens to the owner.
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        require(tokenContract.transfer(recipient, tokenContract.balanceOf(address(this))));

        recipient.transfer(address(this).balance);
    }
    
    function getEther() public {
        require(msg.sender == owner);
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    function updateWDXPrice(uint256 _price) public {
        require(msg.sender == owner);
        price = _price;
    }
}

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:19:02.240061
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 1078
Estimated Gas Usage: 635 - 730
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:41

assert(b > 0)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:45:53.811365
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1078
Estimated Gas Usage: 2796 - 38018
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:41

assert(b > 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:43.299451
Transaction Length: 1
Severity: High
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1155
Estimated Gas Usage: 692 - 787
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:34

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:06:19.122618
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1178
Estimated Gas Usage: 730 - 825
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:35

assert(c / a == b)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:06:21.086325
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1341
Estimated Gas Usage: 1930 - 2636
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:48

tokenContract.decimals()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:45:22.639342
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1341
Estimated Gas Usage: 1930 - 2636
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xb2a1db6e7619b35c8fb048188f0e7fbbc8861c6e.sol:48

tokenContract.decimals()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xf107De92785f152683b092E8D67bC8b145510A26.sol
Total states:1219
3.282277
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.050819
Transaction Length: 0
Severity: High
Contract: RebasedSwap
Function name: constructor
PC address: 323
Estimated Gas Usage: 16679 - 80442
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xf107De92785f152683b092E8D67bC8b145510A26.sol:81

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.064128
Transaction Length: 1
Severity: High
Contract: RebasedSwap
Function name: getReb2OutputAmount(uint256)
PC address: 2486
Estimated Gas Usage: 2460 - 37352
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xf107De92785f152683b092E8D67bC8b145510A26.sol:50

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x62fe4d7c2f851f5d49ec756bbbb8b051f27086e0.sol
Total states:8483
32.38911
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.792122
Transaction Length: 2
Severity: High
Contract: YFlexFinance
Function name: increaseApproval(address,uint256)
PC address: 4860
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x62fe4d7c2f851f5d49ec756bbbb8b051f27086e0.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:28.293453
Transaction Length: 2
Severity: Low
Contract: YFlexFinance
Function name: increaseApproval(address,uint256)
PC address: 4873
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x62fe4d7c2f851f5d49ec756bbbb8b051f27086e0.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x9b7a66485d73735d78980974702286e5a11b953f.sol
Total states:1945
21.912333
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:12.130457
Transaction Length: 1
Severity: Medium
Contract: TreasuryVaultRecom
Function name: getExpectedReturn(address,address,uint256)
PC address: 837
Estimated Gas Usage: 4445 - 74936
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 4461
Offset: 4786
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x9b7a66485d73735d78980974702286e5a11b953f.sol:207

function getExpectedReturn(address _from, address _to, uint parts) external view returns (uint expected) {
        uint _balance = IERC20(_from).balanceOf(address(this));
        (expected,) = OneSplitAudit(onesplit).getExpectedReturn(_from, _to, _balance, parts, 0);
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.271071
Transaction Length: 1
Severity: High
Contract: TreasuryVaultRecom
Function name: getExpectedReturn(address,address,uint256)
PC address: 4823
Estimated Gas Usage: 4153 - 74084
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9b7a66485d73735d78980974702286e5a11b953f.sol:5

se-Identifier: 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.881081
Transaction Length: 1
Severity: High
Contract: TreasuryVaultRecom
Function name: getExpectedReturn(address,address,uint256)
PC address: 4826
Estimated Gas Usage: 4273 - 74390
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9b7a66485d73735d78980974702286e5a11b953f.sol:3



// SPDX-License-Identifier: MIT

//pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.529082
Transaction Length: 1
Severity: High
Contract: TreasuryVaultRecom
Function name: getExpectedReturn(address,address,uint256)
PC address: 4847
Estimated Gas Usage: 4273 - 74390
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9b7a66485d73735d78980974702286e5a11b953f.sol:209

OneSplitAudit(onesplit).getExpectedReturn(_from, _to, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.529947
Transaction Length: 1
Severity: High
Contract: TreasuryVaultRecom
Function name: getExpectedReturn(address,address,uint256)
PC address: 4908
Estimated Gas Usage: 4331 - 74541
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9b7a66485d73735d78980974702286e5a11b953f.sol:12

6);
    function tran

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.803300
Transaction Length: 1
Severity: High
Contract: TreasuryVaultRecom
Function name: getExpectedReturn(address,address,uint256)
PC address: 4910
Estimated Gas Usage: 4331 - 74541
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9b7a66485d73735d78980974702286e5a11b953f.sol:12

l view returns (uint256);
    function trans

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xd977212e9b7464e31c702fBaE92433713509F1F3.sol
Total states:851
5.502686
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.609026
Transaction Length: 1
Severity: Low
Contract: MegaPoker
Function name: pokeTemp()
PC address: 1134
Estimated Gas Usage: 2586 - 37429
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xd977212e9b7464e31c702fBaE92433713509F1F3.sol:106

eth.poke()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.096016
Transaction Length: 1
Severity: Low
Contract: MegaPoker
Function name: pokeTemp()
PC address: 1461
Estimated Gas Usage: 5749 - 109340
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0xd977212e9b7464e31c702fBaE92433713509F1F3.sol:108

bat.poke()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x4fbb8b1876858260cb0ea5e21a83c48de6f6cac0.sol
Total states:1172
1.39787
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x56aCd2E672264f1118EAE55364E31F6DE080d9A8.sol
Total states:481
4.210201
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xdcc9598f346517d6ddad903f703d2679fcb9f1fb.sol
Total states:398
1.109383
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol
Total states:40181
2121.705301
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.152723
Transaction Length: 1
Severity: Medium
Contract: Hodler
Function name: release(uint256)
PC address: 215
Estimated Gas Usage: 12859 - 104203
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1177
Offset: 3823
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:696

function release(uint256 _id) external {
    require(_id > 0);

    // user
    address _user = msg.sender;

    // get item
    Item storage item = items[_user][_id];

    // check if it exists
    require(item.id == _id);
    // check if its not already fulfilled
    require(!item.fulfilled);
    // check time
    require(block.timestamp >= item.releaseTime);

    // check if there is enough tokens
    uint256 balance = recurly.balanceOf(address(this));
    require(balance >= item.value);

    // update state
    item.fulfilled = true;

    // transfer tokens to beneficiary
    recurly.safeTransfer(item.beneficiary, item.value);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.315285
Transaction Length: 2
Severity: Medium
Contract: Hodler
Function name: release(uint256)
PC address: 215
Estimated Gas Usage: 12859 - 104203
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1177
Offset: 3823
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:696

function release(uint256 _id) external {
    require(_id > 0);

    // user
    address _user = msg.sender;

    // get item
    Item storage item = items[_user][_id];

    // check if it exists
    require(item.id == _id);
    // check if its not already fulfilled
    require(!item.fulfilled);
    // check time
    require(block.timestamp >= item.releaseTime);

    // check if there is enough tokens
    uint256 balance = recurly.balanceOf(address(this));
    require(balance >= item.value);

    // update state
    item.fulfilled = true;

    // transfer tokens to beneficiary
    recurly.safeTransfer(item.beneficiary, item.value);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.152323
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: checkRole(address,string)
PC address: 236
Estimated Gas Usage: 329 - 424
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:07.516156
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: hasRole(address,string)
PC address: 455
Estimated Gas Usage: 351 - 446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.160882
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: checkRole(address,string)
PC address: 671
Estimated Gas Usage: 419 - 514
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:59.672798
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: adminRemoveRole(address,string)
PC address: 698
Estimated Gas Usage: 373 - 468
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.222254
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: checkRole(address,string)
PC address: 760
Estimated Gas Usage: 441 - 536
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:32.010767
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: adminAddRole(address,string)
PC address: 917
Estimated Gas Usage: 395 - 490
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:55.967843
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: hasRole(address,string)
PC address: 920
Estimated Gas Usage: 374 - 469
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:52.030589
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: hasRole(address,string)
PC address: 1009
Estimated Gas Usage: 485 - 580
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:07:32.893984
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: ROLE_ADMIN()
PC address: 1102
Estimated Gas Usage: 730 - 2424
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:88

string public constant ROLE_ADMIN = "admin"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:18.772255
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: adminRemoveRole(address,string)
PC address: 1671
Estimated Gas Usage: 418 - 513
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:47.765621
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: adminRemoveRole(address,string)
PC address: 1794
Estimated Gas Usage: 396 - 491
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:07:08.115353
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: symbol()
PC address: 1856
Estimated Gas Usage: 528 - 1658
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:593

string public constant symbol = "CLERK"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:54.362631
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: ROLE_TRANSFER()
PC address: 1979
Estimated Gas Usage: 506 - 1636
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:563

string constant public ROLE_TRANSFER = "transfer"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:09:20.640124
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: adminAddRole(address,string)
PC address: 2123
Estimated Gas Usage: 373 - 468
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:07:26.309726
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: symbol()
PC address: 2184
Estimated Gas Usage: 550 - 1680
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:561

string public constant symbol = "RCR"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:10:36.600143
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: adminAddRole(address,string)
PC address: 2553
Estimated Gas Usage: 395 - 490
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.515999
Transaction Length: 1
Severity: High
Contract: Hodler
Function name: hodl(uint256,uint256,uint256)
PC address: 3957
Estimated Gas Usage: 1319 - 1794
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:247

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:12.169636
Transaction Length: 1
Severity: Low
Contract: Hodler
Function name: hodl(uint256,uint256,uint256)
PC address: 3970
Estimated Gas Usage: 1351 - 1826
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:248

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.448262
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4109
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:247

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:40.755234
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4122
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:248

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.941462
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 5581
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:247

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.874546
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 5594
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop3/0x2f444075ce7f45cec25cdbdc4ec3a421945f09ea.sol:248

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x81CdB7EB973489526370141A7E3564211dC37Ad8.sol
Total states:5737
13.417384
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x4e1bb8f9414b96d308e5586f4c9fb60ab2987a36.sol
Total states:18192
42.811793
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.742777
Transaction Length: 2
Severity: High
Contract: Syntax_API
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4e1bb8f9414b96d308e5586f4c9fb60ab2987a36.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.268092
Transaction Length: 2
Severity: High
Contract: Syntax_API
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x4e1bb8f9414b96d308e5586f4c9fb60ab2987a36.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xF9f6d74a9f5db5000cB3c067C26414403781eab6.sol
Total states:1389
2.237119
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x75c476d32a4c0cc8d68206d937b3e47eb4c3bead.sol
Total states:60
0.868729
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol
Total states:46840
107.473787
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048039
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.936533
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.065606
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.996642
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.936905
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.992336
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.052933
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.187542
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.081654
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.159182
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.193641
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.458447
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.157375
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.690901
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.882001
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.044652
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.990673
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.108051
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.131240
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x9127479c1eA8060dc14dBCD2AF85ba8C44791540.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xcb1b5582c988b099f641ff59c8add0737c8e9b59.sol
Total states:955
1.771887
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041160
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xcb1b5582c988b099f641ff59c8add0737c8e9b59.sol:16

ction _msgSender() internal view  returns (

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x843593e182e8b2c0FBc8e25D99A448D5E614D44d.sol
Total states:9841
19.074573
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039611
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x843593e182e8b2c0FBc8e25D99A448D5E614D44d.sol:12

ncluding the
 * sender of the transaction a

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.428832
Transaction Length: 2
Severity: High
Contract: NovaToken2
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x843593e182e8b2c0FBc8e25D99A448D5E614D44d.sol:141

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xba4e16c9ae5995ff55135469d4aa1a75fdd933b9.sol
Total states:732
0.6497
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.413969
Transaction Length: 1
Severity: Medium
Contract: yyCRVPrice
Function name: getVirtulPrice()
PC address: 254
Estimated Gas Usage: 4431 - 74401
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 496
Offset: 774
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xba4e16c9ae5995ff55135469d4aa1a75fdd933b9.sol:30

function getVirtulPrice() public view returns(uint256){
    return getyyCRVPrice() * getyCRVPrice() /1e18;
  }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x8b69a75774ac4ea498b540d5b23a003631bc8282.sol
Total states:3955
7.94175
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x73a76110907fe38772b6ae9f972a091a293b86b9.sol
Total states:9807
193.99933
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.040063
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x73a76110907fe38772b6ae9f972a091a293b86b9.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.578941
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x73a76110907fe38772b6ae9f972a091a293b86b9.sol:25

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.464715
Transaction Length: 1
Severity: High
Contract: CROWNFINANCE
Function name: approveAndCall(address,uint256,bytes)
PC address: 1648
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x73a76110907fe38772b6ae9f972a091a293b86b9.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:29.923638
Transaction Length: 1
Severity: Medium
Contract: CROWNFINANCE
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop3/0x73a76110907fe38772b6ae9f972a091a293b86b9.sol:159

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:38.755350
Transaction Length: 1
Severity: High
Contract: CROWNFINANCE
Function name: safeMul(uint256,uint256)
PC address: 5262
Estimated Gas Usage: 394 - 489
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x73a76110907fe38772b6ae9f972a091a293b86b9.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:25.798674
Transaction Length: 1
Severity: High
Contract: CROWNFINANCE
Function name: safeAdd(uint256,uint256)
PC address: 5840
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x73a76110907fe38772b6ae9f972a091a293b86b9.sol:25

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x4a2412844f856cdff5fdf6909ead44d3de6ada98.sol
Total states:3451
5.685667
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x6a4457b6c88ac5c34397f0532004c0cf2739f120.sol
Total states:10492
42.32205
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.508512
Transaction Length: 1
Severity: High
Contract: yfSCAN
Function name: transfer(address,uint256)
PC address: 6338
Estimated Gas Usage: 834 - 929
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a4457b6c88ac5c34397f0532004c0cf2739f120.sol:35

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.344616
Transaction Length: 2
Severity: High
Contract: yfSCAN
Function name: increaseAllowance(address,uint256)
PC address: 6458
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x6a4457b6c88ac5c34397f0532004c0cf2739f120.sol:13

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x65369a3793ce9fa42a77395aa3b2f0b3dbd9ffe8.sol
Total states:1985
3.641109
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.038097
Transaction Length: 0
Severity: High
Contract: KOR2pRERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x65369a3793ce9fa42a77395aa3b2f0b3dbd9ffe8.sol:26

_______________________$_____$ 

     __$__

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x7f0c8B125040f707441cad9e5eD8a8408673b455.sol
Total states:5259
68.293041
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.490188
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7f0c8B125040f707441cad9e5eD8a8408673b455.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:31.426459
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7f0c8B125040f707441cad9e5eD8a8408673b455.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.698587
Transaction Length: 1
Severity: High
Contract: Ducks
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7f0c8B125040f707441cad9e5eD8a8408673b455.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.528636
Transaction Length: 1
Severity: High
Contract: Ducks
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7f0c8B125040f707441cad9e5eD8a8408673b455.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x81f6E65493f430D520669E2139F96036102C5331.sol
Total states:3873
7.408524
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x7C30B4c1b87bAE4828eDb0015bAd5Ff74B3ceB36.sol
Total states:15974
35.916205
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.037637
Transaction Length: 0
Severity: High
Contract: ERC20Detailed
Function name: constructor
PC address: 106
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7C30B4c1b87bAE4828eDb0015bAd5Ff74B3ceB36.sol:12

ile these are generally available
 * via ms

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.439404
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4843
Estimated Gas Usage: 1082 - 1557
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7C30B4c1b87bAE4828eDb0015bAd5Ff74B3ceB36.sol:66

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.411717
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 5140
Estimated Gas Usage: 1082 - 1557
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7C30B4c1b87bAE4828eDb0015bAd5Ff74B3ceB36.sol:66

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xD7A28808D3Af84255cAa914F5736563151A7E2D3.sol
Total states:2175
2.707503
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.287310
Transaction Length: 1
Severity: Low
Contract: UpgradeabilityProxy
Function name: fallback
PC address: 274
Estimated Gas Usage: 681 - 3503
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy))
--------------------
In file: ../../contracts/noloop/noloop3/0xD7A28808D3Af84255cAa914F5736563151A7E2D3.sol:261

delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xb43aa2c44b99bad346143fb44e264213d412b6c2.sol
Total states:808
12.888992
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.285959
Transaction Length: 0
Severity: Medium
Contract: SNXRewardUniLPStrategy
Function name: constructor
PC address: 1588
Estimated Gas Usage: 88576 - 467866
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 883
Offset: 1141
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop3/0xb43aa2c44b99bad346143fb44e264213d412b6c2.sol:1067

contract SNXRewardUniLPStrategy is IStrategy, Controllable, RewardTokenProfitNotifier {

  using SafeMath for uint256;
  using SafeERC20 for IERC20;

  ERC20Detailed public underlying; // underlying here would be Uniswap's LP Token / Pair token
  address public uniLPComponentToken0;
  address public uniLPComponentToken1;

  address public vault;
  bool pausedInvesting = false; // When this flag is true, the strategy will not be able to invest. But users should be able to withdraw.

  SNXRewardInterface public rewardPool;
  address public rewardToken; // unfortunately, the interface is not unified for rewardToken for all the variants

  // a flag for disabling selling for simplified emergency exit
  bool public sell = true;
  uint256 public sellFloor = 10e18;

  // UniswapV2Router02
  // https://uniswap.org/docs/v2/smart-contracts/router02/
  // https://etherscan.io/address/0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D
  address public constant uniswapRouterV2 = address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);

  mapping (address => address[]) public uniswapRoutes;

  // These tokens cannot be claimed by the controller
  mapping (address => bool) public unsalvagableTokens;

  event ProfitsNotCollected();

  modifier restricted() {
    require(msg.sender == vault || msg.sender == controller()
      || msg.sender == governance(),
      "The sender has to be the controller, governance, or vault");
    _;
  }

  // This is only used in `investAllUnderlying()`
  // The user can still freely withdraw from the strategy
  modifier onlyNotPausedInvesting() {
    require(!pausedInvesting, "Action blocked as the strategy is in emergency state");
    _;
  }

  constructor(
    address _storage,
    address _underlying,
    address _vault,
    address _rewardPool,
    address _rewardToken
  )
  RewardTokenProfitNotifier(_storage, _rewardToken)
  public {
    underlying = ERC20Detailed(_underlying);
    vault = _vault;
    uniLPComponentToken0 = IUniswapV2Pair(address(underlying)).token0();
    uniLPComponentToken1 = IUniswapV2Pair(address(underlying)).token1();
    rewardPool = SNXRewardInterface(_rewardPool);
    rewardToken = _rewardToken;

    unsalvagableTokens[_underlying] = true;
    unsalvagableTokens[_rewardToken] = true;
  }

  function depositArbCheck() public view returns(bool) {
    return true;
  }

  /*
  *   In case there are some issues discovered about the pool or underlying asset
  *   Governance can exit the pool properly
  *   The function is only used for emergency to exit the pool
  */
  function emergencyExit() public onlyGovernance {
    rewardPool.exit();
    pausedInvesting = true;
  }

  /*
  *   Resumes the ability to invest into the underlying reward pools
  */

  function continueInvesting() public onlyGovernance {
    pausedInvesting = false;
  }


  function setLiquidationPaths(address [] memory _uniswapRouteToToken0, address [] memory _uniswapRouteToToken1) public onlyGovernance {
    uniswapRoutes[uniLPComponentToken0] = _uniswapRouteToToken0;
    uniswapRoutes[uniLPComponentToken1] = _uniswapRouteToToken1;
  }

  // We assume that all the tradings can be done on Uniswap
  function _liquidateReward() internal {
    uint256 rewardBalance = IERC20(rewardToken).balanceOf(address(this));
    if (!sell || rewardBalance < sellFloor) {
      // Profits can be disabled for possible simplified and rapid exit
      emit ProfitsNotCollected();
      return;
    }

    notifyProfitInRewardToken(rewardBalance);
    uint256 remainingRewardBalance = IERC20(rewardToken).balanceOf(address(this));

    if (remainingRewardBalance > 0 // we have tokens to swap
      && uniswapRoutes[address(uniLPComponentToken0)].length > 1 // and we have a route to do the swap
      && uniswapRoutes[address(uniLPComponentToken1)].length > 1 // and we have a route to do the swap
    ) {

      // allow Uniswap to sell our reward
      uint256 amountOutMin = 1;

      IERC20(rewardToken).safeApprove(uniswapRouterV2, 0);
      IERC20(rewardToken).safeApprove(uniswapRouterV2, remainingRewardBalance);

      // sell Uni to token1
      // we can accept 1 as minimum because this is called only by a trusted role

      IUniswapV2Router02(uniswapRouterV2).swapExactTokensForTokens(
        remainingRewardBalance/2,
        amountOutMin,
        uniswapRoutes[address(uniLPComponentToken0)],
        address(this),
        block.timestamp
      );
      uint256 token0Amount = IERC20(uniLPComponentToken0).balanceOf(address(this));
      // sell Uni to token2
      // we can accept 1 as minimum because this is called only by a trusted role
      remainingRewardBalance = IERC20(rewardToken).balanceOf(address(this));
      
      IUniswapV2Router02(uniswapRouterV2).swapExactTokensForTokens(
        remainingRewardBalance,
        amountOutMin,
        uniswapRoutes[uniLPComponentToken1],
        address(this),
        block.timestamp
      );
      uint256 token1Amount = IERC20(uniLPComponentToken1).balanceOf(address(this));

      // provide token1 and token2 to UniLPToken

      IERC20(uniLPComponentToken0).safeApprove(uniswapRouterV2, 0);
      IERC20(uniLPComponentToken0).safeApprove(uniswapRouterV2, token0Amount);

      IERC20(uniLPComponentToken1).safeApprove(uniswapRouterV2, 0);
      IERC20(uniLPComponentToken1).safeApprove(uniswapRouterV2, token1Amount);

      uint256 liquidity;
      (,,liquidity) = IUniswapV2Router02(uniswapRouterV2).addLiquidity(
        uniLPComponentToken0,
        uniLPComponentToken1,
        token0Amount, 
        token1Amount,
        1,  // we are willing to take whatever the pair gives us
        1,  
        address(this),
        block.timestamp
      );
    }
  }

  /*
  *   Stakes everything the strategy holds into the reward pool
  */
  function investAllUnderlying() internal onlyNotPausedInvesting {
    // this check is needed, because most of the SNX reward pools will revert if
    // you try to stake(0).
    if(underlying.balanceOf(address(this)) > 0) {
      underlying.approve(address(rewardPool), underlying.balanceOf(address(this)));
      rewardPool.stake(underlying.balanceOf(address(this)));
    }
  }

  /*
  *   Withdraws all the asset to the vault
  */
  function withdrawAllToVault() public restricted {
    if (address(rewardPool) != address(0)) {
      rewardPool.exit();
    }
    _liquidateReward();
    IERC20(underlying).safeTransfer(vault, underlying.balanceOf(address(this)));
  }

  /*
  *   Withdraws all the asset to the vault
  */
  function withdrawToVault(uint256 amount) public restricted {
    // Typically there wouldn't be any amount here
    // however, it is possible because of the emergencyExit
    if(amount > underlying.balanceOf(address(this))){
      // While we have the check above, we still using SafeMath below
      // for the peace of mind (in case something gets changed in between)
      uint256 needToWithdraw = amount.sub(underlying.balanceOf(address(this)));
      rewardPool.withdraw(Math.min(rewardPool.balanceOf(address(this)), needToWithdraw));
    }

    IERC20(underlying).safeTransfer(vault, amount);
  }

  /*
  *   Note that we currently do not have a mechanism here to include the
  *   amount of reward that is accrued.
  */
  function investedUnderlyingBalance() external view returns (uint256) {
    if (address(rewardPool) == address(0)) {
      return underlying.balanceOf(address(this));
    }
    // Adding the amount locked in the reward pool and the amount that is somehow in this contract
    // both are in the units of "underlying"
    // The second part is needed because there is the emergency exit mechanism
    // which would break the assumption that all the funds are always inside of the reward pool
    return rewardPool.balanceOf(address(this)).add(underlying.balanceOf(address(this)));
  }

  /*
  *   Governance or Controller can claim coins that are somehow transferred into the contract
  *   Note that they cannot come in take away coins that are used and defined in the strategy itself
  *   Those are protected by the "unsalvagableTokens". To check, see where those are being flagged.
  */
  function salvage(address recipient, address token, uint256 amount) external onlyControllerOrGovernance {
     // To make sure that governance cannot come in and take away the coins
    require(!unsalvagableTokens[token], "token is defined as not salvagable");
    IERC20(token).safeTransfer(recipient, amount);
  }

  /*
  *   Get the reward, sell it in exchange for underlying, invest what you got.
  *   It's not much, but it's honest work.
  *
  *   Note that although `onlyNotPausedInvesting` is not added here,
  *   calling `investAllUnderlying()` affectively blocks the usage of `doHardWork`
  *   when the investing is being paused by governance.
  */
  function doHardWork() external onlyNotPausedInvesting restricted {
    rewardPool.getReward();
    _liquidateReward();
    investAllUnderlying();
  }

  /**
  * Can completely disable claiming UNI rewards and selling. Good for emergency withdraw in the
  * simplest possible way.
  */
  function setSell(bool s) public onlyGovernance {
    sell = s;
  }

  /**
  * Sets the minimum amount of CRV needed to trigger a sale.
  */
  function setSellFloor(uint256 floor) public onlyGovernance {
    sellFloor = floor;
  }
}

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x7d96b3f2fe9eb5867b597a47c988684e39cd99f3.sol
Total states:17591
29.842055
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.035738
Transaction Length: 0
Severity: High
Contract: Token
Function name: constructor
PC address: 98
Estimated Gas Usage: 233 - 3006
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7d96b3f2fe9eb5867b597a47c988684e39cd99f3.sol:21


interface ERC20Interface {

    /**

     

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:17.533995
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1574
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7d96b3f2fe9eb5867b597a47c988684e39cd99f3.sol:222

_balances[_to] += _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:21.794462
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1650
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x7d96b3f2fe9eb5867b597a47c988684e39cd99f3.sol:224

_balances[_from] -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x2e77a7cdbf2aeb0b70af9f1521f9818848e7887b.sol
Total states:423
1.023579
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0xdcaf872c6d1c640ddf54fb85bd9cd003b8e6103f.sol
Total states:5259
52.107053
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.734957
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xdcaf872c6d1c640ddf54fb85bd9cd003b8e6103f.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.902570
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xdcaf872c6d1c640ddf54fb85bd9cd003b8e6103f.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.495013
Transaction Length: 1
Severity: High
Contract: Orient
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xdcaf872c6d1c640ddf54fb85bd9cd003b8e6103f.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.957767
Transaction Length: 1
Severity: High
Contract: Orient
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0xdcaf872c6d1c640ddf54fb85bd9cd003b8e6103f.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x34e2B546D1819fE428c072080829028aF36540DD.sol
Total states:2520
27.139465
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.536945
Transaction Length: 1
Severity: Low
Contract: StakingRewardsDecayHolder
Function name: withdraw(uint256,address)
PC address: 1090
Estimated Gas Usage: 1894 - 4952
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x34e2B546D1819fE428c072080829028aF36540DD.sol:456

address(rewarder).call(
                abi.encodeWithSelector(rewarder.withdraw.selector, msg.sender, amount, gem)
            )

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.581337
Transaction Length: 1
Severity: Low
Contract: StakingRewardsDecayHolder
Function name: stake(uint256,address)
PC address: 1969
Estimated Gas Usage: 1615 - 2606
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop3/0x34e2B546D1819fE428c072080829028aF36540DD.sol:446

rewarder.stake(msg.sender, amount, gem)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x94d29943df4968228c8c861e1db3732722f42127.sol
Total states:3859
6.186456
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x6a990206b3aa8743b62a9d24f17db955d81a3389.sol
Total states:3269
6.96694
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop3/0x0e94c0164a2b9877a30a7b40092fc22e2aee8fd1.sol
Total states:18890
38.194023
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.099892
Transaction Length: 0
Severity: High
Contract: Copenco
Function name: constructor
PC address: 282
Estimated Gas Usage: 17306 - 81727
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x0e94c0164a2b9877a30a7b40092fc22e2aee8fd1.sol:14

unction transfer(address recipient, uint256

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.995734
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4180
Estimated Gas Usage: 1033 - 1508
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop3/0x0e94c0164a2b9877a30a7b40092fc22e2aee8fd1.sol:36

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x6aad70db603f8c44a4328de0d34edf8c471e020b.sol
Total states:3467
5.785123
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x683f59aff1d52bd6d405cd45c3b5c105ef42882b.sol
Total states:1253
2.046464
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040370
Transaction Length: 0
Severity: High
Contract: BentoBoxContractTokenV1
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x683f59aff1d52bd6d405cd45c3b5c105ef42882b.sol:13

  returns (bytes memory) {
        this; //

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x4a7f3302c8c2c7f8e1471862f926099666f61c0a.sol
Total states:850
4.450629
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.042501
Transaction Length: 1
Severity: Low
Contract: TokenTimelock
Function name: release()
PC address: 1196
Estimated Gas Usage: 5049 - 42716
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x4a7f3302c8c2c7f8e1471862f926099666f61c0a.sol:187

address(token).call(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x397aa708156e2789aaa37cc4b79d8a709490b823.sol
Total states:3429
5.955525
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x6b1a790A8a127F7631A5c5Ff6a822733a2C61015.sol
Total states:214
0.233108
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x958282889d38ddb960460d8570a7202fbfc413d0.sol
Total states:1068
1.064103
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xa4f779074850d320b5553c9db5fc6a8ab15bd34a.sol
Total states:9103
21.763073
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.074377
Transaction Length: 0
Severity: Medium
Contract: YFIX
Function name: constructor
PC address: 213
Estimated Gas Usage: 17136 - 78879
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop9/0xa4f779074850d320b5553c9db5fc6a8ab15bd34a.sol:204

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.177980
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xa4f779074850d320b5553c9db5fc6a8ab15bd34a.sol:120

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x8824d3afd39b7b381bb382c34323aa7f5eb1d765.sol
Total states:31390
1014.378576
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.811315
Transaction Length: 1
Severity: High
Contract: TokenERC20
Function name: approveAndCall(address,uint256,bytes)
PC address: 1470
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x8824d3afd39b7b381bb382c34323aa7f5eb1d765.sol:3

*/

//pragma solidity >=0.5.17;
pra

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.645379
Transaction Length: 1
Severity: High
Contract: Reef_token
Function name: approveAndCall(address,uint256,bytes)
PC address: 2602
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x8824d3afd39b7b381bb382c34323aa7f5eb1d765.sol:3

*/

//pragma solidity >=0.5.17;
pra

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:35.943813
Transaction Length: 1
Severity: Medium
Contract: TokenERC20
Function name: approveAndCall(address,uint256,bytes)
PC address: 5474
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop9/0x8824d3afd39b7b381bb382c34323aa7f5eb1d765.sol:131

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.833638
Transaction Length: 1
Severity: Low
Contract: Reef_token
Function name: CreateTokenCM(address)
PC address: 7954
Estimated Gas Usage: 3287 - 3382
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x8824d3afd39b7b381bb382c34323aa7f5eb1d765.sol:177

_eth / soplPrice

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:06:46.952632
Transaction Length: 2
Severity: Low
Contract: Reef_token
Function name: CreateTokenCM(address)
PC address: 7954
Estimated Gas Usage: 3287 - 3382
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x8824d3afd39b7b381bb382c34323aa7f5eb1d765.sol:177

_eth / soplPrice

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:06.447003
Transaction Length: 1
Severity: Medium
Contract: Reef_token
Function name: approveAndCall(address,uint256,bytes)
PC address: 9525
Estimated Gas Usage: 8787 - 34505
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop9/0x8824d3afd39b7b381bb382c34323aa7f5eb1d765.sol:131

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x477b0a8aaff2c63c1071c4da254261986f542d1b.sol
Total states:59
0.685244
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x5b12dfd86b07f7306548f50526e236f3269a34ec.sol
Total states:806
1.550539
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xc83d3a7e32467c453eb1ad99f2f5c6fce399df98.sol
Total states:1052
3.79656
==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:02.926239
Transaction Length: 1
Severity: Medium
Contract: PickleJar
Function name: convertWETHPairWithPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)
PC address: 7684
Estimated Gas Usage: 1427 - 2468
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop9/0xc83d3a7e32467c453eb1ad99f2f5c6fce399df98.sol:242

IUniswapV2ERC20(fromLP).permit(
            msg.sender,
            address(this),
            value,
            deadline,
            v,
            r,
            s
        )

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x157A064ecB0cBD8111284FBdf9bF8a18BdAb8eE4.sol
Total states:2642
3.094361
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x81a9a414d4e631c9d1ac14960111171e9399410c.sol
Total states:4031
53.418836
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x84ee348617563944ffd4a23843e086a7dc0224f3.sol
Total states:60
0.723634
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xc0ba369c8db6eb3924965e5c4fd0b4c1b91e305f.sol
Total states:1644
3.2405
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.059601
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xc0ba369c8db6eb3924965e5c4fd0b4c1b91e305f.sol:13

ext, including the
 * sender of the transac

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xb76bcad81ff560348c46e07a544feec03f22d601.sol
Total states:53557
108.950684
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.861116
Transaction Length: 1
Severity: High
Contract: KOMP
Function name: register(string)
PC address: 2171
Estimated Gas Usage: 428 - 523
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xb76bcad81ff560348c46e07a544feec03f22d601.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.610667
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 5537
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xb76bcad81ff560348c46e07a544feec03f22d601.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.823583
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6860
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xb76bcad81ff560348c46e07a544feec03f22d601.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.067270
Transaction Length: 2
Severity: High
Contract: FreezeToken
Function name: increaseApproval(address,uint256)
PC address: 7549
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xb76bcad81ff560348c46e07a544feec03f22d601.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.945483
Transaction Length: 2
Severity: High
Contract: KOMP
Function name: increaseApproval(address,uint256)
PC address: 9131
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xb76bcad81ff560348c46e07a544feec03f22d601.sol:47

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x6f40802d334a09a67aca1f0d0e0cf4bc7a3d5b68.sol
Total states:7732
32.126068
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:19.135057
Transaction Length: 2
Severity: High
Contract: YearnMoney
Function name: burnFrom(address,uint256)
PC address: 3508
Estimated Gas Usage: 7546 - 28781
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x6f40802d334a09a67aca1f0d0e0cf4bc7a3d5b68.sol:151

allowed[_from][msg.sender] -= _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:23.990056
Transaction Length: 2
Severity: High
Contract: YearnMoney
Function name: burnFrom(address,uint256)
PC address: 3524
Estimated Gas Usage: 12979 - 54214
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x6f40802d334a09a67aca1f0d0e0cf4bc7a3d5b68.sol:152

_totalSupply -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xfcdc0ff8a13a32107c651d16b11bb8f60518a261.sol
Total states:18192
42.300518
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.704852
Transaction Length: 2
Severity: High
Contract: YSpaceFinance
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xfcdc0ff8a13a32107c651d16b11bb8f60518a261.sol:57

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.392215
Transaction Length: 2
Severity: High
Contract: YSpaceFinance
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xfcdc0ff8a13a32107c651d16b11bb8f60518a261.sol:58

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x989ac4c1fc5ab2b8c86924c6253aaf1ee68e9ce9.sol
Total states:18855
41.815837
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.159797
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x989ac4c1fc5ab2b8c86924c6253aaf1ee68e9ce9.sol:238

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.925110
Transaction Length: 2
Severity: High
Contract: PrimeFinance
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x989ac4c1fc5ab2b8c86924c6253aaf1ee68e9ce9.sol:238

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x04e86acc27354224ee2242caeaa84ea904bef9eb.sol
Total states:178
0.218365
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x75019407B9f8f30f2b1fD3e4905A0A39eCC14817.sol
Total states:428
1.425801
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xf9ba953ba63c43696eec85b18179af5c5734ec8b.sol
Total states:144
3.031886
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.173053
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: constructor
PC address: 606
Estimated Gas Usage: 7555 - 31379
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xf9ba953ba63c43696eec85b18179af5c5734ec8b.sol:233

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x9eb8c50459e29d2044714779df782d435577a48b.sol
Total states:23980
74.919575
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.001109
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4187
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x9eb8c50459e29d2044714779df782d435577a48b.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:33.086892
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4200
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x9eb8c50459e29d2044714779df782d435577a48b.sol:33

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.751546
Transaction Length: 2
Severity: High
Contract: DappChannel
Function name: increaseApproval(address,uint256)
PC address: 4823
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x9eb8c50459e29d2044714779df782d435577a48b.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:34.159844
Transaction Length: 2
Severity: Low
Contract: DappChannel
Function name: increaseApproval(address,uint256)
PC address: 4836
Estimated Gas Usage: 990 - 1465
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x9eb8c50459e29d2044714779df782d435577a48b.sol:33

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xc3F5d245eA6f809070F715A3feDaEE1C2c00e329.sol
Total states:120
1.609537
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x6c3e4cb2e96b01f4b866965a91ed4437839a121a.sol
Total states:2267
4.312183
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xaf1b4c2ff10796bd56a4824020ab1cdb9b0591ed.sol
Total states:18192
42.997382
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.864056
Transaction Length: 2
Severity: High
Contract: betheroio
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xaf1b4c2ff10796bd56a4824020ab1cdb9b0591ed.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.286079
Transaction Length: 2
Severity: High
Contract: betheroio
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xaf1b4c2ff10796bd56a4824020ab1cdb9b0591ed.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xfd25ec0627ba777f32a7ee04fe3bcee2b58f7939.sol
Total states:1239
0.64463
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xa188ddb3ebae55139cbc55d8f86a654f08bd9f7b.sol
Total states:1253
2.329111
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.042736
Transaction Length: 0
Severity: High
Contract: Polkaswap
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xa188ddb3ebae55139cbc55d8f86a654f08bd9f7b.sol:13

  returns (bytes memory) {
        this; //

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x612f7ad71514cb0a7dbfa6aff7494c6d3b4ab695.sol
Total states:23078
7789.031373
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.176624
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x612f7ad71514cb0a7dbfa6aff7494c6d3b4ab695.sol:122

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:43.496171
Transaction Length: 2
Severity: High
Contract: Suzu
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x612f7ad71514cb0a7dbfa6aff7494c6d3b4ab695.sol:122

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x17183c6afd3387633c53a8b2995f856d8be433f6.sol
Total states:9131
20.621575
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.199091
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x17183c6afd3387633c53a8b2995f856d8be433f6.sol:822

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x20ff4ab0cb5de8727a35ec173825f8acfd1963f9.sol
Total states:18192
45.730654
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.842598
Transaction Length: 2
Severity: High
Contract: KappiNetworkFinance
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x20ff4ab0cb5de8727a35ec173825f8acfd1963f9.sol:65

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:35.565844
Transaction Length: 2
Severity: High
Contract: KappiNetworkFinance
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x20ff4ab0cb5de8727a35ec173825f8acfd1963f9.sol:66

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xddd05c42769c2d339d9c4364326f46545190acf6.sol
Total states:9014
19.764322
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.774296
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xddd05c42769c2d339d9c4364326f46545190acf6.sol:108

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x3bd145f66203b19ce7bedaac9a8147e08ea64645.sol
Total states:3876
6.462871
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xB4dDe1cAb5012e14F49F982263d82b67e109685E.sol
Total states:2193
3.117052
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x14e549F07733aa08FF14231F9e513Ecf64Bc9Ca7.sol
Total states:248
0.209615
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x85FE3913Bc913f5C67B9AE3B7cc2785746979fec.sol
Total states:5737
13.654688
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x83e28af3b0694cd5c0d5586ed272718cb9431d23.sol
Total states:8483
33.211912
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.251172
Transaction Length: 2
Severity: High
Contract: Karatefinance
Function name: increaseApproval(address,uint256)
PC address: 4860
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x83e28af3b0694cd5c0d5586ed272718cb9431d23.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:29.335734
Transaction Length: 2
Severity: Low
Contract: Karatefinance
Function name: increaseApproval(address,uint256)
PC address: 4873
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x83e28af3b0694cd5c0d5586ed272718cb9431d23.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x9273927b1527b7b8fd21296b27b0Ab77DdC00d63.sol
Total states:727
0.777642
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x121d3aA455278B9513B53A5a80B62eb8f5e4a9B8.sol
Total states:1607
3.587106
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.038290
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x121d3aA455278B9513B53A5a80B62eb8f5e4a9B8.sol:7

   ▒▒░░░░                 //
//

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x7092E9d7aa27a1D579D80ca027CF01beAc1c41c4.sol
Total states:60
894.00366
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.085318
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 391
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7092E9d7aa27a1D579D80ca027CF01beAc1c41c4.sol:3

*/

// COPIED FROM https://github.c

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.104484
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 542
Estimated Gas Usage: 729 - 3506
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7092E9d7aa27a1D579D80ca027CF01beAc1c41c4.sol:3

*/

// COPIED FROM https://github.c

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:08:29.354503
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1025
Estimated Gas Usage: 401 - 496
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7092E9d7aa27a1D579D80ca027CF01beAc1c41c4.sol:3

*/

// COPIED FROM https://github.c

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:08:45.000460
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1176
Estimated Gas Usage: 743 - 3520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7092E9d7aa27a1D579D80ca027CF01beAc1c41c4.sol:3

*/

// COPIED FROM https://github.c

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:10:39.117444
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1529
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7092E9d7aa27a1D579D80ca027CF01beAc1c41c4.sol:3

*/

// COPIED FROM https://github.c

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:11:02.370719
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1680
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7092E9d7aa27a1D579D80ca027CF01beAc1c41c4.sol:3

*/

// COPIED FROM https://github.c

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xfc8fab237b49f148de2ff4085c0e3a72dc8890e2.sol
Total states:699
0.652925
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xcbcfbdc2ebcb7bab8633a35a9fd60101a6c5293b.sol
Total states:3871
47.278501
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.282572
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xcbcfbdc2ebcb7bab8633a35a9fd60101a6c5293b.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.552694
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xcbcfbdc2ebcb7bab8633a35a9fd60101a6c5293b.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.966684
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xcbcfbdc2ebcb7bab8633a35a9fd60101a6c5293b.sol:275

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.476513
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xcbcfbdc2ebcb7bab8633a35a9fd60101a6c5293b.sol:10

 external returns (bo

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.235684
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xcbcfbdc2ebcb7bab8633a35a9fd60101a6c5293b.sol:10

pient, uint256 amount) external returns (boo

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xeedac64009067f8543d149ce1bea869b5312fb7f.sol
Total states:3274
7.783157
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xcc1c50dac6a91f428c43ae3b6193c8499b7b0ad3.sol
Total states:878
2.371212
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x208ba1670bca38e7ba89c4fee5b5d6eb1c7ee5e3.sol
Total states:108
1.912223
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.077904
Transaction Length: 0
Severity: High
Contract: CorfiPresale
Function name: constructor
PC address: 419
Estimated Gas Usage: 48886 - 231621
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x208ba1670bca38e7ba89c4fee5b5d6eb1c7ee5e3.sol:319

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xd5a822d0d4482d2915e738ba91e3cd0668b8a365.sol
Total states:76315
150.083388
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:57.848871
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 1815
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5a822d0d4482d2915e738ba91e3cd0668b8a365.sol:48

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:01.379851
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2036
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5a822d0d4482d2915e738ba91e3cd0668b8a365.sol:50

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:09.486439
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2113
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5a822d0d4482d2915e738ba91e3cd0668b8a365.sol:51

balances[_to]+=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:56.730157
Transaction Length: 2
Severity: High
Contract: Bitney
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5a822d0d4482d2915e738ba91e3cd0668b8a365.sol:48

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:03.322996
Transaction Length: 1
Severity: High
Contract: Bitney
Function name: transferFrom(address,address,uint256)
PC address: 2357
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5a822d0d4482d2915e738ba91e3cd0668b8a365.sol:50

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.278005
Transaction Length: 1
Severity: High
Contract: Bitney
Function name: transferFrom(address,address,uint256)
PC address: 2434
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5a822d0d4482d2915e738ba91e3cd0668b8a365.sol:51

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x5a0b2b3a4fc078df020e8b73aa81c629b5aae305.sol
Total states:610
1.547302
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x658459e4317B23Bb3BD224392baAC89A68b9885a.sol
Total states:2577
6.022319
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041134
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x658459e4317B23Bb3BD224392baAC89A68b9885a.sol:14

rent execution context, including the
 * se

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.525238
Transaction Length: 1
Severity: High
Contract: YvsTaxCollector
Function name: distribute()
PC address: 4786
Estimated Gas Usage: 3195 - 38182
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x658459e4317B23Bb3BD224392baAC89A68b9885a.sol:178

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x4a01524da788f8c33079b5c1803f9d89e55b3384.sol
Total states:3381
5.946535
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol
Total states:20787
1906.640177
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:29.842609
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeSub(uint256,uint256)
PC address: 820
Estimated Gas Usage: 309 - 404
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.606543
Transaction Length: 1
Severity: Low
Contract: Math
Function name: safeDiv(uint256,uint256)
PC address: 959
Estimated Gas Usage: 324 - 419
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.910416
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 985
Estimated Gas Usage: 382 - 477
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.502011
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 1128
Estimated Gas Usage: 496 - 591
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:105

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:36.095681
Transaction Length: 1
Severity: High
Contract: Interest
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 1424
Estimated Gas Usage: 570 - 665
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:207

mul(x, x)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:07:40.729475
Transaction Length: 1
Severity: High
Contract: Interest
Function name: rpow(uint256,uint256,uint256)
PC address: 1443
Estimated Gas Usage: 557 - 652
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:209

add(xx, half)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:46.337503
Transaction Length: 1
Severity: High
Contract: Interest
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 1473
Estimated Gas Usage: 718 - 813
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:213

mul(z, x)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:11:36.838931
Transaction Length: 1
Severity: High
Contract: Interest
Function name: safeSub(uint256,uint256)
PC address: 1594
Estimated Gas Usage: 309 - 404
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:11:38.901707
Transaction Length: 1
Severity: Low
Contract: Interest
Function name: safeDiv(uint256,uint256)
PC address: 1733
Estimated Gas Usage: 324 - 419
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.576116
Transaction Length: 1
Severity: High
Contract: Interest
Function name: rdiv(uint256,uint256)
PC address: 1759
Estimated Gas Usage: 405 - 500
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.380620
Transaction Length: 1
Severity: High
Contract: Interest
Function name: rdiv(uint256,uint256)
PC address: 2100
Estimated Gas Usage: 519 - 614
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:105

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:36.021280
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 6103
Estimated Gas Usage: 593 - 688
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:207

mul(x, x)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:08:00.127832
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: rpow(uint256,uint256,uint256)
PC address: 6122
Estimated Gas Usage: 513 - 608
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:209

add(xx, half)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:14.446062
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: chargeInterest(uint256,uint256,uint256)
PC address: 6152
Estimated Gas Usage: 741 - 836
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:213

mul(z, x)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:17:05.215198
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: safeSub(uint256,uint256)
PC address: 7439
Estimated Gas Usage: 399 - 494
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:17:07.650348
Transaction Length: 1
Severity: Low
Contract: Assessor
Function name: safeDiv(uint256,uint256)
PC address: 7824
Estimated Gas Usage: 369 - 464
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.042621
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: rdiv(uint256,uint256)
PC address: 8344
Estimated Gas Usage: 473 - 568
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:113

x * y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:17:08.917902
Transaction Length: 1
Severity: Low
Contract: Assessor
Function name: calcUpdateNAV()
PC address: 8638
Estimated Gas Usage: 1538 - 2244
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:371

navFeed.calcUpdateNAV()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.762332
Transaction Length: 1
Severity: High
Contract: Assessor
Function name: rdiv(uint256,uint256)
PC address: 9406
Estimated Gas Usage: 587 - 682
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x966F53cb928ab361714AF16E301e82fDf01bCbb9.sol:105

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x34FADFaABc6dB2dDF7D262d999e561c8F310B6D1.sol
Total states:2777
85.982613
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:57.384704
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: join(uint256)
PC address: 1719
Estimated Gas Usage: 13726 - 55097
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x34FADFaABc6dB2dDF7D262d999e561c8F310B6D1.sol:212

vat.move(msg.sender, address(this), mul(chi, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:19.100178
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: exit(uint256)
PC address: 3541
Estimated Gas Usage: 13283 - 54654
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x34FADFaABc6dB2dDF7D262d999e561c8F310B6D1.sol:218

vat.move(address(this), msg.sender, mul(chi, wad))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.336808
Transaction Length: 1
Severity: High
Contract: Pot
Function name: join(uint256)
PC address: 5026
Estimated Gas Usage: 12821 - 53626
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x34FADFaABc6dB2dDF7D262d999e561c8F310B6D1.sol:176

x * y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:15.295465
Transaction Length: 1
Severity: High
Contract: Pot
Function name: exit(uint256)
PC address: 5064
Estimated Gas Usage: 837 - 1122
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x34FADFaABc6dB2dDF7D262d999e561c8F310B6D1.sol:172

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xEDBABeA0Ea571cCE3Bae2643ca868E6C9646824D.sol
Total states:9871
21.658516
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040053
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xEDBABeA0Ea571cCE3Bae2643ca868E6C9646824D.sol:13

nsaction and its data. While these are gene

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.989312
Transaction Length: 2
Severity: High
Contract: RevolutionSoviet
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xEDBABeA0Ea571cCE3Bae2643ca868E6C9646824D.sol:143

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xf4eea0e5064acec26bc5def978deb5da42678321.sol
Total states:18192
42.104257
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.078083
Transaction Length: 2
Severity: High
Contract: ponzischeme
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xf4eea0e5064acec26bc5def978deb5da42678321.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.229053
Transaction Length: 2
Severity: High
Contract: ponzischeme
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xf4eea0e5064acec26bc5def978deb5da42678321.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xbec1ab370e3512eb2848be97865fb1dad5087ae0.sol
Total states:14630
48.721163
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.038378
Transaction Length: 0
Severity: High
Contract: YedgeToken
Function name: constructor
PC address: 117
Estimated Gas Usage: 5263 - 28036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xbec1ab370e3512eb2848be97865fb1dad5087ae0.sol:17

 function mul(uint256 a, uint256 b) interna

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.237434
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4102
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xbec1ab370e3512eb2848be97865fb1dad5087ae0.sol:48

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:34.734948
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4115
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0xbec1ab370e3512eb2848be97865fb1dad5087ae0.sol:49

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xc0cf2cbd0c6bb1da4c671fbb07d40e88676dbe82.sol
Total states:1689
20.176524
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:15.715063
Transaction Length: 1
Severity: Low
Contract: PickleMigrator
Function name: migrateToUniswapWithPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)
PC address: 871
Estimated Gas Usage: 7291 - 112872
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0xc0cf2cbd0c6bb1da4c671fbb07d40e88676dbe82.sol:206

IUniswapV2ERC20(sushiPair).transferFrom(msg.sender, address(this), value)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:19.436624
Transaction Length: 1
Severity: Low
Contract: PickleMigrator
Function name: migrateToUniswapWithPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1128
Estimated Gas Usage: 9403 - 149971
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0xc0cf2cbd0c6bb1da4c671fbb07d40e88676dbe82.sol:207

IUniswapV2ERC20(sushiPair).approve(address(sushiswapRouter), value)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:09.345632
Transaction Length: 1
Severity: Low
Contract: PickleMigrator
Function name: migrateToUniswap(address,address,uint256)
PC address: 1516
Estimated Gas Usage: 7684 - 113781
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0xc0cf2cbd0c6bb1da4c671fbb07d40e88676dbe82.sol:208

sushiswapRouter.removeLiquidity(
            token0,
            token1,
            value,
            0,
            0,
            address(this),
            now + 60
        )

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:12.586328
Transaction Length: 1
Severity: Low
Contract: PickleMigrator
Function name: migrateToUniswapWithPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)
PC address: 4383
Estimated Gas Usage: 3515 - 39543
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0xc0cf2cbd0c6bb1da4c671fbb07d40e88676dbe82.sol:186

IUniswapV2ERC20(pair).permit(
            msg.sender,
            address(this),
            value,
            deadline,
            v,
            r,
            s
        )

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xB6BEE379CCeB482160f83e0e5018C81bb3807Ede.sol
Total states:6691
8.398176
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.039713
Transaction Length: 0
Severity: Low
Contract: UrnHandler
Function name: constructor
PC address: 223
Estimated Gas Usage: 1003 - 4059
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0xB6BEE379CCeB482160f83e0e5018C81bb3807Ede.sol:74

VatLike(vat).hope(msg.sender)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xececee5e4395bd70998f30b1413544910fa1e756.sol
Total states:8045
15.943455
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039167
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xececee5e4395bd70998f30b1413544910fa1e756.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.071920
Transaction Length: 2
Severity: High
Contract: YFW
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xececee5e4395bd70998f30b1413544910fa1e756.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x35e78b3982e87ecfd5b3f3265b601c046cdbe232.sol
Total states:1576
2.94022
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039055
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x35e78b3982e87ecfd5b3f3265b601c046cdbe232.sol:11

luding the
 * sender of the transaction and

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xd3fea825fdfefd03b0cad45487421b33ca2210a3.sol
Total states:3661
5.885722
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040264
Transaction Length: 0
Severity: High
Contract: Amaterasu
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd3fea825fdfefd03b0cad45487421b33ca2210a3.sol:24

ternal view  returns (bytes memory) {

    

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040723
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd3fea825fdfefd03b0cad45487421b33ca2210a3.sol:24

ternal view  returns (bytes memory) {

    

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xed551f18eefeeb381267a4c5658fb8c4540c1dcb.sol
Total states:8045
15.90454
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039288
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xed551f18eefeeb381267a4c5658fb8c4540c1dcb.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.050561
Transaction Length: 2
Severity: High
Contract: YFLIVE
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xed551f18eefeeb381267a4c5658fb8c4540c1dcb.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xd73573037c43bf23d8093918a8b1fedeb5a5c52b.sol
Total states:7984
18.999633
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.139407
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4094
Estimated Gas Usage: 992 - 1467
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd73573037c43bf23d8093918a8b1fedeb5a5c52b.sol:67

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xd31eba39be33893b4ceb34ea3a6c4305fc8b77e0.sol
Total states:9901
21.024424
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.029904
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd31eba39be33893b4ceb34ea3a6c4305fc8b77e0.sol:9

.data, they should not be accessed in such 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.111535
Transaction Length: 2
Severity: High
Contract: DimsumToken
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd31eba39be33893b4ceb34ea3a6c4305fc8b77e0.sol:126

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xe68301308da0f1678a0caa2eeb549c4f4c35b905.sol
Total states:23078
7776.981483
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.934665
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xe68301308da0f1678a0caa2eeb549c4f4c35b905.sol:137

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:25.036791
Transaction Length: 2
Severity: High
Contract: PEARSWAP
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xe68301308da0f1678a0caa2eeb549c4f4c35b905.sol:137

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x90b397f0962c3bc624f8ebc810c1e68655a4d0d3.sol
Total states:3625
6.123713
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.037382
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x90b397f0962c3bc624f8ebc810c1e68655a4d0d3.sol:25


 * checks.

 *

 * Arithmetic operations i

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039857
Transaction Length: 0
Severity: High
Contract: SaffronLPBalanceToken
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x90b397f0962c3bc624f8ebc810c1e68655a4d0d3.sol:25


 * checks.

 *

 * Arithmetic operations i

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x61223a7e66dc4715ef70bb7d07f95d5b051d2d06.sol
Total states:4624
8.148899
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039928
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x61223a7e66dc4715ef70bb7d07f95d5b051d2d06.sol:18

or verification at Etherscan.io on 2020-09-

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x1b54a20aa52cf36c0b115d078733a6b23b92a229.sol
Total states:1237
4.748955
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.896343
Transaction Length: 0
Severity: High
Contract: DEDXToken
Function name: constructor
PC address: 578
Estimated Gas Usage: 45086 - 211487
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x1b54a20aa52cf36c0b115d078733a6b23b92a229.sol:133

tokens * 10 ** 18

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x2B8Dd0a4757b796416B14223DCDad9C1775860Dd.sol
Total states:2143
1.794599
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x868801feb513bba4e16c84a006157850b56d5199.sol
Total states:43330
131.849516
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.586533
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4252
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x868801feb513bba4e16c84a006157850b56d5199.sol:91

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:36.419638
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4265
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x868801feb513bba4e16c84a006157850b56d5199.sol:92

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.936152
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 5311
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x868801feb513bba4e16c84a006157850b56d5199.sol:91

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.412047
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 5324
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x868801feb513bba4e16c84a006157850b56d5199.sol:92

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.891097
Transaction Length: 2
Severity: High
Contract: Yasion
Function name: increaseApproval(address,uint256)
PC address: 6116
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x868801feb513bba4e16c84a006157850b56d5199.sol:91

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:34.890893
Transaction Length: 2
Severity: Low
Contract: Yasion
Function name: increaseApproval(address,uint256)
PC address: 6129
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0x868801feb513bba4e16c84a006157850b56d5199.sol:92

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol
Total states:18307
89.418898
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.137201
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2327
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:14.940673
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2340
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:94

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.955785
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2798
Estimated Gas Usage: 933 - 1408
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:15.189632
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2811
Estimated Gas Usage: 943 - 1418
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:94

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:05.018115
Transaction Length: 1
Severity: Low
Contract: JpymToken
Function name: transfer(address,uint256)
PC address: 4326
Estimated Gas Usage: 929 - 1214
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:42.383210
Transaction Length: 2
Severity: Low
Contract: JpymToken
Function name: transferFrom(address,address,uint256)
PC address: 4326
Estimated Gas Usage: 1579 - 2244
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:76

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.757519
Transaction Length: 2
Severity: High
Contract: JpymToken
Function name: increaseApproval(address,uint256)
PC address: 4886
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:46.628047
Transaction Length: 2
Severity: Low
Contract: JpymToken
Function name: increaseApproval(address,uint256)
PC address: 4899
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop9/0xac9f31a463f030746cd0117665921c3c7f849d4a.sol:94

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x4fd84194d8ebbb46e40f704a6fd295577a302eb6.sol
Total states:3871
43.712819
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.294320
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x4fd84194d8ebbb46e40f704a6fd295577a302eb6.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.526776
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x4fd84194d8ebbb46e40f704a6fd295577a302eb6.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.896542
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x4fd84194d8ebbb46e40f704a6fd295577a302eb6.sol:275

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.283590
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x4fd84194d8ebbb46e40f704a6fd295577a302eb6.sol:10

 external returns (bo

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.087290
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x4fd84194d8ebbb46e40f704a6fd295577a302eb6.sol:10

pient, uint256 amount) external returns (boo

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x46c96ca00334cbc832f421b5d066e00e281c6d67.sol
Total states:53557
109.052076
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.858176
Transaction Length: 1
Severity: High
Contract: KOMP
Function name: register(string)
PC address: 2171
Estimated Gas Usage: 428 - 523
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x46c96ca00334cbc832f421b5d066e00e281c6d67.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.945813
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 5537
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x46c96ca00334cbc832f421b5d066e00e281c6d67.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.824632
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6860
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x46c96ca00334cbc832f421b5d066e00e281c6d67.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.981649
Transaction Length: 2
Severity: High
Contract: FreezeToken
Function name: increaseApproval(address,uint256)
PC address: 7549
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x46c96ca00334cbc832f421b5d066e00e281c6d67.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.944205
Transaction Length: 2
Severity: High
Contract: KOMP
Function name: increaseApproval(address,uint256)
PC address: 9131
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x46c96ca00334cbc832f421b5d066e00e281c6d67.sol:47

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x267ae47dabb185f2999dffe550161d14364fcf7c.sol
Total states:31613
98.231395
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.383618
Transaction Length: 1
Severity: High
Contract: YFG
Function name: approveAndCall(address,uint256,bytes)
PC address: 1799
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x267ae47dabb185f2999dffe550161d14364fcf7c.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.667634
Transaction Length: 2
Severity: High
Contract: YFG
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 4618
Estimated Gas Usage: 6015 - 43128
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x267ae47dabb185f2999dffe550161d14364fcf7c.sol:134

nonces[holder]++

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:21.894109
Transaction Length: 1
Severity: Medium
Contract: YFG
Function name: approveAndCall(address,uint256,bytes)
PC address: 6543
Estimated Gas Usage: 8284 - 32451
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop9/0x267ae47dabb185f2999dffe550161d14364fcf7c.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), data)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.775691
Transaction Length: 1
Severity: High
Contract: YFG
Function name: transferFrom(address,address,uint256)
PC address: 7630
Estimated Gas Usage: 1671 - 2526
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x267ae47dabb185f2999dffe550161d14364fcf7c.sol:52

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x7D82C665EeA8b1E336D3B7508F9F3E5d52f1b661.sol
Total states:1947
8.505763
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.009725
Transaction Length: 1
Severity: Low
Contract: BaseUpgradeabilityProxy
Function name: fallback
PC address: 97
Estimated Gas Usage: 557 - 2956
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: ../../contracts/noloop/noloop9/0x7D82C665EeA8b1E336D3B7508F9F3E5d52f1b661.sol:98

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.987704
Transaction Length: 1
Severity: High
Contract: BaseAdminUpgradeabilityProxy
Function name: upgradeToAndCall(address,bytes)
PC address: 309
Estimated Gas Usage: 327 - 422
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7D82C665EeA8b1E336D3B7508F9F3E5d52f1b661.sol:3



*/



/**

 *Submitted for verifi

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:07.238205
Transaction Length: 1
Severity: Low
Contract: BaseAdminUpgradeabilityProxy
Function name: fallback
PC address: 1699
Estimated Gas Usage: 1229 - 3628
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: ../../contracts/noloop/noloop9/0x7D82C665EeA8b1E336D3B7508F9F3E5d52f1b661.sol:98

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x4df9db04a7212b0dfed2659200dd77812bcbdb1f.sol
Total states:3460
11.079558
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x0c7be37b00c1d3127c09da66fadf3d6eb600dece.sol
Total states:18855
43.022776
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.400472
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x0c7be37b00c1d3127c09da66fadf3d6eb600dece.sol:123

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.205000
Transaction Length: 2
Severity: High
Contract: MOONC
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x0c7be37b00c1d3127c09da66fadf3d6eb600dece.sol:123

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xadc9cd0c98795af6beddfa29126833fb91d00295.sol
Total states:1555
2.099937
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039782
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xadc9cd0c98795af6beddfa29126833fb91d00295.sol:24

n context, including the

 * sender of the 

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x192c2d3a3f5c535784ef5691a725d13c01603403.sol
Total states:18192
41.307875
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.797275
Transaction Length: 2
Severity: High
Contract: wing
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x192c2d3a3f5c535784ef5691a725d13c01603403.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.018835
Transaction Length: 2
Severity: High
Contract: wing
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x192c2d3a3f5c535784ef5691a725d13c01603403.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x2ee856843bb65c244f527ad302d6d2853921727e.sol
Total states:8897
22.232453
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.117443
Transaction Length: 0
Severity: High
Contract: eVault
Function name: constructor
PC address: 234
Estimated Gas Usage: 6824 - 64159
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2ee856843bb65c244f527ad302d6d2853921727e.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.840323
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2ee856843bb65c244f527ad302d6d2853921727e.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xd5f2c713354de987af07dea8e88d25acfd4c0f13.sol
Total states:18192
41.130487
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.396011
Transaction Length: 2
Severity: High
Contract: chadsvc
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5f2c713354de987af07dea8e88d25acfd4c0f13.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.168867
Transaction Length: 2
Severity: High
Contract: chadsvc
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xd5f2c713354de987af07dea8e88d25acfd4c0f13.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x59301d7dd9a87155916dbd9dd55a72e400167376.sol
Total states:18192
40.936268
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.752033
Transaction Length: 2
Severity: High
Contract: cyberpunk
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x59301d7dd9a87155916dbd9dd55a72e400167376.sol:106

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.960577
Transaction Length: 2
Severity: High
Contract: cyberpunk
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x59301d7dd9a87155916dbd9dd55a72e400167376.sol:108

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x679024a6328d24BA5BD566C4D6C87DbFcE005724.sol
Total states:983
0.438401
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol
Total states:46840
104.068413
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047183
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.974329
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.954455
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.044635
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.913319
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.979792
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.942772
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.074334
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.952392
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.039262
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.124385
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.087923
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.848174
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.785625
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.677456
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.799549
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.737369
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.878933
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.016358
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x7c7676f11184BA00EC760116e0b5b51668961c6F.sol
Total states:2267
4.579661
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x65bbc1d8eb15cdd17191b2db0840ad7a5c49055e.sol
Total states:3399
5.710931
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xe5cc183655b4ddbe60a397423086b6a4a148c7a8.sol
Total states:432
0.667943
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xc2620af79b99c973e2d7515a534e8c77351c04d0.sol
Total states:1111
0.686779
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x1E9DC5d843731D333544e63B2B2082D21EF78ed3.sol
Total states:13051
19.127066
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.981707
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 5473
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x1E9DC5d843731D333544e63B2B2082D21EF78ed3.sol:150

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x462e61a7c23b2d9919f7f5e8473b16eebb8bde1e.sol
Total states:2733
7.348612
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.729428
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 4168
Estimated Gas Usage: 1612 - 2603
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x462e61a7c23b2d9919f7f5e8473b16eebb8bde1e.sol:280

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.513119
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4836
Estimated Gas Usage: 1608 - 2599
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop9/0x462e61a7c23b2d9919f7f5e8473b16eebb8bde1e.sol:251

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.309509
Transaction Length: 1
Severity: High
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3374 - 38551
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x462e61a7c23b2d9919f7f5e8473b16eebb8bde1e.sol:95

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x03e8f56ad0d759bcfff960863388bfdb2efd1579.sol
Total states:18855
40.613943
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.015804
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x03e8f56ad0d759bcfff960863388bfdb2efd1579.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.927910
Transaction Length: 2
Severity: High
Contract: YFICASH
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x03e8f56ad0d759bcfff960863388bfdb2efd1579.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x7354f36fd74a656b4db8429c3fd937b99cd69e45.sol
Total states:5894
12.262249
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.606833
Transaction Length: 1
Severity: High
Contract: Staker
Function name: price()
PC address: 13889
Estimated Gas Usage: 6201 - 110737
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x7354f36fd74a656b4db8429c3fd937b99cd69e45.sol:24

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x61b10135639885e00bf4d42de2fe5f2e28abad75.sol
Total states:18855
40.198876
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.810882
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x61b10135639885e00bf4d42de2fe5f2e28abad75.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.787062
Transaction Length: 2
Severity: High
Contract: YFElite
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x61b10135639885e00bf4d42de2fe5f2e28abad75.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x43f39935A10668540Ae465B8CA108F411b1d5cf5.sol
Total states:2015
455.951288
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.986081
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 391
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x43f39935A10668540Ae465B8CA108F411b1d5cf5.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.628028
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 542
Estimated Gas Usage: 729 - 3506
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x43f39935A10668540Ae465B8CA108F411b1d5cf5.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:01.112307
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1025
Estimated Gas Usage: 401 - 496
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x43f39935A10668540Ae465B8CA108F411b1d5cf5.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:14.840506
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1176
Estimated Gas Usage: 743 - 3520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x43f39935A10668540Ae465B8CA108F411b1d5cf5.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:06.929347
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1529
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x43f39935A10668540Ae465B8CA108F411b1d5cf5.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:22.187474
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1680
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x43f39935A10668540Ae465B8CA108F411b1d5cf5.sol:3

*/

/**
 *Submitted for verificatio

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x5f64ab1544d28732f0a24f4713c2c8ec0da089f0.sol
Total states:1580
2.718025
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.102556
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0x5f64ab1544d28732f0a24f4713c2c8ec0da089f0.sol:12

 While these are generally available
 * via

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x1f1533d0135459e47eb562c848d60264457042dc.sol
Total states:1239
0.627889
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xf59142b05b8c02cdd8ea3066152c38423179e6cd.sol
Total states:23078
7784.660961
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.797709
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xf59142b05b8c02cdd8ea3066152c38423179e6cd.sol:135

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:49.766958
Transaction Length: 2
Severity: High
Contract: LollipopSwap
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xf59142b05b8c02cdd8ea3066152c38423179e6cd.sol:135

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xe7be03e80e546e69d2225d6a56faf3fdd4ed5970.sol
Total states:8045
17.67153
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039352
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xe7be03e80e546e69d2225d6a56faf3fdd4ed5970.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.456998
Transaction Length: 2
Severity: High
Contract: YFIN
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop9/0xe7be03e80e546e69d2225d6a56faf3fdd4ed5970.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xa83d535d460ae8fcf602a0288b63c3d31211f022.sol
Total states:1421
0.775634
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0xb6ddc6638958dd3f1ddaba1d0dd9c4d1d9875412.sol
Total states:2481
1.317614
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop9/0x62fd07f05ffad28762f05426195115c194dc56a9.sol
Total states:238
0.829926
The analysis was completed successfully. No issues were detected.
