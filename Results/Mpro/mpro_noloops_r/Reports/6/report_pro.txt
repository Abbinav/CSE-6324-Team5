$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xdf33f62007f5bdd78cabf0ada5009ae42620ae2b.sol
Total states:23995
101.850073
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.287416
Transaction Length: 1
Severity: High
Contract: Crowdsale
Function name: fallback()
PC address: 1508
Estimated Gas Usage: 6553 - 26648
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdf33f62007f5bdd78cabf0ada5009ae42620ae2b.sol:37

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.481993
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3645
Estimated Gas Usage: 1025 - 1500
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdf33f62007f5bdd78cabf0ada5009ae42620ae2b.sol:57

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.760919
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 4075
Estimated Gas Usage: 1025 - 1500
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdf33f62007f5bdd78cabf0ada5009ae42620ae2b.sol:57

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x03DB2C9cd4Fcfa6d4D641166D3B4FbB5cc447Ce6.sol
Total states:2175
2.683799
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.307518
Transaction Length: 1
Severity: Low
Contract: UpgradeabilityProxy
Function name: fallback
PC address: 274
Estimated Gas Usage: 681 - 3503
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy))
--------------------
In file: ../../new_contracts/0x03DB2C9cd4Fcfa6d4D641166D3B4FbB5cc447Ce6.sol:261

delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x6b8b3993cfb253968894c8ecb430caf2455b51aa.sol
Total states:1372
53.045743
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xcb5c7656523d533fac0658ac359ed6d44068527a.sol
Total states:8045
16.977327
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.044647
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xcb5c7656523d533fac0658ac359ed6d44068527a.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.018648
Transaction Length: 2
Severity: High
Contract: BTT
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xcb5c7656523d533fac0658ac359ed6d44068527a.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x73133781e37d2c99c9868608410877b4e096fe0f.sol
Total states:7732
28.255415
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:16.832230
Transaction Length: 2
Severity: High
Contract: HOLDI
Function name: burnFrom(address,uint256)
PC address: 3508
Estimated Gas Usage: 7546 - 28781
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x73133781e37d2c99c9868608410877b4e096fe0f.sol:151

allowed[_from][msg.sender] -= _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:21.444407
Transaction Length: 2
Severity: High
Contract: HOLDI
Function name: burnFrom(address,uint256)
PC address: 3524
Estimated Gas Usage: 12979 - 54214
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x73133781e37d2c99c9868608410877b4e096fe0f.sol:152

_totalSupply -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x7ab68eb7359f8a90bab880a2759263fe7e3cccc4.sol
Total states:2558
9.686499
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.807688
Transaction Length: 2
Severity: High
Contract: ESP
Function name: transferFrom(address,address,uint256)
PC address: 1895
Estimated Gas Usage: 1942 - 2607
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7ab68eb7359f8a90bab880a2759263fe7e3cccc4.sol:105

balanceOf[_to] + _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x34870322f473830d28d28bef7f1d4178edf832d8.sol
Total states:9871
19.224904
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.034100
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x34870322f473830d28d28bef7f1d4178edf832d8.sol:14

ansaction and its data. While these are gen

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.163904
Transaction Length: 2
Severity: High
Contract: DollarToken
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x34870322f473830d28d28bef7f1d4178edf832d8.sol:144

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xb1e8dd67a9ce15b3c7be9951e9207a4c8c12993d.sol
Total states:18192
41.512685
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.479390
Transaction Length: 2
Severity: High
Contract: SunBalancer
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb1e8dd67a9ce15b3c7be9951e9207a4c8c12993d.sol:65

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.584827
Transaction Length: 2
Severity: High
Contract: SunBalancer
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb1e8dd67a9ce15b3c7be9951e9207a4c8c12993d.sol:66

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol
Total states:3604
64.079886
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:29.658491
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeSub(uint256,uint256)
PC address: 820
Estimated Gas Usage: 309 - 404
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.760421
Transaction Length: 1
Severity: Low
Contract: Math
Function name: safeDiv(uint256,uint256)
PC address: 959
Estimated Gas Usage: 324 - 419
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.089243
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 985
Estimated Gas Usage: 382 - 477
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.395411
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 1128
Estimated Gas Usage: 496 - 591
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:105

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:26.969476
Transaction Length: 1
Severity: High
Contract: Reserve
Function name: safeSub(uint256,uint256)
PC address: 3211
Estimated Gas Usage: 376 - 471
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:29.170470
Transaction Length: 1
Severity: Low
Contract: Reserve
Function name: safeDiv(uint256,uint256)
PC address: 3360
Estimated Gas Usage: 303 - 398
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:117

x / y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:29.776864
Transaction Length: 1
Severity: Low
Contract: Reserve
Function name: balance()
PC address: 3509
Estimated Gas Usage: 1431 - 2137
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:237

shelf.balanceRequest()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.472218
Transaction Length: 1
Severity: High
Contract: Reserve
Function name: rdiv(uint256,uint256)
PC address: 4293
Estimated Gas Usage: 428 - 523
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.162412
Transaction Length: 1
Severity: High
Contract: Reserve
Function name: rdiv(uint256,uint256)
PC address: 4576
Estimated Gas Usage: 542 - 637
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x573a8a054e0C80F0E9B1e96E8a2198BB46c999D6.sol:105

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol
Total states:1421
2.499562
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.289955
Transaction Length: 1
Severity: Low
Contract: Jug
Function name: drip(bytes32)
PC address: 2706
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol:161

vat.ilks(ilk)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x33674fac4069109e21329437ad6ae8c92b82e3a0.sol
Total states:3647
5.79452
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol
Total states:1330
128.796756
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.967085
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: canHandle(address,address,uint256,uint256,bytes)
PC address: 288
Estimated Gas Usage: 416 - 511
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol:3

*/

// File: contracts/libs/SafeMat

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.090201
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 701
Estimated Gas Usage: 480 - 575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol:3

*/

// File: contracts/libs/SafeMat

--------------------

==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:03.331168
Transaction Length: 1
Severity: Medium
Contract: OneinchHandler
Function name: receive()
PC address: 812
Estimated Gas Usage: 138 - 233
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol:390

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:15.120246
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1164
Estimated Gas Usage: 2623 - 37280
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol:5

ontracts/libs/SafeMat

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:34.474916
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1166
Estimated Gas Usage: 2623 - 37280
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol:3

*/

// File: contracts/libs/SafeMath

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:24.975002
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1312
Estimated Gas Usage: 1724 - 4501
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol:5

ontracts/libs/SafeMat

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:44.038398
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1314
Estimated Gas Usage: 1724 - 4501
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xdcce5c7b7caf980fd8fadd6d89d68f6003468197.sol:3

*/

// File: contracts/libs/SafeMath

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xc08c44110b9b4cfeb3fab842ef9be4f59c0b5990.sol
Total states:2617
5.264544
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.090093
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: release(address)
PC address: 749
Estimated Gas Usage: 477 - 3529
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc08c44110b9b4cfeb3fab842ef9be4f59c0b5990.sol:336

function owner() public view returns (address) {
        return _owner;
    }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x7a9e0d75e7ee0e4bcf96e2eebfb41c1d3a00b104.sol
Total states:481
3.934582
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x89F070eB998Ee1ed7dC92eD165F1043DD0CfcEd4.sol
Total states:12284
255.333016
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.384444
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x89F070eB998Ee1ed7dC92eD165F1043DD0CfcEd4.sol:76

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:35.344063
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x89F070eB998Ee1ed7dC92eD165F1043DD0CfcEd4.sol:56

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.544763
Transaction Length: 1
Severity: High
Contract: CRIPToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1483
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x89F070eB998Ee1ed7dC92eD165F1043DD0CfcEd4.sol:3



*/



//pragma solidity ^0.4.24;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:25.253024
Transaction Length: 1
Severity: Medium
Contract: CRIPToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 4325
Estimated Gas Usage: 8823 - 34729
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x89F070eB998Ee1ed7dC92eD165F1043DD0CfcEd4.sol:416

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:27.262765
Transaction Length: 1
Severity: High
Contract: CRIPToken
Function name: safeMul(uint256,uint256)
PC address: 4362
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x89F070eB998Ee1ed7dC92eD165F1043DD0CfcEd4.sol:76

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:11.805186
Transaction Length: 1
Severity: High
Contract: CRIPToken
Function name: safeAdd(uint256,uint256)
PC address: 4546
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x89F070eB998Ee1ed7dC92eD165F1043DD0CfcEd4.sol:56

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xb2886f8b28d6b382ac21d5d6c43663caa1b75987.sol
Total states:1995
463.420376
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.081737
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 391
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb2886f8b28d6b382ac21d5d6c43663caa1b75987.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.345288
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 542
Estimated Gas Usage: 729 - 3506
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb2886f8b28d6b382ac21d5d6c43663caa1b75987.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:04.150272
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1025
Estimated Gas Usage: 401 - 496
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb2886f8b28d6b382ac21d5d6c43663caa1b75987.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:15.565739
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1176
Estimated Gas Usage: 743 - 3520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb2886f8b28d6b382ac21d5d6c43663caa1b75987.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:04.313666
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1529
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb2886f8b28d6b382ac21d5d6c43663caa1b75987.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:18.176812
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1680
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb2886f8b28d6b382ac21d5d6c43663caa1b75987.sol:3

*/

// File: @openzeppelin/contract

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x4a7adcb083fe5e3d6b58edc3d260e2e61668e7a2.sol
Total states:10248
18.302142
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.383980
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4470
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x4a7adcb083fe5e3d6b58edc3d260e2e61668e7a2.sol:44

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x8d587a2386b9ea792a4c6e1744199349db3bc269.sol
Total states:1543
4.692031
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.050872
Transaction Length: 0
Severity: High
Contract: DeflationaryERC20
Function name: constructor
PC address: 139
Estimated Gas Usage: 5724 - 28827
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x8d587a2386b9ea792a4c6e1744199349db3bc269.sol:24

  return msg.sender;

    }



    function

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x59a04d94a3b80e8ad294d3337147a26e53aaffff.sol
Total states:19492
58.29745
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.863514
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4101
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x59a04d94a3b80e8ad294d3337147a26e53aaffff.sol:69

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:28.640724
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4114
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x59a04d94a3b80e8ad294d3337147a26e53aaffff.sol:70

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.684053
Transaction Length: 2
Severity: High
Contract: SocialRocket
Function name: increaseApproval(address,uint256)
PC address: 7957
Estimated Gas Usage: 1497 - 2302
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x59a04d94a3b80e8ad294d3337147a26e53aaffff.sol:69

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:18.843751
Transaction Length: 2
Severity: Low
Contract: SocialRocket
Function name: increaseApproval(address,uint256)
PC address: 7970
Estimated Gas Usage: 1507 - 2312
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x59a04d94a3b80e8ad294d3337147a26e53aaffff.sol:70

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xe692c8d72bd4ac7764090d54842a305546dd1de5.sol
Total states:18001
93.526346
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.062155
Transaction Length: 1
Severity: High
Contract: BlockSwapAssetV2
Function name: Swapout(uint256,string)
PC address: 1404
Estimated Gas Usage: 367 - 462
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe692c8d72bd4ac7764090d54842a305546dd1de5.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.324751
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe692c8d72bd4ac7764090d54842a305546dd1de5.sol:147

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.814506
Transaction Length: 2
Severity: High
Contract: BlockSwapAssetV2
Function name: increaseAllowance(address,uint256)
PC address: 5752
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe692c8d72bd4ac7764090d54842a305546dd1de5.sol:147

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x78426Ee0749Bd02c99DEF802589195F9CDBBcFB9.sol
Total states:60
0.784728
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x48381Dec5f3438Ef2dC95Ca08237397565D80D80.sol
Total states:3399
5.786646
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x0c3E69eF29cbD32e0732409B748ef317a5F4f0a5.sol
Total states:9014
19.268988
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.455624
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x0c3E69eF29cbD32e0732409B748ef317a5F4f0a5.sol:109

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xe3ccc23abd51a6d8de4696a6e17035456eb16444.sol
Total states:1995
471.679934
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.029642
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 391
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe3ccc23abd51a6d8de4696a6e17035456eb16444.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.580135
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 542
Estimated Gas Usage: 729 - 3506
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe3ccc23abd51a6d8de4696a6e17035456eb16444.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:14.387911
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1025
Estimated Gas Usage: 401 - 496
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe3ccc23abd51a6d8de4696a6e17035456eb16444.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:26.826290
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1176
Estimated Gas Usage: 743 - 3520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe3ccc23abd51a6d8de4696a6e17035456eb16444.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:14.147797
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1529
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe3ccc23abd51a6d8de4696a6e17035456eb16444.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:27.588285
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1680
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe3ccc23abd51a6d8de4696a6e17035456eb16444.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x14d68678eADf7781F52F675BFc782A2C966249d3.sol
Total states:1653
3.303744
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.060593
Transaction Length: 1
Severity: Low
Contract: Collector
Function name: seize(uint256)
PC address: 1275
Estimated Gas Usage: 1503 - 2304
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x14d68678eADf7781F52F675BFc782A2C966249d3.sol:180

pile.debt(loan)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x6f83c2381642c215c47d8c52baa6fadd6b67e326.sol
Total states:1203
13.544865
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:03.224009
Transaction Length: 1
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 374
Estimated Gas Usage: 256 - 351
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x6f83c2381642c215c47d8c52baa6fadd6b67e326.sol:69

_batches[b]

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:09.937029
Transaction Length: 2
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 374
Estimated Gas Usage: 256 - 351
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x6f83c2381642c215c47d8c52baa6fadd6b67e326.sol:69

_batches[b]

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.050362
Transaction Length: 1
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 686
Estimated Gas Usage: 2977 - 4203
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x6f83c2381642c215c47d8c52baa6fadd6b67e326.sol:71

_token.transfer(_beneficiary, _batches[b].amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.501942
Transaction Length: 2
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 686
Estimated Gas Usage: 2977 - 4203
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x6f83c2381642c215c47d8c52baa6fadd6b67e326.sol:71

_token.transfer(_beneficiary, _batches[b].amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x196a17b539bd7f273e117e55fb1997effa024224.sol
Total states:18192
39.639924
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.307227
Transaction Length: 2
Severity: High
Contract: chadsvccontract
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x196a17b539bd7f273e117e55fb1997effa024224.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:30.932651
Transaction Length: 2
Severity: High
Contract: chadsvccontract
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x196a17b539bd7f273e117e55fb1997effa024224.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol
Total states:46840
101.08956
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.049479
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.910907
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.953016
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.949924
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.909823
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.959679
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.859467
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.004628
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.894632
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.935972
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.997816
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.957205
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.789800
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.199438
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.517094
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.685602
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.598668
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.697342
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.746820
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x37478677a82626eB7EC5407dbD8d87DAE20138aD.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xed03421a257a4d9a9623b4d59e85ba9ca5356cd4.sol
Total states:18192
41.348898
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.275001
Transaction Length: 2
Severity: High
Contract: p0nziprotocol
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xed03421a257a4d9a9623b4d59e85ba9ca5356cd4.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.406579
Transaction Length: 2
Severity: High
Contract: p0nziprotocol
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xed03421a257a4d9a9623b4d59e85ba9ca5356cd4.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xA70d82F271B38e931c5c16173fCF73560e21e4D7.sol
Total states:725
3.880388
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.158878
Transaction Length: 0
Severity: High
Contract: FrontierTokenVesting
Function name: constructor
PC address: 518
Estimated Gas Usage: 23496 - 107986
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xA70d82F271B38e931c5c16173fCF73560e21e4D7.sol:555

now + 30 * day

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x6a71f460d90eef13980a00c98481bbfa8316a51b.sol
Total states:1473
7.787887
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.042339
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x6a71f460d90eef13980a00c98481bbfa8316a51b.sol:24

cution context, including the

 * sender of

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.121409
Transaction Length: 0
Severity: High
Contract: sVault
Function name: constructor
PC address: 234
Estimated Gas Usage: 6824 - 64159
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x6a71f460d90eef13980a00c98481bbfa8316a51b.sol:9

node_modules\@o

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x7B0F66fA5cf5cc28280c1e7051af881E06579362.sol
Total states:9149
20.463837
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.653677
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7B0F66fA5cf5cc28280c1e7051af881E06579362.sol:143

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x9be6f1ad00431e80c69cb31f59caa26dc92af9fc.sol
Total states:8045
15.001282
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041469
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x9be6f1ad00431e80c69cb31f59caa26dc92af9fc.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.988588
Transaction Length: 2
Severity: High
Contract: YFTOP
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x9be6f1ad00431e80c69cb31f59caa26dc92af9fc.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x94371dae62e159b563ec6810ad7f752239e6e50c.sol
Total states:806
1.635493
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x001f265fcf3dc40f373a44bac600c6cb1eea64bd.sol
Total states:9014
15.995876
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.919100
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x001f265fcf3dc40f373a44bac600c6cb1eea64bd.sol:103

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol
Total states:46840
101.735321
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048966
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.905060
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.955916
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.957303
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.909319
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.965611
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.883805
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.038439
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.897223
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.965980
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.021447
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.010175
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.821567
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.193259
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.551992
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.717583
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.615612
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.748614
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.789986
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x036DEdfab9B806F1c1c17dFaaA12602c95Fb8e28.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x3C23E612F4C19f1A21c1613e09AD71433c3FEDf4.sol
Total states:30
0.12791
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xe26de319e8a434c71711109c598f304f4c773ad0.sol
Total states:88186
148.603704
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:51.335770
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 1815
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe26de319e8a434c71711109c598f304f4c773ad0.sol:46

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:54.837494
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2036
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe26de319e8a434c71711109c598f304f4c773ad0.sol:48

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:00.741398
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2113
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe26de319e8a434c71711109c598f304f4c773ad0.sol:49

balances[_to]+=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:05.861180
Transaction Length: 2
Severity: High
Contract: VGSToken
Function name: transferFrom(address,address,uint256)
PC address: 2176
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe26de319e8a434c71711109c598f304f4c773ad0.sol:46

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:03.766571
Transaction Length: 1
Severity: High
Contract: VGSToken
Function name: transferFrom(address,address,uint256)
PC address: 2397
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe26de319e8a434c71711109c598f304f4c773ad0.sol:48

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.724766
Transaction Length: 1
Severity: High
Contract: VGSToken
Function name: transferFrom(address,address,uint256)
PC address: 2474
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe26de319e8a434c71711109c598f304f4c773ad0.sol:49

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xefd2f117edc2ff06a953e21869daf93ed1559d15.sol
Total states:5258
45.085412
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.824869
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xefd2f117edc2ff06a953e21869daf93ed1559d15.sol:28

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.755475
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xefd2f117edc2ff06a953e21869daf93ed1559d15.sol:24

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.702762
Transaction Length: 1
Severity: High
Contract: YShellMoney
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xefd2f117edc2ff06a953e21869daf93ed1559d15.sol:28

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.269487
Transaction Length: 1
Severity: High
Contract: YShellMoney
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xefd2f117edc2ff06a953e21869daf93ed1559d15.sol:24

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x929CF614C917944dD278BC2134714EaA4121BC6A.sol
Total states:30
0.050902
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x6ad758757c2764ed8958b04ec03338159b03d59f.sol
Total states:7984
17.226402
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.252836
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4094
Estimated Gas Usage: 992 - 1467
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x6ad758757c2764ed8958b04ec03338159b03d59f.sol:67

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x853b8045BB6390FA6Bff4e2aBe9140307A2C02f6.sol
Total states:0
0.016841
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x933B0d1C324f6703536E888ce8C42175e8474283.sol
Total states:1124
1.264278
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x1806b797d00c4c8f6c92967b4def1d8c7d62f39e.sol
Total states:3378
5.952103
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x0ce84a346a98661f54d735517ec8d1dbf56c8bd6.sol
Total states:165
0.175163
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xeddc0d98485845a0400b9aec621b168d0faf8572.sol
Total states:10798
32.008827
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:16.463745
Transaction Length: 2
Severity: High
Contract: ForlyToken
Function name: transferFrom(address,address,uint256)
PC address: 4278
Estimated Gas Usage: 8551 - 30546
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xeddc0d98485845a0400b9aec621b168d0faf8572.sol:58

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xc7592687c7f14e3a713460ca7f20385b9fdaa993.sol
Total states:11266
196.486542
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.529646
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc7592687c7f14e3a713460ca7f20385b9fdaa993.sol:36

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:24.048999
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc7592687c7f14e3a713460ca7f20385b9fdaa993.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.714097
Transaction Length: 1
Severity: High
Contract: BTCMerchant
Function name: approveAndCall(address,uint256,bytes)
PC address: 1742
Estimated Gas Usage: 489 - 584
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc7592687c7f14e3a713460ca7f20385b9fdaa993.sol:3

*/

//pragma solidity ^0.4.24;
prag

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:27.556458
Transaction Length: 1
Severity: Medium
Contract: BTCMerchant
Function name: approveAndCall(address,uint256,bytes)
PC address: 5501
Estimated Gas Usage: 8756 - 34286
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0xc7592687c7f14e3a713460ca7f20385b9fdaa993.sol:210

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:29.473881
Transaction Length: 1
Severity: High
Contract: BTCMerchant
Function name: safeMul(uint256,uint256)
PC address: 5538
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc7592687c7f14e3a713460ca7f20385b9fdaa993.sol:36

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:31.042160
Transaction Length: 1
Severity: High
Contract: BTCMerchant
Function name: safeAdd(uint256,uint256)
PC address: 6116
Estimated Gas Usage: 397 - 492
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc7592687c7f14e3a713460ca7f20385b9fdaa993.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x5ab4c93a366ca13698a18c74c69a07b43ac18e29.sol
Total states:2928
21.169261
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.025828
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x5ab4c93a366ca13698a18c74c69a07b43ac18e29.sol:24

he EIP.

 */

interface IERC20 {

    /**



--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol
Total states:44637
139.241844
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.054301
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 4827
Estimated Gas Usage: 2616 - 3661
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:76

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:29.843184
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4840
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:78

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.044186
Transaction Length: 2
Severity: High
Contract: Pausable
Function name: transferFrom(address,address,uint256)
PC address: 5561
Estimated Gas Usage: 2639 - 3684
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:76

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:30.287007
Transaction Length: 2
Severity: Low
Contract: Pausable
Function name: increaseApproval(address,uint256)
PC address: 5574
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:78

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.110088
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: transferFrom(address,address,uint256)
PC address: 6243
Estimated Gas Usage: 3145 - 4520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:76

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:27.794078
Transaction Length: 2
Severity: Low
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6256
Estimated Gas Usage: 1471 - 2276
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:78

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.769103
Transaction Length: 2
Severity: High
Contract: DexTradeCoin
Function name: increaseApproval(address,uint256)
PC address: 7345
Estimated Gas Usage: 1483 - 2288
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:76

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:21.409063
Transaction Length: 2
Severity: Low
Contract: DexTradeCoin
Function name: increaseApproval(address,uint256)
PC address: 7358
Estimated Gas Usage: 1493 - 2298
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0xb0e99627bc29adef1178f16117bf495351e81997.sol:78

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xc210b05e093a164cfa11c18180c37bf15a98e414.sol
Total states:18192
40.823085
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.642452
Transaction Length: 2
Severity: High
Contract: AzbiBalancePool
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc210b05e093a164cfa11c18180c37bf15a98e414.sol:69

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.696653
Transaction Length: 2
Severity: High
Contract: AzbiBalancePool
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc210b05e093a164cfa11c18180c37bf15a98e414.sol:70

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x516679068375b3a15E7a10347970FC14a6d3997b.sol
Total states:774
0.987158
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x7F21BF217CE843bd5968f05440A3c1F2b9eAcd4f.sol
Total states:2175
2.63889
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.297162
Transaction Length: 1
Severity: Low
Contract: UpgradeabilityProxy
Function name: fallback
PC address: 274
Estimated Gas Usage: 681 - 3503
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy))
--------------------
In file: ../../new_contracts/0x7F21BF217CE843bd5968f05440A3c1F2b9eAcd4f.sol:260

delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x86c49eb4a022d550cd41676bec69106bfdfdd3b7.sol
Total states:14080
25.807094
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:13.214091
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2252
Estimated Gas Usage: 7658 - 28893
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x86c49eb4a022d550cd41676bec69106bfdfdd3b7.sol:68

_allowed[from][msg.sender]-=amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.000746
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2329
Estimated Gas Usage: 13181 - 54606
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x86c49eb4a022d550cd41676bec69106bfdfdd3b7.sol:69

_balances[to]+=amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol
Total states:21575
169.025908
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.028053
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:8

6D39296F0cbB648873a5d3;
    address constan

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.331214
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: fallback
PC address: 142
Estimated Gas Usage: 2311 - 39600
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x594153a000000000000000000000000000000000000000000000000000000000
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1035

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.333577
Transaction Length: 1
Severity: Medium
Contract: PoolProxy
Function name: fallback
PC address: 160
Estimated Gas Usage: 3056 - 74345
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 931
Offset: 142
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1044

return(ptr, size)

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.052481
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: fallback
PC address: 264
Estimated Gas Usage: 725 - 3547
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy))
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:902

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.974694
Transaction Length: 1
Severity: Low
Contract: Deposit3Tokens
Function name: period_timestamp(uint256)
PC address: 380
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:992

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.048485
Transaction Length: 1
Severity: Low
Contract: Deposit2Tokens
Function name: period_timestamp(uint256)
PC address: 393
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:986

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:43.833373
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 537
Estimated Gas Usage: 1433 - 2470
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:48.392523
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 577
Estimated Gas Usage: 1583 - 2996
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.615664
Transaction Length: 1
Severity: Low
Contract: TokenManager
Function name: supportAddresses(address,uint256)
PC address: 613
Estimated Gas Usage: 752 - 1037
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.183664
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: supportAddresses(address,uint256)
PC address: 1317
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:02.835636
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1575
Estimated Gas Usage: 4173 - 40386
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1082

IERC20(tokenAddress).transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:08.565635
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1891
Estimated Gas Usage: 5889 - 76759
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1085

IERC20(tokenAddress).approve(EXCHANGE_CONTRACT, amount)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.960142
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: supportAddresses(address,uint256)
PC address: 2114
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.046230
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2259
Estimated Gas Usage: 8446 - 148446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:4

y >=0.5 <0.7.17

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:23.790631
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2262
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:3


pragma solidity >=0.5 <0.7.17;
 contract T

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.604507
Transaction Length: 2
Severity: High
Contract: PoolToken
Function name: increaseAllowance(address,uint256)
PC address: 4840
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:139

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.466611
Transaction Length: 1
Severity: Low
Contract: PoolFactory
Function name: supportAddresses(address,uint256)
PC address: 5037
Estimated Gas Usage: 796 - 1081
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:02.014285
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: supportAddresses(address,uint256)
PC address: 8485
Estimated Gas Usage: 818 - 1103
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.432931
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17754
Estimated Gas Usage: 5008 - 75599
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:4

y >=0.5 <0.7.17

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.162085
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17757
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:3


pragma solidity >=0.5 <0.7.17;
 contract T

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:31.710804
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17778
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1241

IOneSplit(EXCHANGE_CONTRACT).getExpectedReturn(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, 100, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:17.909953
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17813
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:2


*/
pragma solidity >

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:37.728387
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17819
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:5

nager {
    
 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:44.911202
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17839
Estimated Gas Usage: 5186 - 76056
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:8

;
    address constan

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.282100
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17841
Estimated Gas Usage: 5186 - 76056
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:8

6D39296F0cbB648873a5d3;
    address constant

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:31.403567
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18208
Estimated Gas Usage: 5661 - 77946
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:30.897668
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18245
Estimated Gas Usage: 6389 - 78579
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.017509
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 19161
Estimated Gas Usage: 5923 - 76793
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x85077f86646732b4209f5c4c54858e20b8a80a1a.sol:1257

IERC20(DAI_ADDRESS).approve(_depositPool, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x959078a92dB4Ea7a4668993aC5DD615ce4ca56DF.sol
Total states:6625
11.936454
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.818878
Transaction Length: 1
Severity: High
Contract: LPTokenWrapper
Function name: stake(uint256)
PC address: 1964
Estimated Gas Usage: 402 - 497
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x959078a92dB4Ea7a4668993aC5DD615ce4ca56DF.sol:158

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x6a81de75ccb4dd12aa118becfb24d242853614ad.sol
Total states:23078
7765.98193
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.718799
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x6a81de75ccb4dd12aa118becfb24d242853614ad.sol:135

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:23.464214
Transaction Length: 2
Severity: High
Contract: IceSwap
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x6a81de75ccb4dd12aa118becfb24d242853614ad.sol:135

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x714a35f232c0e478015f383ae0a69b1af1a2fa4a.sol
Total states:923
0.881462
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x5863c92b31f777ebd4f7d79a54a7dc6348a19972.sol
Total states:8851
24.623638
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.145848
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x5863c92b31f777ebd4f7d79a54a7dc6348a19972.sol:142

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x87491de2e8395b420eddfb4f266077c89798d63e.sol
Total states:1714
1.838631
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.823111
Transaction Length: 1
Severity: Medium
Contract: xETHGRebaser
Function name: rebase()
PC address: 2591
Estimated Gas Usage: 162 - 257
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../new_contracts/0x87491de2e8395b420eddfb4f266077c89798d63e.sol:159

tx.origin

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x1C77d15857646687005dbbAfFf5873F4495a9731.sol
Total states:632
0.374805
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x23C67BF183adc404ca07f79462D8E90A2975aD0a.sol
Total states:4998
46.040536
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.053120
Transaction Length: 0
Severity: High
Contract: ERC721Metadata
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x23C67BF183adc404ca07f79462D8E90A2975aD0a.sol:11

/ds-note/src/note.sol
/// note.sol -- the `

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.057200
Transaction Length: 0
Severity: High
Contract: Title
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x23C67BF183adc404ca07f79462D8E90A2975aD0a.sol:11

/ds-note/src/note.sol
/// note.sol -- the `

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.020220
Transaction Length: 1
Severity: High
Contract: ERC721
Function name: safeTransferFrom(address,address,uint256,bytes)
PC address: 1136
Estimated Gas Usage: 477 - 572
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x23C67BF183adc404ca07f79462D8E90A2975aD0a.sol:3

*/

// Verified using https://dapp.

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x3d96c77427ed6aa42f71b8e3c5de3dfca4d6fb8f.sol
Total states:18192
40.586417
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.654821
Transaction Length: 2
Severity: High
Contract: applecorefinancetwenty
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x3d96c77427ed6aa42f71b8e3c5de3dfca4d6fb8f.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.796605
Transaction Length: 2
Severity: High
Contract: applecorefinancetwenty
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x3d96c77427ed6aa42f71b8e3c5de3dfca4d6fb8f.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x881797bbd657b16672c3dfa8148bc7d10cc48ca6.sol
Total states:1239
0.408379
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x28e484dbd6bb501d37efc8cd4b8dc33121cc78be.sol
Total states:677
0.488416
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol
Total states:1653
3.238374
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.079511
Transaction Length: 1
Severity: Low
Contract: Collector
Function name: seize(uint256)
PC address: 1275
Estimated Gas Usage: 1503 - 2304
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0xDdA9c8631ea904Ef4c0444F2A252eC7B45B8e7e9.sol:180

pile.debt(loan)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xB7C4f7c4c2e815690D872ffF8F9b7DBBa1B1a76E.sol
Total states:90
1.151686
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xb0e1682d17a96e8551191c089673346df7e1d467.sol
Total states:7240
287.33612
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.946807
Transaction Length: 1
Severity: High
Contract: DefisaverLogger
Function name: Log(address,address,string,bytes)
PC address: 224
Estimated Gas Usage: 362 - 457
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb0e1682d17a96e8551191c089673346df7e1d467.sol:3



*/



//pragma solidity ^0.7.0;  

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.477778
Transaction Length: 1
Severity: High
Contract: DefisaverLogger
Function name: Log(address,address,string,bytes)
PC address: 375
Estimated Gas Usage: 713 - 3490
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xb0e1682d17a96e8551191c089673346df7e1d467.sol:3



*/



//pragma solidity ^0.7.0;  

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xB5215bFf55f3bB7d23A71b783F994c754F61c494.sol
Total states:24
0.041536
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x44001a5656baafa5a3359ced8fa38e150a71eea2.sol
Total states:15326
34.838922
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.410125
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 2575
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x44001a5656baafa5a3359ced8fa38e150a71eea2.sol:86

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.040876
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 2748
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x44001a5656baafa5a3359ced8fa38e150a71eea2.sol:86

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x94e18801ab975a1f2cbe42acc2eb49dd1edd7ffc.sol
Total states:8483
28.329055
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.007659
Transaction Length: 2
Severity: High
Contract: LynxFinance
Function name: increaseApproval(address,uint256)
PC address: 4860
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x94e18801ab975a1f2cbe42acc2eb49dd1edd7ffc.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:25.022211
Transaction Length: 2
Severity: Low
Contract: LynxFinance
Function name: increaseApproval(address,uint256)
PC address: 4873
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x94e18801ab975a1f2cbe42acc2eb49dd1edd7ffc.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x48285154b9775fbc241f1ed0e61cff56cacf617e.sol
Total states:9010
17.322752
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.234854
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x48285154b9775fbc241f1ed0e61cff56cacf617e.sol:139

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x9c1394c0c7ca013499053608bed5b01e54a3fef0.sol
Total states:3429
5.498126
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xf2425d8c7b5194f9c95d826bb969cf17ad88d154.sol
Total states:1576
2.670543
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.042652
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xf2425d8c7b5194f9c95d826bb969cf17ad88d154.sol:10

g.data, they should not be accessed in such

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x0b8e150ebcf0bcf2dc850bbb6e2ded286ae213b5.sol
Total states:8888
21.794311
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.114611
Transaction Length: 0
Severity: High
Contract: darkUSDCvault
Function name: constructor
PC address: 224
Estimated Gas Usage: 6794 - 64036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x0b8e150ebcf0bcf2dc850bbb6e2ded286ae213b5.sol:6

ed for verifica

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.699058
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x0b8e150ebcf0bcf2dc850bbb6e2ded286ae213b5.sol:173

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x5e8a0b1629dd519ddda805d1a36dc404fc3efdd7.sol
Total states:13051
18.870917
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.935545
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 5473
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x5e8a0b1629dd519ddda805d1a36dc404fc3efdd7.sol:150

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol
Total states:18307
86.13273
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.122065
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2327
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:14.779930
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2340
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:94

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.954935
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2798
Estimated Gas Usage: 933 - 1408
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:14.705731
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2811
Estimated Gas Usage: 943 - 1418
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:94

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:03.995465
Transaction Length: 1
Severity: Low
Contract: EurmToken
Function name: transfer(address,uint256)
PC address: 4326
Estimated Gas Usage: 929 - 1214
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:40.927806
Transaction Length: 2
Severity: Low
Contract: EurmToken
Function name: transferFrom(address,address,uint256)
PC address: 4326
Estimated Gas Usage: 1579 - 2244
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:76

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.496438
Transaction Length: 2
Severity: High
Contract: EurmToken
Function name: increaseApproval(address,uint256)
PC address: 4886
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:45.050673
Transaction Length: 2
Severity: Low
Contract: EurmToken
Function name: increaseApproval(address,uint256)
PC address: 4899
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0x4389710ba2d358cc984bb70cdb5c0e9d48727874.sol:94

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x0000000000095413afC295d19EDeb1Ad7B71c952.sol
Total states:24
0.042666
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol
Total states:5538
93.381674
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:34.588296
Transaction Length: 1
Severity: High
Contract: SPIClub
Function name: setSymbol(string)
PC address: 2163
Estimated Gas Usage: 385 - 480
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol:3

*/

/*
    SPI CLUB
    SPI Staking

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:44.576317
Transaction Length: 1
Severity: High
Contract: SPIClub
Function name: setName(string)
PC address: 2406
Estimated Gas Usage: 429 - 524
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol:3

*/

/*
    SPI CLUB
    SPI Staking

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:33.671489
Transaction Length: 1
Severity: Low
Contract: SPIClub
Function name: distribute(uint256)
PC address: 4797
Estimated Gas Usage: 8804 - 63981
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol:176

(_amount * magnitude) / tokenSupply_

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.506771
Transaction Length: 1
Severity: High
Contract: SPIClub
Function name: calculateTokensReceived(uint256)
PC address: 8084
Estimated Gas Usage: 809 - 904
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol:27

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:27.420305
Transaction Length: 1
Severity: Low
Contract: SPIClub
Function name: calculateTokensReceived(uint256)
PC address: 8107
Estimated Gas Usage: 847 - 942
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../new_contracts/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol:28

assert(c / a == b)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:31.836863
Transaction Length: 1
Severity: Low
Contract: SPIClub
Function name: distribute(uint256)
PC address: 8421
Estimated Gas Usage: 1679 - 2670
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0xc15122898c3ee73211d8a8a4a656ba1980d53086.sol:169

erc20.transferFrom(msg.sender, address(this), _amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xc26337e6f3b064c3a93d728dc4eb32531f783cfa.sol
Total states:5259
82.580628
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:23.802806
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc26337e6f3b064c3a93d728dc4eb32531f783cfa.sol:52

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:45.426433
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc26337e6f3b064c3a93d728dc4eb32531f783cfa.sol:46

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.728126
Transaction Length: 1
Severity: High
Contract: LPFfinance
Function name: safeMul(uint256,uint256)
PC address: 3167
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc26337e6f3b064c3a93d728dc4eb32531f783cfa.sol:52

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.999846
Transaction Length: 1
Severity: High
Contract: LPFfinance
Function name: safeAdd(uint256,uint256)
PC address: 3351
Estimated Gas Usage: 353 - 448
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc26337e6f3b064c3a93d728dc4eb32531f783cfa.sol:46

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xB5639130ce84dE9684dA10B5E6d6Ec49828E0987.sol
Total states:76097
141.535912
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:52.879358
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xB5639130ce84dE9684dA10B5E6d6Ec49828E0987.sol:60

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:51.080890
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xB5639130ce84dE9684dA10B5E6d6Ec49828E0987.sol:60

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:56.455351
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xB5639130ce84dE9684dA10B5E6d6Ec49828E0987.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:01.607398
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xB5639130ce84dE9684dA10B5E6d6Ec49828E0987.sol:63

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:55.097628
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xB5639130ce84dE9684dA10B5E6d6Ec49828E0987.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:00.933148
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xB5639130ce84dE9684dA10B5E6d6Ec49828E0987.sol:63

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x4e015af8e1c5eb020f91063661cc5ce43719ebcf.sol
Total states:3565
27.199177
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.107388
Transaction Length: 0
Severity: Low
Contract: CompoundInteractor
Function name: constructor
PC address: 733
Estimated Gas Usage: 29263 - 137729
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x4e015af8e1c5eb020f91063661cc5ce43719ebcf.sol:1871

comptroller.enterMarkets(cTokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.136669
Transaction Length: 0
Severity: High
Contract: CompoundInteractor
Function name: constructor
PC address: 770
Estimated Gas Usage: 30063 - 172717
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x4e015af8e1c5eb020f91063661cc5ce43719ebcf.sol:5

nzeppelin/contr

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.187157
Transaction Length: 0
Severity: Low
Contract: WETHCreamNoFoldStrategy
Function name: constructor
PC address: 1228
Estimated Gas Usage: 51247 - 240745
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0x4e015af8e1c5eb020f91063661cc5ce43719ebcf.sol:1871

comptroller.enterMarkets(cTokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.217424
Transaction Length: 0
Severity: High
Contract: WETHCreamNoFoldStrategy
Function name: constructor
PC address: 1266
Estimated Gas Usage: 52047 - 275733
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x4e015af8e1c5eb020f91063661cc5ce43719ebcf.sol:5

nzeppelin/contr

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xa7ebc87173be2fea30214dab05c25c16d24312a8.sol
Total states:3099
4.650228
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x5f1d7707c4c233059e84674ccac35eb68aedc57c.sol
Total states:1578
5.902579
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xf46485b3fecc87c73821ae310b579d3c6390821a.sol
Total states:3586
6.014029
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xc8d238f341310bcbcc06f6a024f79aa03d091d7c.sol
Total states:18192
42.848198
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.786506
Transaction Length: 2
Severity: High
Contract: bethero
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc8d238f341310bcbcc06f6a024f79aa03d091d7c.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.268482
Transaction Length: 2
Severity: High
Contract: bethero
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc8d238f341310bcbcc06f6a024f79aa03d091d7c.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x7efd0d656572c269aafa6e21b35c10ca9d5ba779.sol
Total states:76315
135.807061
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:51.289053
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 1815
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7efd0d656572c269aafa6e21b35c10ca9d5ba779.sol:48

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:54.878169
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2036
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7efd0d656572c269aafa6e21b35c10ca9d5ba779.sol:50

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:00.807261
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2113
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7efd0d656572c269aafa6e21b35c10ca9d5ba779.sol:51

balances[_to]+=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.506902
Transaction Length: 2
Severity: High
Contract: UPLOAD
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7efd0d656572c269aafa6e21b35c10ca9d5ba779.sol:48

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:03.873911
Transaction Length: 1
Severity: High
Contract: UPLOAD
Function name: transferFrom(address,address,uint256)
PC address: 2357
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7efd0d656572c269aafa6e21b35c10ca9d5ba779.sol:50

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.807948
Transaction Length: 1
Severity: High
Contract: UPLOAD
Function name: transferFrom(address,address,uint256)
PC address: 2434
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0x7efd0d656572c269aafa6e21b35c10ca9d5ba779.sol:51

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xc30d9776f088e72686e69cd274d446f94f10c4a4.sol
Total states:7787
16.85208
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.385422
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xc30d9776f088e72686e69cd274d446f94f10c4a4.sol:32

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x8bd8ec1e69e19b23db4e9cb31472f143d0e093cc.sol
Total states:2332
7.8956
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.880804
Transaction Length: 1
Severity: Medium
Contract: Liquidator
Function name: triggerLiquidation(address)
PC address: 4941
Estimated Gas Usage: 280 - 375
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../new_contracts/0x8bd8ec1e69e19b23db4e9cb31472f143d0e093cc.sol:848

tx.origin

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xfae0adb2d30e2a63730ac927e4e15e96d69b4add.sol
Total states:3424
5.628933
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x01d127f52fa0988f7ce82e70f30ef9edd360a8df.sol
Total states:643
2.23899
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xe2fa8314fc0f654f350adddaf9139d2f0d59067f.sol
Total states:17827
37.185059
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.345144
Transaction Length: 2
Severity: High
Contract: ERC20UpgradeSafe
Function name: increaseAllowance(address,uint256)
PC address: 3938
Estimated Gas Usage: 992 - 1467
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe2fa8314fc0f654f350adddaf9139d2f0d59067f.sol:1062

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.436075
Transaction Length: 2
Severity: High
Contract: NewToken
Function name: increaseAllowance(address,uint256)
PC address: 8495
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xe2fa8314fc0f654f350adddaf9139d2f0d59067f.sol:1062

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol
Total states:2010
27.795227
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:08.121044
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: dripAndFile(address,bytes32,bytes32,uint256)
PC address: 614
Estimated Gas Usage: 3559 - 72596
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2070
Offset: 2221
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:56

function dripAndFile(address who, bytes32 ilk, bytes32 what, uint data) public {
        Setter(who).drip(ilk);
        Setter(who).file(ilk, what, data);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:16.957983
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: setAuthorityAndDelay(address,address,uint256)
PC address: 980
Estimated Gas Usage: 3486 - 72333
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2864
Offset: 2999
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:85

function setAuthorityAndDelay(address pause, address newAuthority, uint newDelay) public {
        PauseLike(pause).setAuthority(newAuthority);
        PauseLike(pause).setDelay(newDelay);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:20.846984
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: dripAndFile(address,bytes32,uint256)
PC address: 1068
Estimated Gas Usage: 3482 - 72329
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 3128
Offset: 3271
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:51

function dripAndFile(address who, bytes32 what, uint data) public {
        Setter(who).drip();
        Setter(who).file(what, data);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:01.528801
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: init(address,bytes32)
PC address: 1591
Estimated Gas Usage: 1097 - 1568
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:70

Setter(who).init(ilk)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:03.136312
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: file(address,bytes32,bytes32,address)
PC address: 1790
Estimated Gas Usage: 1234 - 1895
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:48

Setter(who).file(ilk, what, data)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:04.660264
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: setDelay(address,uint256)
PC address: 1931
Estimated Gas Usage: 1132 - 1603
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:82

PauseLike(pause).setDelay(newDelay)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:06.160743
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: dripAndFile(address,bytes32,bytes32,uint256)
PC address: 2070
Estimated Gas Usage: 1208 - 1679
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:57

Setter(who).drip(ilk)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:08.100964
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: dripAndFile(address,bytes32,bytes32,uint256)
PC address: 2221
Estimated Gas Usage: 2811 - 37848
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:58

Setter(who).file(ilk, what, data)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:09.550138
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: cage(address)
PC address: 2351
Estimated Gas Usage: 1121 - 1497
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:74

EndLike(end).cage()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:11.307268
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: file(address,bytes32,uint256)
PC address: 2497
Estimated Gas Usage: 1245 - 1811
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:40

Setter(who).file(what, data)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:12.882828
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: rely(address,address)
PC address: 2681
Estimated Gas Usage: 1128 - 1599
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:62

Setter(who).rely(to)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:14.703010
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: setAuthorityAndDelay(address,address,uint256)
PC address: 2864
Estimated Gas Usage: 1177 - 1648
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:86

PauseLike(pause).setAuthority(newAuthority)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:16.938029
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: setAuthorityAndDelay(address,address,uint256)
PC address: 2999
Estimated Gas Usage: 2740 - 37587
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:87

PauseLike(pause).setDelay(newDelay)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:18.657855
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: dripAndFile(address,bytes32,uint256)
PC address: 3128
Estimated Gas Usage: 1153 - 1529
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:52

Setter(who).drip()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:20.826908
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: dripAndFile(address,bytes32,uint256)
PC address: 3271
Estimated Gas Usage: 2736 - 37583
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:53

Setter(who).file(what, data)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:22.401164
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: deny(address,address)
PC address: 3455
Estimated Gas Usage: 1127 - 1598
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:66

Setter(who).deny(to)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:23.996649
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: setAuthority(address,address)
PC address: 3638
Estimated Gas Usage: 1149 - 1620
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:78

PauseLike(pause).setAuthority(newAuthority)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:25.837720
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: file(address,bytes32,address)
PC address: 3829
Estimated Gas Usage: 1218 - 1784
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:36

Setter(who).file(what, data)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:27.399453
Transaction Length: 1
Severity: Medium
Contract: GovActions
Function name: file(address,bytes32,bytes32,uint256)
PC address: 3985
Estimated Gas Usage: 1269 - 1930
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol:44

Setter(who).file(ilk, what, data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xa6b87963a81e1128dA4763E3748504E5046cE730.sol
Total states:1267
7.82074
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.085797
Transaction Length: 1
Severity: Low
Contract: timeLockAnrx
Function name: withdrawTokens()
PC address: 965
Estimated Gas Usage: 2471 - 3747
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0xa6b87963a81e1128dA4763E3748504E5046cE730.sol:239

anrToken.transfer(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.404483
Transaction Length: 2
Severity: Low
Contract: timeLockAnrx
Function name: withdrawTokens()
PC address: 965
Estimated Gas Usage: 2471 - 3747
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0xa6b87963a81e1128dA4763E3748504E5046cE730.sol:239

anrToken.transfer(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.993030
Transaction Length: 1
Severity: Low
Contract: timeLockAnrx
Function name: deposit(uint256)
PC address: 1284
Estimated Gas Usage: 1577 - 2568
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../new_contracts/0xa6b87963a81e1128dA4763E3748504E5046cE730.sol:207

anrToken.transferFrom(msg.sender,address(this),amount)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.161093
Transaction Length: 1
Severity: High
Contract: timeLockAnrx
Function name: deposit(uint256)
PC address: 1374
Estimated Gas Usage: 7704 - 64203
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xa6b87963a81e1128dA4763E3748504E5046cE730.sol:215

now + 31363200

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x22b858cac15fffcdc5efb9fea4ab6b3b4bef9de6.sol
Total states:65
0.665489
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xd5a4dc51229774223e288528e03192e2342bda00.sol
Total states:450
0.325863
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xce4c91f4b7a583b6547bd140b61d25aa79a37427.sol
Total states:6075
398.495844
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x0374f3dC6D09FD9C804547F7E22a043Ed72b7156.sol
Total states:354
5.209738
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:05.128451
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFree(address,uint256,address,uint256,bytes32)
PC address: 206
Estimated Gas Usage: 3737 - 73051
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 321
Offset: 633
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../new_contracts/0x0374f3dC6D09FD9C804547F7E22a043Ed72b7156.sol:60

function burnGasAndFree(address gas_token, uint256 free, address mToken, uint256 nonce, bytes32 challenge_digest) public {

        require(GasToken1(gas_token).free(free), "Could not free");

        expensiveStuff(mToken, nonce, challenge_digest);

    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:01.689121
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFree(address,uint256,address,uint256,bytes32)
PC address: 321
Estimated Gas Usage: 1161 - 1632
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x0374f3dC6D09FD9C804547F7E22a043Ed72b7156.sol:62

GasToken1(gas_token).free(free)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:04.991412
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFree(address,uint256,address,uint256,bytes32)
PC address: 633
Estimated Gas Usage: 2873 - 38001
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../new_contracts/0x0374f3dC6D09FD9C804547F7E22a043Ed72b7156.sol:42

ERC918Interface(mToken).mint(nonce, challenge_digest)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x8b347235c4b6571cfe18ef7bac4be2029e1a3d25.sol
Total states:402
0.65988
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0x10f69079977c443e7e3c62b79e7ced16d696b175.sol
Total states:1389
2.19705
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../new_contracts/0xd0501e2c8e603b3f48a9a6283dc9744068b843b7.sol
Total states:766
5.145363
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.142637
Transaction Length: 0
Severity: High
Contract: PoolReward
Function name: constructor
PC address: 555
Estimated Gas Usage: 62285 - 306327
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../new_contracts/0xd0501e2c8e603b3f48a9a6283dc9744068b843b7.sol:60

a * b

--------------------

