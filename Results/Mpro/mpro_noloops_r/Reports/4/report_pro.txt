$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xef133080d202579634ddb425a0fa43d2608e4e95.sol
Total states:3311
6.096389
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xc8f4df60d0a8b106ea5f83eda40081a8250c9e07.sol
Total states:29041
58.262649
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.032203
Transaction Length: 0
Severity: Medium
Contract: YYFFII
Function name: constructor
PC address: 129
Estimated Gas Usage: 166 - 1017
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop5/0xc8f4df60d0a8b106ea5f83eda40081a8250c9e07.sol:240

tx.origin

--------------------

==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.089657
Transaction Length: 0
Severity: Medium
Contract: YYFFII
Function name: constructor
PC address: 303
Estimated Gas Usage: 28071 - 130474
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop5/0xc8f4df60d0a8b106ea5f83eda40081a8250c9e07.sol:241

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:17.003176
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4590
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xc8f4df60d0a8b106ea5f83eda40081a8250c9e07.sol:153

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.842033
Transaction Length: 2
Severity: High
Contract: YYFFII
Function name: increaseAllowance(address,uint256)
PC address: 6932
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xc8f4df60d0a8b106ea5f83eda40081a8250c9e07.sol:153

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x9d8c7fcebd041a78d00acb26a08c5e888478822e.sol
Total states:6398
69.627979
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:58.202106
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3636
Estimated Gas Usage: 1025 - 1500
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x9d8c7fcebd041a78d00acb26a08c5e888478822e.sol:103

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol
Total states:4104
23.508116
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:05.295175
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 339
Estimated Gas Usage: 10986 - 154068
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1353
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:169

function supplyOrderWithDaiPermit(uint amount, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {
        DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s);
        supplyOrder(amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:07.558174
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: redeemOrder(uint256)
PC address: 385
Estimated Gas Usage: 8635 - 116441
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1961
Offset: 2326
Offset: 2583
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:147

function redeemOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        token.hasMember(msg.sender);
        tranche.redeemOrder(msg.sender, amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:14.232243
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse()
PC address: 823
Estimated Gas Usage: 4632 - 75356
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 4515
Offset: 4882
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:154

function disburse() external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:16.322033
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse(uint256)
PC address: 910
Estimated Gas Usage: 4758 - 75577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5182
Offset: 5557
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:161

function disburse(uint endEpoch) external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender, endEpoch);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:18.356033
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 1044
Estimated Gas Usage: 6568 - 79482
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:141

function supplyOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        tranche.supplyOrder(msg.sender, amount);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.373633
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1711
Estimated Gas Usage: 3914 - 40177
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:170

DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:22.278887
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 2583
Estimated Gas Usage: 8608 - 114894
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:150

tranche.redeemOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:09.727546
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 3258
Estimated Gas Usage: 3875 - 40043
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:174

EIP2612PermitLike(tranche.currency()).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.044205
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse()
PC address: 4882
Estimated Gas Usage: 3600 - 39293
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:158

tranche.disburse(msg.sender)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:16.147504
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse(uint256)
PC address: 5557
Estimated Gas Usage: 3724 - 39512
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:165

tranche.disburse(msg.sender, endEpoch)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:18.106967
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 6269
Estimated Gas Usage: 3727 - 39515
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:143

tranche.supplyOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:19.623747
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 6826
Estimated Gas Usage: 2310 - 4011
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x04CA4eb16D88084C88979962C48D943CbF6Dcf97.sol:178

EIP2612PermitLike(address(token)).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol
Total states:3658
32.348495
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.918884
Transaction Length: 1
Severity: High
Contract: ScamChecker
Function name: execute(bytes)
PC address: 251
Estimated Gas Usage: 295 - 390
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol:3



*/



//pragma solidity ^0.6.6;
p

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:12.926543
Transaction Length: 1
Severity: Low
Contract: ScamChecker
Function name: testTokenWeth(address)
PC address: 1415
Estimated Gas Usage: 1135 - 1701
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol:194

token0.approve(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:04.574179
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testToken(address,address)
PC address: 1415
Estimated Gas Usage: 1185 - 1751
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol:194

token0.approve(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:15.655001
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testTokenWeth(address)
PC address: 1690
Estimated Gas Usage: 2811 - 38034
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol:196

token1.approve(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, uint(-1))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:16.946364
Transaction Length: 1
Severity: Low
Contract: ScamChecker
Function name: testFeeTokenWeth(address,address)
PC address: 4577
Estimated Gas Usage: 1199 - 1765
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol:258

token0.approve(router, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:27.149638
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testFeeToken(address,address,address)
PC address: 4577
Estimated Gas Usage: 1271 - 1837
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol:258

token0.approve(router, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:31.281540
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testFeeToken(address,address,address)
PC address: 4832
Estimated Gas Usage: 2947 - 38170
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x625271c4bab9946f051aacd169bee1a4d9503f9a.sol:260

token1.approve(router, uint(-1))

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x4e5ee20900898054e998fd1862742c28c651bf5d.sol
Total states:2424
3.465855
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040005
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x4e5ee20900898054e998fd1862742c28c651bf5d.sol:24

he

 * sender of the transaction and its da

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.042728
Transaction Length: 0
Severity: High
Contract: SaffronLPBalanceToken
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x4e5ee20900898054e998fd1862742c28c651bf5d.sol:24

he

 * sender of the transaction and its da

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x964944eb8e707deec36af172ce2c6216d210a0c9.sol
Total states:8965
258.551187
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.432764
Transaction Length: 1
Severity: High
Contract: GPC
Function name: approveAndCall(address,uint256,bytes)
PC address: 1372
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x964944eb8e707deec36af172ce2c6216d210a0c9.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:31.649106
Transaction Length: 1
Severity: Medium
Contract: GPC
Function name: approveAndCall(address,uint256,bytes)
PC address: 4762
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x964944eb8e707deec36af172ce2c6216d210a0c9.sol:209

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x3e12272152125184e9F631864929fCA1cA7c7252.sol
Total states:2344
3.071053
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xdae1bcba551c33beeaaa576962b10dc317e4546c.sol
Total states:3429
5.904779
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xd03b6ae96cae26b743a6207dcee7cbe60a425c70.sol
Total states:10271
21.120487
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.983193
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4470
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd03b6ae96cae26b743a6207dcee7cbe60a425c70.sol:29

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x2e79a7aa136b78f2967a7d29822785d44052a436.sol
Total states:3381
5.650991
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x7b6322c0022c9065f8d512910af552eb72c64111.sol
Total states:10492
28.60895
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.863894
Transaction Length: 1
Severity: High
Contract: yLiquid
Function name: transfer(address,uint256)
PC address: 6339
Estimated Gas Usage: 834 - 929
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x7b6322c0022c9065f8d512910af552eb72c64111.sol:31

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.254737
Transaction Length: 2
Severity: High
Contract: yLiquid
Function name: increaseAllowance(address,uint256)
PC address: 6459
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x7b6322c0022c9065f8d512910af552eb72c64111.sol:9

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x47f792b29d63faa5485ecf48751fd208203ce67e.sol
Total states:10155
409.587388
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.199015
Transaction Length: 1
Severity: High
Contract: UFragments
Function name: initialize(string,string,uint8)
PC address: 694
Estimated Gas Usage: 386 - 481
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x47f792b29d63faa5485ecf48751fd208203ce67e.sol:3



*/



/**

 *Submitted for verifi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.931374
Transaction Length: 1
Severity: High
Contract: UFragments
Function name: initialize(string,string,uint8)
PC address: 845
Estimated Gas Usage: 728 - 3505
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x47f792b29d63faa5485ecf48751fd208203ce67e.sol:3



*/



/**

 *Submitted for verifi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:40.852964
Transaction Length: 1
Severity: High
Contract: UFragments
Function name: symbol()
PC address: 1933
Estimated Gas Usage: 1420 - 2455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x47f792b29d63faa5485ecf48751fd208203ce67e.sol:590

function symbol() public view returns(string memory) {

    return _symbol;

  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.166212
Transaction Length: 2
Severity: High
Contract: UFragments
Function name: increaseAllowance(address,uint256)
PC address: 8375
Estimated Gas Usage: 1443 - 2248
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x47f792b29d63faa5485ecf48751fd208203ce67e.sol:124

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:38.358359
Transaction Length: 1
Severity: High
Contract: UFragments
Function name: initialize(address)
PC address: 9123
Estimated Gas Usage: 25564 - 109243
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x47f792b29d63faa5485ecf48751fd208203ce67e.sol:874

contract UFragments is ERC20Detailed, Ownable {

    // PLEASE READ BEFORE CHANGING ANY ACCOUNTING OR MATH

    // Anytime there is division, there is a risk of numerical instability from rounding errors. In

    // order to minimize this risk, we adhere to the following guidelines:

    // 1) The conversion rate adopted is the number of gons that equals 1 fragment.

    //    The inverse rate must not be used--TOTAL_GONS is always the numerator and _totalSupply is

    //    always the denominator. (i.e. If you want to convert gons to fragments instead of

    //    multiplying by the inverse rate, you should divide by the normal rate)

    // 2) Gon balances converted into Fragments are always rounded down (truncated).

    //

    // We make the following guarantees:

    // - If address 'A' transfers x Fragments to address 'B'. A's resulting external balance will

    //   be decreased by precisely x Fragments, and B's external balance will be precisely

    //   increased by x Fragments.

    //

    // We do not guarantee that the sum of all balances equals the result of calling totalSupply().

    // This is because, for any conversion function 'f()' that has non-zero rounding error,

    // f(x0) + f(x1) + ... + f(xn) is not always equal to f(x0 + x1 + ... xn).

    using SafeMath for uint256;

    using SafeMathInt for int256;



    event LogRebase(uint256 indexed epoch, uint256 totalSupply);

    event LogRebasePaused(bool paused);

    event LogTokenPaused(bool paused);

    event LogMonetaryPolicyUpdated(address monetaryPolicy);



    // Used for authentication

    address public monetaryPolicy;



    modifier onlyMonetaryPolicy() {

        require(msg.sender == monetaryPolicy);

        _;

    }



    // Precautionary emergency controls.

    bool public rebasePaused;

    bool public tokenPaused;



    modifier whenRebaseNotPaused() {

        require(!rebasePaused);

        _;

    }



    modifier whenTokenNotPaused() {

        require(!tokenPaused);

        _;

    }



    modifier validRecipient(address to) {

        require(to != address(0x0));

        require(to != address(this));

        _;

    }



    uint256 private constant DECIMALS = 9;

    uint256 private constant MAX_UINT256 = ~uint256(0);

    uint256 private constant INITIAL_FRAGMENTS_SUPPLY = 10 * 10**6 * 10**DECIMALS;



    // TOTAL_GONS is a multiple of INITIAL_FRAGMENTS_SUPPLY so that _gonsPerFragment is an integer.

    // Use the highest value that fits in a uint256 for max granularity.

    uint256 private constant TOTAL_GONS = MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY);



    // MAX_SUPPLY = maximum integer < (sqrt(4*TOTAL_GONS + 1) - 1) / 2

    uint256 private constant MAX_SUPPLY = ~uint128(0);  // (2^128) - 1



    uint256 private _totalSupply;

    uint256 private _gonsPerFragment;

    mapping(address => uint256) private _gonBalances;



    // This is denominated in Fragments, because the gons-fragments conversion might change before

    // it's fully paid.

    mapping (address => mapping (address => uint256)) private _allowedFragments;



    /**

     * @param monetaryPolicy_ The address of the monetary policy contract to use for authentication.

     */

    function setMonetaryPolicy(address monetaryPolicy_)

        external

        onlyOwner

    {

        monetaryPolicy = monetaryPolicy_;

        emit LogMonetaryPolicyUpdated(monetaryPolicy_);

    }



    /**

     * @dev Pauses or unpauses the execution of rebase operations.

     * @param paused Pauses rebase operations if this is true.

     */

    function setRebasePaused(bool paused)

        external

        onlyOwner

    {

        rebasePaused = paused;

        emit LogRebasePaused(paused);

    }



    /**

     * @dev Pauses or unpauses execution of ERC-20 transactions.

     * @param paused Pauses ERC-20 transactions if this is true.

     */

    function setTokenPaused(bool paused)

        external

        onlyOwner

    {

        tokenPaused = paused;

        emit LogTokenPaused(paused);

    }



    /**

     * @dev Notifies Fragments contract about a new rebase cycle.

     * @param supplyDelta The number of new fragment tokens to add into circulation via expansion.

     * @return The total number of fragments after the supply adjustment.

     */

    function rebase(uint256 epoch, int256 supplyDelta)

        external

        onlyMonetaryPolicy

        whenRebaseNotPaused

        returns (uint256)

    {

        if (supplyDelta == 0) {

            emit LogRebase(epoch, _totalSupply);

            return _totalSupply;

        }



        if (supplyDelta < 0) {

            _totalSupply = _totalSupply.sub(uint256(supplyDelta.abs()));

        } else {

            _totalSupply = _totalSupply.add(uint256(supplyDelta));

        }



        if (_totalSupply > MAX_SUPPLY) {

            _totalSupply = MAX_SUPPLY;

        }



        _gonsPerFragment = TOTAL_GONS.div(_totalSupply);



        // From this point forward, _gonsPerFragment is taken as the source of truth.

        // We recalculate a new _totalSupply to be in agreement with the _gonsPerFragment

        // conversion rate.

        // This means our applied supplyDelta can deviate from the requested supplyDelta,

        // but this deviation is guaranteed to be < (_totalSupply^2)/(TOTAL_GONS - _totalSupply).

        //

        // In the case of _totalSupply <= MAX_UINT128 (our current supply cap), this

        // deviation is guaranteed to be < 1, so we can omit this step. If the supply cap is

        // ever increased, it must be re-included.

        // _totalSupply = TOTAL_GONS.div(_gonsPerFragment)



        emit LogRebase(epoch, _totalSupply);

        return _totalSupply;

    }



    function initialize(address owner_)

        public

        initializer

    {

        ERC20Detailed.initialize("Krbase", "KRB", uint8(DECIMALS));

        Ownable.initialize(owner_);



        rebasePaused = false;

        tokenPaused = false;



        _totalSupply = INITIAL_FRAGMENTS_SUPPLY;

        _gonBalances[owner_] = TOTAL_GONS;

        _gonsPerFragment = TOTAL_GONS.div(_totalSupply);



        emit Transfer(address(0x0), owner_, _totalSupply);

    }



    /**

     * @return The total number of fragments.

     */

    function totalSupply()

        public

        view

        returns (uint256)

    {

        return _totalSupply;

    }



    /**

     * @param who The address to query.

     * @return The balance of the specified address.

     */

    function balanceOf(address who)

        public

        view

        returns (uint256)

    {

        return _gonBalances[who].div(_gonsPerFragment);

    }



    /**

     * @dev Transfer tokens to a specified address.

     * @param to The address to transfer to.

     * @param value The amount to be transferred.

     * @return True on success, false otherwise.

     */

    function transfer(address to, uint256 value)

        public

        validRecipient(to)

        whenTokenNotPaused

        returns (bool)

    {

        uint256 gonValue = value.mul(_gonsPerFragment);

        _gonBalances[msg.sender] = _gonBalances[msg.sender].sub(gonValue);

        _gonBalances[to] = _gonBalances[to].add(gonValue);

        emit Transfer(msg.sender, to, value);

        return true;

    }



    /**

     * @dev Function to check the amount of tokens that an owner has allowed to a spender.

     * @param owner_ The address which owns the funds.

     * @param spender The address which will spend the funds.

     * @return The number of tokens still available for the spender.

     */

    function allowance(address owner_, address spender)

        public

        view

        returns (uint256)

    {

        return _allowedFragments[owner_][spender];

    }



    /**

     * @dev Transfer tokens from one address to another.

     * @param from The address you want to send tokens from.

     * @param to The address you want to transfer to.

     * @param value The amount of tokens to be transferred.

     */

    function transferFrom(address from, address to, uint256 value)

        public

        validRecipient(to)

        whenTokenNotPaused

        returns (bool)

    {

        _allowedFragments[from][msg.sender] = _allowedFragments[from][msg.sender].sub(value);



        uint256 gonValue = value.mul(_gonsPerFragment);

        _gonBalances[from] = _gonBalances[from].sub(gonValue);

        _gonBalances[to] = _gonBalances[to].add(gonValue);

        emit Transfer(from, to, value);



        return true;

    }



    /**

     * @dev Approve the passed address to spend the specified amount of tokens on behalf of

     * msg.sender. This method is included for ERC20 compatibility.

     * increaseAllowance and decreaseAllowance should be used instead.

     * Changing an allowance with this method brings the risk that someone may transfer both

     * the old and the new allowance - if they are both greater than zero - if a transfer

     * transaction is mined before the later approve() call is mined.

     *

     * @param spender The address which will spend the funds.

     * @param value The amount of tokens to be spent.

     */

    function approve(address spender, uint256 value)

        public

        whenTokenNotPaused

        returns (bool)

    {

        _allowedFragments[msg.sender][spender] = value;

        emit Approval(msg.sender, spender, value);

        return true;

    }



    /**

     * @dev Increase the amount of tokens that an owner has allowed to a spender.

     * This method should be used instead of approve() to avoid the double approval vulnerability

     * described above.

     * @param spender The address which will spend the funds.

     * @param addedValue The amount of tokens to increase the allowance by.

     */

    function increaseAllowance(address spender, uint256 addedValue)

        public

        whenTokenNotPaused

        returns (bool)

    {

        _allowedFragments[msg.sender][spender] =

            _allowedFragments[msg.sender][spender].add(addedValue);

        emit Approval(msg.sender, spender, _allowedFragments[msg.sender][spender]);

        return true;

    }



    /**

     * @dev Decrease the amount of tokens that an owner has allowed to a spender.

     *

     * @param spender The address which will spend the funds.

     * @param subtractedValue The amount of tokens to decrease the allowance by.

     */

    function decreaseAllowance(address spender, uint256 subtractedValue)

        public

        whenTokenNotPaused

        returns (bool)

    {

        uint256 oldValue = _allowedFragments[msg.sender][spender];

        if (subtractedValue >= oldValue) {

            _allowedFragments[msg.sender][spender] = 0;

        } else {

            _allowedFragments[msg.sender][spender] = oldValue.sub(subtractedValue);

        }

        emit Approval(msg.sender, spender, _allowedFragments[msg.sender][spender]);

        return true;

    }

}

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x661cedb088918820e6893F01356F8D745010452a.sol
Total states:1203
14.171725
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:03.380976
Transaction Length: 1
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 374
Estimated Gas Usage: 256 - 351
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0x661cedb088918820e6893F01356F8D745010452a.sol:69

_batches[b]

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:10.409206
Transaction Length: 2
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 374
Estimated Gas Usage: 256 - 351
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0x661cedb088918820e6893F01356F8D745010452a.sol:69

_batches[b]

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.146005
Transaction Length: 1
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 686
Estimated Gas Usage: 2977 - 4203
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x661cedb088918820e6893F01356F8D745010452a.sol:71

_token.transfer(_beneficiary, _batches[b].amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.795611
Transaction Length: 2
Severity: Low
Contract: TokenTimelock
Function name: release(uint256)
PC address: 686
Estimated Gas Usage: 2977 - 4203
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x661cedb088918820e6893F01356F8D745010452a.sol:71

_token.transfer(_beneficiary, _batches[b].amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x3f6dbe0364fa76d98cb6fadb3f52c6d343220ce2.sol
Total states:18192
42.51441
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.932034
Transaction Length: 2
Severity: High
Contract: Mega_Upload_Token
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x3f6dbe0364fa76d98cb6fadb3f52c6d343220ce2.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.285117
Transaction Length: 2
Severity: High
Contract: Mega_Upload_Token
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x3f6dbe0364fa76d98cb6fadb3f52c6d343220ce2.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xfc56274810a81320e140cba2b4143bfa3ea9420f.sol
Total states:5259
58.893993
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.903268
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xfc56274810a81320e140cba2b4143bfa3ea9420f.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.700385
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xfc56274810a81320e140cba2b4143bfa3ea9420f.sol:29

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.770933
Transaction Length: 1
Severity: High
Contract: Sarnado
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xfc56274810a81320e140cba2b4143bfa3ea9420f.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.942957
Transaction Length: 1
Severity: High
Contract: Sarnado
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xfc56274810a81320e140cba2b4143bfa3ea9420f.sol:29

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x1a7fa04ee5d638e8224aedcc42d94af840a376fe.sol
Total states:9807
212.01748
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.442923
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x1a7fa04ee5d638e8224aedcc42d94af840a376fe.sol:35

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.809989
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x1a7fa04ee5d638e8224aedcc42d94af840a376fe.sol:27

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.410508
Transaction Length: 1
Severity: High
Contract: GreenFinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 1648
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x1a7fa04ee5d638e8224aedcc42d94af840a376fe.sol:3

*/

//pragma solidity ^0.4.24;
prag

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:33.802070
Transaction Length: 1
Severity: Medium
Contract: GreenFinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x1a7fa04ee5d638e8224aedcc42d94af840a376fe.sol:207

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:41.776051
Transaction Length: 1
Severity: High
Contract: GreenFinance
Function name: safeMul(uint256,uint256)
PC address: 5262
Estimated Gas Usage: 394 - 489
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x1a7fa04ee5d638e8224aedcc42d94af840a376fe.sol:35

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:45.036347
Transaction Length: 1
Severity: High
Contract: GreenFinance
Function name: safeAdd(uint256,uint256)
PC address: 5840
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x1a7fa04ee5d638e8224aedcc42d94af840a376fe.sol:27

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xb19501f5a1c4623fe150134925ae339463b258f3.sol
Total states:7732
32.280645
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:19.242596
Transaction Length: 2
Severity: High
Contract: UAB
Function name: burnFrom(address,uint256)
PC address: 3508
Estimated Gas Usage: 7546 - 28781
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb19501f5a1c4623fe150134925ae339463b258f3.sol:151

allowed[_from][msg.sender] -= _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:24.151645
Transaction Length: 2
Severity: High
Contract: UAB
Function name: burnFrom(address,uint256)
PC address: 3524
Estimated Gas Usage: 12979 - 54214
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb19501f5a1c4623fe150134925ae339463b258f3.sol:152

_totalSupply -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x31900c186658ef7edbe7aa8c195f63df51757ce1.sol
Total states:10094
21.181885
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.036554
Transaction Length: 0
Severity: High
Contract: Aqua
Function name: constructor
PC address: 98
Estimated Gas Usage: 233 - 3006
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x31900c186658ef7edbe7aa8c195f63df51757ce1.sol:9

s water is there. It's the blue heart of th

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.594627
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x31900c186658ef7edbe7aa8c195f63df51757ce1.sol:88

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x3d46C3d1F62eB36aA287d73387D198E62709D8E7.sol
Total states:10360
106.476705
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.076565
Transaction Length: 1
Severity: High
Contract: YFUGovernance
Function name: propose(address,string)
PC address: 3296
Estimated Gas Usage: 441 - 536
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x3d46C3d1F62eB36aA287d73387D198E62709D8E7.sol:3

*/

/*
   ____            __   __  

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x75b6c7ba67488319b13d305be80ff2067412a483.sol
Total states:76081
147.010782
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.784981
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x75b6c7ba67488319b13d305be80ff2067412a483.sol:58

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:54.048004
Transaction Length: 2
Severity: High
Contract: DexCloud
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x75b6c7ba67488319b13d305be80ff2067412a483.sol:58

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.451979
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x75b6c7ba67488319b13d305be80ff2067412a483.sol:60

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.305752
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x75b6c7ba67488319b13d305be80ff2067412a483.sol:61

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.818104
Transaction Length: 2
Severity: High
Contract: DexCloud
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x75b6c7ba67488319b13d305be80ff2067412a483.sol:60

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.693983
Transaction Length: 2
Severity: High
Contract: DexCloud
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x75b6c7ba67488319b13d305be80ff2067412a483.sol:61

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x1BdC2454cb0b000C0c253883eF8d87524E014b79.sol
Total states:3378
5.962786
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x3bace839095cb4a488f5940805ff50d6102d3011.sol
Total states:1239
0.487998
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x2b9dde565ddf9b736c9051286b216f66a8219e36.sol
Total states:3274
7.758665
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x27496b898c449dc6c218574143c5be3c305f05bf.sol
Total states:18192
43.800292
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.982377
Transaction Length: 2
Severity: High
Contract: bella
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x27496b898c449dc6c218574143c5be3c305f05bf.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.223880
Transaction Length: 2
Severity: High
Contract: bella
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x27496b898c449dc6c218574143c5be3c305f05bf.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x392c6A09Ea482C894B63FC96dC2c389d1f485885.sol
Total states:24
0.040579
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x0713c9b4177005413e020e2c48711f81697884b3.sol
Total states:1585
2.807828
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039494
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x0713c9b4177005413e020e2c48711f81697884b3.sol:20

 @dev Provides information about the curren

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol
Total states:60
559.680785
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.983584
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactOut(address,uint256)
PC address: 4479
Estimated Gas Usage: 2622 - 40996
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.699249
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactOut(address,uint256)
PC address: 4482
Estimated Gas Usage: 2465 - 40556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.525265
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 4889
Estimated Gas Usage: 2465 - 40556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:196

new address[](2)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.310520
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5227
Estimated Gas Usage: 780 - 4497
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:199

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:54.542120
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5267
Estimated Gas Usage: 930 - 5023
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:199

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.351000
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5336
Estimated Gas Usage: 2372 - 40370
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.991485
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5339
Estimated Gas Usage: 2465 - 40556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.574008
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5360
Estimated Gas Usage: 2465 - 40556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:199

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.438058
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5385
Estimated Gas Usage: 2465 - 40556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:2


*/

pragma solidity 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:17.987941
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5391
Estimated Gas Usage: 2465 - 40556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:7

0 {
    functi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.976976
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5411
Estimated Gas Usage: 2523 - 40707
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:11

tion transfer(address

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:22.593520
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5413
Estimated Gas Usage: 2523 - 40707
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:10

turns (uint);
    function transfer(address 

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:54.340046
Transaction Length: 1
Severity: Low
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 5454
Estimated Gas Usage: 2662 - 41127
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0x404f9ecabd4a0d4507c81766e01f76fe52ca0acb.sol:199

UNI.getAmountsOut(inExact, _path)[1]

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xf2DB0ac56c159bdd8B76FcE5Be38A679dc908858.sol
Total states:150
1.96146
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x6B65c4760F56ea89A21193af5B909395766eF2E5.sol
Total states:428
1.403525
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol
Total states:1948
4.902401
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.694924
Transaction Length: 1
Severity: High
Contract: Flapper
Function name: tick(uint256)
PC address: 9230
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x882Ea50e923414D9036C6F344C01350EC0170C52.sol:124

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x3ba7bc627cbea7c3a6cfb7b7f4a3589e22ad1dca.sol
Total states:18192
43.190795
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.200183
Transaction Length: 2
Severity: High
Contract: Straight_Fire_Finance
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x3ba7bc627cbea7c3a6cfb7b7f4a3589e22ad1dca.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.544755
Transaction Length: 2
Severity: High
Contract: Straight_Fire_Finance
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x3ba7bc627cbea7c3a6cfb7b7f4a3589e22ad1dca.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xb1941be73fbb8cfc5cc911ca04d1e5d96a054e1b.sol
Total states:1756
2.92794
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xb47ac409fd451f89eadaefc4cf1e76daf7ae0650.sol
Total states:7809
17.744246
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039454
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb47ac409fd451f89eadaefc4cf1e76daf7ae0650.sol:12

t of tokens owned by `account`.
     */
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.413273
Transaction Length: 2
Severity: High
Contract: YFDToken
Function name: increaseAllowance(address,uint256)
PC address: 5475
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb47ac409fd451f89eadaefc4cf1e76daf7ae0650.sol:87

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xd65794890dd6c2209ff921dda3940a605f1d9b26.sol
Total states:942
0.946229
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xff26b5f615743c6fc0e9cc1ceabe61e540f73fdb.sol
Total states:19464
69.784633
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.032032
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4109
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xff26b5f615743c6fc0e9cc1ceabe61e540f73fdb.sol:37

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.556088
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4122
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xff26b5f615743c6fc0e9cc1ceabe61e540f73fdb.sol:38

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.204797
Transaction Length: 2
Severity: High
Contract: Altcoin
Function name: increaseApproval(address,uint256)
PC address: 4822
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xff26b5f615743c6fc0e9cc1ceabe61e540f73fdb.sol:37

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:27.590098
Transaction Length: 2
Severity: Low
Contract: Altcoin
Function name: increaseApproval(address,uint256)
PC address: 4835
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xff26b5f615743c6fc0e9cc1ceabe61e540f73fdb.sol:38

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x37E808F084101F75783612407e7C3f5F92d8ee3F.sol
Total states:10044
22.289192
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039083
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x37E808F084101F75783612407e7C3f5F92d8ee3F.sol:9

MMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMM

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.513424
Transaction Length: 2
Severity: High
Contract: RI
Function name: increaseAllowance(address,uint256)
PC address: 5988
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x37E808F084101F75783612407e7C3f5F92d8ee3F.sol:98

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x41a379957fd588b0cc262b5faab17d46a501b0a7.sol
Total states:4025
45.352197
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x469b73bb8cd6d98f22b5f610609be7a9ee90a9ba.sol
Total states:9044
32.45638
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.767276
Transaction Length: 2
Severity: High
Contract: SWSHX
Function name: increaseApproval(address,uint256)
PC address: 5497
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x469b73bb8cd6d98f22b5f610609be7a9ee90a9ba.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:27.811983
Transaction Length: 2
Severity: Low
Contract: SWSHX
Function name: increaseApproval(address,uint256)
PC address: 5510
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0x469b73bb8cd6d98f22b5f610609be7a9ee90a9ba.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xa7d8d230a09cc8c35afc6ca0a9bd31a941c4148d.sol
Total states:12444
25.858829
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.175248
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3913
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xa7d8d230a09cc8c35afc6ca0a9bd31a941c4148d.sol:225

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x618cd15883050dde5637fadf218f266f2df310de.sol
Total states:177
0.220917
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x2dbce82984595d977564888e08476053c6dbb0e3.sol
Total states:1587
3.763865
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.430734
Transaction Length: 1
Severity: Medium
Contract: SUSHIPOWAH
Function name: totalSupply()
PC address: 443
Estimated Gas Usage: 3856 - 73447
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1306
Offset: 1560
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x2dbce82984595d977564888e08476053c6dbb0e3.sol:94

function totalSupply() public view returns (uint256) {
    IPair pair = IPair(0x795065dCc9f64b5614C407a6EFDC400DA6221FB0);
    IBar bar = IBar(0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272);
    IERC20 sushi = IERC20(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);
    (uint256 lp_totalSushi, , ) = pair.getReserves();
    uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));

    return lp_totalSushi.mul(2).add(xsushi_totalSushi);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.304103
Transaction Length: 1
Severity: High
Contract: SUSHIPOWAH
Function name: balanceOf(address)
PC address: 3521
Estimated Gas Usage: 7019 - 145455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x2dbce82984595d977564888e08476053c6dbb0e3.sol:51

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x7a625b88b229b4451a6abc28a4d1c30dc708da19.sol
Total states:16612
155.473869
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.086111
Transaction Length: 0
Severity: Medium
Contract: PulotoGovernance
Function name: constructor
PC address: 411
Estimated Gas Usage: 53243 - 257448
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop5/0x7a625b88b229b4451a6abc28a4d1c30dc708da19.sol:700

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.205811
Transaction Length: 1
Severity: High
Contract: PulotoGovernance
Function name: propose(address,string)
PC address: 3513
Estimated Gas Usage: 418 - 513
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x7a625b88b229b4451a6abc28a4d1c30dc708da19.sol:3

*/

// File: @openzeppelin/contract

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x3b297e358207f43d878f2a8a11a3ba49c54d0802.sol
Total states:9586
19.795848
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039318
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x3b297e358207f43d878f2a8a11a3ba49c54d0802.sol:26

 * sender of the transaction and its data. 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.424217
Transaction Length: 2
Severity: High
Contract: FarmBBR
Function name: increaseAllowance(address,uint256)
PC address: 5735
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x3b297e358207f43d878f2a8a11a3ba49c54d0802.sol:288

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol
Total states:3604
62.72708
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:30.742758
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeSub(uint256,uint256)
PC address: 820
Estimated Gas Usage: 309 - 404
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.875827
Transaction Length: 1
Severity: Low
Contract: Math
Function name: safeDiv(uint256,uint256)
PC address: 959
Estimated Gas Usage: 324 - 419
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:117

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.111701
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 985
Estimated Gas Usage: 382 - 477
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.242648
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 1128
Estimated Gas Usage: 496 - 591
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:105

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:24.645563
Transaction Length: 1
Severity: High
Contract: Reserve
Function name: safeSub(uint256,uint256)
PC address: 3211
Estimated Gas Usage: 376 - 471
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:109

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.707804
Transaction Length: 1
Severity: Low
Contract: Reserve
Function name: safeDiv(uint256,uint256)
PC address: 3360
Estimated Gas Usage: 303 - 398
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:117

x / y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:27.307050
Transaction Length: 1
Severity: Low
Contract: Reserve
Function name: balance()
PC address: 3509
Estimated Gas Usage: 1431 - 2137
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:237

shelf.balanceRequest()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.529566
Transaction Length: 1
Severity: High
Contract: Reserve
Function name: rdiv(uint256,uint256)
PC address: 4293
Estimated Gas Usage: 428 - 523
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:113

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.376572
Transaction Length: 1
Severity: High
Contract: Reserve
Function name: rdiv(uint256,uint256)
PC address: 4576
Estimated Gas Usage: 542 - 637
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xB873c152C06be54C704F891E37A7e3B554514964.sol:105

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x1b926fbb24a9f78dcdd3272f2d86f5d0660e59c0.sol
Total states:93
0.175842
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x1616243ec5acaab0f2484b3d4aafe8f63232d2f9.sol
Total states:120
1.326563
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol
Total states:21575
183.476078
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.027772
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:9

dress constant BUSD_DEPOSIT_ADDRESS   = 0xb

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.390864
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: fallback
PC address: 142
Estimated Gas Usage: 2311 - 39600
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x594153a000000000000000000000000000000000000000000000000000000000
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1035

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.393411
Transaction Length: 1
Severity: Medium
Contract: PoolProxy
Function name: fallback
PC address: 160
Estimated Gas Usage: 3056 - 74345
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 931
Offset: 142
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1044

return(ptr, size)

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.670279
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: fallback
PC address: 264
Estimated Gas Usage: 725 - 3547
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy))
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:902

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.026701
Transaction Length: 1
Severity: Low
Contract: Deposit3Tokens
Function name: period_timestamp(uint256)
PC address: 380
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:992

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.095893
Transaction Length: 1
Severity: Low
Contract: Deposit2Tokens
Function name: period_timestamp(uint256)
PC address: 393
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:986

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:53.131180
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 537
Estimated Gas Usage: 1433 - 2470
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:58.273849
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 577
Estimated Gas Usage: 1583 - 2996
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.606228
Transaction Length: 1
Severity: Low
Contract: TokenManager
Function name: supportAddresses(address,uint256)
PC address: 613
Estimated Gas Usage: 752 - 1037
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.235781
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: supportAddresses(address,uint256)
PC address: 1317
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:03.354983
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1575
Estimated Gas Usage: 4173 - 40386
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1082

IERC20(tokenAddress).transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:09.472515
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1891
Estimated Gas Usage: 5889 - 76759
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1085

IERC20(tokenAddress).approve(EXCHANGE_CONTRACT, amount)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.537870
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: supportAddresses(address,uint256)
PC address: 2114
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.972258
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2259
Estimated Gas Usage: 8446 - 148446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:5

enManager {
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.597701
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2262
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:3



 contract TokenManager {
    
    address

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.106254
Transaction Length: 2
Severity: High
Contract: PoolToken
Function name: increaseAllowance(address,uint256)
PC address: 4840
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:139

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.791041
Transaction Length: 1
Severity: Low
Contract: PoolFactory
Function name: supportAddresses(address,uint256)
PC address: 5037
Estimated Gas Usage: 796 - 1081
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:13.472290
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: supportAddresses(address,uint256)
PC address: 8485
Estimated Gas Usage: 818 - 1103
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.615277
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17754
Estimated Gas Usage: 5008 - 75599
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:5

enManager {
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.232093
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17757
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:3



 contract TokenManager {
    
    address

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:34.343009
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17778
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1241

IOneSplit(EXCHANGE_CONTRACT).getExpectedReturn(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, 100, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.191406
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17813
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:2


*/

 contract TokenM

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:41.048785
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17819
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:7

ant COMPOUND_D

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:48.933951
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17839
Estimated Gas Usage: 5186 - 76056
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:9

POSIT_ADDRESS   = 0xb

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:58.000364
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17841
Estimated Gas Usage: 5186 - 76056
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:9

dress constant BUSD_DEPOSIT_ADDRESS   = 0xb6

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:39.657008
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18208
Estimated Gas Usage: 5661 - 77946
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:39.112708
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18245
Estimated Gas Usage: 6389 - 78579
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.657044
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 19161
Estimated Gas Usage: 5923 - 76793
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0xd6d1309c82cb912c43744e7141d3fb0c9ea22e09.sol:1257

IERC20(DAI_ADDRESS).approve(_depositPool, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x2d237d3d7c7c12411638cd4c3b1500f3c509ab55.sol
Total states:481
3.892342
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xbD1c6eFE7fE953205465855E0670CE94b34BB22f.sol
Total states:495
0.250382
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xe5b677c7aae044135f81feb4c38b877272e6f6dd.sol
Total states:2115
6.068186
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x46b24cf9159fc05b9060760ed4d5a18dd207346b.sol
Total states:9807
214.125424
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.350817
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x46b24cf9159fc05b9060760ed4d5a18dd207346b.sol:70

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:40.836704
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x46b24cf9159fc05b9060760ed4d5a18dd207346b.sol:54

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.473968
Transaction Length: 1
Severity: High
Contract: ARKFinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 1648
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x46b24cf9159fc05b9060760ed4d5a18dd207346b.sol:3



*/



//pragma solidity ^0.4.24;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:31.887446
Transaction Length: 1
Severity: Medium
Contract: ARKFinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x46b24cf9159fc05b9060760ed4d5a18dd207346b.sol:416

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:40.034015
Transaction Length: 1
Severity: High
Contract: ARKFinance
Function name: safeMul(uint256,uint256)
PC address: 5262
Estimated Gas Usage: 394 - 489
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x46b24cf9159fc05b9060760ed4d5a18dd207346b.sol:70

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:29.810384
Transaction Length: 1
Severity: High
Contract: ARKFinance
Function name: safeAdd(uint256,uint256)
PC address: 5840
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x46b24cf9159fc05b9060760ed4d5a18dd207346b.sol:54

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol
Total states:150
95.562239
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.309982
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.253024
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.623738
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:3



// File: @openzeppelin/contracts/token/ER

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.674429
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:3



// File: @openzeppelin/contracts/token/ER

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.044565
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:655

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.245531
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:655

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.516320
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:16

ce.
     */
    funct

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.759558
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:16

ce.
     */
    funct

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.391924
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:16

t of tokens in existence.
     */
    functi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.680929
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf18e22acf4bb8b7a6a2399764274640bde081d95.sol:16

t of tokens in existence.
     */
    functi

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x55a290f08bb4cae8dcf1ea5635a3fcfd4da60456.sol
Total states:8705
250.242712
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.417177
Transaction Length: 1
Severity: High
Contract: BITTO
Function name: approveAndCall(address,uint256,bytes)
PC address: 1242
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x55a290f08bb4cae8dcf1ea5635a3fcfd4da60456.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:28.303456
Transaction Length: 1
Severity: Medium
Contract: BITTO
Function name: approveAndCall(address,uint256,bytes)
PC address: 4580
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x55a290f08bb4cae8dcf1ea5635a3fcfd4da60456.sol:127

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x835317C1D587971c03940b16d306DF8f4D19bf62.sol
Total states:2191
6.026957
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.986010
Transaction Length: 1
Severity: High
Contract: Flipper
Function name: tick(uint256)
PC address: 12726
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x835317C1D587971c03940b16d306DF8f4D19bf62.sol:135

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xb5eb2247cd16166d86925dccfa5b3d083daa0e5c.sol
Total states:76097
153.354659
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:58.690563
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb5eb2247cd16166d86925dccfa5b3d083daa0e5c.sol:60

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.556119
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb5eb2247cd16166d86925dccfa5b3d083daa0e5c.sol:60

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:02.625132
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb5eb2247cd16166d86925dccfa5b3d083daa0e5c.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:08.324637
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb5eb2247cd16166d86925dccfa5b3d083daa0e5c.sol:63

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.878509
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb5eb2247cd16166d86925dccfa5b3d083daa0e5c.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:04.181602
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb5eb2247cd16166d86925dccfa5b3d083daa0e5c.sol:63

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xc08144aa808c06a39b8ca1afeac3e737cfdf747a.sol
Total states:18509
51.303682
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.431925
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xc08144aa808c06a39b8ca1afeac3e737cfdf747a.sol:286

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.324769
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 3847
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xc08144aa808c06a39b8ca1afeac3e737cfdf747a.sol:286

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x65a6b7222Ea6f118DBA8C21d293D0c29e23420C9.sol
Total states:6625
12.202991
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.806093
Transaction Length: 1
Severity: High
Contract: LPTokenWrapper
Function name: stake(uint256)
PC address: 1964
Estimated Gas Usage: 402 - 497
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x65a6b7222Ea6f118DBA8C21d293D0c29e23420C9.sol:158

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x7f1AE7A1fC275B5B9C3ad4497Fa94E3b9424E76e.sol
Total states:180
3.779541
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x0c212728e3cdb57ed62ddfca917fe7df17a63979.sol
Total states:150
3.600221
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xb0f1aa4b8a64eb0be44fd0b39a486bee2255a8c5.sol
Total states:1239
0.655068
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xC30e3C0f121a5E357E321CED6504d31A71Abcdcc.sol
Total states:9086
21.925017
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.348249
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xC30e3C0f121a5E357E321CED6504d31A71Abcdcc.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x526548c12d392c4a12a477596aa18076490ba624.sol
Total states:8045
16.465692
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041565
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x526548c12d392c4a12a477596aa18076490ba624.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.563696
Transaction Length: 2
Severity: High
Contract: YFIGOLD
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x526548c12d392c4a12a477596aa18076490ba624.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xf13acac1bf183bebaf94c7af7723837192f3d0d6.sol
Total states:3381
6.23783
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xcc23ef76b46ed576caa5a1481f4400d2543f8006.sol
Total states:839
5.923378
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.895998
Transaction Length: 1
Severity: Low
Contract: Swapico
Function name: purchase(uint256)
PC address: 1477
Estimated Gas Usage: 6253 - 76933
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0xcc23ef76b46ed576caa5a1481f4400d2543f8006.sol:218

IERC20(synthetico).burnFrom(msg.sender, _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.737426
Transaction Length: 1
Severity: Low
Contract: Swapico
Function name: purchase(uint256)
PC address: 1698
Estimated Gas Usage: 8283 - 113764
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0xcc23ef76b46ed576caa5a1481f4400d2543f8006.sol:220

IERC20(authentico).transfer(msg.sender, _amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x2c3eeead12224129742e7841a2f3d7787dabb58c.sol
Total states:17591
28.961911
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.037888
Transaction Length: 0
Severity: High
Contract: Token
Function name: constructor
PC address: 98
Estimated Gas Usage: 233 - 3006
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x2c3eeead12224129742e7841a2f3d7787dabb58c.sol:21


interface ERC20Interface {

    /**

     

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:17.123930
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1574
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x2c3eeead12224129742e7841a2f3d7787dabb58c.sol:222

_balances[_to] += _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:21.243615
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1650
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x2c3eeead12224129742e7841a2f3d7787dabb58c.sol:224

_balances[_from] -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xe46ec14432033ede29343e9692a32c9adc314271.sol
Total states:130
0.216661
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xa0fdd7e5ba097c8a57897a063266d48f9cf5a0a0.sol
Total states:3497
11.602778
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x0d3e8d6a33e7af33b86221ff8c24a74b8dee8583.sol
Total states:1033
1.101083
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x2C576fF1c2Fd70c1555F64Bd61E4dB271Bff2f99.sol
Total states:0
0.011859
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xd4501b7449b444072ccaaa53a2fca348c7c34e0a.sol
Total states:18192
43.441236
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.199967
Transaction Length: 2
Severity: High
Contract: ponzi
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd4501b7449b444072ccaaa53a2fca348c7c34e0a.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.188533
Transaction Length: 2
Severity: High
Contract: ponzi
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd4501b7449b444072ccaaa53a2fca348c7c34e0a.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x1457dd7eee6457b727840e985750aeb7c065ae0b.sol
Total states:3455
5.811203
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x78a24c16a719e4b1578509c4b60320b20d06badc.sol
Total states:10492
37.871584
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.939771
Transaction Length: 1
Severity: High
Contract: yfOMEGA
Function name: transfer(address,uint256)
PC address: 6338
Estimated Gas Usage: 834 - 929
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x78a24c16a719e4b1578509c4b60320b20d06badc.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.277748
Transaction Length: 2
Severity: High
Contract: yfOMEGA
Function name: increaseAllowance(address,uint256)
PC address: 6458
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x78a24c16a719e4b1578509c4b60320b20d06badc.sol:11

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x73d2e2e1368c1b39cf0f39da60e8f44e96c64930.sol
Total states:8020
137.51688
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.359759
Transaction Length: 1
Severity: High
Contract: GTR
Function name: approveAndCall(address,uint256,bytes)
PC address: 1845
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x73d2e2e1368c1b39cf0f39da60e8f44e96c64930.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:35.456618
Transaction Length: 1
Severity: Medium
Contract: GTR
Function name: approveAndCall(address,uint256,bytes)
PC address: 6733
Estimated Gas Usage: 9711 - 36091
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x73d2e2e1368c1b39cf0f39da60e8f44e96c64930.sol:225

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.307130
Transaction Length: 2
Severity: High
Contract: GTR
Function name: transferFrom(address,address,uint256)
PC address: 7435
Estimated Gas Usage: 2690 - 4205
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x73d2e2e1368c1b39cf0f39da60e8f44e96c64930.sol:18

a + b

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.584755
Transaction Length: 1
Severity: High
Contract: GTR
Function name: transfer(address,uint256)
PC address: 7462
Estimated Gas Usage: 2780 - 3915
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x73d2e2e1368c1b39cf0f39da60e8f44e96c64930.sol:14

a - b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x643e34976d68a678e56634405ca4d6fc5e52b039.sol
Total states:60
0.718787
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xe135f5669c29fe91a1779991f5a6c79afb6b56ee.sol
Total states:9014
19.355104
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.587202
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xe135f5669c29fe91a1779991f5a6c79afb6b56ee.sol:108

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x8d26371703b9856c79726b0bd7668ce2fd4f823b.sol
Total states:3365
5.912939
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x41bc0913ed789428e107c4ea9ed007815c5a8230.sol
Total states:53557
108.619849
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.165183
Transaction Length: 1
Severity: High
Contract: KOMP
Function name: register(string)
PC address: 2171
Estimated Gas Usage: 428 - 523
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x41bc0913ed789428e107c4ea9ed007815c5a8230.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.641255
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 5537
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x41bc0913ed789428e107c4ea9ed007815c5a8230.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.995904
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6860
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x41bc0913ed789428e107c4ea9ed007815c5a8230.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.060894
Transaction Length: 2
Severity: High
Contract: FreezeToken
Function name: increaseApproval(address,uint256)
PC address: 7549
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x41bc0913ed789428e107c4ea9ed007815c5a8230.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.030901
Transaction Length: 2
Severity: High
Contract: KOMP
Function name: increaseApproval(address,uint256)
PC address: 9131
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x41bc0913ed789428e107c4ea9ed007815c5a8230.sol:47

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x45e31a35078e0d9a82c4041bd4fd1f136f736068.sol
Total states:53557
108.317204
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.756806
Transaction Length: 1
Severity: High
Contract: KOMP
Function name: register(string)
PC address: 2171
Estimated Gas Usage: 428 - 523
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x45e31a35078e0d9a82c4041bd4fd1f136f736068.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.674398
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 5537
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x45e31a35078e0d9a82c4041bd4fd1f136f736068.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.975402
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6860
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x45e31a35078e0d9a82c4041bd4fd1f136f736068.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.069662
Transaction Length: 2
Severity: High
Contract: FreezeToken
Function name: increaseApproval(address,uint256)
PC address: 7549
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x45e31a35078e0d9a82c4041bd4fd1f136f736068.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.012927
Transaction Length: 2
Severity: High
Contract: KOMP
Function name: increaseApproval(address,uint256)
PC address: 9131
Estimated Gas Usage: 1444 - 2249
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x45e31a35078e0d9a82c4041bd4fd1f136f736068.sol:47

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x1cf607013db83dd9c622ba4976bdc6959b34bfdc.sol
Total states:3209
7.856722
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.124359
Transaction Length: 1
Severity: Low
Contract: UPLOADstaking
Function name: deposit(uint256)
PC address: 4300
Estimated Gas Usage: 1234 - 1895
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x1cf607013db83dd9c622ba4976bdc6959b34bfdc.sol:256

Token(tokenAddress).transferFrom(msg.sender, address(this), amountToStake)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.095053
Transaction Length: 2
Severity: Low
Contract: UPLOADstaking
Function name: deposit(uint256)
PC address: 4300
Estimated Gas Usage: 1234 - 1895
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x1cf607013db83dd9c622ba4976bdc6959b34bfdc.sol:256

Token(tokenAddress).transferFrom(msg.sender, address(this), amountToStake)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x94d17e458e437d02b358f8154a83a7f024024d72.sol
Total states:11570
21.952513
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039462
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x94d17e458e437d02b358f8154a83a7f024024d72.sol:11

        ██║ ██║ ██║
  

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.053519
Transaction Length: 2
Severity: High
Contract: YFIII
Function name: increaseAllowance(address,uint256)
PC address: 5693
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x94d17e458e437d02b358f8154a83a7f024024d72.sol:157

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x1c71eff16ea2328d6392838c8773c805f352799d.sol
Total states:3429
5.733773
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xf8C3527CC04340b208C854E985240c02F7B7793f.sol
Total states:3871
45.746796
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.351661
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf8C3527CC04340b208C854E985240c02F7B7793f.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.709819
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf8C3527CC04340b208C854E985240c02F7B7793f.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.211383
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf8C3527CC04340b208C854E985240c02F7B7793f.sol:275

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.731012
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf8C3527CC04340b208C854E985240c02F7B7793f.sol:10

 external returns (bo

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.684953
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xf8C3527CC04340b208C854E985240c02F7B7793f.sol:10

pient, uint256 amount) external returns (boo

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x845cc90dc30dd20f8e05bdf346218ba19f376973.sol
Total states:2129
3.202707
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039766
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x845cc90dc30dd20f8e05bdf346218ba19f376973.sol:13

ext, including the
 * sender of the transac

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xa3dbaeeb5bd9e98ade30631d5450f6b18ce72eed.sol
Total states:1438
3.599528
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048033
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 147
Estimated Gas Usage: 25287 - 128060
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xa3dbaeeb5bd9e98ade30631d5450f6b18ce72eed.sol:10

ta. While these are generally available
 * 

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x55ceb773c494cf7ad4f2e3170936866bd7eff1c9.sol
Total states:2790
6.397068
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xbb4e0913884e3798ab7d71013f773546036afa8b.sol
Total states:3269
6.903917
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x320ec29c92a0436c0927199d221e7a38a3610439.sol
Total states:9010
18.345839
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.679265
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0x320ec29c92a0436c0927199d221e7a38a3610439.sol:286

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xCbE931C20541ff86f048908Db456bEE8823d3F1A.sol
Total states:2330
3.100451
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x15bf96d8f21f3e4d4cffaff9617a6b7895f91890.sol
Total states:850
4.352612
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.021119
Transaction Length: 1
Severity: Low
Contract: QYFMarketingFundLock
Function name: release()
PC address: 1196
Estimated Gas Usage: 5049 - 42716
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop5/0x15bf96d8f21f3e4d4cffaff9617a6b7895f91890.sol:163

address(token).call(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xb4a679cfab115f2fcc6bb087a20e81b5dcd27c45.sol
Total states:5259
56.433951
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.402393
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb4a679cfab115f2fcc6bb087a20e81b5dcd27c45.sol:36

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.332474
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb4a679cfab115f2fcc6bb087a20e81b5dcd27c45.sol:32

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.702694
Transaction Length: 1
Severity: High
Contract: AppleFinanceToken
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb4a679cfab115f2fcc6bb087a20e81b5dcd27c45.sol:36

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.953653
Transaction Length: 1
Severity: High
Contract: AppleFinanceToken
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xb4a679cfab115f2fcc6bb087a20e81b5dcd27c45.sol:32

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xEDC15272648DCA9948649f14f846301d0Ef788b4.sol
Total states:6625
12.086698
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.807221
Transaction Length: 1
Severity: High
Contract: LPTokenWrapper
Function name: stake(uint256)
PC address: 1964
Estimated Gas Usage: 402 - 497
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xEDC15272648DCA9948649f14f846301d0Ef788b4.sol:158

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xba9B45AE4AA08B5312b905Cc9b793b23269727e1.sol
Total states:3445
11.585843
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xecd78d9b6b6daa268ea7524557c361fcc8a323b7.sol
Total states:871
0.494366
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0xd67b92809ecdc088e0706a092ce2b06f3871fe17.sol
Total states:26868
172.239185
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:44.941368
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3739
Estimated Gas Usage: 1025 - 1500
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd67b92809ecdc088e0706a092ce2b06f3871fe17.sol:57

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:45.080098
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 4169
Estimated Gas Usage: 1025 - 1500
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd67b92809ecdc088e0706a092ce2b06f3871fe17.sol:57

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:39.735386
Transaction Length: 2
Severity: High
Contract: Defietherfund
Function name: increaseAllowance(address,uint256)
PC address: 4651
Estimated Gas Usage: 1025 - 1500
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop5/0xd67b92809ecdc088e0706a092ce2b06f3871fe17.sol:57

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x50e1a50e244aeD8Cf3e76a063BbE8a5C6F69Ea83.sol
Total states:93
0.069375
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.002356
Transaction Length: 1
Severity: Low
Contract: Proxy
Function name: fallback
PC address: 54
Estimated Gas Usage: 459 - 2951
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy),
       1_code(Proxy))
--------------------
In file: ../../contracts/noloop/noloop5/0x50e1a50e244aeD8Cf3e76a063BbE8a5C6F69Ea83.sol:24

delegatecall(gas, contractLogic, ptr, calldatasize, 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop5/0x533b1d83998f8b2beacfac1b268f7e4d2a31ea9b.sol
Total states:670
11.415436
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:05.632793
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFreeFrom(address,uint256,address,uint256,bytes32)
PC address: 217
Estimated Gas Usage: 3768 - 73177
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 514
Offset: 1130
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x533b1d83998f8b2beacfac1b268f7e4d2a31ea9b.sol:88

function burnGasAndFreeFrom(address gas_token, uint256 free, address mToken, uint256 nonce, bytes32 challenge_digest) public {

        require(GasToken1(gas_token).freeFrom(msg.sender, free), "Could not free");

        expensiveStuff(mToken, nonce, challenge_digest);

    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:11.300001
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFree(address,uint256,address,uint256,bytes32)
PC address: 347
Estimated Gas Usage: 3744 - 73058
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 818
Offset: 1130
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop5/0x533b1d83998f8b2beacfac1b268f7e4d2a31ea9b.sol:62

function burnGasAndFree(address gas_token, uint256 free, address mToken, uint256 nonce, bytes32 challenge_digest) public {

        require(GasToken1(gas_token).free(free), "Could not free");

        expensiveStuff(mToken, nonce, challenge_digest);

    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:01.852782
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFreeFrom(address,uint256,address,uint256,bytes32)
PC address: 514
Estimated Gas Usage: 1198 - 1764
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x533b1d83998f8b2beacfac1b268f7e4d2a31ea9b.sol:90

GasToken1(gas_token).freeFrom(msg.sender, free)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:07.581545
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFree(address,uint256,address,uint256,bytes32)
PC address: 818
Estimated Gas Usage: 1174 - 1645
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x533b1d83998f8b2beacfac1b268f7e4d2a31ea9b.sol:64

GasToken1(gas_token).free(free)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:11.179102
Transaction Length: 1
Severity: Medium
Contract: BurnGas
Function name: burnGasAndFree(address,uint256,address,uint256,bytes32)
PC address: 1130
Estimated Gas Usage: 2880 - 38008
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop5/0x533b1d83998f8b2beacfac1b268f7e4d2a31ea9b.sol:44

ERC918Interface(mToken).mint(nonce, challenge_digest)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xbe23e67938d40f2a9e1672f2c99c0de3d079417e.sol
Total states:942
0.734659
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xd6fA35E9Cc07131e60bc1BbE0541AE1d373B4026.sol
Total states:11841
272.425633
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.646588
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd6fA35E9Cc07131e60bc1BbE0541AE1d373B4026.sol:39

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:15.624776
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd6fA35E9Cc07131e60bc1BbE0541AE1d373B4026.sol:29

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.439862
Transaction Length: 1
Severity: High
Contract: ARBTToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1483
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd6fA35E9Cc07131e60bc1BbE0541AE1d373B4026.sol:3

*/

//pragma solidity ^0.4.24;
prag

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:36.896175
Transaction Length: 1
Severity: Medium
Contract: ARBTToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 4325
Estimated Gas Usage: 8823 - 34729
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xd6fA35E9Cc07131e60bc1BbE0541AE1d373B4026.sol:180

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:38.940484
Transaction Length: 1
Severity: High
Contract: ARBTToken
Function name: safeMul(uint256,uint256)
PC address: 4362
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd6fA35E9Cc07131e60bc1BbE0541AE1d373B4026.sol:39

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:49.295976
Transaction Length: 1
Severity: High
Contract: ARBTToken
Function name: safeAdd(uint256,uint256)
PC address: 4546
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd6fA35E9Cc07131e60bc1BbE0541AE1d373B4026.sol:29

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol
Total states:9087
45.240817
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:06.198931
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeSub(uint256,uint256)
PC address: 601
Estimated Gas Usage: 527 - 622
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:110

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:08.160336
Transaction Length: 1
Severity: Low
Contract: Math
Function name: safeDiv(uint256,uint256)
PC address: 689
Estimated Gas Usage: 542 - 637
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:118

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.866961
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 715
Estimated Gas Usage: 600 - 695
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:114

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.492140
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeAdd(uint256,uint256)
PC address: 807
Estimated Gas Usage: 593 - 688
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:106

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:04.580705
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: safeSub(uint256,uint256)
PC address: 7105
Estimated Gas Usage: 595 - 690
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:110

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.304741
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 7399
Estimated Gas Usage: 2505 - 37399
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:5

sing https://da

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.569674
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 7402
Estimated Gas Usage: 2505 - 37399
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:3



// Verified using https://dapp.tools

// 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.507232
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 7414
Estimated Gas Usage: 2505 - 37399
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:529

assessor.maxReserve()

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:12.490019
Transaction Length: 1
Severity: Low
Contract: EpochCoordinator
Function name: safeDiv(uint256,uint256)
PC address: 7786
Estimated Gas Usage: 566 - 661
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:118

x / y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.704542
Transaction Length: 1
Severity: Low
Contract: EpochCoordinator
Function name: closeEpoch()
PC address: 8338
Estimated Gas Usage: 13340 - 54376
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:336

reserve.balance()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.267169
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: calcAssets(uint256,uint256)
PC address: 11305
Estimated Gas Usage: 599 - 694
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:106

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:09.185192
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 14115
Estimated Gas Usage: 2505 - 37399
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:142

e as published by
// th

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.104797
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreImprovement((uint256),uint256)
PC address: 16145
Estimated Gas Usage: 428 - 616
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x99f36Ea3c21bf0c3ed3D53bFdB9f7D8a28A894a9.sol:482

value <= maxRatio

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x93a56223743a0a83d86267df4868d51e23d832f1.sol
Total states:3395
6.336518
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x689CF5f8DD09BBB4417514C88909bb64ebA2547D.sol
Total states:7439
17.868148
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.866933
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x689CF5f8DD09BBB4417514C88909bb64ebA2547D.sol:118

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x30763939b717Efe725d0E221D77237BC419E4732.sol
Total states:848
4.965133
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.053136
Transaction Length: 1
Severity: Low
Contract: TokenLockerII
Function name: unlockToken(address,uint256)
PC address: 1034
Estimated Gas Usage: 2348 - 4004
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x30763939b717Efe725d0E221D77237BC419E4732.sol:79

ERC20Token(lockedTokensData[msg.sender][tokenAddress].tokenAddress).approve(address(this),withdrawAmount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.496884
Transaction Length: 1
Severity: Low
Contract: TokenLockerII
Function name: unlockToken(address,uint256)
PC address: 1468
Estimated Gas Usage: 4681 - 41799
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x30763939b717Efe725d0E221D77237BC419E4732.sol:80

ERC20Token(lockedTokensData[msg.sender][tokenAddress].tokenAddress).transferFrom(address(this),address(msg.sender),withdrawAmount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:04.442643
Transaction Length: 1
Severity: Medium
Contract: TokenLockerII
Function name: lockToken(address,uint256,uint256)
PC address: 1689
Estimated Gas Usage: 1128 - 1599
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0x30763939b717Efe725d0E221D77237BC419E4732.sol:71

ERC20Token(tokenAddress).balanceOf(address(this))

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xa8ea49a9e242fffbdecc4583551c3bcb111456e6.sol
Total states:8882
23.194567
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.109301
Transaction Length: 0
Severity: High
Contract: iVault
Function name: constructor
PC address: 227
Estimated Gas Usage: 11770 - 88919
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xa8ea49a9e242fffbdecc4583551c3bcb111456e6.sol:6

ed for verifica

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.294556
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xa8ea49a9e242fffbdecc4583551c3bcb111456e6.sol:132

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol
Total states:114
501.539327
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.022938
Transaction Length: 1
Severity: High
Contract: TimelockWrapper
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 304
Estimated Gas Usage: 355 - 450
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.242505
Transaction Length: 1
Severity: High
Contract: TimelockWrapper
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 455
Estimated Gas Usage: 706 - 3483
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:57.225924
Transaction Length: 1
Severity: High
Contract: TimelockWrapper
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 851
Estimated Gas Usage: 423 - 518
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:09.016820
Transaction Length: 1
Severity: High
Contract: TimelockWrapper
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1002
Estimated Gas Usage: 765 - 3542
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:31.280408
Transaction Length: 1
Severity: High
Contract: TimelockWrapper
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1274
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:48.188839
Transaction Length: 1
Severity: High
Contract: TimelockWrapper
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1425
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:38.754839
Transaction Length: 1
Severity: High
Contract: TimelockWrapper
Function name: setSig()
PC address: 1656
Estimated Gas Usage: 439 - 1569
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x511a878bd440f15c0f6c86590a9a6f3c58d9284b.sol:337

string constant public setSig =  "set(uint256,uint256,bool)"

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol
Total states:150
100.096016
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.344550
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.435065
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.776377
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:3



// File: @openzeppelin/contracts/token/ER

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.941122
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:3



// File: @openzeppelin/contracts/token/ER

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.353296
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:655

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.606673
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:655

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.140641
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:16

ce.
     */
    funct

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.370319
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:16

ce.
     */
    funct

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.597576
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:16

t of tokens in existence.
     */
    functi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.042070
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6eb94e64fc7789a57fdf89fe2ffd2eb39b252e4.sol:16

t of tokens in existence.
     */
    functi

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x66b5b6d471CC69BcF19b2a50CB744b47d63191b5.sol
Total states:30
0.143247
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x8019ea9d5f7a7a58a259ff69d4a9572f4c34a058.sol
Total states:1576
1.851814
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x4af5d39772bd9d6e152ac3c083e0d9a4f345c3af.sol
Total states:3429
5.950352
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x97d8cc53bee67872ae4ee5dd904389fe992e509a.sol
Total states:8045
18.111424
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.062920
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x97d8cc53bee67872ae4ee5dd904389fe992e509a.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.738026
Transaction Length: 2
Severity: High
Contract: YFIB
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x97d8cc53bee67872ae4ee5dd904389fe992e509a.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xc2fb644cd18325c58889cf8bb0573e4a8774bcd2.sol
Total states:1564
1.59582
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol
Total states:38294
130.726698
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.962322
Transaction Length: 2
Severity: High
Contract: BasicToken
Function name: increaseApproval(address,uint256)
PC address: 4101
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol:65

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:33.653134
Transaction Length: 2
Severity: Low
Contract: BasicToken
Function name: increaseApproval(address,uint256)
PC address: 4114
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol:66

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:44.996453
Transaction Length: 2
Severity: Low
Contract: ERC20Burnable
Function name: burnFrom(address,uint256)
PC address: 4264
Estimated Gas Usage: 6613 - 29675
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol:54

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.356547
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseApproval(address,uint256)
PC address: 4281
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol:65

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:48.571091
Transaction Length: 2
Severity: Low
Contract: ERC20Burnable
Function name: increaseApproval(address,uint256)
PC address: 4294
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol:66

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.435312
Transaction Length: 2
Severity: High
Contract: Mintable
Function name: increaseApproval(address,uint256)
PC address: 5869
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol:65

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.350837
Transaction Length: 2
Severity: Low
Contract: Mintable
Function name: increaseApproval(address,uint256)
PC address: 5882
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0xdcef1d522d76509860ea7936cb581f283200fc64.sol:66

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x2fd851d98211038ef59a0755584888350d14b71c.sol
Total states:23078
7824.33975
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.017253
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2fd851d98211038ef59a0755584888350d14b71c.sol:135

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:50.865282
Transaction Length: 2
Severity: High
Contract: AvocadoSwap
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2fd851d98211038ef59a0755584888350d14b71c.sol:135

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xb53189eb5ab4a0c866736b3a17ac5a847cdb5b55.sol
Total states:6443
22.130027
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.628753
Transaction Length: 2
Severity: High
Contract: GoBrrrToken
Function name: transferFrom(address,address,uint256)
PC address: 7114
Estimated Gas Usage: 2245 - 2910
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xb53189eb5ab4a0c866736b3a17ac5a847cdb5b55.sol:200

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.634919
Transaction Length: 2
Severity: High
Contract: GoBrrrToken
Function name: increaseAllowance(address,uint256)
PC address: 7237
Estimated Gas Usage: 959 - 1434
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xb53189eb5ab4a0c866736b3a17ac5a847cdb5b55.sol:244

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x0cea4024d09d75066cd1aaace6682035f0ebea3c.sol
Total states:9014
19.87949
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.897497
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0cea4024d09d75066cd1aaace6682035f0ebea3c.sol:108

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x613f654c7bbb948219f3952173518debcd963718.sol
Total states:7772
11.331551
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040638
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x613f654c7bbb948219f3952173518debcd963718.sol:14

 available, which can be applied to functio

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x35e805BA2FB7Ad4C8Ad9D644Ca9Bd34a49f5500d.sol
Total states:774
1.10778
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x07eb8cb8aedb581a2d73cc29f6c7860226808ca2.sol
Total states:7948
18.860295
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.934836
Transaction Length: 0
Severity: High
Contract: YFVGovernanceVault
Function name: constructor
PC address: 672
Estimated Gas Usage: 109006 - 534790
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x07eb8cb8aedb581a2d73cc29f6c7860226808ca2.sol:448

_earnLowerlimit * 1e18

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.894263
Transaction Length: 1
Severity: Low
Contract: YFVGovernanceVault
Function name: doHardWork()
PC address: 17538
Estimated Gas Usage: 1711 - 2607
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x07eb8cb8aedb581a2d73cc29f6c7860226808ca2.sol:359

chi.freeFromUpTo(msg.sender, (gasSpent + 14154) / 41130)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.863479
Transaction Length: 1
Severity: High
Contract: YFVGovernanceVault
Function name: available()
PC address: 30045
Estimated Gas Usage: 2828 - 37815
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x07eb8cb8aedb581a2d73cc29f6c7860226808ca2.sol:87

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x97151f1c5e61ce60fa1378a6985ceaecfa341b0e.sol
Total states:8841
8.675674
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x39ee9b9ea9e4b9cc90747ab4714a7ffcc59f313f.sol
Total states:7697
29.345756
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.529399
Transaction Length: 1
Severity: High
Contract: yeldDAI
Function name: updatePrice()
PC address: 4031
Estimated Gas Usage: 1068 - 1163
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x39ee9b9ea9e4b9cc90747ab4714a7ffcc59f313f.sol:408

lastPriceUpdate + priceUpdatePeriod

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol
Total states:19786
486.783324
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:16.321837
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 186
Estimated Gas Usage: 8339 - 180876
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 290
Offset: 687
Offset: 1095
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:120

function daiJoin_join(address apt, address urn, uint wad) public {
        // Gets DAI from the user's wallet
        DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad);
        // Approves adapter to take the DAI amount
        DaiJoinLike(apt).dai().approve(apt, wad);
        // Joins DAI into the vat
        DaiJoinLike(apt).join(urn, wad);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:02.153428
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 290
Estimated Gas Usage: 1076 - 1452
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai()

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:01:59.883199
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 439
Estimated Gas Usage: 8362 - 180899
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 3185
Offset: 3582
Offset: 3990
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:120

function daiJoin_join(address apt, address urn, uint wad) public {
        // Gets DAI from the user's wallet
        DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad);
        // Approves adapter to take the DAI amount
        DaiJoinLike(apt).dai().approve(apt, wad);
        // Joins DAI into the vat
        DaiJoinLike(apt).join(urn, wad);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:01:43.700288
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashGem(address,address,bytes32,uint256)
PC address: 481
Estimated Gas Usage: 5342 - 108941
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2670
Offset: 2849
Offset: 3056
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:892

function cashGem(
        address gemJoin,
        address end,
        bytes32 ilk,
        uint wad
    ) public {
        EndLike(end).cash(ilk, wad);
        // Exits token amount to the user's wallet as a token
        GemJoinLike(gemJoin).exit(msg.sender, mul(wad, EndLike(end).fix(ilk)) / RAY);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.187781
Transaction Length: 1
Severity: Low
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 563
Estimated Gas Usage: 2792 - 37920
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:02:01.466999
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 591
Estimated Gas Usage: 8384 - 180921
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 3186
Offset: 3583
Offset: 3991
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:120

function daiJoin_join(address apt, address urn, uint wad) public {
        // Gets DAI from the user's wallet
        DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad);
        // Approves adapter to take the DAI amount
        DaiJoinLike(apt).dai().approve(apt, wad);
        // Joins DAI into the vat
        DaiJoinLike(apt).join(urn, wad);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:02.298108
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 645
Estimated Gas Usage: 1079 - 1455
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:928

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:08.234445
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 687
Estimated Gas Usage: 4327 - 73736
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:06.016748
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 808
Estimated Gas Usage: 2701 - 37544
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:930

PotLike(pot).drip()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:10.890789
Transaction Length: 1
Severity: Low
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 908
Estimated Gas Usage: 5998 - 110064
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:25.125543
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: pack(address,address,uint256)
PC address: 992
Estimated Gas Usage: 9169 - 181987
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:868

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:41.981219
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 1017
Estimated Gas Usage: 4537 - 73942
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:934

PotLike(pot).exit(pie)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:16.300805
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 1095
Estimated Gas Usage: 7593 - 146130
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:126

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:20.720753
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 1143
Estimated Gas Usage: 6075 - 109761
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:936

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:26.969262
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 1765
Estimated Gas Usage: 1167 - 1733
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:882

EndLike(end).cash(ilk, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:23.018081
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 2156
Estimated Gas Usage: 4583 - 74182
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:885

GemJoinLike(ethJoin).exit(address(this), wadC)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:22.837844
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: join(address,address,uint256)
PC address: 2224
Estimated Gas Usage: 1095 - 1471
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:910

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:32.517317
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 2280
Estimated Gas Usage: 6118 - 109998
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:887

GemJoinLike(ethJoin).gem()

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:40.371864
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: giveToProxy(address,address,uint256,address)
PC address: 2309
Estimated Gas Usage: 3756 - 72884
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 12617
Offset: 10643
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:271

function giveToProxy(
        address proxyRegistry,
        address manager,
        uint cdp,
        address dst
    ) public {
        // Gets actual proxy address
        address proxy = ProxyRegistryLike(proxyRegistry).proxies(dst);
        // Checks if the proxy address already existed and dst address is still the owner
        if (proxy == address(0) || ProxyLike(proxy).owner() != dst) {
            uint csize;
            assembly {
                csize := extcodesize(dst)
            }
            // We want to avoid creating a proxy for a contract address that might not be able to handle proxies, then losing the CDP
            require(csize == 0, "Dst-is-a-contract");
            // Creates the proxy for the dst address
            proxy = ProxyRegistryLike(proxyRegistry).build(dst);
        }
        // Transfers CDP to the dst proxy
        give(manager, cdp, proxy);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:26.666185
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: join(address,address,uint256)
PC address: 2387
Estimated Gas Usage: 2717 - 37560
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:912

PotLike(pot).drip()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:34.362160
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashGem(address,address,bytes32,uint256)
PC address: 2670
Estimated Gas Usage: 1189 - 1755
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:898

EndLike(end).cash(ilk, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:43.678982
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashGem(address,address,bytes32,uint256)
PC address: 3056
Estimated Gas Usage: 4594 - 74193
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:900

GemJoinLike(gemJoin).exit(msg.sender, mul(wad, EndLike(end).fix(ilk)) / RAY)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:43.527263
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3185
Estimated Gas Usage: 1114 - 1490
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:45.884722
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3186
Estimated Gas Usage: 1136 - 1512
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:45.632129
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3458
Estimated Gas Usage: 2815 - 37943
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:48.270516
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3459
Estimated Gas Usage: 2837 - 37965
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:50.240048
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3582
Estimated Gas Usage: 4350 - 73759
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:52.811132
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3583
Estimated Gas Usage: 4372 - 73781
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:53.497991
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3803
Estimated Gas Usage: 6021 - 110087
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:55.796972
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3804
Estimated Gas Usage: 6043 - 110109
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:59.861898
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3990
Estimated Gas Usage: 7616 - 146153
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:126

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:01.446317
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3991
Estimated Gas Usage: 7638 - 146175
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:126

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:01.665748
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exitAll(address,address)
PC address: 4121
Estimated Gas Usage: 1112 - 1488
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:953

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:05.109008
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exitAll(address,address)
PC address: 4284
Estimated Gas Usage: 2734 - 37577
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:955

PotLike(pot).drip()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:09.810219
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exitAll(address,address)
PC address: 4672
Estimated Gas Usage: 6039 - 110006
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:959

PotLike(pot).exit(pie)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:42.173333
Transaction Length: 1
Severity: High
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 4815
Estimated Gas Usage: 3657 - 72785
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:115

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.327723
Transaction Length: 1
Severity: High
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 5387
Estimated Gas Usage: 3639 - 72668
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:115

x * y

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:05.352693
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8321
Estimated Gas Usage: 2911 - 38043
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:471

GemJoinLike(ethJoin).exit(address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:08.865130
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8445
Estimated Gas Usage: 4446 - 73859
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:473

GemJoinLike(ethJoin).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:11.348269
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8614
Estimated Gas Usage: 6085 - 110060
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:473

GemJoinLike(ethJoin).gem().withdraw(wad)

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:14.814754
Transaction Length: 1
Severity: High
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8683
Estimated Gas Usage: 6883 - 145044
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:475

msg.sender.transfer(wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:05.290430
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: freeETH(address,address,uint256,uint256)
PC address: 9233
Estimated Gas Usage: 3042 - 38269
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:317

ManagerLike(manager).flux(cdp, dst, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:47.577426
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: giveToProxy(address,address,uint256,address)
PC address: 10643
Estimated Gas Usage: 5392 - 75082
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:268

ManagerLike(manager).give(cdp, usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:21.935959
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: move(address,uint256,address,uint256)
PC address: 10843
Estimated Gas Usage: 1267 - 1928
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:326

ManagerLike(manager).move(cdp, dst, rad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:39.756135
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: quit(address,uint256,address)
PC address: 12433
Estimated Gas Usage: 1198 - 1764
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:343

ManagerLike(manager).quit(cdp, dst)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:52.014443
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: giveToProxy(address,address,uint256,address)
PC address: 13223
Estimated Gas Usage: 5320 - 74820
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:288

ProxyRegistryLike(proxyRegistry).build(dst)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:54.711516
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: urnAllow(address,address,uint256)
PC address: 15084
Estimated Gas Usage: 1264 - 1830
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:308

ManagerLike(manager).urnAllow(usr, ok)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:03.320965
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: openLockETHAndDraw(address,address,address,address,bytes32,uint256)
PC address: 15278
Estimated Gas Usage: 1294 - 1860
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:260

ManagerLike(manager).open(ilk, usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:07.252972
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: shift(address,uint256,uint256)
PC address: 17663
Estimated Gas Usage: 1245 - 1811
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:359

ManagerLike(manager).shift(cdpSrc, cdpOrg)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:14.113287
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: safeLockGem(address,address,uint256,uint256,bool,address)
PC address: 17798
Estimated Gas Usage: 3003 - 37941
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:233

GemJoinLike(apt).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:17.305223
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: safeLockGem(address,address,uint256,uint256,bool,address)
PC address: 18071
Estimated Gas Usage: 4704 - 74394
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:233

GemJoinLike(apt).gem().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:18.684200
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: gemJoin_join(address,address,uint256,bool)
PC address: 18195
Estimated Gas Usage: 4513 - 73922
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:235

GemJoinLike(apt).gem()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:08.661264
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: safeLockGem(address,address,uint256,uint256,bool,address)
PC address: 18604
Estimated Gas Usage: 3064 - 38192
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:238

GemJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:20.675295
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: frob(address,uint256,int256,int256)
PC address: 18761
Estimated Gas Usage: 1227 - 1888
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:335

ManagerLike(manager).frob(cdp, dink, dart)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:28.120439
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: nope(address,address)
PC address: 20145
Estimated Gas Usage: 1195 - 1666
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:252

HopeLike(obj).nope(usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:24.541394
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: safeLockETH(address,address,uint256,address)
PC address: 20273
Estimated Gas Usage: 2932 - 37870
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:222

GemJoinLike(apt).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:27.636320
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: safeLockETH(address,address,uint256,address)
PC address: 20431
Estimated Gas Usage: 4545 - 73950
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:222

GemJoinLike(apt).gem().deposit.value(msg.value)()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:56.510379
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: lockETH(address,address,uint256)
PC address: 20556
Estimated Gas Usage: 4371 - 73495
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:224

GemJoinLike(apt).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:59.843886
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: lockETH(address,address,uint256)
PC address: 20777
Estimated Gas Usage: 6041 - 109822
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:224

GemJoinLike(apt).gem().approve(address(apt), msg.value)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:46.797506
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: ethJoin_join(address,address)
PC address: 20964
Estimated Gas Usage: 7567 - 145819
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:226

GemJoinLike(apt).join(urn, msg.value)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:55.026935
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: hope(address,address)
PC address: 22277
Estimated Gas Usage: 1150 - 1621
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:245

HopeLike(obj).hope(usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:56.995542
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: cdpAllow(address,uint256,address,uint256)
PC address: 22476
Estimated Gas Usage: 1266 - 1927
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:300

ManagerLike(manager).cdpAllow(cdp, usr, ok)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:11.844866
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: transfer(address,address,uint256)
PC address: 25160
Estimated Gas Usage: 1285 - 1851
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:217

GemLike(gem).transfer(dst, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:16.073969
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: openLockGNTAndDraw(address,address,address,address,bytes32,uint256,uint256)
PC address: 25571
Estimated Gas Usage: 2956 - 37894
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:689

GemJoinLike(gntJoin).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:19.157006
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: openLockGNTAndDraw(address,address,address,address,bytes32,uint256,uint256)
PC address: 25792
Estimated Gas Usage: 4627 - 74222
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:689

GemLike(GemJoinLike(gntJoin).gem()).transfer(bag, wadC)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:27.690434
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 25947
Estimated Gas Usage: 1159 - 1535
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:29.661933
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26220
Estimated Gas Usage: 2860 - 37988
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:122

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:33.805416
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26344
Estimated Gas Usage: 4395 - 73804
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:36.472357
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26565
Estimated Gas Usage: 6066 - 110132
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:124

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:42.100356
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26752
Estimated Gas Usage: 7661 - 146198
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:126

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:19.463207
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: enter(address,address,uint256)
PC address: 29428
Estimated Gas Usage: 1240 - 1806
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:351

ManagerLike(manager).enter(src, cdp)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:29.260644
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: makeGemBag(address)
PC address: 29961
Estimated Gas Usage: 1206 - 1677
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:365

GNTJoinLike(gemJoin).make(address(this))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:26.063090
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: draw(address,address,address,uint256,uint256)
PC address: 31041
Estimated Gas Usage: 6209 - 110271
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:163

JugLike(jug).drip(ilk)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:58.651040
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: freeGem(address,address,uint256,uint256)
PC address: 31598
Estimated Gas Usage: 1197 - 1573
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0xB60BCD1A9DFfa777eF2cBb7bAcBDa9FcDD4B6DD6.sol:151

GemJoinLike(gemJoin).dec()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x621629915d4e7Bef4184602FDBa6d951fF29314F.sol
Total states:11841
292.6096
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.623256
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x621629915d4e7Bef4184602FDBa6d951fF29314F.sol:31

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:32.096875
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x621629915d4e7Bef4184602FDBa6d951fF29314F.sol:21

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.730128
Transaction Length: 1
Severity: High
Contract: PeerCashToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1483
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x621629915d4e7Bef4184602FDBa6d951fF29314F.sol:3

*/

//pragma solidity ^0.4.24;
prag

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:33.750637
Transaction Length: 1
Severity: Medium
Contract: PeerCashToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 4325
Estimated Gas Usage: 8823 - 34729
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0x621629915d4e7Bef4184602FDBa6d951fF29314F.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:35.936397
Transaction Length: 1
Severity: High
Contract: PeerCashToken
Function name: safeMul(uint256,uint256)
PC address: 4362
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x621629915d4e7Bef4184602FDBa6d951fF29314F.sol:31

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:50.359072
Transaction Length: 1
Severity: High
Contract: PeerCashToken
Function name: safeAdd(uint256,uint256)
PC address: 4546
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x621629915d4e7Bef4184602FDBa6d951fF29314F.sol:21

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x52540ac320dad8ce3e855b40fd5fb62d56690e43.sol
Total states:180
4.154923
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x71a808fd21171d992ebc17678e8ae139079922d0.sol
Total states:2783
4.952498
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xA40522994c6C85E5717Cd12D5F50dE50a2A2c4e3.sol
Total states:60
0.728198
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xb29ffcf4eaaf88094a692471de278b31a15ee430.sol
Total states:1239
0.668803
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xf6537fe0df7f0cc0985cf00792cc98249e73efa0.sol
Total states:37619
56.478548
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.639882
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6537fe0df7f0cc0985cf00792cc98249e73efa0.sol:132

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.020309
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6537fe0df7f0cc0985cf00792cc98249e73efa0.sol:132

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.620643
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 3847
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf6537fe0df7f0cc0985cf00792cc98249e73efa0.sol:132

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xdd0cb1231de7bfb14023d2406a448b61e96d8afc.sol
Total states:3433
5.946263
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol
Total states:8687
20.968478
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.072053
Transaction Length: 0
Severity: High
Contract: Bethero
Function name: constructor
PC address: 240
Estimated Gas Usage: 37143 - 181236
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol:13

the optional functions; to access them see 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.610685
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xfd14618ead6b47050f79eb01372b3aa7949b90ce.sol:115

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x6ec55b030b8b27f9167a5b0351a4d751a5ae54dd.sol
Total states:726
2.236216
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.409784
Transaction Length: 1
Severity: High
Contract: MiningEcoPriceFeedUniswap
Function name: from_usdt_to_token(uint256,address)
PC address: 949
Estimated Gas Usage: 2506 - 37584
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x6ec55b030b8b27f9167a5b0351a4d751a5ae54dd.sol:194

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xf647e3e6dd5c512495bc2e4932cc4d2082d58684.sol
Total states:623
14.216226
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:14.067812
Transaction Length: 1
Severity: Medium
Contract: GenerateTAX
Function name: generate()
PC address: 84
Estimated Gas Usage: 10847 - 218935
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 236
Offset: 472
Offset: 588
Offset: 682
Offset: 958
Offset: 1150
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0xf647e3e6dd5c512495bc2e4932cc4d2082d58684.sol:73

function generate() public payable {
        uint256 amount = msg.value;
        Lending.depositEth.value(amount)();
        Lending.borrow(address(0), amount - amount / 200);
        owner.transfer(amount / 1000);
        msg.sender.transfer(address(this).balance);
        IERC20(TAX).transfer(msg.sender, IERC20(TAX).balanceOf(address(this)));
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.077180
Transaction Length: 1
Severity: Low
Contract: GenerateTAX
Function name: generate()
PC address: 236
Estimated Gas Usage: 1353 - 2059
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xf647e3e6dd5c512495bc2e4932cc4d2082d58684.sol:75

Lending.depositEth.value(amount)()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.845044
Transaction Length: 1
Severity: Low
Contract: GenerateTAX
Function name: generate()
PC address: 472
Estimated Gas Usage: 3432 - 38939
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xf647e3e6dd5c512495bc2e4932cc4d2082d58684.sol:76

Lending.borrow(address(0), amount - amount / 200)

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:11.340477
Transaction Length: 1
Severity: High
Contract: GenerateTAX
Function name: generate()
PC address: 682
Estimated Gas Usage: 5906 - 110115
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop7/0xf647e3e6dd5c512495bc2e4932cc4d2082d58684.sol:78

msg.sender.transfer(address(this).balance)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:13.960295
Transaction Length: 1
Severity: Low
Contract: GenerateTAX
Function name: generate()
PC address: 1150
Estimated Gas Usage: 10024 - 183926
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0xf647e3e6dd5c512495bc2e4932cc4d2082d58684.sol:79

IERC20(TAX).transfer(msg.sender, IERC20(TAX).balanceOf(address(this)))

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xe5ba0689485b4785f4e8859ee7e1a65b96d6e7b4.sol
Total states:18192
43.614234
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.682704
Transaction Length: 2
Severity: High
Contract: ponz1
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xe5ba0689485b4785f4e8859ee7e1a65b96d6e7b4.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:34.159052
Transaction Length: 2
Severity: High
Contract: ponz1
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xe5ba0689485b4785f4e8859ee7e1a65b96d6e7b4.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x5084d389f2176f012128c5cde6dab457f4917dee.sol
Total states:2417
2.459041
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040214
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5084d389f2176f012128c5cde6dab457f4917dee.sol:28

e current execution context, including the


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039908
Transaction Length: 0
Severity: High
Contract: TrokeraCoin
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5084d389f2176f012128c5cde6dab457f4917dee.sol:28

e current execution context, including the


--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xD2e2Bbb8FdA55780532894eeb9F2439bd183069B.sol
Total states:59
0.681752
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xda7b940be1bce0d6e2eecd96f5cf6ed0504b64c3.sol
Total states:311
1.051035
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x7ff146d4eD59cE4379f6016cE9189173a2677E71.sol
Total states:4787
7.129187
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x6e4ae385d1f68e4d4feb455e0526c08c77464ed6.sol
Total states:685
2.306469
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x8e6469c328d33956fe921efd4179c604ad79d3c4.sol
Total states:9901
21.749267
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040266
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x8e6469c328d33956fe921efd4179c604ad79d3c4.sol:7


██║░░░░░██║░░

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.727216
Transaction Length: 2
Severity: High
Contract: LogicToken
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x8e6469c328d33956fe921efd4179c604ad79d3c4.sol:137

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x7742565647682abe90a7f7497e05c4403cb50265.sol
Total states:60
0.445667
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x0f416bd36fdee5e6afc88a6238bff5a5fad6c7fb.sol
Total states:4701
83.315824
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039982
Transaction Length: 0
Severity: High
Contract: ComptorllersAuctionIndividual
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0f416bd36fdee5e6afc88a6238bff5a5fad6c7fb.sol:13

  returns (bytes memory) {
        this; //

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.050364
Transaction Length: 0
Severity: High
Contract: SimpleAuction
Function name: constructor
PC address: 142
Estimated Gas Usage: 5668 - 28771
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0f416bd36fdee5e6afc88a6238bff5a5fad6c7fb.sol:219

now + _biddingTime

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.020074
Transaction Length: 1
Severity: High
Contract: ReceiverPays
Function name: claimPayment(uint256,uint256,bytes)
PC address: 201
Estimated Gas Usage: 372 - 467
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0f416bd36fdee5e6afc88a6238bff5a5fad6c7fb.sol:3

*/

//pragma solidity ^0.6.0;
pragm

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:01:04.427594
Transaction Length: 1
Severity: Medium
Contract: ReceiverPays
Function name: claimPayment(uint256,uint256,bytes)
PC address: 304
Estimated Gas Usage: 9555 - 104899
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1064
Offset: 850
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0x0f416bd36fdee5e6afc88a6238bff5a5fad6c7fb.sol:314

function claimPayment(uint256 amount, uint256 nonce, bytes memory signature) public {
        require(!usedNonces[nonce]);
        usedNonces[nonce] = true;

        // this recreates the message that was signed on the client
        bytes32 message = prefixed(keccak256(abi.encodePacked(msg.sender, amount, nonce, this)));

        require(recoverSigner(message, signature) == owner);

        msg.sender.transfer(amount);
    }

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:01:03.991251
Transaction Length: 1
Severity: High
Contract: ReceiverPays
Function name: claimPayment(uint256,uint256,bytes)
PC address: 850
Estimated Gas Usage: 8802 - 70146
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop7/0x0f416bd36fdee5e6afc88a6238bff5a5fad6c7fb.sol:323

msg.sender.transfer(amount)

--------------------

==== Dependence on predictable environment variable ====
SWC ID: 116
FOUND TIME: 0:00:00.668083
Transaction Length: 2
Severity: Low
Contract: SimpleAuction
Function name: auctionEnd()
PC address: 1515
Estimated Gas Usage: 9100 - 31333
Sending of Ether depends on a predictable variable.
The contract sends Ether depending on the values of the following variables:
- block.timestamp
- block.timestamp
Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and/or can be manipulated by a malicious miner. Don't use them for random number generation or to make critical decisions.
--------------------
In file: ../../contracts/noloop/noloop7/0x0f416bd36fdee5e6afc88a6238bff5a5fad6c7fb.sol:303

beneficiary.transfer(highestBid)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x044324535936ede7d3971f21a393841f7a00cadb.sol
Total states:150
1.828749
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xa322AEa77769666453377CC697fbE4C6390b9942.sol
Total states:1555
6.838253
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040395
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xa322AEa77769666453377CC697fbE4C6390b9942.sol:15

*
     * @dev Returns the amount of tokens 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.083520
Transaction Length: 0
Severity: High
Contract: VaultBaselineTUSD
Function name: constructor
PC address: 201
Estimated Gas Usage: 6661 - 61225
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xa322AEa77769666453377CC697fbE4C6390b9942.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.141900
Transaction Length: 0
Severity: High
Contract: VaultBaseline
Function name: constructor
PC address: 224
Estimated Gas Usage: 6794 - 64036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xa322AEa77769666453377CC697fbE4C6390b9942.sol:5

nzeppelin/contr

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xa1b337021a78102d79ebc73634ab145e32fdba5b.sol
Total states:18192
44.097777
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.838440
Transaction Length: 2
Severity: High
Contract: chads
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xa1b337021a78102d79ebc73634ab145e32fdba5b.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:34.380793
Transaction Length: 2
Severity: High
Contract: chads
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xa1b337021a78102d79ebc73634ab145e32fdba5b.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x8bfb7ac05bf9bdc6bc3a635d4dd209c8ba39e554.sol
Total states:878
2.251077
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x701a0c2987158420f4602495b523e2edb15192d0.sol
Total states:8045
16.578588
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039448
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x701a0c2987158420f4602495b523e2edb15192d0.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.599620
Transaction Length: 2
Severity: High
Contract: YFIC
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x701a0c2987158420f4602495b523e2edb15192d0.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x70aabe1fb9d3d753f67e9f6bfcc47f94ac9f6892.sol
Total states:2559
4.992857
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x44b622a7cd27653dbef271e30e9359dadc02c768.sol
Total states:7697
28.581823
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.533300
Transaction Length: 1
Severity: High
Contract: yeldDAI
Function name: updatePrice()
PC address: 4031
Estimated Gas Usage: 1068 - 1163
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x44b622a7cd27653dbef271e30e9359dadc02c768.sol:408

lastPriceUpdate + priceUpdatePeriod

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x88f5ae63b6adfe2e77667671d9c0a3d94975f2d3.sol
Total states:9103
21.349892
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.073245
Transaction Length: 0
Severity: Medium
Contract: YieldTermFinance
Function name: constructor
PC address: 213
Estimated Gas Usage: 17136 - 78879
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop7/0x88f5ae63b6adfe2e77667671d9c0a3d94975f2d3.sol:203

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.183115
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x88f5ae63b6adfe2e77667671d9c0a3d94975f2d3.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x734e8a384e0acd3b3f54a5aeb5ef1a9e39ca7503.sol
Total states:9901
22.228089
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040010
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x734e8a384e0acd3b3f54a5aeb5ef1a9e39ca7503.sol:10

ailable
 * via msg.sender and msg.data, the

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.850839
Transaction Length: 2
Severity: High
Contract: GAMJA777Token
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x734e8a384e0acd3b3f54a5aeb5ef1a9e39ca7503.sol:128

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x6ac99c82836d77b92a0cb5366cb6c6b6899ac0d9.sol
Total states:504
0.402209
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xe5049922abe965304ac0f6b5ee1a3470e45b9ff8.sol
Total states:174
4.237955
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.065228
Transaction Length: 0
Severity: High
Contract: TeamVesting
Function name: constructor
PC address: 591
Estimated Gas Usage: 7479 - 31024
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xe5049922abe965304ac0f6b5ee1a3470e45b9ff8.sol:251

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.094310
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: constructor
PC address: 606
Estimated Gas Usage: 7555 - 31379
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xe5049922abe965304ac0f6b5ee1a3470e45b9ff8.sol:251

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x2B4200A8D373d484993C37d63eE14AeE0096cd12.sol
Total states:56674
155.791573
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:02.151459
Transaction Length: 2
Severity: High
Contract: USDFL
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 5769
Estimated Gas Usage: 5999 - 43112
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2B4200A8D373d484993C37d63eE14AeE0096cd12.sol:210

nonces[holder]++

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:09.999018
Transaction Length: 2
Severity: High
Contract: USDFL
Function name: burn(address,uint256)
PC address: 7856
Estimated Gas Usage: 7087 - 27752
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2B4200A8D373d484993C37d63eE14AeE0096cd12.sol:123

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x001F7C987996DBD4f1Dba243b0d8891D0Bf693A2.sol
Total states:2520
27.098533
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.532088
Transaction Length: 1
Severity: Low
Contract: StakingRewardsDecayHolder
Function name: withdraw(uint256,address)
PC address: 1090
Estimated Gas Usage: 1894 - 4952
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x001F7C987996DBD4f1Dba243b0d8891D0Bf693A2.sol:456

address(rewarder).call(
                abi.encodeWithSelector(rewarder.withdraw.selector, msg.sender, amount, gem)
            )

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.951742
Transaction Length: 1
Severity: Low
Contract: StakingRewardsDecayHolder
Function name: stake(uint256,address)
PC address: 1969
Estimated Gas Usage: 1615 - 2606
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x001F7C987996DBD4f1Dba243b0d8891D0Bf693A2.sol:446

rewarder.stake(msg.sender, amount, gem)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xeb60d429e02928e494516ce0a81f185ef52f20d4.sol
Total states:641
1.16432
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x7e72e907bb7e85e7b7a829aabd86b7d3132b2b77.sol
Total states:3495
5.635143
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xf599c68E4C0cb3F2243DC724626690Ac323A1D29.sol
Total states:8045
18.261279
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039687
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf599c68E4C0cb3F2243DC724626690Ac323A1D29.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.450060
Transaction Length: 2
Severity: High
Contract: YFONE
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xf599c68E4C0cb3F2243DC724626690Ac323A1D29.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x70806c363c8f9ba2b5dbb9947767c9c6918ea15e.sol
Total states:1663
10.073483
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.302106
Transaction Length: 1
Severity: High
Contract: IcbPurchase
Function name: getIcbFromContractAllowance(uint256)
PC address: 438
Estimated Gas Usage: 2785 - 38197
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x70806c363c8f9ba2b5dbb9947767c9c6918ea15e.sol:84

_amount * 10 ** 4

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.008002
Transaction Length: 1
Severity: High
Contract: IcbPurchase
Function name: getIcbFromContractAllowance(uint256)
PC address: 2083
Estimated Gas Usage: 5177 - 75758
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x70806c363c8f9ba2b5dbb9947767c9c6918ea15e.sol:19

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x81c98bedddea60c10cedcd57be68a44776be9c25.sol
Total states:8697
11.440951
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol
Total states:88397
974.948233
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.994400
Transaction Length: 1
Severity: High
Contract: DSPauseProxy
Function name: exec(address,bytes)
PC address: 277
Estimated Gas Usage: 351 - 446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3



*/



/**

 *Submitted for verifi

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.074781
Transaction Length: 0
Severity: Low
Contract: Vow
Function name: constructor
PC address: 540
Estimated Gas Usage: 23004 - 107756
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:4526

vat.hope(flapper_)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:54.970210
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1060
Estimated Gas Usage: 1753 - 2744
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3030

vat.move(address(this), usr, mul(ONE, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.096932
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1114
Estimated Gas Usage: 1559 - 2455
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3896

ilks[ilk].pip.peek()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.156185
Transaction Length: 1
Severity: Low
Contract: ESM
Function name: join(uint256)
PC address: 1202
Estimated Gas Usage: 13618 - 55319
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:394

gem.transferFrom(msg.sender, pit, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.857711
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: join(address)
PC address: 1239
Estimated Gas Usage: 2405 - 3396
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2956

vat.slip(ilk, usr, int(msg.value))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:26.706048
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1281
Estimated Gas Usage: 3783 - 39575
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3032

dai.burn(msg.sender, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.451561
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1322
Estimated Gas Usage: 2474 - 3465
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2884

vat.slip(ilk, usr, int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.001132
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1457
Estimated Gas Usage: 3765 - 39836
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3900

vat.file(ilk, "spot", spot)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.465327
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1595
Estimated Gas Usage: 4535 - 40422
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2886

gem.transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:52.452111
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: join(uint256)
PC address: 1719
Estimated Gas Usage: 13726 - 55097
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3726

vat.move(msg.sender, address(this), mul(chi, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.568432
Transaction Length: 1
Severity: Low
Contract: ESM
Function name: fire()
PC address: 1817
Estimated Gas Usage: 2686 - 3392
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:372

end.cage()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.411034
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2573
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2964

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:17.612433
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2633
Estimated Gas Usage: 2224 - 3215
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3040

vat.move(msg.sender, address(this), mul(ONE, wad))

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:16.365381
Transaction Length: 1
Severity: High
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2642
Estimated Gas Usage: 2899 - 38076
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2966

usr.transfer(wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.463907
Transaction Length: 1
Severity: Low
Contract: Jug
Function name: drip(bytes32)
PC address: 2706
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3230

vat.ilks(ilk)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:45.334469
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2854
Estimated Gas Usage: 4255 - 40047
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3042

dai.mint(usr, wad)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.401300
Transaction Length: 1
Severity: High
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 2984
Estimated Gas Usage: 848 - 1273
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3024

x * y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.999596
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3118
Estimated Gas Usage: 2122 - 3113
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2894

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:21.931034
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3339
Estimated Gas Usage: 4153 - 39945
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2896

gem.transfer(usr, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.604249
Transaction Length: 1
Severity: Low
Contract: Vow
Function name: kiss(uint256)
PC address: 3469
Estimated Gas Usage: 9605 - 65298
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:4640

vat.heal(rad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:23.669895
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: exit(uint256)
PC address: 3541
Estimated Gas Usage: 13283 - 54654
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3738

vat.move(address(this), msg.sender, mul(chi, wad))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.664605
Transaction Length: 1
Severity: High
Contract: Pot
Function name: join(uint256)
PC address: 5026
Estimated Gas Usage: 12821 - 53626
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3654

x * y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:20.576433
Transaction Length: 1
Severity: High
Contract: Pot
Function name: exit(uint256)
PC address: 5064
Estimated Gas Usage: 837 - 1122
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:3646

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.299002
Transaction Length: 2
Severity: High
Contract: Dai
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 5769
Estimated Gas Usage: 5999 - 43112
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:1722

nonces[holder]++

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.781707
Transaction Length: 1
Severity: High
Contract: Cat
Function name: bite(bytes32,address)
PC address: 6281
Estimated Gas Usage: 5176 - 75429
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:1374

x * y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:10.308997
Transaction Length: 2
Severity: High
Contract: Dai
Function name: burn(address,uint256)
PC address: 7856
Estimated Gas Usage: 7087 - 27752
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:1548

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.120894
Transaction Length: 1
Severity: High
Contract: Flopper
Function name: tick(uint256)
PC address: 8156
Estimated Gas Usage: 8046 - 29891
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2688

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.948095
Transaction Length: 1
Severity: High
Contract: Flapper
Function name: tick(uint256)
PC address: 9122
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2168

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.311581
Transaction Length: 1
Severity: High
Contract: Flipper
Function name: tick(uint256)
PC address: 11459
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:2414

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.292851
Transaction Length: 1
Severity: High
Contract: Vat
Function name: flux(bytes32,address,address,uint256)
PC address: 13158
Estimated Gas Usage: 1738 - 2593
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:4108

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.382380
Transaction Length: 1
Severity: High
Contract: Vat
Function name: frob(bytes32,address,address,address,int256,int256)
PC address: 13213
Estimated Gas Usage: 4552 - 7485
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x11cfdfbc386a5f461c21a4caab399dba00f6b85d.sol:4072

x + uint(y)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x083b5343783cb3f31813e321540a668c37041874.sol
Total states:76081
151.200263
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:55.224819
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x083b5343783cb3f31813e321540a668c37041874.sol:60

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:54.848750
Transaction Length: 2
Severity: High
Contract: YFIDAOFINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x083b5343783cb3f31813e321540a668c37041874.sol:60

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:58.880190
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x083b5343783cb3f31813e321540a668c37041874.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:05.060953
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x083b5343783cb3f31813e321540a668c37041874.sol:63

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:59.237791
Transaction Length: 2
Severity: High
Contract: YFIDAOFINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x083b5343783cb3f31813e321540a668c37041874.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:05.536960
Transaction Length: 2
Severity: High
Contract: YFIDAOFINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x083b5343783cb3f31813e321540a668c37041874.sol:63

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xee5c75c2f1e8892c84d6d32b730eff5c4181bd10.sol
Total states:17090
15.349087
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.005413
Transaction Length: 0
Severity: Medium
Contract: Governance
Function name: constructor
PC address: 18
Estimated Gas Usage: 42 - 137
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop7/0xee5c75c2f1e8892c84d6d32b730eff5c4181bd10.sol:340

tx.origin

--------------------

==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.055798
Transaction Length: 0
Severity: Medium
Contract: DegoToken
Function name: constructor
PC address: 351
Estimated Gas Usage: 41597 - 203438
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop7/0xee5c75c2f1e8892c84d6d32b730eff5c4181bd10.sol:340

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.957208
Transaction Length: 1
Severity: High
Contract: DegoToken
Function name: transfer(address,uint256)
PC address: 10212
Estimated Gas Usage: 1921 - 2676
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xee5c75c2f1e8892c84d6d32b730eff5c4181bd10.sol:119

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x2119d2e70920d230deccd2508f935c1754d2534b.sol
Total states:3209
7.8011
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.179000
Transaction Length: 1
Severity: Low
Contract: MoshiachCoinStaking
Function name: deposit(uint256)
PC address: 4298
Estimated Gas Usage: 1234 - 1895
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x2119d2e70920d230deccd2508f935c1754d2534b.sol:510

Token(tokenAddress).transferFrom(msg.sender, address(this), amountToStake)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.100429
Transaction Length: 2
Severity: Low
Contract: MoshiachCoinStaking
Function name: deposit(uint256)
PC address: 4298
Estimated Gas Usage: 1234 - 1895
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x2119d2e70920d230deccd2508f935c1754d2534b.sol:510

Token(tokenAddress).transferFrom(msg.sender, address(this), amountToStake)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x61af5c8e6fc334df1f2b644f6aec1492ceff822d.sol
Total states:988
6.554706
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.177109
Transaction Length: 0
Severity: High
Contract: PoolReward
Function name: constructor
PC address: 589
Estimated Gas Usage: 62721 - 307093
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x61af5c8e6fc334df1f2b644f6aec1492ceff822d.sol:117

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x3d2e26f8c9c9de25a241662d011502e4fca84e02.sol
Total states:60
0.648396
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x0d1991cb428fe815899525a938134d596eab4cac.sol
Total states:3871
46.316796
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.315333
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0d1991cb428fe815899525a938134d596eab4cac.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.713856
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0d1991cb428fe815899525a938134d596eab4cac.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.243566
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0d1991cb428fe815899525a938134d596eab4cac.sol:275

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.810143
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0d1991cb428fe815899525a938134d596eab4cac.sol:10

 external returns (bo

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.812147
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x0d1991cb428fe815899525a938134d596eab4cac.sol:10

pient, uint256 amount) external returns (boo

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x792560e6FeD8887a7B7b22E179d3A3fc43933AcB.sol
Total states:2191
6.16577
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.024094
Transaction Length: 1
Severity: High
Contract: Flipper
Function name: tick(uint256)
PC address: 12726
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x792560e6FeD8887a7B7b22E179d3A3fc43933AcB.sol:135

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x46281aadac735236a867c31f01e2358e533592db.sol
Total states:27574
59.725251
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048856
Transaction Length: 0
Severity: High
Contract: BTCBase
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x46281aadac735236a867c31f01e2358e533592db.sol:12

 IERC20 {
    /**
     * @dev Returns the a

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.341196
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x46281aadac735236a867c31f01e2358e533592db.sol:109

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.113223
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x46281aadac735236a867c31f01e2358e533592db.sol:109

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.019517
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 3847
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x46281aadac735236a867c31f01e2358e533592db.sol:109

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol
Total states:46840
108.885895
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047485
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.167552
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.982421
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.970550
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.945779
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.990528
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.046513
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.444952
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.051983
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.451711
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.197676
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.614329
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.191927
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.634823
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.861918
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.257172
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.942171
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.751862
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.120662
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x2e1ef3FB7e4108dC2e9411a8E7B8141ef5B31aD6.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x88EF27e69108B2633F8E1C184CC37940A075cC02.sol
Total states:17090
15.214063
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.005408
Transaction Length: 0
Severity: Medium
Contract: Governance
Function name: constructor
PC address: 18
Estimated Gas Usage: 42 - 137
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop7/0x88EF27e69108B2633F8E1C184CC37940A075cC02.sol:340

tx.origin

--------------------

==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.056093
Transaction Length: 0
Severity: Medium
Contract: DegoToken
Function name: constructor
PC address: 351
Estimated Gas Usage: 41597 - 203438
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop7/0x88EF27e69108B2633F8E1C184CC37940A075cC02.sol:340

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.648283
Transaction Length: 1
Severity: High
Contract: DegoToken
Function name: transfer(address,uint256)
PC address: 10212
Estimated Gas Usage: 1921 - 2676
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x88EF27e69108B2633F8E1C184CC37940A075cC02.sol:119

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x87b5ef63fa5579b40875b66c68cd485656b86259.sol
Total states:2389
5716.217174
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:08:30.777375
Transaction Length: 1
Severity: Medium
Contract: TokenSale
Function name: fallback
PC address: 195
Estimated Gas Usage: 16621 - 126851
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1326
Offset: 1647
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop7/0x87b5ef63fa5579b40875b66c68cd485656b86259.sol:42

contract TokenSale is Owned{
    IERC20Token public tokenContract;  // the token being sold
    uint256 public price = 500;              // 1eth = 500 tokens
    uint256 public decimals = 18;
    
    uint256 public tokensSold;
    uint256 public ethRaised;
    uint256 public MaxETHAmount;

    event Sold(address buyer, uint256 amount);

    constructor(IERC20Token _tokenContract, uint256 _maxEthAmount) public{
        owner = msg.sender;
        tokenContract = _tokenContract;
        MaxETHAmount = _maxEthAmount;
    }
    
    function() external payable {
        buyTokensWithETH(msg.sender);
    }

    // Guards against integer overflows
    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        } else {
            uint256 c = a * b;
            assert(c / a == b);
            return c;
        }
    }
    
    function multiply(uint x, uint y) internal pure returns (uint z) {
        require(y == 0 || (z = x * y) / y == x);
    }
    
    function setPrice(uint256 price_) external onlyOwner{
        price = price_;
    }


    function buyTokensWithETH(address _receiver) public payable {
        require(ethRaised < MaxETHAmount, "Presale finished");
        uint _amount = msg.value; 
        require(_receiver != address(0), "Can't send to 0x00 address"); 
        require(_amount > 0, "Can't buy with 0 eth"); 
        
        uint tokensToBuy = multiply(_amount, price);
        require(owner.send(_amount), "Unable to transfer eth to owner");
        require(tokenContract.transfer(_receiver, tokensToBuy), "Unable to transfer token to user"); 
        tokensSold += tokensToBuy; 
        ethRaised += _amount;
        
        emit Sold(msg.sender, tokensToBuy);
    }

    

    function endSale() public {
        require(msg.sender == owner);

        // Send unsold tokens to the owner.
        require(tokenContract.transfer(owner, tokenContract.balanceOf(address(this))));

        msg.sender.transfer(address(this).balance);
    }
}

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:56:49.180043
Transaction Length: 1
Severity: Low
Contract: TokenSale
Function name: buyTokensWithETH(address)
PC address: 1647
Estimated Gas Usage: 4272 - 39684
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x87b5ef63fa5579b40875b66c68cd485656b86259.sol:91

tokenContract.transfer(_receiver, tokensToBuy)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x05829318dd0904fa9ba346dad05962773f9892e0.sol
Total states:18192
43.164484
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.245115
Transaction Length: 2
Severity: High
Contract: bifrost
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x05829318dd0904fa9ba346dad05962773f9892e0.sol:106

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.326670
Transaction Length: 2
Severity: High
Contract: bifrost
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x05829318dd0904fa9ba346dad05962773f9892e0.sol:108

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x81d0d9fe44fd54c4cdd2ccb2379b893389c7a015.sol
Total states:481
4.373349
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x9b2b8166115d009fa117b7009fa660274ec24927.sol
Total states:1067
1.264453
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x3963d55cbdea34c2452b6637d36d1db9f4240c1f.sol
Total states:18192
44.525965
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.870988
Transaction Length: 2
Severity: High
Contract: NaughtyorNice
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x3963d55cbdea34c2452b6637d36d1db9f4240c1f.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:34.191501
Transaction Length: 2
Severity: High
Contract: NaughtyorNice
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x3963d55cbdea34c2452b6637d36d1db9f4240c1f.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol
Total states:1007
129.586609
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.049054
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: external_call(address,uint256,bytes)
PC address: 319
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:3

*/

// File: contracts/IMultisigCar

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:21.786168
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 542
Estimated Gas Usage: 2718 - 38738
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:43

function parties() public view returns (address[] memory) {
        IMultisigCarrier multisigCarrier = IMultisigCarrier(_carrier);
        return multisigCarrier.vaultParties(address(this));
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.666755
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1181
Estimated Gas Usage: 2252 - 37241
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:5

racts/IMultisig

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.559882
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1184
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:3



// File: contracts/IMultisigCarrier.sol



--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:31.674764
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1205
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:45

multisigCarrier.vaultParties(address(this))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.705862
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1230
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:2


*/

// File: contrac

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:34.869056
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1236
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:7

ma solidity ^0

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:42.064710
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1256
Estimated Gas Usage: 2403 - 37578
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:16

ies(
        address 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:46.042411
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1258
Estimated Gas Usage: 2403 - 37578
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:16

    function vaultParties(
        address v

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:55.892694
Transaction Length: 1
Severity: Low
Contract: MultisigVault
Function name: approve(address,address,uint256)
PC address: 1601
Estimated Gas Usage: 1709 - 2795
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop7/0x5feaa3efe6cb4e35bad5d3016f4dcecc4407999f.sol:58

multisigCarrier.approveFrom(msg.sender, destination, currencyAddress, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x1652d0194dbf2737e156baa5674ed80d545f60d1.sol
Total states:2604
5.02974
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040489
Transaction Length: 0
Severity: High
Contract: PolkaOracleTokenContract
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x1652d0194dbf2737e156baa5674ed80d545f60d1.sol:13

  returns (bytes memory) {
        this; //

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.228260
Transaction Length: 1
Severity: High
Contract: MyTheContract
Function name: foo(uint256)
PC address: 159
Estimated Gas Usage: 218 - 313
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x1652d0194dbf2737e156baa5674ed80d545f60d1.sol:209

10 + _x

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x9A41b2C10B8384B23f3efEa06599f20CDcc6a51F.sol
Total states:2481
4.467376
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041062
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x9A41b2C10B8384B23f3efEa06599f20CDcc6a51F.sol:13

can easily result
 * in bugs, because progr

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x1cc811afa7e997cdeaeab3f5879b028e765b0c57.sol
Total states:6207
11.121761
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.400709
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 381
Estimated Gas Usage: 287 - 382
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x1cc811afa7e997cdeaeab3f5879b028e765b0c57.sol:42

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.345323
Transaction Length: 1
Severity: High
Contract: Gifatoken
Function name: safeAdd(uint256,uint256)
PC address: 4260
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x1cc811afa7e997cdeaeab3f5879b028e765b0c57.sol:42

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x143f7a7e642eccaa7be8bd604639fd13eef6bebc.sol
Total states:13051
19.945981
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.539685
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 5473
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x143f7a7e642eccaa7be8bd604639fd13eef6bebc.sol:150

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x5a7c2647fc1f309b3a91b0e6d66d960997865874.sol
Total states:1756
2.912033
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol
Total states:18307
93.949823
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.193146
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2327
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:15.992822
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2340
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:94

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.001797
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2798
Estimated Gas Usage: 933 - 1408
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:16.342484
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2811
Estimated Gas Usage: 943 - 1418
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:94

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.224375
Transaction Length: 1
Severity: Low
Contract: GbpmToken
Function name: transfer(address,uint256)
PC address: 4326
Estimated Gas Usage: 929 - 1214
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:44.795209
Transaction Length: 2
Severity: Low
Contract: GbpmToken
Function name: transferFrom(address,address,uint256)
PC address: 4326
Estimated Gas Usage: 1579 - 2244
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:76

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.370894
Transaction Length: 2
Severity: High
Contract: GbpmToken
Function name: increaseApproval(address,uint256)
PC address: 4886
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:49.267844
Transaction Length: 2
Severity: Low
Contract: GbpmToken
Function name: increaseApproval(address,uint256)
PC address: 4899
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop7/0x24d61a6988b710bdf4bf5220573c60576374dffb.sol:94

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xa125e351dec307e131eefdba1fab9db34ed99c1b.sol
Total states:4736
8.530607
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x6ea18b68de0c06e7f402ae45f68b1df8199a2fc9.sol
Total states:610
1.455422
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x8e298734681adbfc41ee5d17ff8b0d6d803e7098.sol
Total states:18174
30.459425
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.183396
Transaction Length: 0
Severity: High
Contract: Vault
Function name: constructor
PC address: 240
Estimated Gas Usage: 1854 - 39282
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x8e298734681adbfc41ee5d17ff8b0d6d803e7098.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.826499
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x8e298734681adbfc41ee5d17ff8b0d6d803e7098.sol:138

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xd413cAaFd86c3F9AE76cF1e19d95240D3f7176d9.sol
Total states:1059
14.936113
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.014875
Transaction Length: 1
Severity: High
Contract: DSPauseProxy
Function name: exec(address,bytes)
PC address: 277
Estimated Gas Usage: 351 - 446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd413cAaFd86c3F9AE76cF1e19d95240D3f7176d9.sol:3

*/

/**
 *Submitted for verificatio

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x61ab6033999fd2de9c0833a6a32f0c17269dc7d4.sol
Total states:8705
250.506922
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.336754
Transaction Length: 1
Severity: High
Contract: BITTO
Function name: approveAndCall(address,uint256,bytes)
PC address: 1242
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x61ab6033999fd2de9c0833a6a32f0c17269dc7d4.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:28.675239
Transaction Length: 1
Severity: Medium
Contract: BITTO
Function name: approveAndCall(address,uint256,bytes)
PC address: 4580
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop7/0x61ab6033999fd2de9c0833a6a32f0c17269dc7d4.sol:127

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x2db45ac597614be5adb75c26e0f427448856278a.sol
Total states:677
0.665868
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xc6358c02a4bafcbcd85360ae046e6bee556429c1.sol
Total states:3099
6.052039
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xd075e95423c5c4ba1e122cae0f4cdfa19b82881b.sol
Total states:18855
41.711298
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.393141
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd075e95423c5c4ba1e122cae0f4cdfa19b82881b.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.113333
Transaction Length: 2
Severity: High
Contract: WPE
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xd075e95423c5c4ba1e122cae0f4cdfa19b82881b.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xd0d620996209cfb24d090faec21bb16549031f65.sol
Total states:237
7.158307
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x22962a4a71d09f34bab99aaba5d34e6e35ff2f0c.sol
Total states:8407
16.308562
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.839713
Transaction Length: 2
Severity: High
Contract: Smarts
Function name: increaseAllowance(address,uint256)
PC address: 9088
Estimated Gas Usage: 1126 - 1601
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x22962a4a71d09f34bab99aaba5d34e6e35ff2f0c.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0xb68ba1f874a8984dc8f9e2b414b42003a877fbce.sol
Total states:5589
487.864207
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.310049
Transaction Length: 1
Severity: High
Contract: NarToken
Function name: initialize(string,string,uint8)
PC address: 742
Estimated Gas Usage: 408 - 503
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xb68ba1f874a8984dc8f9e2b414b42003a877fbce.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.363558
Transaction Length: 1
Severity: High
Contract: NarToken
Function name: initialize(string,string,uint8)
PC address: 893
Estimated Gas Usage: 750 - 3527
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xb68ba1f874a8984dc8f9e2b414b42003a877fbce.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:15.668159
Transaction Length: 1
Severity: High
Contract: NarToken
Function name: symbol()
PC address: 1883
Estimated Gas Usage: 1456 - 2491
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0xb68ba1f874a8984dc8f9e2b414b42003a877fbce.sol:106

string public symbol

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x1fd20e571C895f728be72EB9F2D09621f2Bf9291.sol
Total states:18192
43.161885
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.251905
Transaction Length: 2
Severity: High
Contract: wing
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x1fd20e571C895f728be72EB9F2D09621f2Bf9291.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.743252
Transaction Length: 2
Severity: High
Contract: wing
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x1fd20e571C895f728be72EB9F2D09621f2Bf9291.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop7/0x7ee352f173c9b7c666248547fa681f43ebe72978.sol
Total states:1576
2.855579
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.035937
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop7/0x7ee352f173c9b7c666248547fa681f43ebe72978.sol:12

saction and its data. While these are gener

--------------------

