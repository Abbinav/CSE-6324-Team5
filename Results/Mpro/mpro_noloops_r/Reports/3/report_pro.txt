$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7675749184be843f82fa8cfec76a6071c480b0e2.sol
Total states:5259
50.333792
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.353686
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7675749184be843f82fa8cfec76a6071c480b0e2.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.447454
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7675749184be843f82fa8cfec76a6071c480b0e2.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.660031
Transaction Length: 1
Severity: High
Contract: RedFingerToken
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7675749184be843f82fa8cfec76a6071c480b0e2.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.600916
Transaction Length: 1
Severity: High
Contract: RedFingerToken
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7675749184be843f82fa8cfec76a6071c480b0e2.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x08c21791905265ff79d50f05cb08aeacd9c717bd.sol
Total states:60
0.755261
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol
Total states:8045
17.606863
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039868
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.342607
Transaction Length: 2
Severity: High
Contract: YFN
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd2a3642bafd2e9511d1382374fb2a8972c0df579.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xd4c6630095d79ee3dbb853d5540deed670d9d1ce.sol
Total states:18192
41.413369
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.567025
Transaction Length: 2
Severity: High
Contract: p0nzi
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd4c6630095d79ee3dbb853d5540deed670d9d1ce.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.390582
Transaction Length: 2
Severity: High
Contract: p0nzi
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd4c6630095d79ee3dbb853d5540deed670d9d1ce.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xc04a67adae8e7acf5681cf87cc66345117b33e73.sol
Total states:878
2.342369
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol
Total states:46840
105.015209
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047086
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.950224
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.819999
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.960613
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.935226
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.984007
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.939765
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.080241
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.007015
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.150176
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.180523
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.172514
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.974572
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.392956
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.712280
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.841667
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.869910
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.092662
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.118215
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x27A05c33d91DeabF8484B29a98b8560D3E5ad2D6.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x5bd2fc3ad675e199b3121d7710b3e1cec384e52c.sol
Total states:481
3.742797
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol
Total states:23783
494.781872
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.339232
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4387
Estimated Gas Usage: 1014 - 1489
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.778550
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4400
Estimated Gas Usage: 1024 - 1499
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol:36

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:03.126261
Transaction Length: 1
Severity: High
Contract: Token
Function name: increaseApproval(address,uint256)
PC address: 4837
Estimated Gas Usage: 1058 - 1533
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:04.844910
Transaction Length: 1
Severity: Low
Contract: Token
Function name: increaseApproval(address,uint256)
PC address: 4850
Estimated Gas Usage: 1068 - 1543
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol:36

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:05:18.468052
Transaction Length: 2
Severity: Low
Contract: Token
Function name: increaseApproval(address,uint256)
PC address: 4850
Estimated Gas Usage: 1068 - 1543
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xd945d2031b4c63c0e363304fb771f709b502dc0a.sol:36

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x730094800a48aeb70f76ab60bb628e84f8fc02cd.sol
Total states:5612
20.242373
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.637144
Transaction Length: 2
Severity: High
Contract: ERC20Impl
Function name: transferFrom(address,address,uint256)
PC address: 1926
Estimated Gas Usage: 2588 - 3633
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x730094800a48aeb70f76ab60bb628e84f8fc02cd.sol:75

balanceOf[to] + tokens

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xfB80CC205C449693b748cbd8D2fBC7927a7D6Fd6.sol
Total states:3497
11.120806
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x347934B4C20597F1546BC2fe3C5903541083f518.sol
Total states:2175
2.674383
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.289367
Transaction Length: 1
Severity: Low
Contract: UpgradeabilityProxy
Function name: fallback
PC address: 274
Estimated Gas Usage: 681 - 3503
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy))
--------------------
In file: ../../contracts/noloop/noloop4/0x347934B4C20597F1546BC2fe3C5903541083f518.sol:260

delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x0e99cc952fc2913ac7f8bc4d0d061982edd23870.sol
Total states:18192
41.810076
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.460356
Transaction Length: 2
Severity: High
Contract: applecorefinancetwenty
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x0e99cc952fc2913ac7f8bc4d0d061982edd23870.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.711201
Transaction Length: 2
Severity: High
Contract: applecorefinancetwenty
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x0e99cc952fc2913ac7f8bc4d0d061982edd23870.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol
Total states:1555
6.702877
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039981
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol:15

*
     * @dev Returns the amount of tokens 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.083866
Transaction Length: 0
Severity: High
Contract: VaultBaselinesBTC
Function name: constructor
PC address: 206
Estimated Gas Usage: 6661 - 61225
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.099854
Transaction Length: 0
Severity: High
Contract: VaultBaseline
Function name: constructor
PC address: 224
Estimated Gas Usage: 6794 - 64036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69.sol:5

nzeppelin/contr

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x9f6076321d8524f5a397144651b26c177009ffa6.sol
Total states:20052
40.458633
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.073291
Transaction Length: 0
Severity: Medium
Contract: DYM
Function name: constructor
PC address: 209
Estimated Gas Usage: 17133 - 78876
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop4/0x9f6076321d8524f5a397144651b26c177009ffa6.sol:211

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.559953
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x9f6076321d8524f5a397144651b26c177009ffa6.sol:123

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.361540
Transaction Length: 2
Severity: High
Contract: DYM
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x9f6076321d8524f5a397144651b26c177009ffa6.sol:123

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x29117ff22c7f156ba0fcbdff92a07344e1d3440c.sol
Total states:23217
666.4666
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x92ecE48522E1aCbcda4Aaa8C2fBF2Aa9FB15D624.sol
Total states:11513
30.890919
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xd3Ed27bb5027DF1429630a6916d18152187960A9.sol
Total states:3497
10.845796
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xc15a781D649895628284D2A07212e1a7b2E17C14.sol
Total states:3016
30.039956
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.100381
Transaction Length: 0
Severity: Low
Contract: Vow
Function name: constructor
PC address: 540
Estimated Gas Usage: 23004 - 107756
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0xc15a781D649895628284D2A07212e1a7b2E17C14.sol:134

vat.hope(flapper_)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.529969
Transaction Length: 1
Severity: Low
Contract: Vow
Function name: kiss(uint256)
PC address: 3469
Estimated Gas Usage: 9605 - 65298
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0xc15a781D649895628284D2A07212e1a7b2E17C14.sol:191

vat.heal(rad)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x1b80eed6c45277b60ab6617e392e23ca7aaa8ccb.sol
Total states:8634
4.517461
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.016224
Transaction Length: 0
Severity: Medium
Contract: JellyCrowdSale
Function name: constructor
PC address: 68
Estimated Gas Usage: 15521 - 75946
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop4/0x1b80eed6c45277b60ab6617e392e23ca7aaa8ccb.sol:348

tx.origin

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xAD43BbDe9b4E1A2894984A55a2f490c4ADc1773b.sol
Total states:5259
58.25135
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.108107
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xAD43BbDe9b4E1A2894984A55a2f490c4ADc1773b.sol:34

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.609478
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xAD43BbDe9b4E1A2894984A55a2f490c4ADc1773b.sol:30

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.690274
Transaction Length: 1
Severity: High
Contract: yfMeta
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xAD43BbDe9b4E1A2894984A55a2f490c4ADc1773b.sol:34

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.313680
Transaction Length: 1
Severity: High
Contract: yfMeta
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xAD43BbDe9b4E1A2894984A55a2f490c4ADc1773b.sol:30

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x2Db6A8e83B9EBb01699012c3c7dda4Aa85e97289.sol
Total states:127
0.210747
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol
Total states:150
93.192778
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.291211
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.386823
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.533760
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:3



// File: @openzeppelin/contracts/token/ER

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.804515
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:3



// File: @openzeppelin/contracts/token/ER

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.890969
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:655

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.320417
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:655

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.293668
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:16

ce.
     */
    funct

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.811440
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:16

ce.
     */
    funct

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.050698
Transaction Length: 1
Severity: High
Contract: ControllerBaseline
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:16

t of tokens in existence.
     */
    functi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.685762
Transaction Length: 1
Severity: High
Contract: ControllerBaselineSingleton
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d.sol:16

t of tokens in existence.
     */
    functi

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x17f7f0fd71c930fcd8bb96f177d35e46ddf2695d.sol
Total states:3269
7.092792
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x56f95662e71f30b333b456439248c6de589082a4.sol
Total states:3429
5.605699
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7b7B367ec9FA50a921acC4dbcedeA9CF39d9bF4d.sol
Total states:6179
54.045168
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.125744
Transaction Length: 1
Severity: High
Contract: Token
Function name: initialize(string,string,uint256,address)
PC address: 1255
Estimated Gas Usage: 406 - 501
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7b7B367ec9FA50a921acC4dbcedeA9CF39d9bF4d.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.467097
Transaction Length: 1
Severity: High
Contract: Token
Function name: initialize(string,string,uint256,address)
PC address: 1406
Estimated Gas Usage: 748 - 3525
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7b7B367ec9FA50a921acC4dbcedeA9CF39d9bF4d.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.542630
Transaction Length: 2
Severity: High
Contract: Token
Function name: increaseAllowance(address,uint256)
PC address: 4678
Estimated Gas Usage: 1103 - 1578
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7b7B367ec9FA50a921acC4dbcedeA9CF39d9bF4d.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xc08E8046EB3170D03D9BE252240Db5D7c824720b.sol
Total states:138
3.021027
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.534387
Transaction Length: 0
Severity: High
Contract: HolderVesting
Function name: transferOwnership(address)
PC address: 955
Estimated Gas Usage: 7523 - 31347
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xc08E8046EB3170D03D9BE252240Db5D7c824720b.sol:515

_owner

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xb5afccef680ee1d9bca47fde712007020197591e.sol
Total states:437
1.919005
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.058909
Transaction Length: 0
Severity: High
Contract: AquaToken
Function name: constructor
PC address: 127
Estimated Gas Usage: 15275 - 78048
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xb5afccef680ee1d9bca47fde712007020197591e.sol:22

transaction and its data. While these are g

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xef7acfdb8bfcae9735b631be32357684dcc1ea96.sol
Total states:5589
451.891173
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.275005
Transaction Length: 1
Severity: High
Contract: NARToken
Function name: initialize(string,string,uint8)
PC address: 742
Estimated Gas Usage: 408 - 503
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xef7acfdb8bfcae9735b631be32357684dcc1ea96.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.020247
Transaction Length: 1
Severity: High
Contract: NARToken
Function name: initialize(string,string,uint8)
PC address: 893
Estimated Gas Usage: 750 - 3527
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xef7acfdb8bfcae9735b631be32357684dcc1ea96.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:47.557449
Transaction Length: 1
Severity: High
Contract: NARToken
Function name: symbol()
PC address: 1883
Estimated Gas Usage: 1456 - 2491
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xef7acfdb8bfcae9735b631be32357684dcc1ea96.sol:106

string public symbol

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x6f450f117114075d1d1c91dd64a61c0ba72ca68f.sol
Total states:9871
19.475483
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039287
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x6f450f117114075d1d1c91dd64a61c0ba72ca68f.sol:8

    ███   ███    ███ █

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.603661
Transaction Length: 2
Severity: High
Contract: PadThaiToken
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x6f450f117114075d1d1c91dd64a61c0ba72ca68f.sol:153

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x50040b95e06e030e90b67fe158e6c2c085acd867.sol
Total states:1389
2.212421
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xe066892b38f076798b84f3c2e8d4ed4fc0d2f30d.sol
Total states:10094
20.482959
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.035456
Transaction Length: 0
Severity: High
Contract: CARPFINANCE
Function name: constructor
PC address: 98
Estimated Gas Usage: 233 - 3006
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe066892b38f076798b84f3c2e8d4ed4fc0d2f30d.sol:22

| \ | |/ ____|  ____|

 | |       /  \  | |

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.017908
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe066892b38f076798b84f3c2e8d4ed4fc0d2f30d.sol:136

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x5614464A2d46C17750b2E34376872114a192bE68.sol
Total states:1239
0.653026
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x669Db70d3A0D7941F468B0d907E9d90BD7ddA8d1.sol
Total states:4998
47.700862
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.052223
Transaction Length: 0
Severity: High
Contract: ERC721Metadata
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x669Db70d3A0D7941F468B0d907E9d90BD7ddA8d1.sol:11

/ds-note/src/note.sol
/// note.sol -- the `

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.056384
Transaction Length: 0
Severity: High
Contract: Title
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x669Db70d3A0D7941F468B0d907E9d90BD7ddA8d1.sol:11

/ds-note/src/note.sol
/// note.sol -- the `

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.343599
Transaction Length: 1
Severity: High
Contract: ERC721
Function name: safeTransferFrom(address,address,uint256,bytes)
PC address: 1136
Estimated Gas Usage: 477 - 572
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x669Db70d3A0D7941F468B0d907E9d90BD7ddA8d1.sol:3

*/

// Verified using https://dapp.

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x2beb9e18e3ee68cecb5842cc71a80890e0b39c9e.sol
Total states:3451
5.862494
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x9e13628766e81f2ecada1e4489b5177984c3ece6.sol
Total states:2285
220.10099
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.396865
Transaction Length: 1
Severity: High
Contract: Cover_ZapIn_General_V1
Function name: ZapIn(address,address,address,address,uint256,address,address,bytes)
PC address: 1258
Estimated Gas Usage: 563 - 658
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x9e13628766e81f2ecada1e4489b5177984c3ece6.sol:3



*/



// ███████╗

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.943669
Transaction Length: 1
Severity: High
Contract: Cover_ZapIn_General_V1
Function name: ZapIn(address,address,address,address,uint256,address,address,bytes)
PC address: 7603
Estimated Gas Usage: 8110 - 29855
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x9e13628766e81f2ecada1e4489b5177984c3ece6.sol:402

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xb75c1c1bd4927cdffdee68dba577a5c209d35eca.sol
Total states:3586
5.927799
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x18e24CE6307453bca5756b6Fcf0b4b295C2adcf6.sol
Total states:3445
11.479133
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x000000003A8DBF47cD362EDA39B3a5F3FC6E99ce.sol
Total states:30
0.07227
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol
Total states:196492
2194.48146
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.029205
Transaction Length: 1
Severity: High
Contract: RequestableERC20Wrapper
Function name: applyRequestInChildChain(bool,uint256,address,bytes32,bytes)
PC address: 572
Estimated Gas Usage: 484 - 579
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:3

*/

// File: requestable-erc20-wrap

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:08:15.738807
Transaction Length: 1
Severity: High
Contract: EtherToken
Function name: applyRequestInChildChain(bool,uint256,address,bytes32,bytes)
PC address: 623
Estimated Gas Usage: 484 - 579
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:3

*/

// File: requestable-erc20-wrap

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:01.125593
Transaction Length: 1
Severity: High
Contract: RequestableERC20Wrapper
Function name: applyRequestInRootChain(bool,uint256,address,bytes32,bytes)
PC address: 1467
Estimated Gas Usage: 505 - 600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:3

*/

// File: requestable-erc20-wrap

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:09:33.454188
Transaction Length: 1
Severity: High
Contract: EtherToken
Function name: applyRequestInRootChain(bool,uint256,address,bytes32,bytes)
PC address: 1705
Estimated Gas Usage: 505 - 600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:3

*/

// File: requestable-erc20-wrap

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:22.442568
Transaction Length: 1
Severity: High
Contract: RequestableERC20Wrapper
Function name: decodeTrieValue(bytes)
PC address: 1770
Estimated Gas Usage: 340 - 435
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:3

*/

// File: requestable-erc20-wrap

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:09:56.374843
Transaction Length: 1
Severity: High
Contract: EtherToken
Function name: decodeTrieValue(bytes)
PC address: 2106
Estimated Gas Usage: 362 - 457
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:3

*/

// File: requestable-erc20-wrap

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.110247
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4104
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:54

_a + _b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:35.164584
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4117
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:55

assert(c >= _a)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:05.555852
Transaction Length: 2
Severity: Low
Contract: RequestableERC20Wrapper
Function name: withdraw(uint256)
PC address: 4324
Estimated Gas Usage: 15714 - 58489
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:356

token.transfer(msg.sender, _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:04:46.879888
Transaction Length: 2
Severity: Low
Contract: EtherToken
Function name: withdraw(uint256)
PC address: 4751
Estimated Gas Usage: 15686 - 58461
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:356

token.transfer(msg.sender, _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:35.102972
Transaction Length: 2
Severity: Low
Contract: RequestableERC20Wrapper
Function name: deposit(uint256)
PC address: 6607
Estimated Gas Usage: 15793 - 58663
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:348

token.transferFrom(msg.sender, address(this), _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:05:19.982734
Transaction Length: 2
Severity: Low
Contract: EtherToken
Function name: deposit(uint256)
PC address: 7115
Estimated Gas Usage: 15704 - 58574
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:348

token.transferFrom(msg.sender, address(this), _amount)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:08.160225
Transaction Length: 2
Severity: Low
Contract: RequestableERC20Wrapper
Function name: withdraw(uint256)
PC address: 8005
Estimated Gas Usage: 1331 - 1946
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:46

assert(_b <= _a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.002976
Transaction Length: 2
Severity: High
Contract: RequestableERC20Wrapper
Function name: increaseApproval(address,uint256)
PC address: 8022
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:54

_a + _b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:44.148569
Transaction Length: 2
Severity: Low
Contract: RequestableERC20Wrapper
Function name: increaseApproval(address,uint256)
PC address: 8035
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:55

assert(c >= _a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:04:49.390653
Transaction Length: 2
Severity: Low
Contract: EtherToken
Function name: withdraw(uint256)
PC address: 8513
Estimated Gas Usage: 1309 - 1924
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:46

assert(_b <= _a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.527310
Transaction Length: 2
Severity: High
Contract: EtherToken
Function name: increaseApproval(address,uint256)
PC address: 8530
Estimated Gas Usage: 999 - 1474
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:54

_a + _b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:05:43.157543
Transaction Length: 2
Severity: Low
Contract: EtherToken
Function name: increaseApproval(address,uint256)
PC address: 8543
Estimated Gas Usage: 1009 - 1484
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c642140a3b6fa39dfd1aa9eba6c5239f5c457d5.sol:55

assert(c >= _a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x18ec17156dac62fb1035553533eb07a92798e0b7.sol
Total states:13839
32.320881
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.034495
Transaction Length: 0
Severity: High
Contract: ERC20Detailed
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x18ec17156dac62fb1035553533eb07a92798e0b7.sol:15

 view returns (uint);
    function balanceO

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.607892
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3582
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x18ec17156dac62fb1035553533eb07a92798e0b7.sol:123

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.904691
Transaction Length: 2
Severity: High
Contract: FXCOIN
Function name: increaseAllowance(address,uint256)
PC address: 4415
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x18ec17156dac62fb1035553533eb07a92798e0b7.sol:123

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x693a932faadaf2a6f6d716d249f43462e64c646a.sol
Total states:1436
2.705081
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x396B8dB9d67075Dc59DCb40CA9FB30659A666787.sol
Total states:3497
11.227232
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x5cb611a4f27b4ba8ab8115375b8fb5d79e8afdce.sol
Total states:2906
27.207659
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.026121
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5cb611a4f27b4ba8ab8115375b8fb5d79e8afdce.sol:13

ext, including the
 * sender of the transac

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.303655
Transaction Length: 0
Severity: High
Contract: WarpVaultSC
Function name: constructor
PC address: 744
Estimated Gas Usage: 59602 - 319430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5cb611a4f27b4ba8ab8115375b8fb5d79e8afdce.sol:5

_modules\@openz

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.159773
Transaction Length: 0
Severity: High
Contract: WarpVaultSC
Function name: constructor
PC address: 2059
Estimated Gas Usage: 47404 - 231962
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5cb611a4f27b4ba8ab8115375b8fb5d79e8afdce.sol:136

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x375d4ddfbe2c53f83f0b0d41c6f1d02d42042011.sol
Total states:11841
271.669496
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.362287
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x375d4ddfbe2c53f83f0b0d41c6f1d02d42042011.sol:39

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.026751
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x375d4ddfbe2c53f83f0b0d41c6f1d02d42042011.sol:29

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.541133
Transaction Length: 1
Severity: High
Contract: LCSTToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1483
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x375d4ddfbe2c53f83f0b0d41c6f1d02d42042011.sol:3

*/

//pragma solidity ^0.4.24;
prag

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:28.118663
Transaction Length: 1
Severity: Medium
Contract: LCSTToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 4325
Estimated Gas Usage: 8823 - 34729
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop4/0x375d4ddfbe2c53f83f0b0d41c6f1d02d42042011.sol:180

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:30.092889
Transaction Length: 1
Severity: High
Contract: LCSTToken
Function name: safeMul(uint256,uint256)
PC address: 4362
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x375d4ddfbe2c53f83f0b0d41c6f1d02d42042011.sol:39

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:37.907008
Transaction Length: 1
Severity: High
Contract: LCSTToken
Function name: safeAdd(uint256,uint256)
PC address: 4546
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x375d4ddfbe2c53f83f0b0d41c6f1d02d42042011.sol:29

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xea14adfdf114eb1d3d53c605ece7da9b70781095.sol
Total states:3381
5.733725
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol
Total states:2389
5711.724939
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:08:30.132648
Transaction Length: 1
Severity: Medium
Contract: TokenSale
Function name: fallback
PC address: 195
Estimated Gas Usage: 16621 - 126851
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1326
Offset: 1647
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol:74

contract TokenSale is Owned{

    IERC20Token public tokenContract;  // the token being sold

    uint256 public price = 400;              // 1eth = 400 tokens

    uint256 public decimals = 18;

    

    uint256 public tokensSold;

    uint256 public ethRaised;

    uint256 public MaxETHAmount;



    event Sold(address buyer, uint256 amount);



    constructor(IERC20Token _tokenContract, uint256 _maxEthAmount) public{

        owner = msg.sender;

        tokenContract = _tokenContract;

        MaxETHAmount = _maxEthAmount;

    }

    

    function() external payable {

        buyTokensWithETH(msg.sender);

    }



    // Guards against integer overflows

    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {

        if (a == 0) {

            return 0;

        } else {

            uint256 c = a * b;

            assert(c / a == b);

            return c;

        }

    }

    

    function multiply(uint x, uint y) internal pure returns (uint z) {

        require(y == 0 || (z = x * y) / y == x);

    }

    

    function setPrice(uint256 price_) external onlyOwner{

        price = price_;

    }





    function buyTokensWithETH(address _receiver) public payable {

        require(ethRaised < MaxETHAmount, "Presale finished");

        uint _amount = msg.value; 

        require(_receiver != address(0), "Can't send to 0x00 address"); 

        require(_amount > 0, "Can't buy with 0 eth"); 

        

        uint tokensToBuy = multiply(_amount, price);

        require(owner.send(_amount), "Unable to transfer eth to owner");

        require(tokenContract.transfer(_receiver, tokensToBuy), "Unable to transfer token to user"); 

        tokensSold += tokensToBuy; 

        ethRaised += _amount;

        

        emit Sold(msg.sender, tokensToBuy);

    }



    



    function endSale() public {

        require(msg.sender == owner);



        // Send unsold tokens to the owner.

        require(tokenContract.transfer(owner, tokenContract.balanceOf(address(this))));



        msg.sender.transfer(address(this).balance);

    }

}

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:56:45.906834
Transaction Length: 1
Severity: Low
Contract: TokenSale
Function name: buyTokensWithETH(address)
PC address: 1647
Estimated Gas Usage: 4272 - 39684
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x79a4d9e704196510f408150261c4f9307bcca6c0.sol:172

tokenContract.transfer(_receiver, tokensToBuy)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol
Total states:44637
142.731954
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.138725
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 4827
Estimated Gas Usage: 2616 - 3661
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:30.445458
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4840
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:33

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.178510
Transaction Length: 2
Severity: High
Contract: Pausable
Function name: transferFrom(address,address,uint256)
PC address: 5561
Estimated Gas Usage: 2639 - 3684
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.689665
Transaction Length: 2
Severity: Low
Contract: Pausable
Function name: increaseApproval(address,uint256)
PC address: 5574
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:33

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.163241
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: transferFrom(address,address,uint256)
PC address: 6243
Estimated Gas Usage: 3145 - 4520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.481470
Transaction Length: 2
Severity: Low
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6256
Estimated Gas Usage: 1471 - 2276
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:33

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.791625
Transaction Length: 2
Severity: High
Contract: Yearn20MoonFinance
Function name: increaseApproval(address,uint256)
PC address: 7345
Estimated Gas Usage: 1483 - 2288
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:19.017915
Transaction Length: 2
Severity: Low
Contract: Yearn20MoonFinance
Function name: increaseApproval(address,uint256)
PC address: 7358
Estimated Gas Usage: 1493 - 2298
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x16be21c08eb27953273608629e4397556c561d26.sol:33

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x9Ca87C82f5C5760C7C693a3cAf6801255AB8f097.sol
Total states:3134
5.738392
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xa2236b7e06135cae63edecc983245607d2eaf378.sol
Total states:76097
145.702825
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.398071
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa2236b7e06135cae63edecc983245607d2eaf378.sol:60

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:52.371437
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa2236b7e06135cae63edecc983245607d2eaf378.sol:60

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.216302
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa2236b7e06135cae63edecc983245607d2eaf378.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:02.759326
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa2236b7e06135cae63edecc983245607d2eaf378.sol:63

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:56.677866
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa2236b7e06135cae63edecc983245607d2eaf378.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:02.847871
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa2236b7e06135cae63edecc983245607d2eaf378.sol:63

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x1F995B1A9E98908cbF924f4bDa27341B298Cac62.sol
Total states:17092
32.074049
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.463263
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3255
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x1F995B1A9E98908cbF924f4bDa27341B298Cac62.sol:137

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.041332
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3435
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x1F995B1A9E98908cbF924f4bDa27341B298Cac62.sol:137

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xf893117b7195f70e5043dB58A59625a35B408007.sol
Total states:1708
1.817976
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7c67ec786f46103d78327439b87061cf2e338f80.sol
Total states:12689
22.564016
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039863
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7c67ec786f46103d78327439b87061cf2e338f80.sol:15

eturns true if `account` is a contract.
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.896767
Transaction Length: 2
Severity: High
Contract: VerifyYourContractsAssholes
Function name: increaseAllowance(address,uint256)
PC address: 4998
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7c67ec786f46103d78327439b87061cf2e338f80.sol:197

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x19dc0A94b461d081A800660b2B121485d62feaC3.sol
Total states:3455
5.78557
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x74bb785045cae68c1c72d6197245c6dadc4e48b1.sol
Total states:18192
42.400478
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.205095
Transaction Length: 2
Severity: High
Contract: yborrow
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x74bb785045cae68c1c72d6197245c6dadc4e48b1.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.844718
Transaction Length: 2
Severity: High
Contract: yborrow
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x74bb785045cae68c1c72d6197245c6dadc4e48b1.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol
Total states:44973
140.888635
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.034541
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 4827
Estimated Gas Usage: 2616 - 3661
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.477740
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4840
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:36

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.187322
Transaction Length: 2
Severity: High
Contract: Pausable
Function name: transferFrom(address,address,uint256)
PC address: 5561
Estimated Gas Usage: 2639 - 3684
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.144057
Transaction Length: 2
Severity: Low
Contract: Pausable
Function name: increaseApproval(address,uint256)
PC address: 5574
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:36

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.131042
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: transferFrom(address,address,uint256)
PC address: 6243
Estimated Gas Usage: 3145 - 4520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:29.713214
Transaction Length: 2
Severity: Low
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6256
Estimated Gas Usage: 1471 - 2276
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:36

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.858412
Transaction Length: 2
Severity: High
Contract: SFG
Function name: increaseApproval(address,uint256)
PC address: 7540
Estimated Gas Usage: 1483 - 2288
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:35

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:18.827344
Transaction Length: 2
Severity: Low
Contract: SFG
Function name: increaseApproval(address,uint256)
PC address: 7553
Estimated Gas Usage: 1493 - 2298
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xd3687703b51f819f1b035b2af90f3c1e1ed19f28.sol:36

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol
Total states:60
247.126918
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.296006
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactOut(address,uint256)
PC address: 2347
Estimated Gas Usage: 2577 - 40951
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.404508
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactOut(address,uint256)
PC address: 2350
Estimated Gas Usage: 2509 - 40600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.254115
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2507
Estimated Gas Usage: 2509 - 40600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:174

new address[](2)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.394772
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2825
Estimated Gas Usage: 824 - 4541
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:177

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:39.888039
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2865
Estimated Gas Usage: 974 - 5067
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:177

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.027625
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2934
Estimated Gas Usage: 2416 - 40414
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.678089
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2937
Estimated Gas Usage: 2509 - 40600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.106596
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2958
Estimated Gas Usage: 2509 - 40600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:177

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.172781
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2983
Estimated Gas Usage: 2509 - 40600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:2


*/

pragma solidity 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.513928
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2989
Estimated Gas Usage: 2509 - 40600
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:7

0 {
    functi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:15.771651
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3009
Estimated Gas Usage: 2567 - 40751
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:10

 returns (bool);
    

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.189058
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3011
Estimated Gas Usage: 2567 - 40751
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:10

 uint amount) external returns (bool);
    f

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.892483
Transaction Length: 1
Severity: Low
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3052
Estimated Gas Usage: 2631 - 40908
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xe0ca06c6972d8c71b70475faa9d7b3f3a505ec69.sol:177

UNI.getAmountsOut(inExact, _path)[1]

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x03882d034804740e3208911bc00663e07e023336.sol
Total states:481
3.95708
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xfedcd6723042dab201087751746c320635e4a866.sol
Total states:76081
147.596026
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.592140
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xfedcd6723042dab201087751746c320635e4a866.sol:59

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.818284
Transaction Length: 2
Severity: High
Contract: YFIN
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xfedcd6723042dab201087751746c320635e4a866.sol:59

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.193586
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xfedcd6723042dab201087751746c320635e4a866.sol:61

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.357186
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xfedcd6723042dab201087751746c320635e4a866.sol:62

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.811795
Transaction Length: 2
Severity: High
Contract: YFIN
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xfedcd6723042dab201087751746c320635e4a866.sol:61

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:04.171629
Transaction Length: 2
Severity: High
Contract: YFIN
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xfedcd6723042dab201087751746c320635e4a866.sol:62

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x8f2eA106c8CDf59c72d49aFAcCa3E70bDA175F29.sol
Total states:2705
521.22472
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.029235
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 377
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8f2eA106c8CDf59c72d49aFAcCa3E70bDA175F29.sol:3

*/

// File: contracts/lib/SafeMath

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.086130
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 528
Estimated Gas Usage: 729 - 3506
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8f2eA106c8CDf59c72d49aFAcCa3E70bDA175F29.sol:3

*/

// File: contracts/lib/SafeMath

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:05.130710
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1011
Estimated Gas Usage: 401 - 496
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8f2eA106c8CDf59c72d49aFAcCa3E70bDA175F29.sol:3

*/

// File: contracts/lib/SafeMath

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:18.637427
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1162
Estimated Gas Usage: 743 - 3520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8f2eA106c8CDf59c72d49aFAcCa3E70bDA175F29.sol:3

*/

// File: contracts/lib/SafeMath

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:46.728819
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1515
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8f2eA106c8CDf59c72d49aFAcCa3E70bDA175F29.sol:3

*/

// File: contracts/lib/SafeMath

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:01.250939
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1666
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8f2eA106c8CDf59c72d49aFAcCa3E70bDA175F29.sol:3

*/

// File: contracts/lib/SafeMath

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x99a5ed75dbbe53de2429cf6c3d84b05b971f83bd.sol
Total states:7439
18.991876
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.793121
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x99a5ed75dbbe53de2429cf6c3d84b05b971f83bd.sol:41

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol
Total states:10158
33.828611
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:06.680543
Transaction Length: 1
Severity: Low
Contract: AErc20
Function name: seize(address,address,uint256)
PC address: 10140
Estimated Gas Usage: 7628 - 28809
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol:1828

controller.seizeAllowed(address(this), msg.sender, liquidator, borrower, seizeTokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.184468
Transaction Length: 1
Severity: Low
Contract: AErc20
Function name: transfer(address,uint256)
PC address: 15245
Estimated Gas Usage: 7688 - 28774
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol:819

controller.transferAllowed(address(this), src, dst, tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.708749
Transaction Length: 2
Severity: Low
Contract: AErc20
Function name: transfer(address,uint256)
PC address: 15245
Estimated Gas Usage: 7681 - 28767
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x4f3781fb0811fd0b4ba6cc9450990e878fd07546.sol:819

controller.transferAllowed(address(this), src, dst, tokens)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x12767ED038A80895E45EE3dFF1B7494d49400bEc.sol
Total states:1415
3.824614
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.088219
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1114
Estimated Gas Usage: 1559 - 2455
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x12767ED038A80895E45EE3dFF1B7494d49400bEc.sol:153

ilks[ilk].pip.peek()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.641379
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1457
Estimated Gas Usage: 3765 - 39836
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x12767ED038A80895E45EE3dFF1B7494d49400bEc.sol:155

vat.file(ilk, "spot", spot)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x4b88caa16837477770be263e038c15505415644e.sol
Total states:19694
41.051896
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.108751
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x4b88caa16837477770be263e038c15505415644e.sol:160

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.647146
Transaction Length: 2
Severity: High
Contract: YFVault
Function name: increaseAllowance(address,uint256)
PC address: 10530
Estimated Gas Usage: 1060 - 1535
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x4b88caa16837477770be263e038c15505415644e.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xa7f0ee18fd143001e1c249dae3e6fcb9587333d5.sol
Total states:1174
0.687431
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x76c60c0d05ca29cb0f82e181208d00fadacdb783.sol
Total states:9871
19.363564
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039399
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x76c60c0d05ca29cb0f82e181208d00fadacdb783.sol:8

    ███   ███    ███ █

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.623954
Transaction Length: 2
Severity: High
Contract: PadThaiToken
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x76c60c0d05ca29cb0f82e181208d00fadacdb783.sol:153

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xE0D3bde72B1B983129953232455a1C6E78F5D6B2.sol
Total states:0
0.011389
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xf0abbbab4a0ed1e8df15717b3513e882310c7290.sol
Total states:1595
3.774952
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.316022
Transaction Length: 1
Severity: Medium
Contract: SUSHIPOWAH
Function name: totalSupply()
PC address: 443
Estimated Gas Usage: 3856 - 73447
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1306
Offset: 1560
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop4/0xf0abbbab4a0ed1e8df15717b3513e882310c7290.sol:94

function totalSupply() public view returns (uint256) {
    IPair pair = IPair(0x795065dCc9f64b5614C407a6EFDC400DA6221FB0);
    IBar bar = IBar(0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272);
    IERC20 sushi = IERC20(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);
    (uint256 lp_totalSushi, , ) = pair.getReserves();
    uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));

    return lp_totalSushi.mul(2).add(xsushi_totalSushi);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.100399
Transaction Length: 1
Severity: High
Contract: SUSHIPOWAH
Function name: balanceOf(address)
PC address: 3504
Estimated Gas Usage: 7043 - 145570
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xf0abbbab4a0ed1e8df15717b3513e882310c7290.sol:51

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol
Total states:2675
7.620647
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.750825
Transaction Length: 1
Severity: Low
Contract: FNSPStake
Function name: ADDFUNDS(uint256)
PC address: 4385
Estimated Gas Usage: 1634 - 2625
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:284

IERC20(FNSP).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.944452
Transaction Length: 1
Severity: Low
Contract: FNSPStake
Function name: STAKE(uint256)
PC address: 4874
Estimated Gas Usage: 1618 - 2609
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:255

IERC20(FNSP).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.648234
Transaction Length: 1
Severity: High
Contract: FNSPStake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3396 - 38573
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x5c349cb56aa6ef6bc31386c6cfe1cdf411b5cc3e.sol:96

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x06f673b052e97013d8841c463e29d3d752d7c368.sol
Total states:1253
2.180771
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041650
Transaction Length: 0
Severity: High
Contract: Deriswap
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x06f673b052e97013d8841c463e29d3d752d7c368.sol:13

  returns (bytes memory) {
        this; //

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xaC8d7dC05BaA373ec258f5C9644e859a7927F362.sol
Total states:3445
11.133148
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x36c6bafb43718b776d32f2389cdf9c25823c1965.sol
Total states:3088
58.069074
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040707
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x36c6bafb43718b776d32f2389cdf9c25823c1965.sol:13

ext, including the
 * sender of the transac

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.937002
Transaction Length: 1
Severity: High
Contract: WarpVaultLPFactory
Function name: createWarpVaultLP(uint256,address,string)
PC address: 202
Estimated Gas Usage: 356 - 451
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x36c6bafb43718b776d32f2389cdf9c25823c1965.sol:3

*/

// File: node_modules\@openzepp

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xce95896d65da8fed6e555adf6a00a50d83d9945b.sol
Total states:9807
232.623186
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.071150
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xce95896d65da8fed6e555adf6a00a50d83d9945b.sol:40

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:24.826790
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xce95896d65da8fed6e555adf6a00a50d83d9945b.sol:32

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.539951
Transaction Length: 1
Severity: High
Contract: raskaToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1648
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xce95896d65da8fed6e555adf6a00a50d83d9945b.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:28.617175
Transaction Length: 1
Severity: Medium
Contract: raskaToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop4/0xce95896d65da8fed6e555adf6a00a50d83d9945b.sol:213

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:37.085967
Transaction Length: 1
Severity: High
Contract: raskaToken
Function name: safeMul(uint256,uint256)
PC address: 5262
Estimated Gas Usage: 394 - 489
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xce95896d65da8fed6e555adf6a00a50d83d9945b.sol:40

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:04.555452
Transaction Length: 1
Severity: High
Contract: raskaToken
Function name: safeAdd(uint256,uint256)
PC address: 5840
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xce95896d65da8fed6e555adf6a00a50d83d9945b.sol:32

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x669cC97687c792fc5369d7bdd38cC9CFb2056d98.sol
Total states:0
0.016703
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x8282603eA15D6023b4075824b01fb5e1965C61AC.sol
Total states:9670
19.705902
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.034001
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8282603eA15D6023b4075824b01fb5e1965C61AC.sol:12


        this; // silence state mutability 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.297288
Transaction Length: 2
Severity: High
Contract: DimSumSwap
Function name: increaseAllowance(address,uint256)
PC address: 5292
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x8282603eA15D6023b4075824b01fb5e1965C61AC.sol:172

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xcaeccb24dde852c15e9e712debb506a31fb6a835.sol
Total states:432
0.731971
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x6e0a6448056a59a8fbd1e527f63ae85b33b059ef.sol
Total states:138
2.135822
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x69692d3345010a207b759a7d1af6fc7f38b35c5e.sol
Total states:2873
18.387322
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.033920
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x69692d3345010a207b759a7d1af6fc7f38b35c5e.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.119648
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: duration()
PC address: 301
Estimated Gas Usage: 10897 - 54186
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x69692d3345010a207b759a7d1af6fc7f38b35c5e.sol:638

function releasableAmount(IERC20 _token) public view returns (uint256) {
        return vestedAmount(_token).sub(released[address(_token)]);
    }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x9a17534f976ca71695937d7b53aa9a952ad96aa4.sol
Total states:1239
0.538463
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x10c38026216d4b7edf79e38907f2ad5cb955b587.sol
Total states:5259
55.346056
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.169668
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x10c38026216d4b7edf79e38907f2ad5cb955b587.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.594723
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x10c38026216d4b7edf79e38907f2ad5cb955b587.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.818997
Transaction Length: 1
Severity: High
Contract: AmirToken
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x10c38026216d4b7edf79e38907f2ad5cb955b587.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.740093
Transaction Length: 1
Severity: High
Contract: AmirToken
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x10c38026216d4b7edf79e38907f2ad5cb955b587.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7F537e2986DCBB93708fe12223453883047eCe34.sol
Total states:3445
11.178978
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xc5fdf6fa7d8159d28d5f26f6ded20b9929c573a3.sol
Total states:481
3.77168
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7ec400acb0565600915d34d50449ec6f2b592a5a.sol
Total states:2294
5.328177
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.791712
Transaction Length: 2
Severity: High
Contract: UniverseFinance
Function name: transferFrom(address,address,uint256)
PC address: 3814
Estimated Gas Usage: 7774 - 28819
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7ec400acb0565600915d34d50449ec6f2b592a5a.sol:14

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xbc77cca71fd9747255e407b241857d27e009f027.sol
Total states:10492
34.659136
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.542623
Transaction Length: 1
Severity: High
Contract: YearnToken
Function name: transfer(address,uint256)
PC address: 6338
Estimated Gas Usage: 834 - 929
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xbc77cca71fd9747255e407b241857d27e009f027.sol:31

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.282201
Transaction Length: 2
Severity: High
Contract: YearnToken
Function name: increaseAllowance(address,uint256)
PC address: 6458
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xbc77cca71fd9747255e407b241857d27e009f027.sol:9

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7b69d465c0f9fb22affae56aa86149973e9b0966.sol
Total states:5258
50.764321
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.287427
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7b69d465c0f9fb22affae56aa86149973e9b0966.sol:74

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.153210
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7b69d465c0f9fb22affae56aa86149973e9b0966.sol:66

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.417928
Transaction Length: 1
Severity: High
Contract: ProtocolFinance
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7b69d465c0f9fb22affae56aa86149973e9b0966.sol:74

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.340722
Transaction Length: 1
Severity: High
Contract: ProtocolFinance
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x7b69d465c0f9fb22affae56aa86149973e9b0966.sol:66

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x2b68E5cC1D62e7682c0aE13a7ffcE2450B7846F5.sol
Total states:18855
41.421586
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.639758
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x2b68E5cC1D62e7682c0aE13a7ffcE2450B7846F5.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.990471
Transaction Length: 2
Severity: High
Contract: YFICASH
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x2b68E5cC1D62e7682c0aE13a7ffcE2450B7846F5.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xE6468EACa0e17F4fa1F80CC3c16C10ae15bA4bA1.sol
Total states:871
1.348019
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x87a5ebb2c534f0b7951954e900692760217b7d6d.sol
Total states:1665
2.813514
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039001
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x87a5ebb2c534f0b7951954e900692760217b7d6d.sol:16

agnostic to the way tokens are created. Thi

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xa59e980145a70515a51b96e14127b3ae11e36242.sol
Total states:15332
35.81198
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.464631
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 2575
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa59e980145a70515a51b96e14127b3ae11e36242.sol:64

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.487506
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 2748
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xa59e980145a70515a51b96e14127b3ae11e36242.sol:64

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x15fe17da18288d1799643be1bb07fb939626f5f9.sol
Total states:21039
68.726576
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.869174
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x15fe17da18288d1799643be1bb07fb939626f5f9.sol:119

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.767384
Transaction Length: 1
Severity: Low
Contract: StableCreditProtocol
Function name: markets(address,uint256)
PC address: 3257
Estimated Gas Usage: 843 - 1128
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x15fe17da18288d1799643be1bb07fb939626f5f9.sol:257

mapping (address => address[]) public markets

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.535815
Transaction Length: 2
Severity: High
Contract: StableCreditProtocol
Function name: increaseAllowance(address,uint256)
PC address: 10725
Estimated Gas Usage: 1038 - 1513
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x15fe17da18288d1799643be1bb07fb939626f5f9.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.702961
Transaction Length: 1
Severity: High
Contract: StableCreditProtocol
Function name: deposit(address,uint256)
PC address: 18283
Estimated Gas Usage: 3733 - 73187
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x15fe17da18288d1799643be1bb07fb939626f5f9.sol:138

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol
Total states:3661
6.059903
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040591
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol:20

hru contract.

 * No presale.No dev wallet.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.042242
Transaction Length: 0
Severity: High
Contract: TRIFLECTOR
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xdca29b847cb9a7384626adb5949cacef44ebc56e.sol:20

hru contract.

 * No presale.No dev wallet.

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x890d53d8772a3cd3ad55cbd3a210e0fe88a034da.sol
Total states:1634
5.236154
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.175465
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: constructor
PC address: 606
Estimated Gas Usage: 7555 - 31379
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x890d53d8772a3cd3ad55cbd3a210e0fe88a034da.sol:253

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xB37523a39C6F3262b55b3FC81BD0357d0bEF4896.sol
Total states:0
0.018039
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7982e89febbde6dc18844550ccf6356646399eee.sol
Total states:868
3.34307
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x05dae56df5d37c6bb94fecdb56dd7176eb8d7fff.sol
Total states:1092
2.725822
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.111638
Transaction Length: 0
Severity: High
Contract: RugPullGame
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x05dae56df5d37c6bb94fecdb56dd7176eb8d7fff.sol:13

l view  returns (bytes memory) {
        th

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x7bf69162b122a08b89e5c8529a242593300ffa51.sol
Total states:878
2.190284
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0xb5a137bb2ab7e317756c399fd94ca215cece81d6.sol
Total states:21039
64.690627
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.191433
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xb5a137bb2ab7e317756c399fd94ca215cece81d6.sol:119

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.763723
Transaction Length: 1
Severity: Low
Contract: StableCreditProtocol
Function name: markets(address,uint256)
PC address: 3257
Estimated Gas Usage: 843 - 1128
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0xb5a137bb2ab7e317756c399fd94ca215cece81d6.sol:257

mapping (address => address[]) public markets

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.493737
Transaction Length: 2
Severity: High
Contract: StableCreditProtocol
Function name: increaseAllowance(address,uint256)
PC address: 10725
Estimated Gas Usage: 1038 - 1513
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xb5a137bb2ab7e317756c399fd94ca215cece81d6.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.537833
Transaction Length: 1
Severity: High
Contract: StableCreditProtocol
Function name: deposit(address,uint256)
PC address: 17681
Estimated Gas Usage: 3733 - 73187
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0xb5a137bb2ab7e317756c399fd94ca215cece81d6.sol:138

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol
Total states:4371
1847.543982
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.960470
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1219
Estimated Gas Usage: 543 - 638
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.302280
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1370
Estimated Gas Usage: 885 - 3662
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.891585
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1521
Estimated Gas Usage: 1227 - 6686
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:56.440449
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1672
Estimated Gas Usage: 1569 - 9710
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:03.244794
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: juniorName()
PC address: 1867
Estimated Gas Usage: 1524 - 2559
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol:162

string              public juniorName

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:08:55.466288
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: seniorSymbol()
PC address: 2072
Estimated Gas Usage: 1458 - 2493
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol:161

string              public seniorSymbol

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:25:58.027232
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: seniorName()
PC address: 3675
Estimated Gas Usage: 1500 - 2535
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x77DeCd6B1e8882572E593477C486b266a505216B.sol:160

string              public seniorName

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x54b8c98268da0055971652a95f2bfd3a9349a38c.sol
Total states:481
4.197924
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop4/0x4ed07051b9d053e442b42cb6b6083bcd7031729e.sol
Total states:10580
72.091766
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.878046
Transaction Length: 1
Severity: High
Contract: VIX
Function name: transfer(address,uint256,bytes)
PC address: 1229
Estimated Gas Usage: 466 - 561
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop4/0x4ed07051b9d053e442b42cb6b6083bcd7031729e.sol:3

*/

//pragma solidity ^0.4.23;
prag

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:18.225417
Transaction Length: 1
Severity: Low
Contract: VIX
Function name: transfer(address,uint256,bytes)
PC address: 4285
Estimated Gas Usage: 2032 - 4999
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x4ed07051b9d053e442b42cb6b6083bcd7031729e.sol:142

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:23.181928
Transaction Length: 2
Severity: Low
Contract: VIX
Function name: transfer(address,uint256,bytes)
PC address: 4285
Estimated Gas Usage: 2035 - 5002
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop4/0x4ed07051b9d053e442b42cb6b6083bcd7031729e.sol:142

assert(b <= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol
Total states:60
253.317941
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.323971
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactOut(address,uint256)
PC address: 2367
Estimated Gas Usage: 2578 - 40952
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.061438
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactOut(address,uint256)
PC address: 2370
Estimated Gas Usage: 2510 - 40601
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.909545
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2527
Estimated Gas Usage: 2510 - 40601
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:174

new address[](2)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.610418
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2865
Estimated Gas Usage: 825 - 4542
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:177

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:40.676161
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2905
Estimated Gas Usage: 975 - 5068
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:177

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.658091
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2974
Estimated Gas Usage: 2417 - 40415
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.395196
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2977
Estimated Gas Usage: 2510 - 40601
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:3



pragma solidity >=0.5 <0.7.17;

interface

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.939569
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 2998
Estimated Gas Usage: 2510 - 40601
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:177

UNI.getAmountsOut(inExact, _path)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.829846
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3023
Estimated Gas Usage: 2510 - 40601
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:2


*/

pragma solidity 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.832422
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3029
Estimated Gas Usage: 2510 - 40601
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:7

0 {
    functi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.119488
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3049
Estimated Gas Usage: 2568 - 40752
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:10

 returns (bool);
    

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.048302
Transaction Length: 1
Severity: High
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3051
Estimated Gas Usage: 2568 - 40752
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:10

 uint amount) external returns (bool);
    f

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:27.358937
Transaction Length: 1
Severity: Low
Contract: StableCreditHelper
Function name: calculateRepayExactIn(address,uint256)
PC address: 3092
Estimated Gas Usage: 2632 - 40909
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x95e0c14017bad43dbf044c202b1d23f01090f8d5.sol:177

UNI.getAmountsOut(inExact, _path)[1]

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xce40e56a4d67c41184aeb93dc2089b2224e0fe0f.sol
Total states:492
3.502595
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.082623
Transaction Length: 0
Severity: High
Contract: rSwap
Function name: constructor
PC address: 698
Estimated Gas Usage: 7449 - 31180
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xce40e56a4d67c41184aeb93dc2089b2224e0fe0f.sol:233

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xa6bb7dd137126e484bdd56c6e33b73ab4c28d8e8.sol
Total states:60
0.745752
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xd6b482d38a136f9e985e8979374aec88e2a79ed0.sol
Total states:8724
17.698522
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.168917
Transaction Length: 2
Severity: High
Contract: Paybchain
Function name: increaseAllowance(address,uint256)
PC address: 5425
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd6b482d38a136f9e985e8979374aec88e2a79ed0.sol:92

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x2e6539edc3b76f1e21b71d214527faba875f70f3.sol
Total states:18192
40.891389
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.874756
Transaction Length: 2
Severity: High
Contract: ponziv2
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2e6539edc3b76f1e21b71d214527faba875f70f3.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.868596
Transaction Length: 2
Severity: High
Contract: ponziv2
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2e6539edc3b76f1e21b71d214527faba875f70f3.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x483009c9aec73194518723db2f849f82cb8f58a4.sol
Total states:18192
42.114769
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.358643
Transaction Length: 2
Severity: High
Contract: whatever2
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x483009c9aec73194518723db2f849f82cb8f58a4.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.187761
Transaction Length: 2
Severity: High
Contract: whatever2
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x483009c9aec73194518723db2f849f82cb8f58a4.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x35E7ECeF551B0c07a418f06CCD40110466C3E5cC.sol
Total states:24
0.055795
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1828e7a548bbd4a90ac74e0b411503512dd25268.sol
Total states:18192
41.354405
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.728726
Transaction Length: 2
Severity: High
Contract: SAPI
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1828e7a548bbd4a90ac74e0b411503512dd25268.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.516715
Transaction Length: 2
Severity: High
Contract: SAPI
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1828e7a548bbd4a90ac74e0b411503512dd25268.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol
Total states:9087
42.522802
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:05.981240
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeSub(uint256,uint256)
PC address: 601
Estimated Gas Usage: 527 - 622
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:110

x - y

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:07.938916
Transaction Length: 1
Severity: Low
Contract: Math
Function name: safeDiv(uint256,uint256)
PC address: 689
Estimated Gas Usage: 542 - 637
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:118

x / y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.806677
Transaction Length: 1
Severity: High
Contract: Math
Function name: rdiv(uint256,uint256)
PC address: 715
Estimated Gas Usage: 600 - 695
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:114

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.257968
Transaction Length: 1
Severity: High
Contract: Math
Function name: safeAdd(uint256,uint256)
PC address: 807
Estimated Gas Usage: 593 - 688
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:106

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:03.801771
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: safeSub(uint256,uint256)
PC address: 7105
Estimated Gas Usage: 595 - 690
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:110

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.011132
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 7399
Estimated Gas Usage: 2505 - 37399
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:5

sing https://da

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.421397
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 7402
Estimated Gas Usage: 2505 - 37399
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:3



// Verified using https://dapp.tools

// 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.245018
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 7414
Estimated Gas Usage: 2505 - 37399
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:529

assessor.maxReserve()

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:10.899690
Transaction Length: 1
Severity: Low
Contract: EpochCoordinator
Function name: safeDiv(uint256,uint256)
PC address: 7786
Estimated Gas Usage: 566 - 661
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:118

x / y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:15.897891
Transaction Length: 1
Severity: Low
Contract: EpochCoordinator
Function name: closeEpoch()
PC address: 8338
Estimated Gas Usage: 13340 - 54376
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:336

reserve.balance()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.254226
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: calcAssets(uint256,uint256)
PC address: 11305
Estimated Gas Usage: 599 - 694
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:106

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:07.840156
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreReserveImprovement(uint256)
PC address: 14115
Estimated Gas Usage: 2505 - 37399
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:142

e as published by
// th

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:23.884655
Transaction Length: 1
Severity: High
Contract: EpochCoordinator
Function name: scoreImprovement((uint256),uint256)
PC address: 16145
Estimated Gas Usage: 428 - 616
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd2Ee4e2163188Eeeb4F4773CCbb712E8605cDcbb.sol:482

value <= maxRatio

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol
Total states:2733
7.509452
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.747257
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 4168
Estimated Gas Usage: 1612 - 2603
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:280

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.656680
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4836
Estimated Gas Usage: 1608 - 2599
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:251

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.334827
Transaction Length: 1
Severity: High
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3374 - 38551
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A.sol:95

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x4792e204cefc32c25fcd34388473b255d8c9c506.sol
Total states:10011
18.678813
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.409489
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x4792e204cefc32c25fcd34388473b255d8c9c506.sol:34

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol
Total states:1007
124.813415
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.794553
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: external_call(address,uint256,bytes)
PC address: 319
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:3

*/

// File: contracts/IMultisigCar

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:18.664267
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 542
Estimated Gas Usage: 2718 - 38738
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:43

function parties() public view returns (address[] memory) {
        IMultisigCarrier multisigCarrier = IMultisigCarrier(_carrier);
        return multisigCarrier.vaultParties(address(this));
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.974344
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1181
Estimated Gas Usage: 2252 - 37241
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:5

racts/IMultisig

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.668988
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1184
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:3



// File: contracts/IMultisigCarrier.sol



--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.686293
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1205
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:45

multisigCarrier.vaultParties(address(this))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:23.909163
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1230
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:2


*/

// File: contrac

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:32.775311
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1236
Estimated Gas Usage: 2345 - 37427
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:7

ma solidity ^0

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:39.754013
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1256
Estimated Gas Usage: 2403 - 37578
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:16

ies(
        address 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:43.600063
Transaction Length: 1
Severity: High
Contract: MultisigVault
Function name: parties()
PC address: 1258
Estimated Gas Usage: 2403 - 37578
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:16

    function vaultParties(
        address v

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:51.618174
Transaction Length: 1
Severity: Low
Contract: MultisigVault
Function name: approve(address,address,uint256)
PC address: 1601
Estimated Gas Usage: 1709 - 2795
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xa645b9e28923ab6d66f7da4563cd1025fb6353f3.sol:58

multisigCarrier.approveFrom(msg.sender, destination, currencyAddress, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x4849d2a7fec8572f12f369659cf48a826601cc5c.sol
Total states:8897
22.44686
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.118153
Transaction Length: 0
Severity: High
Contract: eVault
Function name: constructor
PC address: 234
Estimated Gas Usage: 6824 - 64159
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x4849d2a7fec8572f12f369659cf48a826601cc5c.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.916906
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x4849d2a7fec8572f12f369659cf48a826601cc5c.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x6f3463bac33383a42e666d07e37e17df1d3d70fd.sol
Total states:7697
28.53385
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.532131
Transaction Length: 1
Severity: High
Contract: yeldDAI
Function name: updatePrice()
PC address: 4031
Estimated Gas Usage: 1068 - 1163
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6f3463bac33383a42e666d07e37e17df1d3d70fd.sol:408

lastPriceUpdate + priceUpdatePeriod

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x417538f319afddd351f33222592b60f985475a21.sol
Total states:997
24.350731
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:23.606758
Transaction Length: 1
Severity: Low
Contract: TokenVestingLock
Function name: getPendingUnlocked()
PC address: 3312
Estimated Gas Usage: 659 - 754
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x417538f319afddd351f33222592b60f985475a21.sol:29

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.534439
Transaction Length: 1
Severity: High
Contract: TokenVestingLock
Function name: getPendingUnlocked()
PC address: 3330
Estimated Gas Usage: 958 - 1053
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x417538f319afddd351f33222592b60f985475a21.sol:16

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:22.823729
Transaction Length: 1
Severity: Low
Contract: TokenVestingLock
Function name: getPendingUnlocked()
PC address: 3364
Estimated Gas Usage: 1030 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x417538f319afddd351f33222592b60f985475a21.sol:17

assert(a == 0 || c / a == b)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x31c08eb8e7caa67a3e1d1b053190edcc77c7c39d.sol
Total states:5259
56.072161
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.419621
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x31c08eb8e7caa67a3e1d1b053190edcc77c7c39d.sol:36

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.330167
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x31c08eb8e7caa67a3e1d1b053190edcc77c7c39d.sol:32

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.682685
Transaction Length: 1
Severity: High
Contract: GoatFinanceToken
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x31c08eb8e7caa67a3e1d1b053190edcc77c7c39d.sol:36

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.702069
Transaction Length: 1
Severity: High
Contract: GoatFinanceToken
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x31c08eb8e7caa67a3e1d1b053190edcc77c7c39d.sol:32

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x7827cA5dB933635bad77Aa52C837Ee98BeB1206D.sol
Total states:0
0.012039
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol
Total states:40181
2104.600901
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.154571
Transaction Length: 1
Severity: Medium
Contract: Hodler
Function name: release(uint256)
PC address: 215
Estimated Gas Usage: 12859 - 104203
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1177
Offset: 3823
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:696

function release(uint256 _id) external {
    require(_id > 0);

    // user
    address _user = msg.sender;

    // get item
    Item storage item = items[_user][_id];

    // check if it exists
    require(item.id == _id);
    // check if its not already fulfilled
    require(!item.fulfilled);
    // check time
    require(block.timestamp >= item.releaseTime);

    // check if there is enough tokens
    uint256 balance = recurly.balanceOf(address(this));
    require(balance >= item.value);

    // update state
    item.fulfilled = true;

    // transfer tokens to beneficiary
    recurly.safeTransfer(item.beneficiary, item.value);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.289646
Transaction Length: 2
Severity: Medium
Contract: Hodler
Function name: release(uint256)
PC address: 215
Estimated Gas Usage: 12859 - 104203
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1177
Offset: 3823
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:696

function release(uint256 _id) external {
    require(_id > 0);

    // user
    address _user = msg.sender;

    // get item
    Item storage item = items[_user][_id];

    // check if it exists
    require(item.id == _id);
    // check if its not already fulfilled
    require(!item.fulfilled);
    // check time
    require(block.timestamp >= item.releaseTime);

    // check if there is enough tokens
    uint256 balance = recurly.balanceOf(address(this));
    require(balance >= item.value);

    // update state
    item.fulfilled = true;

    // transfer tokens to beneficiary
    recurly.safeTransfer(item.beneficiary, item.value);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.977542
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: checkRole(address,string)
PC address: 236
Estimated Gas Usage: 329 - 424
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:06.920121
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: hasRole(address,string)
PC address: 455
Estimated Gas Usage: 351 - 446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.151372
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: checkRole(address,string)
PC address: 671
Estimated Gas Usage: 419 - 514
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:58.728738
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: adminRemoveRole(address,string)
PC address: 698
Estimated Gas Usage: 373 - 468
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.216335
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: checkRole(address,string)
PC address: 760
Estimated Gas Usage: 441 - 536
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:28.213427
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: adminAddRole(address,string)
PC address: 917
Estimated Gas Usage: 395 - 490
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:55.044982
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: hasRole(address,string)
PC address: 920
Estimated Gas Usage: 374 - 469
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:51.922617
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: hasRole(address,string)
PC address: 1009
Estimated Gas Usage: 485 - 580
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:07:24.811399
Transaction Length: 1
Severity: High
Contract: RBAC
Function name: ROLE_ADMIN()
PC address: 1102
Estimated Gas Usage: 730 - 2424
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:88

string public constant ROLE_ADMIN = "admin"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:18.474475
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: adminRemoveRole(address,string)
PC address: 1671
Estimated Gas Usage: 418 - 513
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:47.634081
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: adminRemoveRole(address,string)
PC address: 1794
Estimated Gas Usage: 396 - 491
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:07:07.563368
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: symbol()
PC address: 1856
Estimated Gas Usage: 528 - 1658
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:593

string public constant symbol = "CLERK"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:51.633312
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: ROLE_TRANSFER()
PC address: 1979
Estimated Gas Usage: 506 - 1636
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:563

string constant public ROLE_TRANSFER = "transfer"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:09:21.296125
Transaction Length: 1
Severity: High
Contract: CLERK
Function name: adminAddRole(address,string)
PC address: 2123
Estimated Gas Usage: 373 - 468
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:07:24.435270
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: symbol()
PC address: 2184
Estimated Gas Usage: 550 - 1680
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:561

string public constant symbol = "RCR"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:10:33.277112
Transaction Length: 1
Severity: High
Contract: Recurly
Function name: adminAddRole(address,string)
PC address: 2553
Estimated Gas Usage: 395 - 490
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:3

*/

// SPDX-License-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.516658
Transaction Length: 1
Severity: High
Contract: Hodler
Function name: hodl(uint256,uint256,uint256)
PC address: 3957
Estimated Gas Usage: 1319 - 1794
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:247

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:12.307994
Transaction Length: 1
Severity: Low
Contract: Hodler
Function name: hodl(uint256,uint256,uint256)
PC address: 3970
Estimated Gas Usage: 1351 - 1826
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:248

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.454991
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4109
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:247

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:39.817273
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4122
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:248

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.101634
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 5581
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:247

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:27.411948
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 5594
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x3b62f3820e0b035cc4ad602dece6d796bc325325.sol:248

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x443969c7957f00371fa8a8cf63cdbb7812e2fb8b.sol
Total states:3269
7.022826
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xa4e8d5ef05dcb325f766f52686c6c570fb109899.sol
Total states:144
2.262815
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.077671
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: duration()
PC address: 301
Estimated Gas Usage: 10897 - 54186
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa4e8d5ef05dcb325f766f52686c6c570fb109899.sol:638

function releasableAmount(IERC20 _token) public view returns (uint256) {
        return vestedAmount(_token).sub(released[address(_token)]);
    }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol
Total states:4104
24.396275
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:05.679131
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 339
Estimated Gas Usage: 10986 - 154068
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1353
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:169

function supplyOrderWithDaiPermit(uint amount, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {
        DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s);
        supplyOrder(amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:08.017267
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: redeemOrder(uint256)
PC address: 385
Estimated Gas Usage: 8635 - 116441
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1961
Offset: 2326
Offset: 2583
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:147

function redeemOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        token.hasMember(msg.sender);
        tranche.redeemOrder(msg.sender, amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:14.897622
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse()
PC address: 823
Estimated Gas Usage: 4632 - 75356
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 4515
Offset: 4882
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:154

function disburse() external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:16.865174
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse(uint256)
PC address: 910
Estimated Gas Usage: 4758 - 75577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5182
Offset: 5557
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:161

function disburse(uint endEpoch) external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender, endEpoch);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:18.996996
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 1044
Estimated Gas Usage: 6568 - 79482
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:141

function supplyOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        tranche.supplyOrder(msg.sender, amount);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.586498
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1711
Estimated Gas Usage: 3914 - 40177
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:170

DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:23.137922
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 2583
Estimated Gas Usage: 8608 - 114894
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:150

tranche.redeemOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:10.279566
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 3258
Estimated Gas Usage: 3875 - 40043
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:174

EIP2612PermitLike(tranche.currency()).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.771446
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse()
PC address: 4882
Estimated Gas Usage: 3600 - 39293
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:158

tranche.disburse(msg.sender)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:16.688572
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse(uint256)
PC address: 5557
Estimated Gas Usage: 3724 - 39512
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:165

tranche.disburse(msg.sender, endEpoch)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:18.746818
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 6269
Estimated Gas Usage: 3727 - 39515
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:143

tranche.supplyOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:20.323259
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 6826
Estimated Gas Usage: 2310 - 4011
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6DAecbC801EcA2873599bA3d980c237D9296cF57.sol:178

EIP2612PermitLike(address(token)).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xeb4c063f68bf4c4e807f89ae6e1f5f153a0e9006.sol
Total states:8483
30.863218
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.452638
Transaction Length: 2
Severity: High
Contract: BEANSfarm
Function name: increaseApproval(address,uint256)
PC address: 4860
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xeb4c063f68bf4c4e807f89ae6e1f5f153a0e9006.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:27.194213
Transaction Length: 2
Severity: Low
Contract: BEANSfarm
Function name: increaseApproval(address,uint256)
PC address: 4873
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xeb4c063f68bf4c4e807f89ae6e1f5f153a0e9006.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x82B8617A16e388256617FeBBa1826093401a3fE5.sol
Total states:3279
4.74733
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x59ec1d5869133a3fbd4421421e48bb94c5644a49.sol
Total states:1088
9.432263
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1a9C8182C09F50C8318d769245beA52c32BE35BC.sol
Total states:60
0.75589
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x73efb2b57c32fa146a9e1a5fbc5d4e77c072a5fb.sol
Total states:4879
8.668627
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x38d4cdC85656467E46337793a0Dd53376f8b58e5.sol
Total states:7773
17.942705
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.863185
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x38d4cdC85656467E46337793a0Dd53376f8b58e5.sol:10

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x3D7E6eb99F55dfAc62a56Fb7a7331d81aD6F3f73.sol
Total states:1239
0.642421
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xc690d096e8e3e90e2ba8b31c70aa63d86a82a845.sol
Total states:10535
116.596761
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:42.512058
Transaction Length: 1
Severity: High
Contract: UniHourglass
Function name: setSymbol(string)
PC address: 2783
Estimated Gas Usage: 385 - 480
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc690d096e8e3e90e2ba8b31c70aa63d86a82a845.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:58.508215
Transaction Length: 1
Severity: High
Contract: UniHourglass
Function name: setName(string)
PC address: 3069
Estimated Gas Usage: 451 - 546
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc690d096e8e3e90e2ba8b31c70aa63d86a82a845.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:41.521598
Transaction Length: 1
Severity: Low
Contract: UniHourglass
Function name: distribute(uint256)
PC address: 7820
Estimated Gas Usage: 8804 - 63981
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc690d096e8e3e90e2ba8b31c70aa63d86a82a845.sol:193

(_amount * magnitude) / tokenSupply_

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.800354
Transaction Length: 1
Severity: High
Contract: UniHourglass
Function name: calculateTokensReceived(uint256)
PC address: 11213
Estimated Gas Usage: 831 - 926
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc690d096e8e3e90e2ba8b31c70aa63d86a82a845.sol:13

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:34.858658
Transaction Length: 1
Severity: Low
Contract: UniHourglass
Function name: calculateTokensReceived(uint256)
PC address: 11236
Estimated Gas Usage: 869 - 964
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc690d096e8e3e90e2ba8b31c70aa63d86a82a845.sol:14

assert(c / a == b)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:39.908751
Transaction Length: 1
Severity: Low
Contract: UniHourglass
Function name: distribute(uint256)
PC address: 11550
Estimated Gas Usage: 1679 - 2670
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xc690d096e8e3e90e2ba8b31c70aa63d86a82a845.sol:186

erc20.transferFrom(msg.sender, address(this), _amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xa38279a6fc9a9bcb1e9735d646c39d8f6e1ef5b0.sol
Total states:120
4.297932
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1ec9ad3e8fc72aa0a7cbaa1de816c11eb82157a3.sol
Total states:17314
61.289737
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.050600
Transaction Length: 2
Severity: High
Contract: ELTK2
Function name: fallback()
PC address: 1325
Estimated Gas Usage: 574 - 859
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1ec9ad3e8fc72aa0a7cbaa1de816c11eb82157a3.sol:48

balanceOf[msg.sender] += msg.value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:40.820451
Transaction Length: 2
Severity: High
Contract: ELTK2
Function name: transferFrom(address,address,uint256)
PC address: 2476
Estimated Gas Usage: 8277 - 29892
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1ec9ad3e8fc72aa0a7cbaa1de816c11eb82157a3.sol:118

balanceOf[src] -= wad

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:46.535295
Transaction Length: 2
Severity: High
Contract: ELTK2
Function name: transferFrom(address,address,uint256)
PC address: 2553
Estimated Gas Usage: 13800 - 55605
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1ec9ad3e8fc72aa0a7cbaa1de816c11eb82157a3.sol:120

balanceOf[dst] += wad

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x3553ea6eb523a36b86961ec90ecbd8f5ab15d2d4.sol
Total states:3429
5.988465
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x435a28250bf5a2b453103ff0827c75d18094504d.sol
Total states:7332
10.233259
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040617
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x435a28250bf5a2b453103ff0827c75d18094504d.sol:13

available, which can be applied to function

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x48BcB97E63f91c8e064307E9ff35E86e4CAb6F98.sol
Total states:5254
53.900379
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.137569
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x48BcB97E63f91c8e064307E9ff35E86e4CAb6F98.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.759306
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x48BcB97E63f91c8e064307E9ff35E86e4CAb6F98.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.835204
Transaction Length: 1
Severity: High
Contract: chadcoin
Function name: safeMul(uint256,uint256)
PC address: 3820
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x48BcB97E63f91c8e064307E9ff35E86e4CAb6F98.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:24.152031
Transaction Length: 1
Severity: High
Contract: chadcoin
Function name: safeAdd(uint256,uint256)
PC address: 4004
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x48BcB97E63f91c8e064307E9ff35E86e4CAb6F98.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xec8318cb5b5d2892d92a473a32a2bc2fa2a7604a.sol
Total states:10158
34.270647
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:07.006136
Transaction Length: 1
Severity: Low
Contract: AErc20
Function name: seize(address,address,uint256)
PC address: 10140
Estimated Gas Usage: 7628 - 28809
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xec8318cb5b5d2892d92a473a32a2bc2fa2a7604a.sol:1828

controller.seizeAllowed(address(this), msg.sender, liquidator, borrower, seizeTokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.404737
Transaction Length: 1
Severity: Low
Contract: AErc20
Function name: transfer(address,uint256)
PC address: 15245
Estimated Gas Usage: 7688 - 28774
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xec8318cb5b5d2892d92a473a32a2bc2fa2a7604a.sol:819

controller.transferAllowed(address(this), src, dst, tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.599172
Transaction Length: 2
Severity: Low
Contract: AErc20
Function name: transfer(address,uint256)
PC address: 15245
Estimated Gas Usage: 7681 - 28767
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xec8318cb5b5d2892d92a473a32a2bc2fa2a7604a.sol:819

controller.transferAllowed(address(this), src, dst, tokens)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x0ce02cbb973c12a178415ba81d090e985924643d.sol
Total states:5259
56.694475
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.229484
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x0ce02cbb973c12a178415ba81d090e985924643d.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.224246
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x0ce02cbb973c12a178415ba81d090e985924643d.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.702765
Transaction Length: 1
Severity: High
Contract: JakeToken
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x0ce02cbb973c12a178415ba81d090e985924643d.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.178319
Transaction Length: 1
Severity: High
Contract: JakeToken
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x0ce02cbb973c12a178415ba81d090e985924643d.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol
Total states:2698
8.561181
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.743623
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 4092
Estimated Gas Usage: 1590 - 2581
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:285

IERC20(XFI).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:06.462483
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4581
Estimated Gas Usage: 1588 - 2579
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:256

IERC20(XFI).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.085983
Transaction Length: 1
Severity: High
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3352 - 38529
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x5cd1c00a88822182733e3ac335863fcc9a1c0705.sol:100

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xCe90991255932cE3A19defBb288370023d264369.sol
Total states:2655
4.474977
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol
Total states:21575
185.626332
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.028108
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:9

dress constant BUSD_DEPOSIT_ADDRESS   = 0xb

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.477267
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: fallback
PC address: 142
Estimated Gas Usage: 2311 - 39600
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x594153a000000000000000000000000000000000000000000000000000000000
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1035

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.479830
Transaction Length: 1
Severity: Medium
Contract: PoolProxy
Function name: fallback
PC address: 160
Estimated Gas Usage: 3056 - 74345
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 931
Offset: 142
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1044

return(ptr, size)

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.147161
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: fallback
PC address: 264
Estimated Gas Usage: 725 - 3547
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy))
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:902

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.057203
Transaction Length: 1
Severity: Low
Contract: Deposit3Tokens
Function name: period_timestamp(uint256)
PC address: 380
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:992

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.143808
Transaction Length: 1
Severity: Low
Contract: Deposit2Tokens
Function name: period_timestamp(uint256)
PC address: 393
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:986

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:55.874194
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 537
Estimated Gas Usage: 1433 - 2470
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:00.678913
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 577
Estimated Gas Usage: 1583 - 2996
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.692365
Transaction Length: 1
Severity: Low
Contract: TokenManager
Function name: supportAddresses(address,uint256)
PC address: 613
Estimated Gas Usage: 752 - 1037
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.318770
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: supportAddresses(address,uint256)
PC address: 1317
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:03.174481
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1575
Estimated Gas Usage: 4173 - 40386
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1082

IERC20(tokenAddress).transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:09.150659
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1891
Estimated Gas Usage: 5889 - 76759
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1085

IERC20(tokenAddress).approve(EXCHANGE_CONTRACT, amount)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.049144
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: supportAddresses(address,uint256)
PC address: 2114
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.657140
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2259
Estimated Gas Usage: 8446 - 148446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:5

enManager {
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.731972
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2262
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:3



 contract TokenManager {
    
    address

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.675338
Transaction Length: 2
Severity: High
Contract: PoolToken
Function name: increaseAllowance(address,uint256)
PC address: 4840
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:139

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.548998
Transaction Length: 1
Severity: Low
Contract: PoolFactory
Function name: supportAddresses(address,uint256)
PC address: 5037
Estimated Gas Usage: 796 - 1081
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:15.896801
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: supportAddresses(address,uint256)
PC address: 8485
Estimated Gas Usage: 818 - 1103
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.195203
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17754
Estimated Gas Usage: 5008 - 75599
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:5

enManager {
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.428789
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17757
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:3



 contract TokenManager {
    
    address

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:35.577843
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17778
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1241

IOneSplit(EXCHANGE_CONTRACT).getExpectedReturn(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, 100, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.009445
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17813
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:2


*/

 contract TokenM

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:42.667259
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17819
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:7

ant COMPOUND_D

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:50.565414
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17839
Estimated Gas Usage: 5186 - 76056
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:9

POSIT_ADDRESS   = 0xb

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:59.832391
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17841
Estimated Gas Usage: 5186 - 76056
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:9

dress constant BUSD_DEPOSIT_ADDRESS   = 0xb6

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:42.551223
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18208
Estimated Gas Usage: 5661 - 77946
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:42.065660
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18245
Estimated Gas Usage: 6389 - 78579
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.598223
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 19161
Estimated Gas Usage: 5923 - 76793
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xc65ee69496ada2f47ad831ca43a84023611a6e14.sol:1257

IERC20(DAI_ADDRESS).approve(_depositPool, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xf3ce0c622b004b0f11636edbd082d1d4718c2cae.sol
Total states:9384
375.9755
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol
Total states:44637
144.935582
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.169354
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 4827
Estimated Gas Usage: 2616 - 3661
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.768363
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4840
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:33

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.231154
Transaction Length: 2
Severity: High
Contract: Pausable
Function name: transferFrom(address,address,uint256)
PC address: 5561
Estimated Gas Usage: 2639 - 3684
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:32.915467
Transaction Length: 2
Severity: Low
Contract: Pausable
Function name: increaseApproval(address,uint256)
PC address: 5574
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:33

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.162822
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: transferFrom(address,address,uint256)
PC address: 6243
Estimated Gas Usage: 3145 - 4520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:30.829907
Transaction Length: 2
Severity: Low
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6256
Estimated Gas Usage: 1471 - 2276
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:33

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.833807
Transaction Length: 2
Severity: High
Contract: Yearn20MoonFinance
Function name: increaseApproval(address,uint256)
PC address: 7345
Estimated Gas Usage: 1483 - 2288
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:19.569021
Transaction Length: 2
Severity: Low
Contract: Yearn20MoonFinance
Function name: increaseApproval(address,uint256)
PC address: 7358
Estimated Gas Usage: 1493 - 2298
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a231e75538a931c395785ef5d1a5581ec622b0e.sol:33

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x579353231f3540b218239774422962c64a3693e7.sol
Total states:18855
39.295955
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.182301
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x579353231f3540b218239774422962c64a3693e7.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.707148
Transaction Length: 2
Severity: High
Contract: BCTR
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x579353231f3540b218239774422962c64a3693e7.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x4A7c5B572792F3D14B2cE51B8D948044b6deC07F.sol
Total states:2081
4.641456
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.765990
Transaction Length: 1
Severity: High
Contract: Flopper
Function name: tick(uint256)
PC address: 8988
Estimated Gas Usage: 8046 - 29891
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x4A7c5B572792F3D14B2cE51B8D948044b6deC07F.sol:132

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol
Total states:18307
98.549278
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.207621
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2327
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:16.631067
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2340
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:94

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.012283
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2798
Estimated Gas Usage: 933 - 1408
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:16.979819
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2811
Estimated Gas Usage: 943 - 1418
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:94

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.418057
Transaction Length: 1
Severity: Low
Contract: CnymToken
Function name: transfer(address,uint256)
PC address: 4326
Estimated Gas Usage: 929 - 1214
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:47.725549
Transaction Length: 2
Severity: Low
Contract: CnymToken
Function name: transferFrom(address,address,uint256)
PC address: 4326
Estimated Gas Usage: 1579 - 2244
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:76

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.067606
Transaction Length: 2
Severity: High
Contract: CnymToken
Function name: increaseApproval(address,uint256)
PC address: 4886
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:52.575176
Transaction Length: 2
Severity: Low
Contract: CnymToken
Function name: increaseApproval(address,uint256)
PC address: 4899
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x010995e2152f7ac33ba319465888f6b5ad477fe5.sol:94

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1f1ccf377d4fc66f600a60ca66f7bb8000843068.sol
Total states:3825
9.633531
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.537430
Transaction Length: 1
Severity: Medium
Contract: NUXPresale
Function name: finalize()
PC address: 754
Estimated Gas Usage: 4923 - 75041
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2704
Offset: 2896
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x1f1ccf377d4fc66f600a60ca66f7bb8000843068.sol:601

function finalize() public {
        require(presaleEnded(), 'Presale not ended yet');
        INUXAsset(address(NUXToken)).transferLock(treasury, NUXToken.balanceOf(address(this)));
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.531785
Transaction Length: 1
Severity: Low
Contract: NUXPresale
Function name: finalize()
PC address: 2896
Estimated Gas Usage: 4183 - 40301
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1f1ccf377d4fc66f600a60ca66f7bb8000843068.sol:603

INUXAsset(address(NUXToken)).transferLock(treasury, NUXToken.balanceOf(address(this)))

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x693eea0cf4671748211fe97d0de6a33076a89169.sol
Total states:1432
3.545504
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048449
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 141
Estimated Gas Usage: 20281 - 103054
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x693eea0cf4671748211fe97d0de6a33076a89169.sol:10

ta. While these are generally available
 * 

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xde8607ccad60814c8d9cd6f5ce8e9031e4675c8f.sol
Total states:3847
8.270002
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol
Total states:4511
251.832798
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:01.102180
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1060
Estimated Gas Usage: 1753 - 2744
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:223

vat.move(address(this), usr, mul(ONE, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.810336
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: join(address)
PC address: 1239
Estimated Gas Usage: 2405 - 3396
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:186

vat.slip(ilk, usr, int(msg.value))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:42.957280
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1281
Estimated Gas Usage: 3783 - 39575
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:224

dai.burn(msg.sender, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.417597
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1322
Estimated Gas Usage: 2474 - 3465
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:150

vat.slip(ilk, usr, int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.395917
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1595
Estimated Gas Usage: 4535 - 40422
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:151

gem.transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:11.972990
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2573
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:190

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:36.868443
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2633
Estimated Gas Usage: 2224 - 3215
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:228

vat.move(msg.sender, address(this), mul(ONE, wad))

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:13.981106
Transaction Length: 1
Severity: High
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2642
Estimated Gas Usage: 2899 - 38076
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:191

usr.transfer(wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:14.548384
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2854
Estimated Gas Usage: 4255 - 40047
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:229

dai.mint(usr, wad)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.473210
Transaction Length: 1
Severity: High
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 2984
Estimated Gas Usage: 848 - 1273
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:220

x * y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:18.024572
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3118
Estimated Gas Usage: 2122 - 3113
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:155

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:21.749995
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3339
Estimated Gas Usage: 4153 - 39945
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x1856298fAD423F63158A3ED1c7d98490840E6C14.sol:156

gem.transfer(usr, wad)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x96267a9781522498fd4c280b791bd135780693a1.sol
Total states:1947
8.151985
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.009630
Transaction Length: 1
Severity: Low
Contract: BaseUpgradeabilityProxy
Function name: fallback
PC address: 97
Estimated Gas Usage: 557 - 2956
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: ../../contracts/noloop/noloop8/0x96267a9781522498fd4c280b791bd135780693a1.sol:45

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.983300
Transaction Length: 1
Severity: High
Contract: BaseAdminUpgradeabilityProxy
Function name: upgradeToAndCall(address,bytes)
PC address: 309
Estimated Gas Usage: 327 - 422
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x96267a9781522498fd4c280b791bd135780693a1.sol:3

*/

// File: @openzeppelin/upgrades

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:06.989923
Transaction Length: 1
Severity: Low
Contract: BaseAdminUpgradeabilityProxy
Function name: fallback
PC address: 1699
Estimated Gas Usage: 1229 - 3628
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: ../../contracts/noloop/noloop8/0x96267a9781522498fd4c280b791bd135780693a1.sol:45

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x8e14d03061705eb48fda6bc6e244c5eabe5d322e.sol
Total states:9065
21.199737
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.193917
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x8e14d03061705eb48fda6bc6e244c5eabe5d322e.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x2c110c115e3892388cfccdf7925a072b6e1543a4.sol
Total states:418
1.238823
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xeC08219378c3bBc560D19f442E87323A740399f8.sol
Total states:1043
2.109749
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol
Total states:46840
107.634842
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047192
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.950393
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.850329
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.992074
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.949736
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.981007
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.058295
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.194489
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.075243
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.185475
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.198433
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.443057
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.123881
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.744696
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.887037
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.035494
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.976833
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.135739
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.149158
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x3f33Eaffc92F43D2F43BE9db8A7e6931C4350644.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xb58d25db06b84118843c0ab79b6ff51571d443c6.sol
Total states:138
2.637109
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.097761
Transaction Length: 0
Severity: High
Contract: HolderVesting
Function name: transferOwnership(address)
PC address: 955
Estimated Gas Usage: 7523 - 31347
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xb58d25db06b84118843c0ab79b6ff51571d443c6.sol:515

_owner

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xcd9fe5772caf239972b6e1452baf0103b49e8e15.sol
Total states:678
3.08741
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xC65E282a82b5F0b02Dec20d32DCf12A89f5580bc.sol
Total states:796
0.497079
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xC35D2d946F304E26eEb04eED5E3f5eFAD0F1e865.sol
Total states:2175
2.774466
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.283130
Transaction Length: 1
Severity: Low
Contract: UpgradeabilityProxy
Function name: fallback
PC address: 274
Estimated Gas Usage: 681 - 3503
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy),
       4_code(UpgradeabilityProxy))
--------------------
In file: ../../contracts/noloop/noloop8/0xC35D2d946F304E26eEb04eED5E3f5eFAD0F1e865.sol:260

delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xfd4240e76016e039d44228cbfed3a120c004e03d.sol
Total states:2939
5.375852
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:02.328672
Transaction Length: 1
Severity: Low
Contract: WaltContract
Function name: transfer(address,uint256)
PC address: 4109
Estimated Gas Usage: 1075 - 1360
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xfd4240e76016e039d44228cbfed3a120c004e03d.sol:172

assert(b <= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x46a36b6bcbebd54b07b0f0fac88e89e3c6013ee3.sol
Total states:1237
3.482817
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.274085
Transaction Length: 0
Severity: High
Contract: DEDXToken
Function name: constructor
PC address: 575
Estimated Gas Usage: 45086 - 211487
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x46a36b6bcbebd54b07b0f0fac88e89e3c6013ee3.sol:133

tokens * 10 ** 10

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1bfbd6bdee80f74e9973b0328c56bad009fc62ea.sol
Total states:248
0.221619
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x86af7b477f87c6b20b1d27496e7355230eb49724.sol
Total states:1218
0.989687
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x1a389c381a8242B7acFf0eB989173Cd5d0EFc3e3.sol
Total states:21039
71.370434
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.220818
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a389c381a8242B7acFf0eB989173Cd5d0EFc3e3.sol:119

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.791629
Transaction Length: 1
Severity: Low
Contract: StableCreditProtocol
Function name: markets(address,uint256)
PC address: 3257
Estimated Gas Usage: 843 - 1128
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a389c381a8242B7acFf0eB989173Cd5d0EFc3e3.sol:257

mapping (address => address[]) public markets

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.786088
Transaction Length: 2
Severity: High
Contract: StableCreditProtocol
Function name: increaseAllowance(address,uint256)
PC address: 10725
Estimated Gas Usage: 1038 - 1513
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a389c381a8242B7acFf0eB989173Cd5d0EFc3e3.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.106383
Transaction Length: 1
Severity: High
Contract: StableCreditProtocol
Function name: deposit(address,uint256)
PC address: 18283
Estimated Gas Usage: 3733 - 73187
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x1a389c381a8242B7acFf0eB989173Cd5d0EFc3e3.sol:138

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xb9f45edeffe5abd7a1a1dffc65068a065b98524d.sol
Total states:1555
6.696307
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040789
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xb9f45edeffe5abd7a1a1dffc65068a065b98524d.sol:15

*
     * @dev Returns the amount of tokens 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.083839
Transaction Length: 0
Severity: High
Contract: VaultBaselineTUSD
Function name: constructor
PC address: 201
Estimated Gas Usage: 6661 - 61225
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xb9f45edeffe5abd7a1a1dffc65068a065b98524d.sol:5

nzeppelin/contr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.100499
Transaction Length: 0
Severity: High
Contract: VaultBaseline
Function name: constructor
PC address: 224
Estimated Gas Usage: 6794 - 64036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xb9f45edeffe5abd7a1a1dffc65068a065b98524d.sol:5

nzeppelin/contr

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xa73c6492a31da95eaef3fcbf31425dd92d290e15.sol
Total states:1239
0.585007
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x8c3f684c79c19518b8df3b86ea0b23905972d14e.sol
Total states:942
0.917118
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x87761e886399ef8e1624cb0db3230b075a322c88.sol
Total states:13581
21.00054
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.595499
Transaction Length: 2
Severity: High
Contract: CBK
Function name: increaseAllowance(address,uint256)
PC address: 5539
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x87761e886399ef8e1624cb0db3230b075a322c88.sol:41

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xe51fdc2c202a95ba9dff434b4297184b62f67d0b.sol
Total states:10492
33.650446
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.643784
Transaction Length: 1
Severity: High
Contract: yfALPHA
Function name: transfer(address,uint256)
PC address: 6338
Estimated Gas Usage: 834 - 929
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xe51fdc2c202a95ba9dff434b4297184b62f67d0b.sol:31

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.378239
Transaction Length: 2
Severity: High
Contract: yfALPHA
Function name: increaseAllowance(address,uint256)
PC address: 6458
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xe51fdc2c202a95ba9dff434b4297184b62f67d0b.sol:9

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xd63a757dc917486da1050847428393d2a91f0bfb.sol
Total states:21546
73.000169
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.493851
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4101
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd63a757dc917486da1050847428393d2a91f0bfb.sol:23

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.336079
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 4114
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xd63a757dc917486da1050847428393d2a91f0bfb.sol:24

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.339435
Transaction Length: 2
Severity: High
Contract: yfcredit
Function name: increaseApproval(address,uint256)
PC address: 5190
Estimated Gas Usage: 955 - 1430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xd63a757dc917486da1050847428393d2a91f0bfb.sol:23

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:31.774324
Transaction Length: 2
Severity: Low
Contract: yfcredit
Function name: increaseApproval(address,uint256)
PC address: 5203
Estimated Gas Usage: 965 - 1440
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0xd63a757dc917486da1050847428393d2a91f0bfb.sol:24

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol
Total states:2763
66.802319
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:07.023880
Transaction Length: 1
Severity: Medium
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 692
Estimated Gas Usage: 24414 - 190577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2172
Offset: 2569
Offset: 3124
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:40

function lock(uint256 amount) public {
        
        uint256 flaps = amount*ratio;
        require(flaps <= flap.balanceOf(address(this)), "This contract has run out of flapp rewards, wait for replenishment or try a different contract");
        require(uni.transferFrom(msg.sender, address(this), amount), "You need to approve UNI tokens to be transferred to this contract before locking");
        locked[msg.sender] = locked[msg.sender] + amount;
        totalLocked = totalLocked + amount;
        time[msg.sender] = now;
        flap.transfer(msg.sender, flaps);
        emit Locked(msg.sender, amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:54.717895
Transaction Length: 2
Severity: Medium
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 692
Estimated Gas Usage: 24414 - 190577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2172
Offset: 2569
Offset: 3124
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:40

function lock(uint256 amount) public {
        
        uint256 flaps = amount*ratio;
        require(flaps <= flap.balanceOf(address(this)), "This contract has run out of flapp rewards, wait for replenishment or try a different contract");
        require(uni.transferFrom(msg.sender, address(this), amount), "You need to approve UNI tokens to be transferred to this contract before locking");
        locked[msg.sender] = locked[msg.sender] + amount;
        totalLocked = totalLocked + amount;
        time[msg.sender] = now;
        flap.transfer(msg.sender, flaps);
        emit Locked(msg.sender, amount);
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.822611
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: unlock()
PC address: 1035
Estimated Gas Usage: 1055 - 1340
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:54

time[msg.sender] + duration

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:15.912066
Transaction Length: 2
Severity: Low
Contract: LiquidityLock
Function name: unlock()
PC address: 1656
Estimated Gas Usage: 13915 - 55571
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:59

uni.transfer(msg.sender, amount)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.809314
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: getMyStatus()
PC address: 1966
Estimated Gas Usage: 1055 - 1340
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:68

time[user] + duration

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.852190
Transaction Length: 1
Severity: High
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 1980
Estimated Gas Usage: 2811 - 37798
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:42

amount*ratio

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.023565
Transaction Length: 1
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2569
Estimated Gas Usage: 4152 - 40035
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:44

uni.transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:25.024337
Transaction Length: 2
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2569
Estimated Gas Usage: 4152 - 40035
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:44

uni.transferFrom(msg.sender, address(this), amount)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.668123
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2778
Estimated Gas Usage: 5578 - 76027
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:45

locked[msg.sender] + amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:35.861136
Transaction Length: 2
Severity: High
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 2850
Estimated Gas Usage: 10998 - 101447
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:46

totalLocked + amount

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:06.627433
Transaction Length: 1
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 3124
Estimated Gas Usage: 22401 - 153841
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:48

flap.transfer(msg.sender, flaps)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:53.630298
Transaction Length: 2
Severity: Low
Contract: LiquidityLock
Function name: lock(uint256)
PC address: 3124
Estimated Gas Usage: 22401 - 153841
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x2f54f0bcfc04761858e33f3a560fc4a332fd6c1e.sol:48

flap.transfer(msg.sender, flaps)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xa56f81c849a78558c725fa742f090398ed8a5cf1.sol
Total states:9009
19.528868
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.244607
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xa56f81c849a78558c725fa742f090398ed8a5cf1.sol:137

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol
Total states:10229
128.482227
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.027966
Transaction Length: 0
Severity: Medium
Contract: Controller
Function name: constructor
PC address: 24
Estimated Gas Usage: 5048 - 25143
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:183

tx.origin

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:04.207681
Transaction Length: 1
Severity: Medium
Contract: Controller
Function name: yearn(address,address,uint256)
PC address: 476
Estimated Gas Usage: 5257 - 108852
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2521
Offset: 2737
Offset: 2916
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:265

function yearn(address _strategy, address _token, uint parts) public {
        // This contract should never have value in it, but just incase since this is a public call
        uint _before = IERC20(_token).balanceOf(address(this));
        Strategy(_strategy).withdraw(_token);
        uint _after =  IERC20(_token).balanceOf(address(this));
        if (_after > _before) {
            uint _amount = _after.sub(_before);
            address _want = Strategy(_strategy).want();
            uint[] memory _distribution;
            uint _expected;
            _before = IERC20(_want).balanceOf(address(this));
            IERC20(_token).safeApprove(onesplit, 0);
            IERC20(_token).safeApprove(onesplit, _amount);
            (_expected, _distribution) = OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _amount, parts, 0);
            OneSplitAudit(onesplit).swap(_token, _want, _amount, _expected, _distribution, 0);
            _after = IERC20(_want).balanceOf(address(this));
            if (_after > _before) {
                _amount = _after.sub(_before);
                uint _reward = _amount.mul(split).div(max);
                earn(_want, _amount.sub(_reward));
                IERC20(_want).safeTransfer(rewards, _reward);
            }
        }
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:01:11.691394
Transaction Length: 2
Severity: Medium
Contract: Controller
Function name: yearn(address,address,uint256)
PC address: 476
Estimated Gas Usage: 5257 - 108852
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2521
Offset: 2737
Offset: 2916
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:265

function yearn(address _strategy, address _token, uint parts) public {
        // This contract should never have value in it, but just incase since this is a public call
        uint _before = IERC20(_token).balanceOf(address(this));
        Strategy(_strategy).withdraw(_token);
        uint _after =  IERC20(_token).balanceOf(address(this));
        if (_after > _before) {
            uint _amount = _after.sub(_before);
            address _want = Strategy(_strategy).want();
            uint[] memory _distribution;
            uint _expected;
            _before = IERC20(_want).balanceOf(address(this));
            IERC20(_token).safeApprove(onesplit, 0);
            IERC20(_token).safeApprove(onesplit, _amount);
            (_expected, _distribution) = OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _amount, parts, 0);
            OneSplitAudit(onesplit).swap(_token, _want, _amount, _expected, _distribution, 0);
            _after = IERC20(_want).balanceOf(address(this));
            if (_after > _before) {
                _amount = _after.sub(_before);
                uint _reward = _amount.mul(split).div(max);
                earn(_want, _amount.sub(_reward));
                IERC20(_want).safeTransfer(rewards, _reward);
            }
        }
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:19.096878
Transaction Length: 1
Severity: Medium
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 956
Estimated Gas Usage: 6089 - 111047
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5495
Offset: 5656
Offset: 5981
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:258

function getExpectedReturn(address _strategy, address _token, uint parts) public view returns (uint expected) {
        uint _balance = IERC20(_token).balanceOf(_strategy);//获取策略器 某个代币的余额
        address _want = Strategy(_strategy).want();//策略器需要的代币.
        (expected,) = OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:28.746011
Transaction Length: 2
Severity: Medium
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 956
Estimated Gas Usage: 6101 - 111059
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5495
Offset: 5656
Offset: 5981
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:258

function getExpectedReturn(address _strategy, address _token, uint parts) public view returns (uint expected) {
        uint _balance = IERC20(_token).balanceOf(_strategy);//获取策略器 某个代币的余额
        address _want = Strategy(_strategy).want();//策略器需要的代币.
        (expected,) = OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:04.054390
Transaction Length: 1
Severity: Medium
Contract: Controller
Function name: yearn(address,address,uint256)
PC address: 2737
Estimated Gas Usage: 2823 - 37856
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:268

Strategy(_strategy).withdraw(_token)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:11.490554
Transaction Length: 2
Severity: Medium
Contract: Controller
Function name: yearn(address,address,uint256)
PC address: 2737
Estimated Gas Usage: 2823 - 37856
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:268

Strategy(_strategy).withdraw(_token)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.215880
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 6018
Estimated Gas Usage: 5795 - 110193
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:6

ed for verifica

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.664363
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 6021
Estimated Gas Usage: 5915 - 110499
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:3



/**
 *Submitted for verification at Ether

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.278507
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 6042
Estimated Gas Usage: 5915 - 110499
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:261

OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.846921
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 6103
Estimated Gas Usage: 5973 - 110650
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:15

s account) external v

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:15.897993
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 6105
Estimated Gas Usage: 5973 - 110650
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:15

ction balanceOf(address account) external vi

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:43.991135
Transaction Length: 2
Severity: Medium
Contract: Controller
Function name: setStrategy(address,address)
PC address: 7277
Estimated Gas Usage: 2229 - 3455
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:224

Strategy(_current).withdrawAll()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:01.825025
Transaction Length: 2
Severity: Medium
Contract: Controller
Function name: withdraw(address,uint256)
PC address: 10274
Estimated Gas Usage: 2254 - 3765
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:292

Strategy(strategies[_token]).withdraw(_amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:51.149684
Transaction Length: 1
Severity: Low
Contract: Controller
Function name: withdrawAll(address)
PC address: 10737
Estimated Gas Usage: 2166 - 3392
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:250

Strategy(strategies[_token]).withdrawAll()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.183453
Transaction Length: 2
Severity: Low
Contract: Controller
Function name: withdrawAll(address)
PC address: 10737
Estimated Gas Usage: 2166 - 3392
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:250

Strategy(strategies[_token]).withdrawAll()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:55.699251
Transaction Length: 2
Severity: Medium
Contract: Controller
Function name: withdrawAll(address)
PC address: 10737
Estimated Gas Usage: 2166 - 3392
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xcDCf1f9Ac816Fed665B09a00f60c885dd8848b02.sol:250

Strategy(strategies[_token]).withdrawAll()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xcb6c15c01232c679f3362b07eb958e91a617da36.sol
Total states:237
7.579843
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xeceecdb396ce5e3e48afd15d04c6388c9b57d016.sol
Total states:18192
45.223506
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.222650
Transaction Length: 2
Severity: High
Contract: xbtc
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xeceecdb396ce5e3e48afd15d04c6388c9b57d016.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:35.124010
Transaction Length: 2
Severity: High
Contract: xbtc
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xeceecdb396ce5e3e48afd15d04c6388c9b57d016.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x580969a8fff9228b493a6995b8e3be5f581c3055.sol
Total states:1239
0.423648
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xdaae16d48512b334fed0045816e58d89c401c934.sol
Total states:120
58.993612
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.368961
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7503
Estimated Gas Usage: 5818 - 110216
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xdaae16d48512b334fed0045816e58d89c401c934.sol:9

@openzeppelin\c

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.265994
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7506
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xdaae16d48512b334fed0045816e58d89c401c934.sol:5

*/



// File: @openzeppelin\contracts\toke

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.998913
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7527
Estimated Gas Usage: 5938 - 110522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xdaae16d48512b334fed0045816e58d89c401c934.sol:1383

IOneSplitAudit(onesplit).getExpectedReturn(

            _token,

            _want,

            _balance,

            parts,

            0

        )

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.728278
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7588
Estimated Gas Usage: 5996 - 110673
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xdaae16d48512b334fed0045816e58d89c401c934.sol:28

e IERC20 {

    /**



--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.985321
Transaction Length: 1
Severity: High
Contract: Controller
Function name: getExpectedReturn(address,address,uint256)
PC address: 7590
Estimated Gas Usage: 5996 - 110673
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xdaae16d48512b334fed0045816e58d89c401c934.sol:24

he EIP.

 */

interface IERC20 {

    /**

 

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:31.886417
Transaction Length: 1
Severity: Low
Contract: Controller
Function name: earn(address,uint256)
PC address: 16050
Estimated Gas Usage: 3890 - 40994
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xdaae16d48512b334fed0045816e58d89c401c934.sol:742

target.call.value(weiValue)(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xea004e8fa3701b8e58e41b78d50996e0f7176cbd.sol
Total states:20052
46.090482
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.078542
Transaction Length: 0
Severity: Medium
Contract: yffctoken
Function name: constructor
PC address: 209
Estimated Gas Usage: 17133 - 78876
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop8/0xea004e8fa3701b8e58e41b78d50996e0f7176cbd.sol:207

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.752177
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xea004e8fa3701b8e58e41b78d50996e0f7176cbd.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.483308
Transaction Length: 2
Severity: High
Contract: yffctoken
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xea004e8fa3701b8e58e41b78d50996e0f7176cbd.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x8d12d52d7bbcd6bcde6323f7b6522c870bfa1ae9.sol
Total states:144
2.289041
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.080987
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: duration()
PC address: 301
Estimated Gas Usage: 10897 - 54186
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x8d12d52d7bbcd6bcde6323f7b6522c870bfa1ae9.sol:638

function releasableAmount(IERC20 _token) public view returns (uint256) {
        return vestedAmount(_token).sub(released[address(_token)]);
    }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xba4666ab6d69ed32eb549e4cfb9eb2fbfb8663f4.sol
Total states:850
4.529886
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.078576
Transaction Length: 1
Severity: Low
Contract: ShieldLockedProjectfund
Function name: release()
PC address: 1196
Estimated Gas Usage: 5049 - 42716
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0xba4666ab6d69ed32eb549e4cfb9eb2fbfb8663f4.sol:167

address(token).call(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x63c658af7ebacdf2fe3fec1d925b2eedd4be0bc5.sol
Total states:480
0.910569
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol
Total states:88397
1010.473853
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.795901
Transaction Length: 1
Severity: High
Contract: DSPauseProxy
Function name: exec(address,bytes)
PC address: 277
Estimated Gas Usage: 351 - 446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3



*/



//pragma solidity ^0.5.12;


--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.073313
Transaction Length: 0
Severity: Low
Contract: Vow
Function name: constructor
PC address: 540
Estimated Gas Usage: 23004 - 107756
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:4510

vat.hope(flapper_)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:23.961911
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1060
Estimated Gas Usage: 1753 - 2744
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3014

vat.move(address(this), usr, mul(ONE, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.094003
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1114
Estimated Gas Usage: 1559 - 2455
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3880

ilks[ilk].pip.peek()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.127182
Transaction Length: 1
Severity: Low
Contract: ESM
Function name: join(uint256)
PC address: 1202
Estimated Gas Usage: 13618 - 55319
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:378

gem.transferFrom(msg.sender, pit, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.824418
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: join(address)
PC address: 1239
Estimated Gas Usage: 2405 - 3396
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2940

vat.slip(ilk, usr, int(msg.value))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:40.106087
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1281
Estimated Gas Usage: 3783 - 39575
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3016

dai.burn(msg.sender, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.600359
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1322
Estimated Gas Usage: 2474 - 3465
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2868

vat.slip(ilk, usr, int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.929509
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1457
Estimated Gas Usage: 3765 - 39836
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3884

vat.file(ilk, "spot", spot)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.084993
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1595
Estimated Gas Usage: 4535 - 40422
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2870

gem.transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:46.148694
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: join(uint256)
PC address: 1719
Estimated Gas Usage: 13726 - 55097
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3710

vat.move(msg.sender, address(this), mul(chi, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.054472
Transaction Length: 1
Severity: Low
Contract: ESM
Function name: fire()
PC address: 1817
Estimated Gas Usage: 2686 - 3392
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:356

end.cage()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:12.698564
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2573
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2948

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:04:06.641225
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2633
Estimated Gas Usage: 2224 - 3215
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3024

vat.move(msg.sender, address(this), mul(ONE, wad))

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:14.665520
Transaction Length: 1
Severity: High
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2642
Estimated Gas Usage: 2899 - 38076
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2950

usr.transfer(wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.516570
Transaction Length: 1
Severity: Low
Contract: Jug
Function name: drip(bytes32)
PC address: 2706
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3214

vat.ilks(ilk)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:04:38.954977
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2854
Estimated Gas Usage: 4255 - 40047
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3026

dai.mint(usr, wad)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.639952
Transaction Length: 1
Severity: High
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 2984
Estimated Gas Usage: 848 - 1273
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3008

x * y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:20.277700
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3118
Estimated Gas Usage: 2122 - 3113
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2878

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:24.052391
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3339
Estimated Gas Usage: 4153 - 39945
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2880

gem.transfer(usr, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.423085
Transaction Length: 1
Severity: Low
Contract: Vow
Function name: kiss(uint256)
PC address: 3469
Estimated Gas Usage: 9605 - 65298
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:4624

vat.heal(rad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:06.605149
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: exit(uint256)
PC address: 3541
Estimated Gas Usage: 13283 - 54654
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3722

vat.move(address(this), msg.sender, mul(chi, wad))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.269186
Transaction Length: 1
Severity: High
Contract: Pot
Function name: join(uint256)
PC address: 5026
Estimated Gas Usage: 12821 - 53626
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3638

x * y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:03.198628
Transaction Length: 1
Severity: High
Contract: Pot
Function name: exit(uint256)
PC address: 5064
Estimated Gas Usage: 837 - 1122
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:3630

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.219940
Transaction Length: 2
Severity: High
Contract: Dai
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 5769
Estimated Gas Usage: 5999 - 43112
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:1706

nonces[holder]++

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.789425
Transaction Length: 1
Severity: High
Contract: Cat
Function name: bite(bytes32,address)
PC address: 6281
Estimated Gas Usage: 5176 - 75429
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:1358

x * y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:11.222662
Transaction Length: 2
Severity: High
Contract: Dai
Function name: burn(address,uint256)
PC address: 7856
Estimated Gas Usage: 7087 - 27752
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:1532

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.235031
Transaction Length: 1
Severity: High
Contract: Flopper
Function name: tick(uint256)
PC address: 8156
Estimated Gas Usage: 8046 - 29891
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2672

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.967380
Transaction Length: 1
Severity: High
Contract: Flapper
Function name: tick(uint256)
PC address: 9122
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2152

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.314615
Transaction Length: 1
Severity: High
Contract: Flipper
Function name: tick(uint256)
PC address: 11459
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:2398

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.251568
Transaction Length: 1
Severity: High
Contract: Vat
Function name: flux(bytes32,address,address,uint256)
PC address: 13158
Estimated Gas Usage: 1738 - 2593
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:4092

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.582847
Transaction Length: 1
Severity: High
Contract: Vat
Function name: frob(bytes32,address,address,address,int256,int256)
PC address: 13213
Estimated Gas Usage: 4552 - 7485
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x6e24943a974a610a0d017e1649eb1ecbdee16eef.sol:4056

x + uint(y)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xed6b58e76204a40524e09756fbaa8e3cb7b2a254.sol
Total states:481
3.948668
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xcb1F5bbFbe6dFdcE9c59e726C12e5Da69f2C3075.sol
Total states:14766
19.561085
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.004783
Transaction Length: 0
Severity: Medium
Contract: Governance
Function name: constructor
PC address: 18
Estimated Gas Usage: 42 - 137
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop8/0xcb1F5bbFbe6dFdcE9c59e726C12e5Da69f2C3075.sol:216

tx.origin

--------------------

==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.040830
Transaction Length: 0
Severity: Medium
Contract: BullToken
Function name: constructor
PC address: 351
Estimated Gas Usage: 41597 - 203438
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop8/0xcb1F5bbFbe6dFdcE9c59e726C12e5Da69f2C3075.sol:216

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.278713
Transaction Length: 2
Severity: High
Contract: BullToken
Function name: transfer(address,uint256)
PC address: 9953
Estimated Gas Usage: 1462 - 1887
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xcb1F5bbFbe6dFdcE9c59e726C12e5Da69f2C3075.sol:58

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x826e64E15af1CdcEd00032E985Ee51918397E60F.sol
Total states:5737
13.414073
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x0b3e174a2170083e770d5d4cf56774d221b7063e.sol
Total states:1708
1.792848
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xe2281a43e8b8c7621822a360cbeb3ba201d452e6.sol
Total states:11841
291.793922
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.147906
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xe2281a43e8b8c7621822a360cbeb3ba201d452e6.sol:72

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.740988
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xe2281a43e8b8c7621822a360cbeb3ba201d452e6.sol:52

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.623597
Transaction Length: 1
Severity: High
Contract: WOAHHToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1483
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xe2281a43e8b8c7621822a360cbeb3ba201d452e6.sol:3



*/



//pragma solidity ^0.4.24;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:36.369762
Transaction Length: 1
Severity: Medium
Contract: WOAHHToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 4325
Estimated Gas Usage: 8823 - 34729
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop8/0xe2281a43e8b8c7621822a360cbeb3ba201d452e6.sol:354

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:38.482286
Transaction Length: 1
Severity: High
Contract: WOAHHToken
Function name: safeMul(uint256,uint256)
PC address: 4362
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xe2281a43e8b8c7621822a360cbeb3ba201d452e6.sol:72

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:00.549420
Transaction Length: 1
Severity: High
Contract: WOAHHToken
Function name: safeAdd(uint256,uint256)
PC address: 4546
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xe2281a43e8b8c7621822a360cbeb3ba201d452e6.sol:52

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x97f160c220e121ec5496db17965cd63e4a9202c9.sol
Total states:5259
56.999405
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.896336
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x97f160c220e121ec5496db17965cd63e4a9202c9.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.746293
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x97f160c220e121ec5496db17965cd63e4a9202c9.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.712044
Transaction Length: 1
Severity: High
Contract: YUYI
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x97f160c220e121ec5496db17965cd63e4a9202c9.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.758905
Transaction Length: 1
Severity: High
Contract: YUYI
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x97f160c220e121ec5496db17965cd63e4a9202c9.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xe8e26b90ef6313e5695436030b28758ebcdca938.sol
Total states:426
0.749584
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xf09a190203d7cad3cdb43ee281e29b947cb1c16f.sol
Total states:1756
2.8804
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x59e7b5db9be0bdd26fa048d39e01fee456ab674e.sol
Total states:5259
58.442187
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.951410
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x59e7b5db9be0bdd26fa048d39e01fee456ab674e.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.536749
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x59e7b5db9be0bdd26fa048d39e01fee456ab674e.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.802964
Transaction Length: 1
Severity: High
Contract: YearnFinanceBitToken2
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x59e7b5db9be0bdd26fa048d39e01fee456ab674e.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.316364
Transaction Length: 1
Severity: High
Contract: YearnFinanceBitToken2
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x59e7b5db9be0bdd26fa048d39e01fee456ab674e.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x3aadc3BCe49724ce299fD9F3850211211c399C8c.sol
Total states:366
0.541819
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x98ffc2cac7f302b43f14e1b5e82a54d7b2bcc1b9.sol
Total states:30
0.240575
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x42bf80a92734de221889049e91187a07464607b1.sol
Total states:796
0.709403
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol
Total states:18307
94.275835
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.149836
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2327
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:16.809794
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2340
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:94

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.950472
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2798
Estimated Gas Usage: 933 - 1408
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:16.194590
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2811
Estimated Gas Usage: 943 - 1418
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:94

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.286733
Transaction Length: 1
Severity: Low
Contract: UsdmToken
Function name: transfer(address,uint256)
PC address: 4326
Estimated Gas Usage: 929 - 1214
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:44.842518
Transaction Length: 2
Severity: Low
Contract: UsdmToken
Function name: transferFrom(address,address,uint256)
PC address: 4326
Estimated Gas Usage: 1579 - 2244
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:76

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.722840
Transaction Length: 2
Severity: High
Contract: UsdmToken
Function name: increaseApproval(address,uint256)
PC address: 4886
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:49.147763
Transaction Length: 2
Severity: Low
Contract: UsdmToken
Function name: increaseApproval(address,uint256)
PC address: 4899
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop8/0x358cb60c7f639a5d8b8710f37eda7478610f1a65.sol:94

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xf2b94ce4d96f7d4465aa0588a51bfc64db31b4c9.sol
Total states:24634
62.212688
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.831088
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 2575
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xf2b94ce4d96f7d4465aa0588a51bfc64db31b4c9.sol:276

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.701981
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 2748
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xf2b94ce4d96f7d4465aa0588a51bfc64db31b4c9.sol:276

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.968951
Transaction Length: 2
Severity: High
Contract: ERC20Burnnable
Function name: increaseAllowance(address,uint256)
PC address: 3435
Estimated Gas Usage: 1033 - 1508
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xf2b94ce4d96f7d4465aa0588a51bfc64db31b4c9.sol:276

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0xb3B4d0A62a373bBD3Cff045f26eAc9F87905ed86.sol
Total states:2414
2.356157
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040746
Transaction Length: 0
Severity: High
Contract: Alimony
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xb3B4d0A62a373bBD3Cff045f26eAc9F87905ed86.sol:12

 data. While these are generally available


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040407
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0xb3B4d0A62a373bBD3Cff045f26eAc9F87905ed86.sol:12

 data. While these are generally available


--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x87ee9bdb7241ebd95b22c0237e7bbc5d6be658eb.sol
Total states:60
0.751851
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x2501e303708445caf8117d1ec8d3acb6b80e8da4.sol
Total states:8498
31.272302
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.446794
Transaction Length: 1
Severity: High
Contract: BananaFarm
Function name: transfer(address,uint256)
PC address: 7029
Estimated Gas Usage: 900 - 995
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2501e303708445caf8117d1ec8d3acb6b80e8da4.sol:47

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.092473
Transaction Length: 2
Severity: High
Contract: BananaFarm
Function name: increaseAllowance(address,uint256)
PC address: 7149
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x2501e303708445caf8117d1ec8d3acb6b80e8da4.sol:25

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop8/0x40561e765d4614980260cc6cc143fbdd2f7467c2.sol
Total states:1576
2.834089
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039039
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop8/0x40561e765d4614980260cc6cc143fbdd2f7467c2.sol:11

luding the
 * sender of the transaction and

--------------------

