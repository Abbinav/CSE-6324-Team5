$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x532e68fdd932811f35577edc6653f4852ace5c64.sol
Total states:3586
6.075394
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x17d5c3ffe2a7c7a1e4567c7501d166b0532c8826.sol
Total states:1389
2.23615
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xa56913df48decb9b4815dddf307a31f07ef1f19a.sol
Total states:13173
26.869155
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.163359
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xa56913df48decb9b4815dddf307a31f07ef1f19a.sol:145

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x6AC7575A340a3DAb2Ae9ca07c4DbFC6bf8E7E281.sol
Total states:3825
22.396399
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.474735
Transaction Length: 0
Severity: Low
Contract: CRVStrategySwerve
Function name: salvage(address,address,uint256)
PC address: 800
Estimated Gas Usage: 48750 - 234010
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x6AC7575A340a3DAb2Ae9ca07c4DbFC6bf8E7E281.sol:1159

function setArbTolerance(uint256 tolerance) external onlyGovernance {
    require(tolerance <= 100, "at most 100");
    arbTolerance = tolerance;
  }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x0f6e71454c39126baa89ed8dc36e3d4bc5d06f3d.sol
Total states:31613
96.456993
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.686325
Transaction Length: 1
Severity: High
Contract: YFWORLD
Function name: approveAndCall(address,uint256,bytes)
PC address: 1799
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0f6e71454c39126baa89ed8dc36e3d4bc5d06f3d.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.884167
Transaction Length: 2
Severity: High
Contract: YFWORLD
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 4618
Estimated Gas Usage: 6015 - 43128
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0f6e71454c39126baa89ed8dc36e3d4bc5d06f3d.sol:134

nonces[holder]++

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:22.411483
Transaction Length: 1
Severity: Medium
Contract: YFWORLD
Function name: approveAndCall(address,uint256,bytes)
PC address: 6543
Estimated Gas Usage: 8284 - 32451
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0x0f6e71454c39126baa89ed8dc36e3d4bc5d06f3d.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), data)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.998941
Transaction Length: 1
Severity: High
Contract: YFWORLD
Function name: transferFrom(address,address,uint256)
PC address: 7630
Estimated Gas Usage: 1671 - 2526
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0f6e71454c39126baa89ed8dc36e3d4bc5d06f3d.sol:52

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xd73117a33b14f973cb08c4440ea68231bbbcbe9a.sol
Total states:11841
265.741777
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.743577
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd73117a33b14f973cb08c4440ea68231bbbcbe9a.sol:44

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.280987
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd73117a33b14f973cb08c4440ea68231bbbcbe9a.sol:24

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.546056
Transaction Length: 1
Severity: High
Contract: SWAPPER
Function name: approveAndCall(address,uint256,bytes)
PC address: 1483
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd73117a33b14f973cb08c4440ea68231bbbcbe9a.sol:3



*/



//pragma solidity ^0.4.24;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:34.304260
Transaction Length: 1
Severity: Medium
Contract: SWAPPER
Function name: approveAndCall(address,uint256,bytes)
PC address: 4325
Estimated Gas Usage: 8823 - 34729
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0xd73117a33b14f973cb08c4440ea68231bbbcbe9a.sol:326

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:36.583877
Transaction Length: 1
Severity: High
Contract: SWAPPER
Function name: safeMul(uint256,uint256)
PC address: 4362
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd73117a33b14f973cb08c4440ea68231bbbcbe9a.sol:44

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:32.720650
Transaction Length: 1
Severity: High
Contract: SWAPPER
Function name: safeAdd(uint256,uint256)
PC address: 4546
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd73117a33b14f973cb08c4440ea68231bbbcbe9a.sol:24

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x07497c66ae11ae20d1eb2c045e18b825560596f0.sol
Total states:76081
146.160722
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.753973
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x07497c66ae11ae20d1eb2c045e18b825560596f0.sol:54

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.283204
Transaction Length: 2
Severity: High
Contract: YF_Banking
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x07497c66ae11ae20d1eb2c045e18b825560596f0.sol:54

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.303736
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x07497c66ae11ae20d1eb2c045e18b825560596f0.sol:56

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.302235
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x07497c66ae11ae20d1eb2c045e18b825560596f0.sol:57

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.522322
Transaction Length: 2
Severity: High
Contract: YF_Banking
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x07497c66ae11ae20d1eb2c045e18b825560596f0.sol:56

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:02.969991
Transaction Length: 2
Severity: High
Contract: YF_Banking
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x07497c66ae11ae20d1eb2c045e18b825560596f0.sol:57

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x168f842568905d3524318d505081392ffcc04d9b.sol
Total states:1602
2.068357
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.046392
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x168f842568905d3524318d505081392ffcc04d9b.sol:22

ansaction and its data. While these are gen

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xf6cef8644aaaf38a0b12e135d41eef36eed3abf0.sol
Total states:30
0.190368
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xa279dab6ec190ee4efce7da72896eb58ad533262.sol
Total states:18855
40.692136
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.846397
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xa279dab6ec190ee4efce7da72896eb58ad533262.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.915258
Transaction Length: 2
Severity: High
Contract: YFU
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xa279dab6ec190ee4efce7da72896eb58ad533262.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x8161c2b57f3e77a497ce56307c2774d6077b2b9c.sol
Total states:1377
1.966951
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x1c71ecce2680bb413e82521ed678e7128976de2f.sol
Total states:3411
10.894446
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x43caa1697cea107d3d0fc862bca267776a4ed971.sol
Total states:19694
40.041531
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.008047
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x43caa1697cea107d3d0fc862bca267776a4ed971.sol:160

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.285068
Transaction Length: 2
Severity: High
Contract: YFVault
Function name: increaseAllowance(address,uint256)
PC address: 10530
Estimated Gas Usage: 1060 - 1535
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x43caa1697cea107d3d0fc862bca267776a4ed971.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x279966d675cf90583ba842cec1ac35c329eed9cb.sol
Total states:18192
42.286466
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.398224
Transaction Length: 2
Severity: High
Contract: ponziv2
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x279966d675cf90583ba842cec1ac35c329eed9cb.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.305083
Transaction Length: 2
Severity: High
Contract: ponziv2
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x279966d675cf90583ba842cec1ac35c329eed9cb.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xde4fab820df2f2978fd4d5d342ba003a75dd542d.sol
Total states:481
3.996187
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol
Total states:2954
30.189195
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.194929
Transaction Length: 0
Severity: Low
Contract: DsrManager
Function name: constructor
PC address: 855
Estimated Gas Usage: 21970 - 156033
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:93

vat.hope(address(daiJoin))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.241774
Transaction Length: 0
Severity: Low
Contract: DsrManager
Function name: constructor
PC address: 1069
Estimated Gas Usage: 23981 - 192750
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:94

vat.hope(address(pot))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.293084
Transaction Length: 0
Severity: Low
Contract: DsrManager
Function name: constructor
PC address: 1358
Estimated Gas Usage: 26454 - 230354
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:95

dai.approve(address(daiJoin), uint256(-1))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.679528
Transaction Length: 1
Severity: Low
Contract: DsrManager
Function name: join(address,uint256)
PC address: 1368
Estimated Gas Usage: 3587 - 39090
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:105

pot.drip()

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.351208
Transaction Length: 0
Severity: Medium
Contract: DsrManager
Function name: constructor
PC address: 1434
Estimated Gas Usage: 27916 - 268306
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 343
Offset: 602
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:52

contract DsrManager {
    PotLike  public pot;
    GemLike  public dai;
    JoinLike public daiJoin;

    uint256 public supply;

    mapping (address => uint256) public pieOf;

    event Join(address indexed dst, uint256 wad);
    event Exit(address indexed dst, uint256 wad);

    uint256 constant RAY = 10 ** 27;
    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {
        require((z = x + y) >= x);
    }
    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {
        require((z = x - y) <= x);
    }
    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {
        require(y == 0 || (z = x * y) / y == x);
    }
    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {
        // always rounds down
        z = mul(x, y) / RAY;
    }
    function rdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {
        // always rounds down
        z = mul(x, RAY) / y;
    }
    function rdivup(uint256 x, uint256 y) internal pure returns (uint256 z) {
        // always rounds up
        z = add(mul(x, RAY), sub(y, 1)) / y;
    }

    constructor(address pot_, address daiJoin_) public {
        pot = PotLike(pot_);
        daiJoin = JoinLike(daiJoin_);
        dai = GemLike(daiJoin.dai());

        VatLike vat = VatLike(pot.vat());
        vat.hope(address(daiJoin));
        vat.hope(address(pot));
        dai.approve(address(daiJoin), uint256(-1));
    }

    function daiBalance(address usr) external returns (uint256 wad) {
        uint256 chi = (now > pot.rho()) ? pot.drip() : pot.chi();
        wad = rmul(chi, pieOf[usr]);
    }

    // wad is denominated in dai
    function join(address dst, uint256 wad) external {
        uint256 chi = (now > pot.rho()) ? pot.drip() : pot.chi();
        uint256 pie = rdiv(wad, chi);
        pieOf[dst] = add(pieOf[dst], pie);
        supply = add(supply, pie);

        dai.transferFrom(msg.sender, address(this), wad);
        daiJoin.join(address(this), wad);
        pot.join(pie);
        emit Join(dst, wad);
    }

    // wad is denominated in dai
    function exit(address dst, uint256 wad) external {
        uint256 chi = (now > pot.rho()) ? pot.drip() : pot.chi();
        uint256 pie = rdivup(wad, chi);

        require(pieOf[msg.sender] >= pie, "insufficient-balance");

        pieOf[msg.sender] = sub(pieOf[msg.sender], pie);
        supply = sub(supply, pie);

        pot.exit(pie);
        uint256 amt = rmul(chi, pie);
        daiJoin.exit(dst, amt);
        emit Exit(dst, amt);
    }

    function exitAll(address dst) external {
        uint256 chi = (now > pot.rho()) ? pot.drip() : pot.chi();
        uint256 pie = pieOf[msg.sender];

        pieOf[msg.sender] = 0;
        supply = sub(supply, pie);

        pot.exit(pie);
        uint256 amt = rmul(chi, pie);
        daiJoin.exit(dst, amt);
        emit Exit(dst, amt);
    }
}

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.117074
Transaction Length: 1
Severity: Low
Contract: DsrManager
Function name: daiBalance(address)
PC address: 3010
Estimated Gas Usage: 3562 - 39065
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:99

pot.drip()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:18.046635
Transaction Length: 1
Severity: Low
Contract: DsrManager
Function name: exitAll(address)
PC address: 3679
Estimated Gas Usage: 3581 - 39084
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:133

pot.drip()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:25.612600
Transaction Length: 1
Severity: Low
Contract: DsrManager
Function name: exitAll(address)
PC address: 4040
Estimated Gas Usage: 16775 - 127550
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:139

pot.exit(pie)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:29.152364
Transaction Length: 1
Severity: Low
Contract: DsrManager
Function name: exit(address,uint256)
PC address: 4909
Estimated Gas Usage: 3630 - 39133
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:118

pot.drip()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.213117
Transaction Length: 1
Severity: High
Contract: DsrManager
Function name: join(address,uint256)
PC address: 6069
Estimated Gas Usage: 4550 - 74239
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0dc36745dB6f36A7bE26b56530c3d62740C5a0cF.sol:72

x * y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x9dc0c2ebb03e8a11d210f8afff5280414748923d.sol
Total states:9807
224.826236
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.126786
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dc0c2ebb03e8a11d210f8afff5280414748923d.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.394380
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dc0c2ebb03e8a11d210f8afff5280414748923d.sol:24

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.582349
Transaction Length: 1
Severity: High
Contract: nimmiToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1648
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dc0c2ebb03e8a11d210f8afff5280414748923d.sol:4

-----------------------------------

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:31.077317
Transaction Length: 1
Severity: Medium
Contract: nimmiToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 5225
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dc0c2ebb03e8a11d210f8afff5280414748923d.sol:205

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:41.170178
Transaction Length: 1
Severity: High
Contract: nimmiToken
Function name: safeMul(uint256,uint256)
PC address: 5262
Estimated Gas Usage: 394 - 489
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dc0c2ebb03e8a11d210f8afff5280414748923d.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:55.258440
Transaction Length: 1
Severity: High
Contract: nimmiToken
Function name: safeAdd(uint256,uint256)
PC address: 5840
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dc0c2ebb03e8a11d210f8afff5280414748923d.sol:24

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol
Total states:1393
5.942291
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039234
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol:15

*
     * @dev Returns the amount of tokens 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.078873
Transaction Length: 0
Severity: High
Contract: Strategy
Function name: constructor
PC address: 178
Estimated Gas Usage: 1649 - 36213
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xa03d3e373145e0cb661379cde0d1bdc860a9baa7.sol:5

nzeppelin/contr

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol
Total states:6625
12.019832
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.801608
Transaction Length: 1
Severity: High
Contract: LPTokenWrapper
Function name: stake(uint256)
PC address: 1964
Estimated Gas Usage: 402 - 497
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x3fc91a4168cd904bc3c9a03371940c06440d8065.sol:158

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x07d6dd1a815391056554067b3b86e9953ebdf05c.sol
Total states:1072
4.471252
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xa2b12a05f12d09fefa58d39ccd416dd5e46299be.sol
Total states:2405
2.487802
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041380
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xa2b12a05f12d09fefa58d39ccd416dd5e46299be.sol:13

  returns (bytes memory) {
        this; //

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.046051
Transaction Length: 0
Severity: High
Contract: TuGouToken
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xa2b12a05f12d09fefa58d39ccd416dd5e46299be.sol:13

  returns (bytes memory) {
        this; //

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x99448b40572cae1f83bf9e26ffe2148f5a4a4852.sol
Total states:8045
15.492234
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039180
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x99448b40572cae1f83bf9e26ffe2148f5a4a4852.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.119153
Transaction Length: 2
Severity: High
Contract: YFDEFI
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x99448b40572cae1f83bf9e26ffe2148f5a4a4852.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xe91ee465f701e341d075a8bd9502f5f8e41c911e.sol
Total states:3016
3516.28041
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:58:28.893248
Transaction Length: 1
Severity: High
Contract: PrivateSale
Function name: buyWithUSDC(uint256)
PC address: 6516
Estimated Gas Usage: 752 - 847
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xe91ee465f701e341d075a8bd9502f5f8e41c911e.sol:99

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xf0bea7077e2c65ef8ba089edce949781af6277a6.sol
Total states:23990
71.606509
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.509776
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xf0bea7077e2c65ef8ba089edce949781af6277a6.sol:119

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.775786
Transaction Length: 1
Severity: Low
Contract: StableCreditProtocol
Function name: markets(address,uint256)
PC address: 3356
Estimated Gas Usage: 843 - 1128
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0xf0bea7077e2c65ef8ba089edce949781af6277a6.sol:259

mapping (address => address[]) public markets

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.747272
Transaction Length: 2
Severity: High
Contract: StableCreditProtocol
Function name: increaseAllowance(address,uint256)
PC address: 10848
Estimated Gas Usage: 1038 - 1513
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xf0bea7077e2c65ef8ba089edce949781af6277a6.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.738759
Transaction Length: 1
Severity: High
Contract: StableCreditProtocol
Function name: deposit(address,uint256)
PC address: 18843
Estimated Gas Usage: 3755 - 73209
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xf0bea7077e2c65ef8ba089edce949781af6277a6.sol:138

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x96a5FDbf2718526bd686286c85736C6ed9372914.sol
Total states:1253
1.732987
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039075
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x96a5FDbf2718526bd686286c85736C6ed9372914.sol:10

g.data, they should not be accessed in such

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x163c754ef4d9c03fc7fa9cf6dd43bfc760e6ce89.sol
Total states:8317
16.754725
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.038520
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x163c754ef4d9c03fc7fa9cf6dd43bfc760e6ce89.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.511735
Transaction Length: 2
Severity: High
Contract: MaggotToken
Function name: increaseAllowance(address,uint256)
PC address: 5781
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x163c754ef4d9c03fc7fa9cf6dd43bfc760e6ce89.sol:139

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x223735DeF0eD8b129429Fb580cA0A91cefC3aE02.sol
Total states:561
4.376848
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:04.031777
Transaction Length: 1
Severity: Medium
Contract: SpellAction
Function name: execute()
PC address: 86
Estimated Gas Usage: 6516 - 144400
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 289
Offset: 551
Offset: 770
Offset: 989
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x223735DeF0eD8b129429Fb580cA0A91cefC3aE02.sol:56

function execute() external {
        /*** Risk Parameter Adjustments ***/

        // Set the global debt ceiling to 823,000,000
        // 763 (current DC) + 60 (USDC-A increase)
        VatAbstract(MCD_VAT).file("Line", 823 * MILLION * RAD);

        // Set the USDC-A debt ceiling
        //
        // Existing debt ceiling: 40 million
        // New debt ceiling: 100 million
        VatAbstract(MCD_VAT).file("USDC-A", "line", 100 * MILLION * RAD);

        // https://forum.makerdao.com/t/mip10c9-subproposal-to-whitelist-new-tbtc-oracle-access/3805
        // Whitelist tBTC address to read ETHBTC median
        MedianAbstract(ETHBTC).kiss(tBTC);
        // Remove previous tBTC address from ETHBTC median whitelist
        MedianAbstract(ETHBTC).diss(tBTC_OLD);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.812585
Transaction Length: 1
Severity: Low
Contract: SpellAction
Function name: execute()
PC address: 289
Estimated Gas Usage: 1001 - 1567
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x223735DeF0eD8b129429Fb580cA0A91cefC3aE02.sol:61

VatAbstract(MCD_VAT).file("Line", 823 * MILLION * RAD)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.564436
Transaction Length: 1
Severity: Low
Contract: SpellAction
Function name: execute()
PC address: 551
Estimated Gas Usage: 2626 - 37758
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x223735DeF0eD8b129429Fb580cA0A91cefC3aE02.sol:67

VatAbstract(MCD_VAT).file("USDC-A", "line", 100 * MILLION * RAD)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.705142
Transaction Length: 1
Severity: Low
Contract: SpellAction
Function name: execute()
PC address: 770
Estimated Gas Usage: 4201 - 73709
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x223735DeF0eD8b129429Fb580cA0A91cefC3aE02.sol:71

MedianAbstract(ETHBTC).kiss(tBTC)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.025696
Transaction Length: 1
Severity: Low
Contract: SpellAction
Function name: execute()
PC address: 989
Estimated Gas Usage: 5776 - 109660
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x223735DeF0eD8b129429Fb580cA0A91cefC3aE02.sol:73

MedianAbstract(ETHBTC).diss(tBTC_OLD)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xb012c02dabe3da060a269aa2aef41d1b895a4f35.sol
Total states:3036
6.861076
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.037277
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xb012c02dabe3da060a269aa2aef41d1b895a4f35.sol:20

 data. While these are generally available


--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.785639
Transaction Length: 1
Severity: Low
Contract: YvsLottery
Function name: players(uint256)
PC address: 5964
Estimated Gas Usage: 722 - 817
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0xb012c02dabe3da060a269aa2aef41d1b895a4f35.sol:1680

address[] public players

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.354583
Transaction Length: 1
Severity: High
Contract: YvsLottery
Function name: get_prize_pool()
PC address: 6088
Estimated Gas Usage: 2449 - 37436
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xb012c02dabe3da060a269aa2aef41d1b895a4f35.sol:346

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xd0d0a97de14d676eb2e2bc9a007e9b191d478f4f.sol
Total states:3429
5.573726
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xfc0d6bea5303aa2868f412839dbabab7b5688e8e.sol
Total states:18192
40.785256
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.821733
Transaction Length: 2
Severity: High
Contract: YBlockFinance
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xfc0d6bea5303aa2868f412839dbabab7b5688e8e.sol:57

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.184411
Transaction Length: 2
Severity: High
Contract: YBlockFinance
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xfc0d6bea5303aa2868f412839dbabab7b5688e8e.sol:58

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol
Total states:76081
147.892811
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.979203
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol:54

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.887186
Transaction Length: 2
Severity: High
Contract: YFII_Gold
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol:54

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.566270
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol:56

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.713553
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol:57

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:58.202144
Transaction Length: 2
Severity: High
Contract: YFII_Gold
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol:56

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:04.402881
Transaction Length: 2
Severity: High
Contract: YFII_Gold
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol:57

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x6175cc288707246e8a90bafdf6d37d9f3fc8f8f2.sol
Total states:8721
29.881457
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.150584
Transaction Length: 2
Severity: High
Contract: ETM
Function name: increaseApproval(address,uint256)
PC address: 5528
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6175cc288707246e8a90bafdf6d37d9f3fc8f8f2.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.412313
Transaction Length: 2
Severity: Low
Contract: ETM
Function name: increaseApproval(address,uint256)
PC address: 5541
Estimated Gas Usage: 990 - 1465
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x6175cc288707246e8a90bafdf6d37d9f3fc8f8f2.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x79faee4b277d07ce23e2387ef67ef45acc62f156.sol
Total states:60
0.775877
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x4c081d8ec752c8ca6309149e3ad07747b2576401.sol
Total states:3231
6.402196
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x9b8e1b000ba3772c6449b2b09f7a2c83b5c59add.sol
Total states:13173
26.61877
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.017512
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9b8e1b000ba3772c6449b2b09f7a2c83b5c59add.sol:140

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x11632816b82547c35516693973b2956685679db9.sol
Total states:509
0.405903
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x4C1911A80474991be7AE8BCB7e100ede8e3de657.sol
Total states:2733
7.486805
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.765877
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 4168
Estimated Gas Usage: 1612 - 2603
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4C1911A80474991be7AE8BCB7e100ede8e3de657.sol:280

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.648481
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4836
Estimated Gas Usage: 1608 - 2599
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4C1911A80474991be7AE8BCB7e100ede8e3de657.sol:251

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.354894
Transaction Length: 1
Severity: High
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3374 - 38551
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x4C1911A80474991be7AE8BCB7e100ede8e3de657.sol:95

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x9d0ec735e86d0474ef7e9274ada235f8a599d526.sol
Total states:8045
15.410343
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039442
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9d0ec735e86d0474ef7e9274ada235f8a599d526.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.118107
Transaction Length: 2
Severity: High
Contract: YFTOP
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9d0ec735e86d0474ef7e9274ada235f8a599d526.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol
Total states:4247
23.818742
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:05.233493
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 339
Estimated Gas Usage: 10986 - 154068
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1353
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:169

function supplyOrderWithDaiPermit(uint amount, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {
        DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s);
        supplyOrder(amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:07.509403
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: redeemOrder(uint256)
PC address: 385
Estimated Gas Usage: 8635 - 116441
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1961
Offset: 2326
Offset: 2583
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:147

function redeemOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        token.hasMember(msg.sender);
        tranche.redeemOrder(msg.sender, amount);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:14.222670
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse()
PC address: 823
Estimated Gas Usage: 4632 - 75356
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 4515
Offset: 4882
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:154

function disburse() external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:16.067220
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: disburse(uint256)
PC address: 910
Estimated Gas Usage: 4758 - 75577
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5182
Offset: 5557
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:161

function disburse(uint endEpoch) external
        returns(uint payoutCurrencyAmount, uint payoutTokenAmount, uint remainingSupplyCurrency,  uint remainingRedeemToken)
    {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        return tranche.disburse(msg.sender, endEpoch);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:18.077013
Transaction Length: 1
Severity: Medium
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 1044
Estimated Gas Usage: 6568 - 79482
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5894
Offset: 6269
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:141

function supplyOrder(uint amount) public note {
        require((token.hasMember(msg.sender) == true), "user-not-allowed-to-hold-token");
        tranche.supplyOrder(msg.sender, amount);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.385035
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithDaiPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1711
Estimated Gas Usage: 3914 - 40177
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:170

DaiPermitLike(tranche.currency()).permit(msg.sender, address(tranche), nonce, expiry, true, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:21.995364
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 2583
Estimated Gas Usage: 8608 - 114894
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:150

tranche.redeemOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:09.815080
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 3258
Estimated Gas Usage: 3875 - 40043
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:174

EIP2612PermitLike(tranche.currency()).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.099977
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse()
PC address: 4882
Estimated Gas Usage: 3600 - 39293
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:158

tranche.disburse(msg.sender)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:15.892495
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: disburse(uint256)
PC address: 5557
Estimated Gas Usage: 3724 - 39512
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:165

tranche.disburse(msg.sender, endEpoch)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.823428
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: supplyOrder(uint256)
PC address: 6269
Estimated Gas Usage: 3727 - 39515
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:143

tranche.supplyOrder(msg.sender, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:19.340065
Transaction Length: 1
Severity: Low
Contract: Operator
Function name: redeemOrderWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 6826
Estimated Gas Usage: 2310 - 4011
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4187E615DB017b004122fFFd165928eb992b1E15.sol:178

EIP2612PermitLike(address(token)).permit(msg.sender, address(tranche), value, deadline, v, r, s)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x0954C532155aaA5014978d62cC71Fd393694145c.sol
Total states:853
1.40484
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xe9f8bca0730832162245ff563b5cdde288577911.sol
Total states:3451
5.80288
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x8ee57d45794b80588e9e5102ce0bdcc4f612bbd3.sol
Total states:5095
18.548917
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.036264
Transaction Length: 0
Severity: High
Contract: ConTribute
Function name: constructor
PC address: 37
Estimated Gas Usage: 5496 - 25921
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x8ee57d45794b80588e9e5102ce0bdcc4f612bbd3.sol:89

now+100 days

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:14.367012
Transaction Length: 1
Severity: Low
Contract: ConTribute
Function name: buy(uint256,address)
PC address: 6626
Estimated Gas Usage: 1705 - 2696
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x8ee57d45794b80588e9e5102ce0bdcc4f612bbd3.sol:233

erc20.transferFrom(
                msg.sender,
                address(this),
                _amount
            )

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.654909
Transaction Length: 1
Severity: High
Contract: ConTribute
Function name: buyFor(uint256,address,address)
PC address: 7034
Estimated Gas Usage: 4549 - 40766
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x8ee57d45794b80588e9e5102ce0bdcc4f612bbd3.sol:104

ambassadorAccumulatedQuota_[_customerAddress] + _amountOfERC20

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.652746
Transaction Length: 1
Severity: High
Contract: ConTribute
Function name: buyFor(uint256,address,address)
PC address: 8712
Estimated Gas Usage: 9452 - 65479
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x8ee57d45794b80588e9e5102ce0bdcc4f612bbd3.sol:507

invested_[_customerAddress] += _incomingERC20

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.949166
Transaction Length: 1
Severity: High
Contract: ConTribute
Function name: buyFor(uint256,address,address)
PC address: 10125
Estimated Gas Usage: 14950 - 90977
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x8ee57d45794b80588e9e5102ce0bdcc4f612bbd3.sol:16

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.089230
Transaction Length: 1
Severity: High
Contract: ConTribute
Function name: buyFor(uint256,address,address)
PC address: 10256
Estimated Gas Usage: 5112 - 41519
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x8ee57d45794b80588e9e5102ce0bdcc4f612bbd3.sol:48

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x7acfa87f6d0dd28f7909d578c5621b7777ed1b3e.sol
Total states:8483
30.542687
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.213034
Transaction Length: 2
Severity: High
Contract: DFC
Function name: increaseApproval(address,uint256)
PC address: 4862
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x7acfa87f6d0dd28f7909d578c5621b7777ed1b3e.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.718390
Transaction Length: 2
Severity: Low
Contract: DFC
Function name: increaseApproval(address,uint256)
PC address: 4875
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x7acfa87f6d0dd28f7909d578c5621b7777ed1b3e.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol
Total states:3658
31.81564
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.930814
Transaction Length: 1
Severity: High
Contract: ScamChecker
Function name: execute(bytes)
PC address: 251
Estimated Gas Usage: 295 - 390
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol:3



*/



//pragma solidity ^0.6.6;
p

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:13.057870
Transaction Length: 1
Severity: Low
Contract: ScamChecker
Function name: testTokenWeth(address)
PC address: 1415
Estimated Gas Usage: 1135 - 1701
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol:194

token0.approve(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:04.519105
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testToken(address,address)
PC address: 1415
Estimated Gas Usage: 1185 - 1751
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol:194

token0.approve(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:15.785233
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testTokenWeth(address)
PC address: 1690
Estimated Gas Usage: 2811 - 38034
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol:196

token1.approve(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, uint(-1))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.064692
Transaction Length: 1
Severity: Low
Contract: ScamChecker
Function name: testFeeTokenWeth(address,address)
PC address: 4577
Estimated Gas Usage: 1199 - 1765
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol:258

token0.approve(router, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:27.235585
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testFeeToken(address,address,address)
PC address: 4577
Estimated Gas Usage: 1271 - 1837
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol:258

token0.approve(router, uint(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:30.960360
Transaction Length: 1
Severity: Medium
Contract: ScamChecker
Function name: testFeeToken(address,address,address)
PC address: 4832
Estimated Gas Usage: 2947 - 38170
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0x7eb4f2ab44fd91d5bacf992cd5342f16e90461f2.sol:260

token1.approve(router, uint(-1))

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x1bbe0f9af0cf852f9ff14637da2f0bc477a6d1ad.sol
Total states:558
1.607431
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xac969ef484ed089e4ccd39741a9817ba8cac1425.sol
Total states:18192
42.10225
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.255869
Transaction Length: 2
Severity: High
Contract: wingfinance
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xac969ef484ed089e4ccd39741a9817ba8cac1425.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.612038
Transaction Length: 2
Severity: High
Contract: wingfinance
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xac969ef484ed089e4ccd39741a9817ba8cac1425.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x523EEAfdaC23FA2CB0C3873CdA4818cdc80e28E8.sol
Total states:18855
40.64703
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.731423
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x523EEAfdaC23FA2CB0C3873CdA4818cdc80e28E8.sol:191

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.774265
Transaction Length: 2
Severity: High
Contract: Gem
Function name: increaseAllowance(address,uint256)
PC address: 6348
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x523EEAfdaC23FA2CB0C3873CdA4818cdc80e28E8.sol:191

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x764db87e0768bd6a772274555f12cd9f6408ad56.sol
Total states:1486
1.374497
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.321395
Transaction Length: 1
Severity: Medium
Contract: SUSHIPOWAH
Function name: totalSupply()
PC address: 443
Estimated Gas Usage: 3856 - 73447
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1306
Offset: 1560
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop1/0x764db87e0768bd6a772274555f12cd9f6408ad56.sol:89

function totalSupply() public view returns (uint256) {
    IPair pair = IPair(0x795065dCc9f64b5614C407a6EFDC400DA6221FB0);
    IBar bar = IBar(0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272);
    IERC20 sushi = IERC20(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);
    (uint256 lp_totalSushi, , ) = pair.getReserves();
    uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));

    return lp_totalSushi.mul(2).add(xsushi_totalSushi);
  }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x26a62529fe815e8e9d69f12a88cd807e3621d67e.sol
Total states:1546
1.971919
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039485
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x26a62529fe815e8e9d69f12a88cd807e3621d67e.sol:24

added overflow

 * checks.

 *

 * Arithmet

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol
Total states:22237
78.71287
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.730842
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 2371
Estimated Gas Usage: 1433 - 2098
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:86

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:28.766924
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 2396
Estimated Gas Usage: 1463 - 2128
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:88

assert(c>=a && c>=b)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:02.987745
Transaction Length: 1
Severity: Low
Contract: StandardToken
Function name: transfer(address,uint256)
PC address: 2420
Estimated Gas Usage: 846 - 1131
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:39.460552
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 2420
Estimated Gas Usage: 12343 - 53578
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:06.378830
Transaction Length: 1
Severity: Low
Contract: STEST22Token
Function name: transfer(address,uint256)
PC address: 6504
Estimated Gas Usage: 1307 - 1922
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:10.906269
Transaction Length: 2
Severity: Low
Contract: STEST22Token
Function name: transfer(address,uint256)
PC address: 6504
Estimated Gas Usage: 1307 - 1922
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:76

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.832952
Transaction Length: 1
Severity: High
Contract: STEST22Token
Function name: transferFrom(address,address,uint256)
PC address: 6911
Estimated Gas Usage: 2031 - 3026
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:86

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:02.064954
Transaction Length: 1
Severity: Low
Contract: STEST22Token
Function name: transferFrom(address,address,uint256)
PC address: 6936
Estimated Gas Usage: 2061 - 3056
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:88

assert(c>=a && c>=b)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.763341
Transaction Length: 2
Severity: Low
Contract: STEST22Token
Function name: transferFrom(address,address,uint256)
PC address: 6936
Estimated Gas Usage: 2061 - 3056
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x47179dbd96fa51e090e111a04a2086b15b2e4cde.sol:88

assert(c>=a && c>=b)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x8EbC56A13Ae7e3cE27B960b16AA57efed3F4e79E.sol
Total states:503
0.484885
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xC3dc053e111cA40f148C6E278B180C6F29742569.sol
Total states:3873
7.3771
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x32e680d160265477de32c1abb687417868fa425d.sol
Total states:1239
0.449603
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x714c9865ee65421e7221b92d327595d73f19e949.sol
Total states:18192
42.710932
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.674262
Transaction Length: 2
Severity: High
Contract: dAPI
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x714c9865ee65421e7221b92d327595d73f19e949.sol:54

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:33.433376
Transaction Length: 2
Severity: High
Contract: dAPI
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x714c9865ee65421e7221b92d327595d73f19e949.sol:55

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x6b4e7f07a120195a067a3d1dee7455bc60c10c12.sol
Total states:19229
35.704572
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.435184
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6b4e7f07a120195a067a3d1dee7455bc60c10c12.sol:194

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.812788
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6b4e7f07a120195a067a3d1dee7455bc60c10c12.sol:194

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x335fc9dea91e6276d8cd183967da69d1d72f5d5c.sol
Total states:9955
19.981198
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040121
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x335fc9dea91e6276d8cd183967da69d1d72f5d5c.sol:18

f the transaction and its data. While these

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.969119
Transaction Length: 2
Severity: High
Contract: ERC20BUL
Function name: increaseAllowance(address,uint256)
PC address: 5531
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x335fc9dea91e6276d8cd183967da69d1d72f5d5c.sol:136

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xc5fc1b015b67d505d3a798651fc74e66a3018a63.sol
Total states:23078
7791.6081
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.056510
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xc5fc1b015b67d505d3a798651fc74e66a3018a63.sol:135

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:47.091911
Transaction Length: 2
Severity: High
Contract: TomatoSwap
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xc5fc1b015b67d505d3a798651fc74e66a3018a63.sol:135

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x80f7415dac9a37e168047eb56a25032b5fe216cc.sol
Total states:615
0.975537
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984.sol
Total states:18192
41.847653
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.200658
Transaction Length: 2
Severity: High
Contract: wing
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.590033
Transaction Length: 2
Severity: High
Contract: wing
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x20f0ccd0c01258c60de7835e9dfe26dba0cf9d90.sol
Total states:3446
6.589663
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x197c11fbe707747d79e6e9a9773824a0979afb43.sol
Total states:3374
4.871479
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.655203
Transaction Length: 1
Severity: High
Contract: MIMOToken
Function name: transferFrom(address,address,uint256)
PC address: 4989
Estimated Gas Usage: 1357 - 1452
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x197c11fbe707747d79e6e9a9773824a0979afb43.sol:37

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xd21def826472d0753baa61722e2573792519a573.sol
Total states:31815
770.412093
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.718548
Transaction Length: 1
Severity: High
Contract: FreewayPreStakingRewardToken
Function name: initialize(string,string,uint8)
PC address: 858
Estimated Gas Usage: 408 - 503
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd21def826472d0753baa61722e2573792519a573.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.923299
Transaction Length: 1
Severity: High
Contract: FreewayPreStakingRewardToken
Function name: initialize(string,string,uint8)
PC address: 1009
Estimated Gas Usage: 750 - 3527
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd21def826472d0753baa61722e2573792519a573.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:42.095522
Transaction Length: 1
Severity: High
Contract: FreewayPreStakingRewardToken
Function name: symbol()
PC address: 2067
Estimated Gas Usage: 1443 - 2478
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd21def826472d0753baa61722e2573792519a573.sol:740

function symbol() public view returns (string memory) {
        return _symbol;
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.623240
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3249
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd21def826472d0753baa61722e2573792519a573.sol:213

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.986609
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 4214
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd21def826472d0753baa61722e2573792519a573.sol:213

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:55.239508
Transaction Length: 1
Severity: High
Contract: FreewayPreStakingRewardToken
Function name: transferFrom(address,address,uint256)
PC address: 7808
Estimated Gas Usage: 1320 - 4944
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd21def826472d0753baa61722e2573792519a573.sol:244

require(b <= a, errorMessage)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x929d0e043578acbe7ea8ad7e0804329236655969.sol
Total states:3028
4.779079
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.231151
Transaction Length: 1
Severity: Low
Contract: StakePool
Function name: stake(uint256)
PC address: 5264
Estimated Gas Usage: 2506 - 3497
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x929d0e043578acbe7ea8ad7e0804329236655969.sol:449

IERC20(stakeToken).transferFrom(_msgSender(), address(this), amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xc2717e738d4bcb85f73a412afc64aa6fdedbe7a7.sol
Total states:5259
59.218928
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.943588
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xc2717e738d4bcb85f73a412afc64aa6fdedbe7a7.sol:34

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.063191
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xc2717e738d4bcb85f73a412afc64aa6fdedbe7a7.sol:30

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.705805
Transaction Length: 1
Severity: High
Contract: yfStorm
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xc2717e738d4bcb85f73a412afc64aa6fdedbe7a7.sol:34

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.782892
Transaction Length: 1
Severity: High
Contract: yfStorm
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xc2717e738d4bcb85f73a412afc64aa6fdedbe7a7.sol:30

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x0d60782bfc7839372f925b4aa827aa053e8fc38f.sol
Total states:5259
43.73483
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.474006
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0d60782bfc7839372f925b4aa827aa053e8fc38f.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.190432
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0d60782bfc7839372f925b4aa827aa053e8fc38f.sol:29

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.407448
Transaction Length: 1
Severity: High
Contract: JER
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0d60782bfc7839372f925b4aa827aa053e8fc38f.sol:33

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.424148
Transaction Length: 1
Severity: High
Contract: JER
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x0d60782bfc7839372f925b4aa827aa053e8fc38f.sol:29

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xd3572cc51819c12a30f65044392a0816446a87c9.sol
Total states:3451
5.88159
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xC48a5b8D41Af43eaD1912CDd95AF00853f32f6AB.sol
Total states:2175
2.708838
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.286180
Transaction Length: 1
Severity: Low
Contract: UpgradeabilityProxy
Function name: fallback
PC address: 274
Estimated Gas Usage: 681 - 3503
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy),
       5_code(UpgradeabilityProxy))
--------------------
In file: ../../contracts/noloop/noloop1/0xC48a5b8D41Af43eaD1912CDd95AF00853f32f6AB.sol:260

delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xde21e568c8d4856ba6dfbcb13358a1ba53ec25c1.sol
Total states:8045
15.679332
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039508
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xde21e568c8d4856ba6dfbcb13358a1ba53ec25c1.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.173033
Transaction Length: 2
Severity: High
Contract: YFFLAT
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xde21e568c8d4856ba6dfbcb13358a1ba53ec25c1.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x0000000006a0403952389B70d8EE4E45479023db.sol
Total states:30
0.091351
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x3ea5c6894f64ffe4f137db283c1a39d6bbe8fdad.sol
Total states:10248
18.472688
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.595756
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 4470
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x3ea5c6894f64ffe4f137db283c1a39d6bbe8fdad.sol:44

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x038a68ff68c393373ec894015816e33ad41bd564.sol
Total states:1546
1.904289
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039238
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x038a68ff68c393373ec894015816e33ad41bd564.sol:9

sed under Apache 2.0 licence
// input  /Use

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x717882cf9977f2027e0d98ed2b0521ea971d7b23.sol
Total states:1389
2.208416
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x87F5F9eBE40786D49D35E1B5997b07cCAA8ADbFF.sol
Total states:730
1.876435
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x3cfecf9de59b3152d139ea2d20d35002c86f4938.sol
Total states:4999
7.310927
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x24f4e3a29e09f324b1d22ca673d4cf9ae77cb940.sol
Total states:1239
0.653579
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xea710583f7c81c797c4fb7476c35e1d8839a7085.sol
Total states:1839
1.35841
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xe61d1e87b8294aeb149f7ca95240d4c5905ab121.sol
Total states:3410
5.932346
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x649c90dfffdb7768c4faeba9988a0d99429a12ac.sol
Total states:17591
28.999224
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.065601
Transaction Length: 0
Severity: High
Contract: Token
Function name: constructor
PC address: 98
Estimated Gas Usage: 233 - 3006
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x649c90dfffdb7768c4faeba9988a0d99429a12ac.sol:21


interface ERC20Interface {

    /**

     

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.678308
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1574
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x649c90dfffdb7768c4faeba9988a0d99429a12ac.sol:222

_balances[_to] += _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:20.793150
Transaction Length: 2
Severity: High
Contract: ERC20Base
Function name: transferFrom(address,address,uint256)
PC address: 1650
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x649c90dfffdb7768c4faeba9988a0d99429a12ac.sol:224

_balances[_from] -= _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xd6181c7552e6dfd424b5b2b9dbd953c2d785384c.sol
Total states:8483
29.79341
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.685444
Transaction Length: 2
Severity: High
Contract: BEANSFARM
Function name: increaseApproval(address,uint256)
PC address: 4860
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xd6181c7552e6dfd424b5b2b9dbd953c2d785384c.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.033109
Transaction Length: 2
Severity: Low
Contract: BEANSFARM
Function name: increaseApproval(address,uint256)
PC address: 4873
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0xd6181c7552e6dfd424b5b2b9dbd953c2d785384c.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x0fc2b9b5d5318be30c56df2bcffbc1f269609931.sol
Total states:328
0.460033
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x2d8b461E9D43C65a7C7E2afeFa5bd1372281Ba63.sol
Total states:2191
6.049012
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.000398
Transaction Length: 1
Severity: High
Contract: Flipper
Function name: tick(uint256)
PC address: 12726
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x2d8b461E9D43C65a7C7E2afeFa5bd1372281Ba63.sol:135

x + y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol
Total states:88397
829.99791
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.799411
Transaction Length: 1
Severity: High
Contract: DSPauseProxy
Function name: exec(address,bytes)
PC address: 277
Estimated Gas Usage: 351 - 446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.079659
Transaction Length: 0
Severity: Low
Contract: Vow
Function name: constructor
PC address: 540
Estimated Gas Usage: 23004 - 107756
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:2264

vat.hope(flapper_)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:57.221992
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1060
Estimated Gas Usage: 1753 - 2744
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1516

vat.move(address(this), usr, mul(ONE, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.038218
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1114
Estimated Gas Usage: 1559 - 2455
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1949

ilks[ilk].pip.peek()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.094910
Transaction Length: 1
Severity: Low
Contract: ESM
Function name: join(uint256)
PC address: 1202
Estimated Gas Usage: 13618 - 55319
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:198

gem.transferFrom(msg.sender, pit, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.734288
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: join(address)
PC address: 1239
Estimated Gas Usage: 2405 - 3396
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1479

vat.slip(ilk, usr, int(msg.value))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:18.094611
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1281
Estimated Gas Usage: 3783 - 39575
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1517

dai.burn(msg.sender, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.414472
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1322
Estimated Gas Usage: 2474 - 3465
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1443

vat.slip(ilk, usr, int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.771115
Transaction Length: 1
Severity: Low
Contract: Spotter
Function name: poke(bytes32)
PC address: 1457
Estimated Gas Usage: 3765 - 39836
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1951

vat.file(ilk, "spot", spot)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.765817
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: join(address,uint256)
PC address: 1595
Estimated Gas Usage: 4535 - 40422
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1444

gem.transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:36.317971
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: join(uint256)
PC address: 1719
Estimated Gas Usage: 13726 - 55097
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1864

vat.move(msg.sender, address(this), mul(chi, wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.146189
Transaction Length: 1
Severity: Low
Contract: ESM
Function name: fire()
PC address: 1817
Estimated Gas Usage: 2686 - 3392
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:187

end.cage()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:11.843929
Transaction Length: 1
Severity: Low
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2573
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1483

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:00.492403
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2633
Estimated Gas Usage: 2224 - 3215
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1521

vat.move(msg.sender, address(this), mul(ONE, wad))

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:13.707472
Transaction Length: 1
Severity: High
Contract: ETHJoin
Function name: exit(address,uint256)
PC address: 2642
Estimated Gas Usage: 2899 - 38076
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1484

usr.transfer(wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.430715
Transaction Length: 1
Severity: Low
Contract: Jug
Function name: drip(bytes32)
PC address: 2706
Estimated Gas Usage: 2100 - 3091
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1616

vat.ilks(ilk)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:37.160664
Transaction Length: 1
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2854
Estimated Gas Usage: 4255 - 40047
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1522

dai.mint(usr, wad)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.351055
Transaction Length: 1
Severity: High
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 2984
Estimated Gas Usage: 848 - 1273
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1513

x * y

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:17.586346
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3118
Estimated Gas Usage: 2122 - 3113
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1448

vat.slip(ilk, msg.sender, -int(wad))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:21.161348
Transaction Length: 1
Severity: Low
Contract: GemJoin
Function name: exit(address,uint256)
PC address: 3339
Estimated Gas Usage: 4153 - 39945
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1449

gem.transfer(usr, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.642216
Transaction Length: 1
Severity: Low
Contract: Vow
Function name: kiss(uint256)
PC address: 3469
Estimated Gas Usage: 9605 - 65298
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:2321

vat.heal(rad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:51.869476
Transaction Length: 1
Severity: Low
Contract: Pot
Function name: exit(uint256)
PC address: 3541
Estimated Gas Usage: 13283 - 54654
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1870

vat.move(address(this), msg.sender, mul(chi, wad))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.860156
Transaction Length: 1
Severity: High
Contract: Pot
Function name: join(uint256)
PC address: 5026
Estimated Gas Usage: 12821 - 53626
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1828

x * y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:48.845486
Transaction Length: 1
Severity: High
Contract: Pot
Function name: exit(uint256)
PC address: 5064
Estimated Gas Usage: 837 - 1122
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1824

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:01.919326
Transaction Length: 2
Severity: High
Contract: Dai
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 5769
Estimated Gas Usage: 5999 - 43112
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:862

nonces[holder]++

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.762010
Transaction Length: 1
Severity: High
Contract: Cat
Function name: bite(bytes32,address)
PC address: 6281
Estimated Gas Usage: 5176 - 75429
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:688

x * y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:09.188091
Transaction Length: 2
Severity: High
Contract: Dai
Function name: burn(address,uint256)
PC address: 7856
Estimated Gas Usage: 7087 - 27752
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:775

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.026673
Transaction Length: 1
Severity: High
Contract: Flopper
Function name: tick(uint256)
PC address: 8156
Estimated Gas Usage: 8046 - 29891
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1345

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.693647
Transaction Length: 1
Severity: High
Contract: Flapper
Function name: tick(uint256)
PC address: 9122
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1085

x + y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.970767
Transaction Length: 1
Severity: High
Contract: Flipper
Function name: tick(uint256)
PC address: 11459
Estimated Gas Usage: 1947 - 3412
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:1208

x + y

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.210901
Transaction Length: 1
Severity: High
Contract: Vat
Function name: flux(bytes32,address,address,uint256)
PC address: 13158
Estimated Gas Usage: 1738 - 2593
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:2055

x - y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.325085
Transaction Length: 1
Severity: High
Contract: Vat
Function name: frob(bytes32,address,address,address,int256,int256)
PC address: 13213
Estimated Gas Usage: 4552 - 7485
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol:2037

x + uint(y)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xe39953deac442fd5a2ccd1ca3a1f5b4b90be229a.sol
Total states:942
0.870675
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x2b2b0559081c41e962777b5049632fdb30f7e652.sol
Total states:423
0.99636
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xbf122cf76aeb756854a4e3ebb3aa46d167201ef8.sol
Total states:9901
20.696242
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039854
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xbf122cf76aeb756854a4e3ebb3aa46d167201ef8.sol:18

e transaction and its data. While these are

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.382551
Transaction Length: 2
Severity: High
Contract: FoboToken
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0xbf122cf76aeb756854a4e3ebb3aa46d167201ef8.sol:136

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x1e87a37a67e7059caa9340a79214b90c0661ac0d.sol
Total states:3274
6.897905
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x4d99c9263c4b5a0b9c0cfc25f76f18bd00117a92.sol
Total states:2733
7.576345
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.769042
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 4168
Estimated Gas Usage: 1612 - 2603
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4d99c9263c4b5a0b9c0cfc25f76f18bd00117a92.sol:280

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.733469
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4836
Estimated Gas Usage: 1608 - 2599
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop1/0x4d99c9263c4b5a0b9c0cfc25f76f18bd00117a92.sol:251

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.369394
Transaction Length: 1
Severity: High
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3374 - 38551
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x4d99c9263c4b5a0b9c0cfc25f76f18bd00117a92.sol:95

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xc13247412123ec9e74d5cef8f0ae8c57c7f98da6.sol
Total states:2927
2.905953
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x2bb335cAf0fBDEC4e24515FC07edF8ed74c90b1B.sol
Total states:9670
18.968895
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.033919
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x2bb335cAf0fBDEC4e24515FC07edF8ed74c90b1B.sol:12


        this; // silence state mutability 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.975539
Transaction Length: 2
Severity: High
Contract: DimSumSwap
Function name: increaseAllowance(address,uint256)
PC address: 5292
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x2bb335cAf0fBDEC4e24515FC07edF8ed74c90b1B.sol:172

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x9dfe923ae9bd88573678bc39d935788f3af3fe2b.sol
Total states:8483
30.153925
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.189299
Transaction Length: 2
Severity: High
Contract: FC
Function name: increaseApproval(address,uint256)
PC address: 4861
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dfe923ae9bd88573678bc39d935788f3af3fe2b.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.475855
Transaction Length: 2
Severity: Low
Contract: FC
Function name: increaseApproval(address,uint256)
PC address: 4874
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop1/0x9dfe923ae9bd88573678bc39d935788f3af3fe2b.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x9ef9766572ee3a8542d92d5d884c6ec79046d267.sol
Total states:19694
41.225002
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.044512
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9ef9766572ee3a8542d92d5d884c6ec79046d267.sol:160

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.226594
Transaction Length: 2
Severity: High
Contract: YFVault
Function name: increaseAllowance(address,uint256)
PC address: 10530
Estimated Gas Usage: 1060 - 1535
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x9ef9766572ee3a8542d92d5d884c6ec79046d267.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xe1ca2433cdaf216087039bd99f344900395ee11d.sol
Total states:342
0.182752
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x442dc4dbb08e8a2c4dc8c28cc2c98369aecccd26.sol
Total states:31613
96.782768
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.611856
Transaction Length: 1
Severity: High
Contract: YFIPOOL
Function name: approveAndCall(address,uint256,bytes)
PC address: 1799
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x442dc4dbb08e8a2c4dc8c28cc2c98369aecccd26.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:35.740682
Transaction Length: 2
Severity: High
Contract: YFIPOOL
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 4618
Estimated Gas Usage: 6015 - 43128
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x442dc4dbb08e8a2c4dc8c28cc2c98369aecccd26.sol:134

nonces[holder]++

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:22.138571
Transaction Length: 1
Severity: Medium
Contract: YFIPOOL
Function name: approveAndCall(address,uint256,bytes)
PC address: 6543
Estimated Gas Usage: 8284 - 32451
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop1/0x442dc4dbb08e8a2c4dc8c28cc2c98369aecccd26.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), data)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.792394
Transaction Length: 1
Severity: High
Contract: YFIPOOL
Function name: transferFrom(address,address,uint256)
PC address: 7630
Estimated Gas Usage: 1671 - 2526
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x442dc4dbb08e8a2c4dc8c28cc2c98369aecccd26.sol:52

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xfef3bef71a5eb97e097039038776fd967ae5b106.sol
Total states:4151
38.950186
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xDF03e6d14AE921E4B93f983b0e14B98cDfdA972a.sol
Total states:673
0.460983
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x056527c9F79E65A63394B14A5d98e06a7306F8DF.sol
Total states:9014
18.050276
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.716517
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x056527c9F79E65A63394B14A5d98e06a7306F8DF.sol:109

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0x7e522119a2a5929c5651552ab1ac35eff422218c.sol
Total states:20052
42.681737
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.075053
Transaction Length: 0
Severity: Medium
Contract: FLY
Function name: constructor
PC address: 209
Estimated Gas Usage: 17133 - 78876
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop1/0x7e522119a2a5929c5651552ab1ac35eff422218c.sol:207

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.034035
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x7e522119a2a5929c5651552ab1ac35eff422218c.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.624976
Transaction Length: 2
Severity: High
Contract: FLY
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop1/0x7e522119a2a5929c5651552ab1ac35eff422218c.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop1/0xe88348180B2e01aC7fE6fDBbC81f0E265d4d399c.sol
Total states:214
0.152571
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x709ca71ebf34a3635bc7086d90f50f711b91c782.sol
Total states:12773
345.586101
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.022683
Transaction Length: 1
Severity: High
Contract: SWProtocol
Function name: approveAndCall(address,uint256,bytes)
PC address: 1750
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x709ca71ebf34a3635bc7086d90f50f711b91c782.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:03.512529
Transaction Length: 1
Severity: Medium
Contract: SWProtocol
Function name: approveAndCall(address,uint256,bytes)
PC address: 7320
Estimated Gas Usage: 9767 - 36335
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0x709ca71ebf34a3635bc7086d90f50f711b91c782.sol:444

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x3ac2ab91ddf57e2385089202ca221c360ced0062.sol
Total states:677
0.509027
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x997c72d83926fb2ce19c30e41319a6a51bf08e59.sol
Total states:8045
15.807822
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039929
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x997c72d83926fb2ce19c30e41319a6a51bf08e59.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.123016
Transaction Length: 2
Severity: High
Contract: YFK
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x997c72d83926fb2ce19c30e41319a6a51bf08e59.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x78c61af11Ada64b7C9154E4F1485579174dB8727.sol
Total states:8045
16.344955
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039985
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x78c61af11Ada64b7C9154E4F1485579174dB8727.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.541816
Transaction Length: 2
Severity: High
Contract: YFIC
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x78c61af11Ada64b7C9154E4F1485579174dB8727.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x70ae8178a6ed7629E62e4A6B2f75B36B843B0462.sol
Total states:835
0.967756
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xb6a8c3447900024648428f2e8c851cf855ff8c17.sol
Total states:850
4.283034
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.021594
Transaction Length: 1
Severity: Low
Contract: QYFTeamLock
Function name: release()
PC address: 1196
Estimated Gas Usage: 5049 - 42716
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xb6a8c3447900024648428f2e8c851cf855ff8c17.sol:163

address(token).call(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x544288176bB6d7D198302A2d18faD38442E69b25.sol
Total states:2859
7.779474
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.035095
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x544288176bB6d7D198302A2d18faD38442E69b25.sol:24

cution context, including the

 * sender of

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xbf66e58702e87271c0c5260f5f7da2f8283bff37.sol
Total states:1756
2.873494
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xa7edc2905ae0bbdbe24f24b0962df77dc64348f1.sol
Total states:503
0.686
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xd68f1e8b1644358d3448c696e951f20556d7ce5d.sol
Total states:628
3.969193
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x1cd137eb5bdf426aae58c3ed80383f74e42d9bf2.sol
Total states:3455
5.96104
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xed0a71669c422b7ac8dd26d5838b5eb6fb3d2936.sol
Total states:18192
40.664155
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.689204
Transaction Length: 2
Severity: High
Contract: syfi2
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xed0a71669c422b7ac8dd26d5838b5eb6fb3d2936.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.568335
Transaction Length: 2
Severity: High
Contract: syfi2
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xed0a71669c422b7ac8dd26d5838b5eb6fb3d2936.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x963afdcb993a328ec2ac36443c28fda5172de6eb.sol
Total states:570
16.929868
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x88802d906C28B18eDDe15568c623965b81D594e2.sol
Total states:9901
21.352365
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040199
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x88802d906C28B18eDDe15568c623965b81D594e2.sol:10

ailable
 * via msg.sender and msg.data, the

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.934297
Transaction Length: 2
Severity: High
Contract: GAMJA777Token
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x88802d906C28B18eDDe15568c623965b81D594e2.sol:128

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xa4cabddb93b3aed27ad17a203a197c066d8ee9ed.sol
Total states:1935
5.898619
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.410760
Transaction Length: 1
Severity: High
Contract: OXS_Staking
Function name: ClaimReward()
PC address: 5199
Estimated Gas Usage: 1599 - 1884
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xa4cabddb93b3aed27ad17a203a197c066d8ee9ed.sol:48

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x1fefa92854872dd9408efd448a4bc6da3495c42b.sol
Total states:18855
39.935555
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.906118
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1fefa92854872dd9408efd448a4bc6da3495c42b.sol:137

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.760827
Transaction Length: 2
Severity: High
Contract: Stakearn_xyz
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1fefa92854872dd9408efd448a4bc6da3495c42b.sol:137

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xB76aD7c04Bc311d85a01bd371FEcCe1Fc96E3419.sol
Total states:0
0.012389
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xf569cf5adc630517be07c62d1a14479cf711e860.sol
Total states:18192
40.750525
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.534149
Transaction Length: 2
Severity: High
Contract: powerpoolcvp
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xf569cf5adc630517be07c62d1a14479cf711e860.sol:106

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.321133
Transaction Length: 2
Severity: High
Contract: powerpoolcvp
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xf569cf5adc630517be07c62d1a14479cf711e860.sol:108

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x068ca64def5e2b7050546ecbda7425999b2ec5c2.sol
Total states:150
3.693088
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol
Total states:46840
106.533835
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048205
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.936990
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.882966
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.965147
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.930740
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.972412
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.327441
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.502362
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.301972
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.108200
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.139269
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.086781
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.008269
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.286800
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.376242
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.311246
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.162292
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.000650
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.023327
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x32a7C02e79c4ea1008dD6564b35F131428673c41.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x2321eb093fabab1a355a235db5efa20b0a21cdad.sol
Total states:31613
100.856452
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.492487
Transaction Length: 1
Severity: High
Contract: YFTRUST
Function name: approveAndCall(address,uint256,bytes)
PC address: 1799
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x2321eb093fabab1a355a235db5efa20b0a21cdad.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:32.992003
Transaction Length: 2
Severity: High
Contract: YFTRUST
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 4618
Estimated Gas Usage: 6015 - 43128
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x2321eb093fabab1a355a235db5efa20b0a21cdad.sol:134

nonces[holder]++

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:22.193304
Transaction Length: 1
Severity: Medium
Contract: YFTRUST
Function name: approveAndCall(address,uint256,bytes)
PC address: 6543
Estimated Gas Usage: 8284 - 32451
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0x2321eb093fabab1a355a235db5efa20b0a21cdad.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), data)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.781186
Transaction Length: 1
Severity: High
Contract: YFTRUST
Function name: transferFrom(address,address,uint256)
PC address: 7630
Estimated Gas Usage: 1671 - 2526
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x2321eb093fabab1a355a235db5efa20b0a21cdad.sol:52

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol
Total states:11711
262.38141
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.828013
Transaction Length: 1
Severity: High
Contract: PropertyFactory
Function name: create(string,string,address)
PC address: 191
Estimated Gas Usage: 296 - 391
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:3

*/

// File: contracts/interface/IA

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.099305
Transaction Length: 1
Severity: High
Contract: PropertyFactory
Function name: create(string,string,address)
PC address: 279
Estimated Gas Usage: 472 - 567
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:3

*/

// File: contracts/interface/IA

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:48.690695
Transaction Length: 1
Severity: High
Contract: PropertyFactory
Function name: createAndAuthenticate(string,string,address,string,string,string)
PC address: 502
Estimated Gas Usage: 318 - 413
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:3

*/

// File: contracts/interface/IA

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:52.064022
Transaction Length: 1
Severity: High
Contract: PropertyFactory
Function name: createAndAuthenticate(string,string,address,string,string,string)
PC address: 590
Estimated Gas Usage: 494 - 589
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:3

*/

// File: contracts/interface/IA

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:02.774347
Transaction Length: 1
Severity: High
Contract: PropertyFactory
Function name: createAndAuthenticate(string,string,address,string,string,string)
PC address: 710
Estimated Gas Usage: 703 - 798
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:3

*/

// File: contracts/interface/IA

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:18.832081
Transaction Length: 1
Severity: High
Contract: PropertyFactory
Function name: createAndAuthenticate(string,string,address,string,string,string)
PC address: 798
Estimated Gas Usage: 879 - 974
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:3

*/

// File: contracts/interface/IA

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:52.518730
Transaction Length: 1
Severity: High
Contract: PropertyFactory
Function name: createAndAuthenticate(string,string,address,string,string,string)
PC address: 886
Estimated Gas Usage: 1055 - 1150
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:3

*/

// File: contracts/interface/IA

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.446064
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x8a2c73F4d243f35AD62fc651302b742E0b3fa96c.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x7789d0f0993289c441dda79d08f0122431270a2a.sol
Total states:18192
41.796639
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.905657
Transaction Length: 2
Severity: High
Contract: tribute
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x7789d0f0993289c441dda79d08f0122431270a2a.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.332725
Transaction Length: 2
Severity: High
Contract: tribute
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x7789d0f0993289c441dda79d08f0122431270a2a.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x9febb25909c41a1875310bf7ad514de1485f60c7.sol
Total states:38505
59.599572
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.344113
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x9febb25909c41a1875310bf7ad514de1485f60c7.sol:198

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.205692
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 3847
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x9febb25909c41a1875310bf7ad514de1485f60c7.sol:198

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.372671
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 4011
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x9febb25909c41a1875310bf7ad514de1485f60c7.sol:198

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x4ab100559aefdc181e9de0f904cdf4f62ed543d0.sol
Total states:692
1.119105
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x3c37f97F7d8f705cc230f97a0668f77a0e05D0aA.sol
Total states:2159
5.170475
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.036621
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x3c37f97F7d8f705cc230f97a0668f77a0e05D0aA.sol:13

ext, including the
 * sender of the transac

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x22852adbce944149c0996c6edd7ee8d6e9c5f5d4.sol
Total states:1389
2.293125
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xfe07047f02e7bf1c2796e7a08fce803db80e1e8f.sol
Total states:1866
1.645296
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol
Total states:3638
36.744348
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:03.686881
Transaction Length: 1
Severity: Medium
Contract: YFMSTokenLock
Function name: lockRewardsTokens(address,uint256)
PC address: 432
Estimated Gas Usage: 15518 - 126247
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1569
Offset: 1938
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:98

function lockRewardsTokens (address _from, uint256 _amount) public {
    require(_from == owner);
    require(YFMSToken.balanceOf(_from) >= _amount);
    YFMSLockedRewards = _amount;
    unlockDateRewards = now;
    YFMSToken.transferFrom(owner, address(this), _amount);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:07.614885
Transaction Length: 1
Severity: Medium
Contract: YFMSTokenLock
Function name: lockDevTokens(address,uint256)
PC address: 722
Estimated Gas Usage: 15511 - 126240
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2791
Offset: 3160
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:89

function lockDevTokens (address _from, uint _amount) public {
    require(_from == owner);
    require(YFMSToken.balanceOf(_from) >= _amount);
    YFMSLockedDev = _amount;
    unlockDateDev = now;
    YFMSToken.transferFrom(owner, address(this), _amount);
  }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.547323
Transaction Length: 1
Severity: Low
Contract: YFMSTokenLock
Function name: withdrawDevTokens(address,uint256)
PC address: 1225
Estimated Gas Usage: 8569 - 29795
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:111

YFMSToken.transfer(_to, _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:28.212055
Transaction Length: 2
Severity: Low
Contract: YFMSTokenLock
Function name: withdrawDevTokens(address,uint256)
PC address: 1225
Estimated Gas Usage: 8575 - 29801
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:111

YFMSToken.transfer(_to, _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.528425
Transaction Length: 1
Severity: Low
Contract: YFMSTokenLock
Function name: lockRewardsTokens(address,uint256)
PC address: 1938
Estimated Gas Usage: 14693 - 91236
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:103

YFMSToken.transferFrom(owner, address(this), _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.100102
Transaction Length: 1
Severity: Low
Contract: YFMSTokenLock
Function name: withdrawRewardsTokens(address,uint256)
PC address: 2447
Estimated Gas Usage: 8559 - 29785
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:119

YFMSToken.transfer(_to, _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:22.120769
Transaction Length: 2
Severity: Low
Contract: YFMSTokenLock
Function name: withdrawRewardsTokens(address,uint256)
PC address: 2447
Estimated Gas Usage: 8568 - 29794
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:119

YFMSToken.transfer(_to, _amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:07.459620
Transaction Length: 1
Severity: Low
Contract: YFMSTokenLock
Function name: lockDevTokens(address,uint256)
PC address: 3160
Estimated Gas Usage: 14686 - 91229
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol:94

YFMSToken.transferFrom(owner, address(this), _amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x6dab64c1e43c9c23f48e6226b3e8ba877f67b160.sol
Total states:7439
17.385086
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.667700
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x6dab64c1e43c9c23f48e6226b3e8ba877f67b160.sol:106

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x32e9e36db78b5ee39927ea7dd0cb4926c30c8c8c.sol
Total states:8585
79.107832
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.723915
Transaction Length: 1
Severity: High
Contract: tstDAO
Function name: propose(address,string)
PC address: 3086
Estimated Gas Usage: 440 - 535
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32e9e36db78b5ee39927ea7dd0cb4926c30c8c8c.sol:3

*/

// File: @openzeppelin/contract

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x807dCF376a2c658cd76A65C343d7f60B6dBC089B.sol
Total states:17290
35.48673
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048060
Transaction Length: 0
Severity: High
Contract: AdvantMedicalToken
Function name: constructor
PC address: 117
Estimated Gas Usage: 5263 - 28036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x807dCF376a2c658cd76A65C343d7f60B6dBC089B.sol:11

tor () internal { }
    // solhint-disable-

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.896649
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x807dCF376a2c658cd76A65C343d7f60B6dBC089B.sol:106

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.980836
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 3847
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x807dCF376a2c658cd76A65C343d7f60B6dBC089B.sol:106

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x61fb613ac60dfebbfd09d9726e4cd89740abe3db.sol
Total states:3378
6.002022
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol
Total states:2159
45.262836
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:09.370875
Transaction Length: 1
Severity: Medium
Contract: LiquidityPool
Function name: addLiquidity(address)
PC address: 326
Estimated Gas Usage: 7363 - 146321
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 904
Offset: 1076
Offset: 1300
Offset: 1490
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:340

function addLiquidity(address tokenAddress) external payable {

        UniswapExchangeInterface uniswapExchange = UniswapExchangeInterface(uniswapFactory.getExchange(tokenAddress));

        uint tokenAmount = uniswapExchange.getEthToTokenInputPrice(msg.value);

        IERC20(tokenAddress).approve(address(uniswapExchange), tokenAmount);

        uniswapExchange.addLiquidity.value(msg.value)(

            tokenAmount,

            tokenAmount,

            now + 120

            );

    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:25.671086
Transaction Length: 2
Severity: Medium
Contract: LiquidityPool
Function name: addLiquidity(address)
PC address: 326
Estimated Gas Usage: 7363 - 146321
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 904
Offset: 1076
Offset: 1300
Offset: 1490
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:340

function addLiquidity(address tokenAddress) external payable {

        UniswapExchangeInterface uniswapExchange = UniswapExchangeInterface(uniswapFactory.getExchange(tokenAddress));

        uint tokenAmount = uniswapExchange.getEthToTokenInputPrice(msg.value);

        IERC20(tokenAddress).approve(address(uniswapExchange), tokenAmount);

        uniswapExchange.addLiquidity.value(msg.value)(

            tokenAmount,

            tokenAmount,

            now + 120

            );

    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:12.211585
Transaction Length: 1
Severity: Medium
Contract: LiquidityPool
Function name: buy(address)
PC address: 394
Estimated Gas Usage: 5708 - 110009
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1744
Offset: 1916
Offset: 2151
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:318

function buy (address tokenAddress) external payable {

        UniswapExchangeInterface uniswapExchange = UniswapExchangeInterface(uniswapFactory.getExchange(tokenAddress));

         uint tokenAmount = uniswapExchange.getEthToTokenInputPrice(msg.value);

        uniswapExchange.ethToTokenTransferOutput.value(msg.value)(

            tokenAmount,

            now + 120,

            msg.sender

            );

    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:32.747565
Transaction Length: 2
Severity: Medium
Contract: LiquidityPool
Function name: buy(address)
PC address: 394
Estimated Gas Usage: 5708 - 110009
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1744
Offset: 1916
Offset: 2151
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:318

function buy (address tokenAddress) external payable {

        UniswapExchangeInterface uniswapExchange = UniswapExchangeInterface(uniswapFactory.getExchange(tokenAddress));

         uint tokenAmount = uniswapExchange.getEthToTokenInputPrice(msg.value);

        uniswapExchange.ethToTokenTransferOutput.value(msg.value)(

            tokenAmount,

            now + 120,

            msg.sender

            );

    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.102852
Transaction Length: 1
Severity: Low
Contract: LiquidityPool
Function name: createExchange(address)
PC address: 586
Estimated Gas Usage: 1495 - 2296
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:310

uniswapFactory.createExchange(token)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:03.969338
Transaction Length: 2
Severity: Medium
Contract: LiquidityPool
Function name: createExchange(address)
PC address: 586
Estimated Gas Usage: 1495 - 2296
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:310

uniswapFactory.createExchange(token)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:06.215050
Transaction Length: 1
Severity: Medium
Contract: LiquidityPool
Function name: addLiquidity(address)
PC address: 1300
Estimated Gas Usage: 4837 - 74857
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:346

IERC20(tokenAddress).approve(address(uniswapExchange), tokenAmount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:17.733682
Transaction Length: 2
Severity: Medium
Contract: LiquidityPool
Function name: addLiquidity(address)
PC address: 1300
Estimated Gas Usage: 4837 - 74857
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:346

IERC20(tokenAddress).approve(address(uniswapExchange), tokenAmount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:09.256594
Transaction Length: 1
Severity: Low
Contract: LiquidityPool
Function name: addLiquidity(address)
PC address: 1490
Estimated Gas Usage: 6534 - 111306
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:348

uniswapExchange.addLiquidity.value(msg.value)(

            tokenAmount,

            tokenAmount,

            now + 120

            )

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:25.504143
Transaction Length: 2
Severity: Low
Contract: LiquidityPool
Function name: addLiquidity(address)
PC address: 1490
Estimated Gas Usage: 6534 - 111306
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:348

uniswapExchange.addLiquidity.value(msg.value)(

            tokenAmount,

            tokenAmount,

            now + 120

            )

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:12.107477
Transaction Length: 1
Severity: Low
Contract: LiquidityPool
Function name: buy(address)
PC address: 2151
Estimated Gas Usage: 4879 - 74994
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:324

uniswapExchange.ethToTokenTransferOutput.value(msg.value)(

            tokenAmount,

            now + 120,

            msg.sender

            )

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:32.587814
Transaction Length: 2
Severity: Low
Contract: LiquidityPool
Function name: buy(address)
PC address: 2151
Estimated Gas Usage: 4879 - 74994
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfea8666972993ea7117027824f8dd13a56c9244.sol:324

uniswapExchange.ethToTokenTransferOutput.value(msg.value)(

            tokenAmount,

            now + 120,

            msg.sender

            )

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xc880c252db7c51f74161633338a3bdafa8e65276.sol
Total states:697
5.082665
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x011166d1934d1b3e0bb9f7d8ca5241c153d07ddc.sol
Total states:3395
5.994052
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol
Total states:46840
106.941366
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048766
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.967520
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.993289
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.004211
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.969456
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.005989
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.986285
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.180650
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.020704
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.113645
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.144499
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.856015
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.849695
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.498233
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.761176
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.004903
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.867435
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.006510
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.060573
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x96b12ba9E49AF7F2112cea90Ae050bd904E04d00.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x556237e86df9325017c330e295c13a6c7d0e71a7.sol
Total states:5431
5.998213
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x7113b73c813733daDE1558a93a1894e0ae06F0F6.sol
Total states:1219
0.940715
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.070224
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x7113b73c813733daDE1558a93a1894e0ae06F0F6.sol:10

g.data, they should not be accessed in such

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xe95c387fbbb2897e9cf055c43e252d38c7dc493f.sol
Total states:398
1.193723
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x4935b1188eb940c39e22172cc5fe595e267706a1.sol
Total states:1261
1.017154
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x94CfE11E6b57f6f84bBa2c6DfB0fAeA47C4741D6.sol
Total states:909
14.197292
==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:02.173526
Transaction Length: 1
Severity: Medium
Contract: SushiRoll
Function name: roll(address,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 615
Estimated Gas Usage: 1611 - 3032
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0x94CfE11E6b57f6f84bBa2c6DfB0fAeA47C4741D6.sol:50

IUniswapV2Router2(fromRouter).removeLiquidityWithPermit(
            tokenA, tokenB,
            liquidity,
            amountAMin, amountBMin,
            address(this),
            now + 1,
            true,
            v, r, s)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:05.631761
Transaction Length: 1
Severity: Medium
Contract: SushiRoll
Function name: roll(address,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 903
Estimated Gas Usage: 3322 - 39493
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0x94CfE11E6b57f6f84bBa2c6DfB0fAeA47C4741D6.sol:61

IERC20(tokenA).approve(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F, uint256(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:10.100956
Transaction Length: 1
Severity: Medium
Contract: SushiRoll
Function name: roll(address,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1178
Estimated Gas Usage: 4998 - 75826
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0x94CfE11E6b57f6f84bBa2c6DfB0fAeA47C4741D6.sol:62

IERC20(tokenB).approve(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F, uint256(-1))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:13.645669
Transaction Length: 1
Severity: Low
Contract: SushiRoll
Function name: roll(address,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32)
PC address: 1563
Estimated Gas Usage: 6828 - 112883
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x94CfE11E6b57f6f84bBa2c6DfB0fAeA47C4741D6.sol:65

IUniswapV2Router2(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F).addLiquidity(
            tokenA, tokenB,
            amountA, amountB,
            amountAMin, amountBMin,
            address(msg.sender),
            now + 1)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xab14a9b424b85d2b792f5170161e8f5f9d35c516.sol
Total states:11362
29.870754
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x3d48046f6213451faaf06c5953d7394c13590ec4.sol
Total states:18855
39.897674
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.738781
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x3d48046f6213451faaf06c5953d7394c13590ec4.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.709409
Transaction Length: 2
Severity: High
Contract: YCH
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x3d48046f6213451faaf06c5953d7394c13590ec4.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x787cdf337b66e10de9191bb7a26e2128b52c6390.sol
Total states:2513
5.064426
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xc094dca45f5f9195622720c2582ed47ac5ab3f7c.sol
Total states:554
1.449725
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xeae57ce9cc1984f202e15e038b964bb8bdf7229a.sol
Total states:174
205.378198
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.979555
Transaction Length: 1
Severity: High
Contract: SplTokenSwap
Function name: withdrawErc20(address,address,uint256,uint256,bytes)
PC address: 381
Estimated Gas Usage: 439 - 534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xeae57ce9cc1984f202e15e038b964bb8bdf7229a.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.520886
Transaction Length: 1
Severity: High
Contract: SplTokenSwap
Function name: swapEth(string)
PC address: 593
Estimated Gas Usage: 339 - 434
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xeae57ce9cc1984f202e15e038b964bb8bdf7229a.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:11.781517
Transaction Length: 1
Severity: High
Contract: SplTokenSwap
Function name: withdrawEth(address,uint256,uint256,bytes)
PC address: 931
Estimated Gas Usage: 427 - 522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xeae57ce9cc1984f202e15e038b964bb8bdf7229a.sol:3

*/

// File: @openzeppelin/contract

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol
Total states:2733
7.576284
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.749873
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 4168
Estimated Gas Usage: 1612 - 2603
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:280

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.552148
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4836
Estimated Gas Usage: 1608 - 2599
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:251

IERC20(YFIs).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.329768
Transaction Length: 1
Severity: High
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3374 - 38551
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x42b12130bb3b4aa53b5fc129719f7a93cc420ed2.sol:95

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xe28beB73c2b3f6a6fFD4183Fed979BC5e39E36D7.sol
Total states:1579
2.154625
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.043901
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe28beB73c2b3f6a6fFD4183Fed979BC5e39E36D7.sol:24

ata() internal view  returns (bytes memory)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xc276c071299b31dec8d18961dbb063c8ad1b5e90.sol
Total states:33573
61.765883
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.058221
Transaction Length: 0
Severity: High
Contract: HBUSDToken
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xc276c071299b31dec8d18961dbb063c8ad1b5e90.sol:28

256 c = a + b;

        require(c >= a, "Sa

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.697243
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3941
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xc276c071299b31dec8d18961dbb063c8ad1b5e90.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.319324
Transaction Length: 2
Severity: High
Contract: Blacklisted
Function name: increaseAllowance(address,uint256)
PC address: 5349
Estimated Gas Usage: 967 - 1442
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xc276c071299b31dec8d18961dbb063c8ad1b5e90.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.517367
Transaction Length: 2
Severity: High
Contract: CoinFactory
Function name: increaseAllowance(address,uint256)
PC address: 5786
Estimated Gas Usage: 967 - 1442
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xc276c071299b31dec8d18961dbb063c8ad1b5e90.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x795Ce5D8eaB46EDB30Dc0421F130162f6B75556f.sol
Total states:920
2.317893
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.687100
Transaction Length: 1
Severity: High
Contract: StakingPoolFunds
Function name: availableDividendRewards()
PC address: 3695
Estimated Gas Usage: 5668 - 109259
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x795Ce5D8eaB46EDB30Dc0421F130162f6B75556f.sol:38

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x557AeD48fE5E604725Ee61A60421F2AFC28FcE6F.sol
Total states:2641
1.721113
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xd8393dd6c53f5ae7c98eaf46e28c18ec58450c50.sol
Total states:481
3.945518
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x9214a67186965fd5fe582a64a8646ff058f023aa.sol
Total states:2150
1.994033
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xb7412e57767ec30a76a4461d408d78b36688409c.sol
Total states:18859
39.632617
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.539050
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xb7412e57767ec30a76a4461d408d78b36688409c.sol:123

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.384402
Transaction Length: 2
Severity: High
Contract: BCRED
Function name: increaseAllowance(address,uint256)
PC address: 4721
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xb7412e57767ec30a76a4461d408d78b36688409c.sol:123

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x6A2E6510B2BBF8C9AD7bC817D0Dc711711E8d747.sol
Total states:406
0.596044
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.006265
Transaction Length: 1
Severity: Low
Contract: BaseUpgradeabilityProxy
Function name: fallback
PC address: 97
Estimated Gas Usage: 557 - 2956
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x0
--------------------
In file: ../../contracts/noloop/noloop2/0x6A2E6510B2BBF8C9AD7bC817D0Dc711711E8d747.sol:50

delegatecall(gas, implementation, 0, calldatasize, 0, 0)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x32d5830f8d6d9cdb36965c521e0e638d24c6b889.sol
Total states:20094
31.345013
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.042838
Transaction Length: 0
Severity: High
Contract: Token
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32d5830f8d6d9cdb36965c521e0e638d24c6b889.sol:15

InterfaceERC20 {
    function totalSupply()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.667931
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 2788
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x32d5830f8d6d9cdb36965c521e0e638d24c6b889.sol:69

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xa39F5eF6ADF4c04e8DF8f708de3A2AD1b060f44d.sol
Total states:60
0.757433
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xd421efc67ee0d051155ca5e8075ac7eb125ff053.sol
Total states:3016
3516.717143
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:58:28.509811
Transaction Length: 1
Severity: High
Contract: PrivateSale
Function name: buyWithUSDC(uint256)
PC address: 6516
Estimated Gas Usage: 752 - 847
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xd421efc67ee0d051155ca5e8075ac7eb125ff053.sol:99

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x642De6Dcae9a0b21C73BAFacF921d49071864918.sol
Total states:495
0.318783
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x7f7ce4061af64a23f49591da71e90b7dd2419512.sol
Total states:8483
29.786217
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.241131
Transaction Length: 2
Severity: High
Contract: BasilFinance
Function name: increaseApproval(address,uint256)
PC address: 4860
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x7f7ce4061af64a23f49591da71e90b7dd2419512.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:26.078740
Transaction Length: 2
Severity: Low
Contract: BasilFinance
Function name: increaseApproval(address,uint256)
PC address: 4873
Estimated Gas Usage: 1012 - 1487
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x7f7ce4061af64a23f49591da71e90b7dd2419512.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x3d96b91f1e3d017325e0eea6d8edf9fa8558f5bc.sol
Total states:3395
5.978846
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xf4bcc9537e4a6ff9d13a92b6273cc2349b659242.sol
Total states:31613
95.511395
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.637411
Transaction Length: 1
Severity: High
Contract: YFK
Function name: approveAndCall(address,uint256,bytes)
PC address: 1799
Estimated Gas Usage: 422 - 517
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xf4bcc9537e4a6ff9d13a92b6273cc2349b659242.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.487866
Transaction Length: 2
Severity: High
Contract: YFK
Function name: permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)
PC address: 4618
Estimated Gas Usage: 6015 - 43128
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xf4bcc9537e4a6ff9d13a92b6273cc2349b659242.sol:134

nonces[holder]++

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:22.538270
Transaction Length: 1
Severity: Medium
Contract: YFK
Function name: approveAndCall(address,uint256,bytes)
PC address: 6543
Estimated Gas Usage: 8284 - 32451
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0xf4bcc9537e4a6ff9d13a92b6273cc2349b659242.sol:111

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), data)

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:01.800255
Transaction Length: 1
Severity: High
Contract: YFK
Function name: transferFrom(address,address,uint256)
PC address: 7630
Estimated Gas Usage: 1671 - 2526
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xf4bcc9537e4a6ff9d13a92b6273cc2349b659242.sol:52

x - y

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x8f9dc5c9ce6834d8c9897faf5d44ac36ca073595.sol
Total states:839
2.530406
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.727475
Transaction Length: 1
Severity: Low
Contract: Treasury
Function name: withdraw(address)
PC address: 858
Estimated Gas Usage: 3103 - 38371
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x8f9dc5c9ce6834d8c9897faf5d44ac36ca073595.sol:334

IWithdraw(config.withdraw()).withdraw(_property)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x5ecbba808c654858b2cda5fe6e89604e1219b357.sol
Total states:33794
84.08816
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:09.010612
Transaction Length: 1
Severity: Low
Contract: Token
Function name: fallback()
PC address: 312
Estimated Gas Usage: 286 - 381
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x5ecbba808c654858b2cda5fe6e89604e1219b357.sol:129

assert(true == false)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:13.061056
Transaction Length: 2
Severity: Low
Contract: Token
Function name: fallback()
PC address: 312
Estimated Gas Usage: 286 - 381
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x5ecbba808c654858b2cda5fe6e89604e1219b357.sol:129

assert(true == false)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:47.081675
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2495
Estimated Gas Usage: 3671 - 5286
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x5ecbba808c654858b2cda5fe6e89604e1219b357.sol:102

balances[toAddr]                 + amountInWei

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:54.959861
Transaction Length: 2
Severity: Low
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2777
Estimated Gas Usage: 4203 - 6008
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x5ecbba808c654858b2cda5fe6e89604e1219b357.sol:106

assert(balanceTo    >= balances[toAddr])

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:05.673047
Transaction Length: 1
Severity: High
Contract: Token
Function name: transfer(address,uint256)
PC address: 5388
Estimated Gas Usage: 2368 - 3033
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x5ecbba808c654858b2cda5fe6e89604e1219b357.sol:76

balances[msg.sender] - amountInWei

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:08.393238
Transaction Length: 1
Severity: Low
Contract: Token
Function name: transfer(address,uint256)
PC address: 5534
Estimated Gas Usage: 2378 - 3043
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x5ecbba808c654858b2cda5fe6e89604e1219b357.sol:79

assert(balanceFrom <= balances[msg.sender])

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xae465FD39B519602eE28F062037F7B9c41FDc8cF.sol
Total states:2660
23.572941
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.028240
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xae465FD39B519602eE28F062037F7B9c41FDc8cF.sol:13

ext, including the
 * sender of the transac

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.303829
Transaction Length: 0
Severity: High
Contract: WarpVaultSC
Function name: constructor
PC address: 744
Estimated Gas Usage: 59602 - 319430
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xae465FD39B519602eE28F062037F7B9c41FDc8cF.sol:5

_modules\@openz

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.157865
Transaction Length: 0
Severity: High
Contract: WarpVaultSC
Function name: constructor
PC address: 2059
Estimated Gas Usage: 47404 - 231962
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xae465FD39B519602eE28F062037F7B9c41FDc8cF.sol:217

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x410d2248e14fbc11394b731e6107f60381c2191a.sol
Total states:8888
22.411883
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.110048
Transaction Length: 0
Severity: High
Contract: iVault
Function name: constructor
PC address: 224
Estimated Gas Usage: 6794 - 64036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x410d2248e14fbc11394b731e6107f60381c2191a.sol:6

ed for verifica

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.927880
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x410d2248e14fbc11394b731e6107f60381c2191a.sol:168

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x4e4b58e47C69cA316d616E179E009AB2cE064aED.sol
Total states:0
0.022438
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xcfad7aeb67fc5c19a581496689881ae063541149.sol
Total states:997
84.160242
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:23.304249
Transaction Length: 1
Severity: Low
Contract: TokenVestingLock
Function name: getPendingUnlocked()
PC address: 3310
Estimated Gas Usage: 659 - 754
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfad7aeb67fc5c19a581496689881ae063541149.sol:29

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.893687
Transaction Length: 1
Severity: High
Contract: TokenVestingLock
Function name: getPendingUnlocked()
PC address: 3328
Estimated Gas Usage: 958 - 1053
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfad7aeb67fc5c19a581496689881ae063541149.sol:16

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:22.517748
Transaction Length: 1
Severity: Low
Contract: TokenVestingLock
Function name: getPendingUnlocked()
PC address: 3362
Estimated Gas Usage: 1030 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xcfad7aeb67fc5c19a581496689881ae063541149.sol:17

assert(a == 0 || c / a == b)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xc1fa58339755880ae945e31c8672e20c491e190b.sol
Total states:850
4.383407
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.007724
Transaction Length: 1
Severity: Low
Contract: rfiSantaTimelock
Function name: release()
PC address: 1196
Estimated Gas Usage: 5049 - 42716
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xc1fa58339755880ae945e31c8672e20c491e190b.sol:200

address(token).call(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xe41d15bdbd5688625675f2da55f1e2d568c9fc0d.sol
Total states:1249
0.885893
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol
Total states:21575
168.108791
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.026910
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:9

dress constant BUSD_DEPOSIT_ADDRESS   = 0xb

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.321125
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: fallback
PC address: 142
Estimated Gas Usage: 2311 - 39600
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x594153a000000000000000000000000000000000000000000000000000000000
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1035

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.323560
Transaction Length: 1
Severity: Medium
Contract: PoolProxy
Function name: fallback
PC address: 160
Estimated Gas Usage: 3056 - 74345
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 931
Offset: 142
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1044

return(ptr, size)

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.036033
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: fallback
PC address: 264
Estimated Gas Usage: 725 - 3547
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy))
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:902

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.993937
Transaction Length: 1
Severity: Low
Contract: Deposit3Tokens
Function name: period_timestamp(uint256)
PC address: 380
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:992

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.084026
Transaction Length: 1
Severity: Low
Contract: Deposit2Tokens
Function name: period_timestamp(uint256)
PC address: 393
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:986

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:44.581112
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 537
Estimated Gas Usage: 1433 - 2470
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:47.957506
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 577
Estimated Gas Usage: 1583 - 2996
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:57

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.604132
Transaction Length: 1
Severity: Low
Contract: TokenManager
Function name: supportAddresses(address,uint256)
PC address: 613
Estimated Gas Usage: 752 - 1037
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.175213
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: supportAddresses(address,uint256)
PC address: 1317
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:03.005580
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1575
Estimated Gas Usage: 4173 - 40386
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1082

IERC20(tokenAddress).transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:08.622916
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1891
Estimated Gas Usage: 5889 - 76759
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1085

IERC20(tokenAddress).approve(EXCHANGE_CONTRACT, amount)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.944763
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: supportAddresses(address,uint256)
PC address: 2114
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.097637
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2259
Estimated Gas Usage: 8446 - 148446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:5

enManager {
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:23.756795
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2262
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:3



 contract TokenManager {
    
    address

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.632724
Transaction Length: 2
Severity: High
Contract: PoolToken
Function name: increaseAllowance(address,uint256)
PC address: 4840
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:139

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.452894
Transaction Length: 1
Severity: Low
Contract: PoolFactory
Function name: supportAddresses(address,uint256)
PC address: 5037
Estimated Gas Usage: 796 - 1081
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:00.828137
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: supportAddresses(address,uint256)
PC address: 8485
Estimated Gas Usage: 818 - 1103
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:55

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.871641
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17754
Estimated Gas Usage: 5008 - 75599
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:5

enManager {
   

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.238535
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17757
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:3



 contract TokenManager {
    
    address

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:32.245907
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17778
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1241

IOneSplit(EXCHANGE_CONTRACT).getExpectedReturn(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, 100, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.160688
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17813
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:2


*/

 contract TokenM

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:38.642597
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17819
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:7

ant COMPOUND_D

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:45.745116
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17839
Estimated Gas Usage: 5186 - 76056
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:9

POSIT_ADDRESS   = 0xb

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:54.509829
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17841
Estimated Gas Usage: 5186 - 76056
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:9

dress constant BUSD_DEPOSIT_ADDRESS   = 0xb6

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:32.176673
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18208
Estimated Gas Usage: 5661 - 77946
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:31.736114
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18245
Estimated Gas Usage: 6389 - 78579
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1242

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.237274
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 19161
Estimated Gas Usage: 5923 - 76793
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0xe613823c924583D29C33851B1bcf31dC4deD3E56.sol:1257

IERC20(DAI_ADDRESS).approve(_depositPool, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xe5DaD06Ce6d5468e26f6Ee68Ea322a181b9B659C.sol
Total states:120
3.173175
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x846F271627b970773b235AFb11Fe0fcF12206C86.sol
Total states:879
0.773306
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xd7f835e02cec0313c07bb65129b95040994311ea.sol
Total states:10492
37.793392
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.991873
Transaction Length: 1
Severity: High
Contract: yfSCAN
Function name: transfer(address,uint256)
PC address: 6338
Estimated Gas Usage: 834 - 929
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xd7f835e02cec0313c07bb65129b95040994311ea.sol:31

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.067589
Transaction Length: 2
Severity: High
Contract: yfSCAN
Function name: increaseAllowance(address,uint256)
PC address: 6458
Estimated Gas Usage: 981 - 1456
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xd7f835e02cec0313c07bb65129b95040994311ea.sol:9

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x96257d0906149fb387cde1ccef15c1a072782af4.sol
Total states:610
1.550842
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x9e766f71774712f38fc3f7ac40bfba5e3d910ffa.sol
Total states:191
1.59586
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.511906
Transaction Length: 1
Severity: Medium
Contract: RebaseMiBASE
Function name: rebasesync()
PC address: 106
Estimated Gas Usage: 3258 - 72196
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 232
Offset: 376
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop2/0x9e766f71774712f38fc3f7ac40bfba5e3d910ffa.sol:46

function rebasesync()

        external

        returns (uint256)

     {

        

    UNIV2Sync(0xDAEfbED9D35F505444527746393f015B8C84dF2b).sync();

    Mibaserebase(0xd5c0216B0627134Ed57A53a9Ea430766CE1D9Da5).rebase();

   

        }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.600344
Transaction Length: 1
Severity: Low
Contract: RebaseMiBASE
Function name: rebasesync()
PC address: 232
Estimated Gas Usage: 931 - 1307
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x9e766f71774712f38fc3f7ac40bfba5e3d910ffa.sol:56

UNIV2Sync(0xDAEfbED9D35F505444527746393f015B8C84dF2b).sync()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.505348
Transaction Length: 1
Severity: Low
Contract: RebaseMiBASE
Function name: rebasesync()
PC address: 376
Estimated Gas Usage: 2466 - 37123
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop2/0x9e766f71774712f38fc3f7ac40bfba5e3d910ffa.sol:58

Mibaserebase(0xd5c0216B0627134Ed57A53a9Ea430766CE1D9Da5).rebase()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x44dea9ab3a589b007e6bb5703ba5b19706f22703.sol
Total states:771
1.220805
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xa90eef2d7ee828a664504a2aca0d2e2c33563a42.sol
Total states:1253
2.277533
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040865
Transaction Length: 0
Severity: High
Contract: UtopiaTokenV
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xa90eef2d7ee828a664504a2aca0d2e2c33563a42.sol:13

  returns (bytes memory) {
        this; //

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x73b97e2d542052afc743df5966c4f9718c9d43ff.sol
Total states:599
1.508596
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xae095deea487c22b53063ac052a36b3e4f6fc259.sol
Total states:428
1.406736
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xc59ddee8be619680a3b9489eb864b30270f2070d.sol
Total states:8967
17.845594
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.031849
Transaction Length: 0
Severity: High
Contract: ERC20Detailed
Function name: constructor
PC address: 106
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xc59ddee8be619680a3b9489eb864b30270f2070d.sol:12

t, uint256 amount) external returns (bool);

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.417856
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xc59ddee8be619680a3b9489eb864b30270f2070d.sol:25

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x7c6e8cba7d98958bc5f280c346d2dff23b772a59.sol
Total states:1313
4.245298
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040586
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x7c6e8cba7d98958bc5f280c346d2dff23b772a59.sol:13

y wrap on overflow. This can easily result


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.142054
Transaction Length: 0
Severity: High
Contract: YvsTokenTimelock
Function name: constructor
PC address: 572
Estimated Gas Usage: 12791 - 56336
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x7c6e8cba7d98958bc5f280c346d2dff23b772a59.sol:34

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xe28157a9272ec2eec886a208dc77f547361ad3f3.sol
Total states:8045
16.872258
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039507
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe28157a9272ec2eec886a208dc77f547361ad3f3.sol:10

g.data, they should not be accessed in such

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.160673
Transaction Length: 2
Severity: High
Contract: YFONE
Function name: increaseAllowance(address,uint256)
PC address: 5428
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xe28157a9272ec2eec886a208dc77f547361ad3f3.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x45d6a1D01E37aedC0e1Af6ff6a87D25754cA8ECB.sol
Total states:669
1.347892
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x259897d9699553edbdf8538599242354e957fb94.sol
Total states:580
4.73655
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xbc6F608FDD6A88D750C6BA84815C9581411Ce113.sol
Total states:1995
485.653917
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.968674
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 391
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xbc6F608FDD6A88D750C6BA84815C9581411Ce113.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.663888
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 542
Estimated Gas Usage: 729 - 3506
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xbc6F608FDD6A88D750C6BA84815C9581411Ce113.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:16.229150
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1025
Estimated Gas Usage: 401 - 496
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xbc6F608FDD6A88D750C6BA84815C9581411Ce113.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:28.827026
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1176
Estimated Gas Usage: 743 - 3520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xbc6F608FDD6A88D750C6BA84815C9581411Ce113.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:18.247620
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1529
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xbc6F608FDD6A88D750C6BA84815C9581411Ce113.sol:3

*/

// File: @openzeppelin/contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:31.986594
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1680
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xbc6F608FDD6A88D750C6BA84815C9581411Ce113.sol:3

*/

// File: @openzeppelin/contract

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol
Total states:4371
1860.876038
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.986365
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1219
Estimated Gas Usage: 543 - 638
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.815679
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1370
Estimated Gas Usage: 885 - 3662
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:31.342687
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1521
Estimated Gas Usage: 1227 - 6686
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:58.788632
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: init(uint256,uint256,uint256,uint256,uint256,string,string,string,string)
PC address: 1672
Estimated Gas Usage: 1569 - 9710
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol:3

*/

// Verified using https://dapp.

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:11.274375
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: juniorName()
PC address: 1867
Estimated Gas Usage: 1524 - 2559
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol:162

string              public juniorName

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:09:13.868086
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: seniorSymbol()
PC address: 2072
Estimated Gas Usage: 1458 - 2493
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol:161

string              public seniorSymbol

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:26:11.193420
Transaction Length: 1
Severity: High
Contract: LenderDeployer
Function name: seniorName()
PC address: 3675
Estimated Gas Usage: 1500 - 2535
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x1062F023771E15367A9cde84652E62Fdc046f32f.sol:160

string              public seniorName

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x885a49f608f41cc21d35dedba18f1271b9a5d6af.sol
Total states:18192
40.788735
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.536641
Transaction Length: 2
Severity: High
Contract: tributefinance
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x885a49f608f41cc21d35dedba18f1271b9a5d6af.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.807212
Transaction Length: 2
Severity: High
Contract: tributefinance
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x885a49f608f41cc21d35dedba18f1271b9a5d6af.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x22516b9df2291d739edf7f9adfc60c25c21e9172.sol
Total states:9026
20.925492
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.897536
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x22516b9df2291d739edf7f9adfc60c25c21e9172.sol:120

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x76f227246d63d105476987746bff1dcc9d558cf5.sol
Total states:10068
43.642642
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.248665
Transaction Length: 2
Severity: High
Contract: ATON
Function name: increaseAllowance(address,uint256)
PC address: 4673
Estimated Gas Usage: 1033 - 1508
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x76f227246d63d105476987746bff1dcc9d558cf5.sol:168

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x5927e4c47cd2421f4706e29fdf8fd1466083cd27.sol
Total states:55691
98.764619
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.547528
Transaction Length: 2
Severity: High
Contract: PausableToken
Function name: increaseApproval(address,uint256)
PC address: 6489
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x5927e4c47cd2421f4706e29fdf8fd1466083cd27.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.983106
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 7724
Estimated Gas Usage: 1002 - 1477
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x5927e4c47cd2421f4706e29fdf8fd1466083cd27.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.678204
Transaction Length: 2
Severity: High
Contract: FreezableMintableToken
Function name: increaseApproval(address,uint256)
PC address: 11447
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x5927e4c47cd2421f4706e29fdf8fd1466083cd27.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.619144
Transaction Length: 2
Severity: High
Contract: BurnableFreezableMintableToken
Function name: increaseApproval(address,uint256)
PC address: 12143
Estimated Gas Usage: 1025 - 1500
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x5927e4c47cd2421f4706e29fdf8fd1466083cd27.sol:47

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.695295
Transaction Length: 2
Severity: High
Contract: MainToken
Function name: increaseApproval(address,uint256)
PC address: 12637
Estimated Gas Usage: 1047 - 1522
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x5927e4c47cd2421f4706e29fdf8fd1466083cd27.sol:47

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xba6e6dae4c48515adc31bdbd681c8ad383b235b5.sol
Total states:11580
21.241758
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039383
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xba6e6dae4c48515adc31bdbd681c8ad383b235b5.sol:11

vailable
 * via msg.sender and msg.data, th

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.657003
Transaction Length: 2
Severity: High
Contract: ReefToken
Function name: increaseAllowance(address,uint256)
PC address: 5693
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xba6e6dae4c48515adc31bdbd681c8ad383b235b5.sol:208

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol
Total states:32886
199.46109
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.407999
Transaction Length: 1
Severity: Low
Contract: BasicToken
Function name: transfer(address,uint256)
PC address: 881
Estimated Gas Usage: 883 - 1168
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.358503
Transaction Length: 2
Severity: Low
Contract: BasicToken
Function name: transfer(address,uint256)
PC address: 881
Estimated Gas Usage: 883 - 1168
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.116902
Transaction Length: 1
Severity: Low
Contract: StandardToken
Function name: transfer(address,uint256)
PC address: 3802
Estimated Gas Usage: 883 - 1168
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:51.123305
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 3802
Estimated Gas Usage: 1530 - 2195
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.954979
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 3820
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:55.060554
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 3833
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:33

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.062791
Transaction Length: 1
Severity: Low
Contract: BurnableToken
Function name: transfer(address,uint256)
PC address: 4215
Estimated Gas Usage: 905 - 1190
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:56.443303
Transaction Length: 2
Severity: Low
Contract: BurnableToken
Function name: transferFrom(address,address,uint256)
PC address: 4215
Estimated Gas Usage: 1530 - 2195
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.618566
Transaction Length: 2
Severity: High
Contract: BurnableToken
Function name: increaseApproval(address,uint256)
PC address: 4233
Estimated Gas Usage: 980 - 1455
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:00.355278
Transaction Length: 2
Severity: Low
Contract: BurnableToken
Function name: increaseApproval(address,uint256)
PC address: 4246
Estimated Gas Usage: 990 - 1465
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:33

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.169790
Transaction Length: 1
Severity: Low
Contract: VINDAX
Function name: transfer(address,uint256)
PC address: 5292
Estimated Gas Usage: 883 - 1168
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:56.346210
Transaction Length: 2
Severity: Low
Contract: VINDAX
Function name: transferFrom(address,address,uint256)
PC address: 5292
Estimated Gas Usage: 1508 - 2173
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:27

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.497725
Transaction Length: 2
Severity: High
Contract: VINDAX
Function name: increaseApproval(address,uint256)
PC address: 5310
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:32

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:00.355450
Transaction Length: 2
Severity: Low
Contract: VINDAX
Function name: increaseApproval(address,uint256)
PC address: 5323
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop2/0x60672eE9FF7e5B0005c7ceC164443B81D6006801.sol:33

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x3261d9408604cc8607b687980d40135afa26ffed.sol
Total states:1458
5.090984
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040141
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x3261d9408604cc8607b687980d40135afa26ffed.sol:16

dity ^0.6.0; */

interface IController {
  

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.112055
Transaction Length: 0
Severity: High
Contract: PickleJar
Function name: constructor
PC address: 244
Estimated Gas Usage: 6854 - 64282
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x3261d9408604cc8607b687980d40135afa26ffed.sol:9

flattened sourc

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x73433c585c1dcc3d0c866cCF880F70E7B9735C4f.sol
Total states:6625
12.021056
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.800126
Transaction Length: 1
Severity: High
Contract: LPTokenWrapper
Function name: stake(uint256)
PC address: 1964
Estimated Gas Usage: 402 - 497
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x73433c585c1dcc3d0c866cCF880F70E7B9735C4f.sol:158

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0x12472B7349261Aae97d20B32d34BBB212C4C013a.sol
Total states:1576
2.702141
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039125
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0x12472B7349261Aae97d20B32d34BBB212C4C013a.sol:13

g the
 * sender of the transaction and its 

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop2/0xEDbd19C5812a549cC0119c1Eb6e72BD0CC09225b.sol
Total states:88186
155.078275
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.209673
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 1815
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xEDbd19C5812a549cC0119c1Eb6e72BD0CC09225b.sol:46

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:56.994889
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2036
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xEDbd19C5812a549cC0119c1Eb6e72BD0CC09225b.sol:48

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.398734
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2113
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xEDbd19C5812a549cC0119c1Eb6e72BD0CC09225b.sol:49

balances[_to]+=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:08.718547
Transaction Length: 2
Severity: High
Contract: VGSToken
Function name: transferFrom(address,address,uint256)
PC address: 2176
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xEDbd19C5812a549cC0119c1Eb6e72BD0CC09225b.sol:46

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:03.804047
Transaction Length: 1
Severity: High
Contract: VGSToken
Function name: transferFrom(address,address,uint256)
PC address: 2397
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xEDbd19C5812a549cC0119c1Eb6e72BD0CC09225b.sol:48

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.807366
Transaction Length: 1
Severity: High
Contract: VGSToken
Function name: transferFrom(address,address,uint256)
PC address: 2474
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop2/0xEDbd19C5812a549cC0119c1Eb6e72BD0CC09225b.sol:49

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x774b5b07ceff197ede1e5fcc9c793656964a1707.sol
Total states:23078
7810.642517
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.016483
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x774b5b07ceff197ede1e5fcc9c793656964a1707.sol:135

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:29.499517
Transaction Length: 2
Severity: High
Contract: EggSwap
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x774b5b07ceff197ede1e5fcc9c793656964a1707.sol:135

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol
Total states:32163
199.637891
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.746619
Transaction Length: 1
Severity: Low
Contract: BasicToken
Function name: transfer(address,uint256)
PC address: 937
Estimated Gas Usage: 928 - 1213
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:26

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.196787
Transaction Length: 2
Severity: Low
Contract: BasicToken
Function name: transfer(address,uint256)
PC address: 937
Estimated Gas Usage: 928 - 1213
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:26

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.734469
Transaction Length: 1
Severity: High
Contract: xSTAKEfinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 1369
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:3

*/

pragma solidity >=0.5 <0.7.17;


--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.823143
Transaction Length: 1
Severity: Low
Contract: StandardToken
Function name: transfer(address,uint256)
PC address: 3914
Estimated Gas Usage: 928 - 1213
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:26

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:01.527511
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 3914
Estimated Gas Usage: 1575 - 2240
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:26

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.415495
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 3932
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:31

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:05.852073
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 3945
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:32

assert(c >= a)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:22.019940
Transaction Length: 1
Severity: Medium
Contract: xSTAKEfinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 4548
Estimated Gas Usage: 8373 - 32445
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:249

spender.receiveApproval(msg.sender, _value, _extraData)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:05.699921
Transaction Length: 1
Severity: Low
Contract: xSTAKEfinance
Function name: transfer(address,uint256)
PC address: 5909
Estimated Gas Usage: 973 - 1258
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:26

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:31.536178
Transaction Length: 2
Severity: Low
Contract: xSTAKEfinance
Function name: transferFrom(address,address,uint256)
PC address: 5909
Estimated Gas Usage: 1620 - 2285
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:26

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.846889
Transaction Length: 2
Severity: High
Contract: xSTAKEfinance
Function name: increaseApproval(address,uint256)
PC address: 5927
Estimated Gas Usage: 958 - 1433
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:31

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:35.607966
Transaction Length: 2
Severity: Low
Contract: xSTAKEfinance
Function name: increaseApproval(address,uint256)
PC address: 5940
Estimated Gas Usage: 968 - 1443
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xb6aa337c9005fbf3a10edde47ddde3541adb79cb.sol:32

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x19fd9cfeae4452266b5da3f60db482c3908c5e94.sol
Total states:10175
26.064067
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039056
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x19fd9cfeae4452266b5da3f60db482c3908c5e94.sol:28

{

    /**

     * @dev Returns the amount 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.382286
Transaction Length: 2
Severity: High
Contract: ImperialBar
Function name: increaseAllowance(address,uint256)
PC address: 5436
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x19fd9cfeae4452266b5da3f60db482c3908c5e94.sol:288

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.019014
Transaction Length: 1
Severity: High
Contract: ImperialBar
Function name: leave(uint256)
PC address: 5592
Estimated Gas Usage: 2954 - 37941
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x19fd9cfeae4452266b5da3f60db482c3908c5e94.sol:398

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x2881194022e11c5073703113f1fc94cf6a69a4cc.sol
Total states:3404
5.695067
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x9d23ecca7473d02d64b703bfcd63bd1aea0b48ac.sol
Total states:3707
6.523818
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.240350
Transaction Length: 1
Severity: Medium
Contract: NodeRunnersLiquidity
Function name: lockedLiquidity()
PC address: 1056
Estimated Gas Usage: 4608 - 74768
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1801
Offset: 3813
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x9d23ecca7473d02d64b703bfcd63bd1aea0b48ac.sol:461

function lockedLiquidity() public view returns (uint256) {
        return burnableLiquidity().add(burnedLiquidity());
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:03.860709
Transaction Length: 1
Severity: Medium
Contract: NodeRunnersLiquidity
Function name: burnLiquidity()
PC address: 1181
Estimated Gas Usage: 5305 - 75816
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5559
Offset: 5910
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x9d23ecca7473d02d64b703bfcd63bd1aea0b48ac.sol:419

function burnLiquidity() external {
        uint256 balance = IERC20(_uniswapV2Pair).balanceOf(address(this));
        require(balance != 0, "NodeRunnersSave::burnLiquidity: burn amount cannot be 0");
        IERC20(_uniswapV2Pair).transfer(address(0), balance);
        emit BurnLiquidity(balance);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.783586
Transaction Length: 1
Severity: Low
Contract: NodeRunnersLiquidity
Function name: burnLiquidity()
PC address: 5910
Estimated Gas Usage: 3677 - 39465
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d23ecca7473d02d64b703bfcd63bd1aea0b48ac.sol:422

IERC20(_uniswapV2Pair).transfer(address(0), balance)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.472693
Transaction Length: 1
Severity: Low
Contract: NodeRunnersLiquidity
Function name: rewardLiquidityProviders()
PC address: 6203
Estimated Gas Usage: 1005 - 1476
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d23ecca7473d02d64b703bfcd63bd1aea0b48ac.sol:414

KP3R.isKeeper(msg.sender)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.807811
Transaction Length: 1
Severity: High
Contract: NodeRunnersLiquidity
Function name: burnedSupply()
PC address: 10083
Estimated Gas Usage: 4532 - 74316
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d23ecca7473d02d64b703bfcd63bd1aea0b48ac.sol:86

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae.sol
Total states:2684
2.001567
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x376ff6e58716669c7db5580d5303ca5f03302566.sol
Total states:12103
266.197987
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.335448
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x376ff6e58716669c7db5580d5303ca5f03302566.sol:70

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.447208
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x376ff6e58716669c7db5580d5303ca5f03302566.sol:50

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.506754
Transaction Length: 1
Severity: High
Contract: YearnCoinBarterFinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 1483
Estimated Gas Usage: 400 - 495
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x376ff6e58716669c7db5580d5303ca5f03302566.sol:3



*/



//pragma solidity ^0.4.26;


--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:35.614629
Transaction Length: 1
Severity: Medium
Contract: YearnCoinBarterFinance
Function name: approveAndCall(address,uint256,bytes)
PC address: 4325
Estimated Gas Usage: 8823 - 34729
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x376ff6e58716669c7db5580d5303ca5f03302566.sol:410

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:37.811364
Transaction Length: 1
Severity: High
Contract: YearnCoinBarterFinance
Function name: safeMul(uint256,uint256)
PC address: 4362
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x376ff6e58716669c7db5580d5303ca5f03302566.sol:70

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:30.028135
Transaction Length: 1
Severity: High
Contract: YearnCoinBarterFinance
Function name: safeAdd(uint256,uint256)
PC address: 4546
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x376ff6e58716669c7db5580d5303ca5f03302566.sol:50

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x5f7f20302c8ef418fa117ecb842fc291f8140abf.sol
Total states:481
4.170489
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x457c1c1E9CeE3F6DE3D63b40B4Ae071B5b5e7Ca0.sol
Total states:850
4.350432
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.001668
Transaction Length: 1
Severity: Low
Contract: TokenTimelock
Function name: release()
PC address: 1196
Estimated Gas Usage: 5049 - 42716
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x457c1c1E9CeE3F6DE3D63b40B4Ae071B5b5e7Ca0.sol:155

address(token).call(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x710936500ac59e8551331871cbad3d33d5e0d909.sol
Total states:0
0.022568
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol
Total states:46840
106.635708
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.048150
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.923709
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.827545
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.954075
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.928050
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.015636
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.980726
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.136009
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.396149
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.300543
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.089136
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.235454
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.005774
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.350574
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.762657
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.917275
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.428014
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.547709
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.950049
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x45b5fa7f41bc09feaa9a815059e29e29a86e6fde.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x9240c2d6e42db74a5a0553b83d21298304eecb9a.sol
Total states:3677
205.740637
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xfa8411cf1ccb93df20707ee3bbc051ce9b3171c5.sol
Total states:1572
5.147904
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.378637
Transaction Length: 1
Severity: Low
Contract: SCARCEsale
Function name: fallback
PC address: 1064
Estimated Gas Usage: 726 - 1151
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0xfa8411cf1ccb93df20707ee3bbc051ce9b3171c5.sol:71

assert(isActive())

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x1E8877165e836eD0Ca54f00f5b5BeA5EA90546B9.sol
Total states:3662
5.313915
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.198829
Transaction Length: 1
Severity: Low
Contract: AtomicSwap
Function name: cancelSwapIntent(uint256)
PC address: 6017
Estimated Gas Usage: 922 - 1207
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x1E8877165e836eD0Ca54f00f5b5BeA5EA90546B9.sol:559

swapList[msg.sender][_swapId]

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x437f5aaf195c97a01f85e672bb8e371484d96c57.sol
Total states:1372
52.5319
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x2d125b6f2917034c9df199b40a3c2ef4a5cd286f.sol
Total states:2115
6.096349
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x25A6bef431377C14Ef3A0CeA1CC85657d6b91bfb.sol
Total states:5304
6.099669
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x944be8d65e5caab1b2c4fb064ba693bc74a83ee5.sol
Total states:18192
44.540334
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.277093
Transaction Length: 2
Severity: High
Contract: linear
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x944be8d65e5caab1b2c4fb064ba693bc74a83ee5.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:34.074563
Transaction Length: 2
Severity: High
Contract: linear
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x944be8d65e5caab1b2c4fb064ba693bc74a83ee5.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xdb7bb52ac3f9e2f6153a3f9dcdd4d67f9f836034.sol
Total states:20263
47.55378
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.355798
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 1805
Estimated Gas Usage: 2118 - 3163
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xdb7bb52ac3f9e2f6153a3f9dcdd4d67f9f836034.sol:49

balances[_to] + _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:38.030015
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 1936
Estimated Gas Usage: 7718 - 29143
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xdb7bb52ac3f9e2f6153a3f9dcdd4d67f9f836034.sol:50

balances[_from] - _value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xab04c1c74ba5331f8c9d9328b8e88e8b5a60f1c9.sol
Total states:76081
155.749286
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:57.230277
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xab04c1c74ba5331f8c9d9328b8e88e8b5a60f1c9.sol:58

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:58.745521
Transaction Length: 2
Severity: High
Contract: YFUEL
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xab04c1c74ba5331f8c9d9328b8e88e8b5a60f1c9.sol:58

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:01.062523
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xab04c1c74ba5331f8c9d9328b8e88e8b5a60f1c9.sol:60

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:07.356693
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xab04c1c74ba5331f8c9d9328b8e88e8b5a60f1c9.sol:61

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:01:02.429758
Transaction Length: 2
Severity: High
Contract: YFUEL
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xab04c1c74ba5331f8c9d9328b8e88e8b5a60f1c9.sol:60

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:07.350944
Transaction Length: 2
Severity: High
Contract: YFUEL
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xab04c1c74ba5331f8c9d9328b8e88e8b5a60f1c9.sol:61

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol
Total states:46840
105.685544
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047314
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.939787
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.963647
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.964113
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.954484
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.978101
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.998836
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.148747
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.048452
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.122808
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.169195
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.261377
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.012115
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.478107
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.771463
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.950777
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.894793
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.038350
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.057602
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x8ae1525e1fc6b4722c7982c47823500bf0f85ec6.sol
Total states:18192
43.994835
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.231793
Transaction Length: 2
Severity: High
Contract: YFXRP
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x8ae1525e1fc6b4722c7982c47823500bf0f85ec6.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:34.842378
Transaction Length: 2
Severity: High
Contract: YFXRP
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x8ae1525e1fc6b4722c7982c47823500bf0f85ec6.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x8feeb9f36f484b312a30cb5486aa99976dab63b0.sol
Total states:2784
4.081056
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040548
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x8feeb9f36f484b312a30cb5486aa99976dab63b0.sol:10

ailable
 * via msg.sender and msg.data, the

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xA1c8CAdD35f7A0E36Aa933bBF4C06d4b83915eb6.sol
Total states:1239
0.664165
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x6aca6de211ee17d38d05c7af583e43f9b1ec4c07.sol
Total states:76315
143.806704
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:52.219876
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 1815
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6aca6de211ee17d38d05c7af583e43f9b1ec4c07.sol:45

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:56.036318
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2036
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6aca6de211ee17d38d05c7af583e43f9b1ec4c07.sol:47

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:02.473192
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: transferFrom(address,address,uint256)
PC address: 2113
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6aca6de211ee17d38d05c7af583e43f9b1ec4c07.sol:48

balances[_to]+=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:58.162393
Transaction Length: 2
Severity: High
Contract: UPLOADEA
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6aca6de211ee17d38d05c7af583e43f9b1ec4c07.sol:45

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:04.306889
Transaction Length: 1
Severity: High
Contract: UPLOADEA
Function name: transferFrom(address,address,uint256)
PC address: 2357
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6aca6de211ee17d38d05c7af583e43f9b1ec4c07.sol:47

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.612904
Transaction Length: 1
Severity: High
Contract: UPLOADEA
Function name: transferFrom(address,address,uint256)
PC address: 2434
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6aca6de211ee17d38d05c7af583e43f9b1ec4c07.sol:48

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x6f1d17cc1bcc257eb6ed40e427ef596e9d326928.sol
Total states:174
4.183127
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.064247
Transaction Length: 0
Severity: High
Contract: CommunityVesting
Function name: constructor
PC address: 588
Estimated Gas Usage: 7479 - 31024
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6f1d17cc1bcc257eb6ed40e427ef596e9d326928.sol:255

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.094148
Transaction Length: 0
Severity: High
Contract: TokenVesting
Function name: constructor
PC address: 606
Estimated Gas Usage: 7555 - 31379
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6f1d17cc1bcc257eb6ed40e427ef596e9d326928.sol:255

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x77b41df62498f6a3593f5fc7adbec250746f7969.sol
Total states:18192
41.104862
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.720762
Transaction Length: 2
Severity: High
Contract: unifi
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x77b41df62498f6a3593f5fc7adbec250746f7969.sol:64

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.065117
Transaction Length: 2
Severity: High
Contract: unifi
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x77b41df62498f6a3593f5fc7adbec250746f7969.sol:65

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol
Total states:2617
7.516131
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.821793
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 4385
Estimated Gas Usage: 1631 - 2622
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:281

IERC20(ERA).transferFrom(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.531775
Transaction Length: 1
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 4798
Estimated Gas Usage: 1596 - 2587
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:252

IERC20(ERA).transferFrom(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.777510
Transaction Length: 1
Severity: High
Contract: Stake
Function name: ADDFUNDS(uint256)
PC address: 6127
Estimated Gas Usage: 3393 - 38570
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84af7604ffd7800292bb657055ac20795aa7a1c1.sol:96

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xBE81ed75f7B9bDEc5D17d23c4609986B73B382b8.sol
Total states:374
0.13594
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol
Total states:23078
7797.889655
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.819580
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol:135

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:42.541411
Transaction Length: 2
Severity: High
Contract: MelonSwap
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xaf06f584023fe057d5c9308caf8b801a681d78e1.sol:135

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x4d9a12c77b0518e3cb3287088c2d0be5078145f8.sol
Total states:2015
474.956474
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.022358
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 391
Estimated Gas Usage: 378 - 473
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x4d9a12c77b0518e3cb3287088c2d0be5078145f8.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.148707
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: executeTransaction(address,uint256,string,bytes,uint256)
PC address: 542
Estimated Gas Usage: 729 - 3506
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x4d9a12c77b0518e3cb3287088c2d0be5078145f8.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:04.673869
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1025
Estimated Gas Usage: 401 - 496
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x4d9a12c77b0518e3cb3287088c2d0be5078145f8.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:20.278222
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: queueTransaction(address,uint256,string,bytes,uint256)
PC address: 1176
Estimated Gas Usage: 743 - 3520
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x4d9a12c77b0518e3cb3287088c2d0be5078145f8.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:17.014516
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1529
Estimated Gas Usage: 445 - 540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x4d9a12c77b0518e3cb3287088c2d0be5078145f8.sol:3

*/

/**
 *Submitted for verificatio

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:34.814290
Transaction Length: 1
Severity: High
Contract: Timelock
Function name: cancelTransaction(address,uint256,string,bytes,uint256)
PC address: 1680
Estimated Gas Usage: 787 - 3564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x4d9a12c77b0518e3cb3287088c2d0be5078145f8.sol:3

*/

/**
 *Submitted for verificatio

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x273db7238b46fdfdd28f553f4ae7f7da736a8d92.sol
Total states:7094
38.893566
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:20.050331
Transaction Length: 2
Severity: High
Contract: kyeToken
Function name: increaseAllowance(address,uint256)
PC address: 5368
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x273db7238b46fdfdd28f553f4ae7f7da736a8d92.sol:10

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:10.852060
Transaction Length: 1
Severity: Low
Contract: kyeToken
Function name: receive()
PC address: 6638
Estimated Gas Usage: 3211 - 38339
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x273db7238b46fdfdd28f553f4ae7f7da736a8d92.sol:87

Router(routerAddress()).specialRouterCall.value(address(this).balance)(sender, recipient, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:19.312798
Transaction Length: 2
Severity: Low
Contract: kyeToken
Function name: transferFrom(address,address,uint256)
PC address: 6638
Estimated Gas Usage: 3488 - 38616
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x273db7238b46fdfdd28f553f4ae7f7da736a8d92.sol:87

Router(routerAddress()).specialRouterCall.value(address(this).balance)(sender, recipient, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x65d3f731410c60fb1477a7e34459e470ed2a9a6c.sol
Total states:4189
97.714868
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:34.924534
Transaction Length: 2
Severity: Low
Contract: OriginOfAmericaCoin
Function name: transferFrom(address,address,uint256)
PC address: 3080
Estimated Gas Usage: 7835 - 29260
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x65d3f731410c60fb1477a7e34459e470ed2a9a6c.sol:74

assert(b <= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol
Total states:18307
98.805327
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.585030
Transaction Length: 2
Severity: High
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2327
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:19.388573
Transaction Length: 2
Severity: Low
Contract: StandardToken
Function name: increaseApproval(address,uint256)
PC address: 2340
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:94

assert(c >= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.379969
Transaction Length: 2
Severity: High
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2798
Estimated Gas Usage: 933 - 1408
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:20.010643
Transaction Length: 2
Severity: Low
Contract: MintableToken
Function name: increaseApproval(address,uint256)
PC address: 2811
Estimated Gas Usage: 943 - 1418
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:94

assert(c >= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:04.142625
Transaction Length: 1
Severity: Low
Contract: ChfmToken
Function name: transfer(address,uint256)
PC address: 4326
Estimated Gas Usage: 929 - 1214
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:76

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:42.695159
Transaction Length: 2
Severity: Low
Contract: ChfmToken
Function name: transferFrom(address,address,uint256)
PC address: 4326
Estimated Gas Usage: 1579 - 2244
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:76

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.765200
Transaction Length: 2
Severity: High
Contract: ChfmToken
Function name: increaseApproval(address,uint256)
PC address: 4886
Estimated Gas Usage: 977 - 1452
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:92

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:47.223236
Transaction Length: 2
Severity: Low
Contract: ChfmToken
Function name: increaseApproval(address,uint256)
PC address: 4899
Estimated Gas Usage: 987 - 1462
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x7f2d8dc79b7712ec6549fb975a70d1c306a00187.sol:94

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x590965054c845570628d013439ea44bda3a4cb9c.sol
Total states:4178
138.219049
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:14.627872
Transaction Length: 2
Severity: Low
Contract: ERC20Basic
Function name: transferFrom(address,address,uint256)
PC address: 3025
Estimated Gas Usage: 7835 - 29260
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x590965054c845570628d013439ea44bda3a4cb9c.sol:74

assert(b <= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x7a6d7959861ece56f93335cfd6fe0c5c2c961b6e.sol
Total states:3548
14.255437
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x3d04e096effb64aaa3d1eaf0bb290218e8ca7f23.sol
Total states:1253
2.14724
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.040024
Transaction Length: 0
Severity: High
Contract: Findora
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3d04e096effb64aaa3d1eaf0bb290218e8ca7f23.sol:13

  returns (bytes memory) {
        this; //

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x8b9FAd18f7705bEf1D6cEb9a1291B27290950377.sol
Total states:3099
5.61012
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x351bee7c64c63dd26d59e5f88f2ead950ce1788a.sol
Total states:1714
1.921312
==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:00.854203
Transaction Length: 1
Severity: Medium
Contract: xETHGRebaser
Function name: rebase()
PC address: 2591
Estimated Gas Usage: 162 - 257
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop6/0x351bee7c64c63dd26d59e5f88f2ead950ce1788a.sol:308

tx.origin

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xd857605267f2784C281bac94E34b1534F9e0fD4c.sol
Total states:287
0.406689
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x0724e264f6834d3283f4cfb58b0e2f86f6f29e11.sol
Total states:1599
2.10779
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.039749
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x0724e264f6834d3283f4cfb58b0e2f86f6f29e11.sol:12

data. While these are generally available
 

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol
Total states:6504
5518.416577
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:15:41.981861
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 294
Estimated Gas Usage: 2021 - 2727
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:61

tokenContract.decimals()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:26:17.284814
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 294
Estimated Gas Usage: 2021 - 2727
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:61

tokenContract.decimals()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:17:48.551921
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 682
Estimated Gas Usage: 10496 - 67151
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:66

tokenContract.transfer(msg.sender, numberOfTokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:29:11.173008
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 682
Estimated Gas Usage: 10496 - 67151
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:66

tokenContract.transfer(msg.sender, numberOfTokens)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:03:10.957963
Transaction Length: 1
Severity: Medium
Contract: WDXSale
Function name: fallback()
PC address: 861
Estimated Gas Usage: 12400 - 137427
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 294
Offset: 682
Offset: 835
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:14

contract WDXSale {
    IERC20Token public tokenContract;  // the token being sold
    uint256 public price;              // the price, in wei, per token
    address owner;

    uint256 public tokensSold;

    event Sold(address buyer, uint256 amount);

    constructor(IERC20Token _tokenContract, uint256 _price) public {
        owner = msg.sender;
        tokenContract = _tokenContract;
        price = _price;
    }

    // Guards against integer overflows
    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        } else {
            uint256 c = a * b;
            assert(c / a == b);
            return c;
        }
    }
    
    function safeDivision(uint256 a, uint256 b) internal pure returns(uint256) {
        assert(b > 0);
        uint256 c = a / b;
        assert(a == b * c + a % b);
        return c;
    }

    function buyTokens(uint256 numberOfTokens) public payable {
        require(msg.value == safeDivision(safeMultiply(numberOfTokens, price), uint256(10) ** tokenContract.decimals()));
        require(tokenContract.balanceOf(address(this)) >= numberOfTokens);


        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    function() external payable {
        uint256 numberOfTokens = safeMultiply(safeDivision(msg.value, price), uint256(10) ** tokenContract.decimals());

        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
        
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    
    function endSale() public {
        require(msg.sender == owner);

        // Send unsold tokens to the owner.
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        require(tokenContract.transfer(recipient, tokenContract.balanceOf(address(this))));

        recipient.transfer(address(this).balance);
    }
    
    function getEther() public {
        require(msg.sender == owner);
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    function updateWDXPrice(uint256 _price) public {
        require(msg.sender == owner);
        price = _price;
    }
}

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:40:57.402667
Transaction Length: 2
Severity: Medium
Contract: WDXSale
Function name: fallback()
PC address: 861
Estimated Gas Usage: 12400 - 137427
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 294
Offset: 682
Offset: 835
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:14

contract WDXSale {
    IERC20Token public tokenContract;  // the token being sold
    uint256 public price;              // the price, in wei, per token
    address owner;

    uint256 public tokensSold;

    event Sold(address buyer, uint256 amount);

    constructor(IERC20Token _tokenContract, uint256 _price) public {
        owner = msg.sender;
        tokenContract = _tokenContract;
        price = _price;
    }

    // Guards against integer overflows
    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        } else {
            uint256 c = a * b;
            assert(c / a == b);
            return c;
        }
    }
    
    function safeDivision(uint256 a, uint256 b) internal pure returns(uint256) {
        assert(b > 0);
        uint256 c = a / b;
        assert(a == b * c + a % b);
        return c;
    }

    function buyTokens(uint256 numberOfTokens) public payable {
        require(msg.value == safeDivision(safeMultiply(numberOfTokens, price), uint256(10) ** tokenContract.decimals()));
        require(tokenContract.balanceOf(address(this)) >= numberOfTokens);


        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    function() external payable {
        uint256 numberOfTokens = safeMultiply(safeDivision(msg.value, price), uint256(10) ** tokenContract.decimals());

        emit Sold(msg.sender, numberOfTokens);
        tokensSold += numberOfTokens;

        tokenContract.transfer(msg.sender, numberOfTokens);
        
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    
    function endSale() public {
        require(msg.sender == owner);

        // Send unsold tokens to the owner.
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        require(tokenContract.transfer(recipient, tokenContract.balanceOf(address(this))));

        recipient.transfer(address(this).balance);
    }
    
    function getEther() public {
        require(msg.sender == owner);
        address payable recipient = address(0x69361E320344FF2FD782F2dc6ba52fb436b74CaF);
        recipient.transfer(address(this).balance);
    }
    
    function updateWDXPrice(uint256 _price) public {
        require(msg.sender == owner);
        price = _price;
    }
}

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:19:29.856509
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: fallback()
PC address: 1198
Estimated Gas Usage: 635 - 730
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:41

assert(b > 0)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:13:23.860054
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1198
Estimated Gas Usage: 2796 - 38018
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:41

assert(b > 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:51.883104
Transaction Length: 1
Severity: High
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1275
Estimated Gas Usage: 692 - 787
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:34

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:06:25.540927
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1298
Estimated Gas Usage: 730 - 825
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:35

assert(c / a == b)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:12:24.663573
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1298
Estimated Gas Usage: 730 - 825
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:35

assert(c / a == b)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:06:27.503702
Transaction Length: 1
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1461
Estimated Gas Usage: 1930 - 2636
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:48

tokenContract.decimals()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:12:53.988364
Transaction Length: 2
Severity: Low
Contract: WDXSale
Function name: buyTokens(uint256)
PC address: 1461
Estimated Gas Usage: 1930 - 2636
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x9d2040c6032c3c0a3947a0e5fd5d03ddee9a5474.sol:48

tokenContract.decimals()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x95095c92f8782c4b6d99ac1bf58dc23eb0a300a0.sol
Total states:19694
45.534735
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.741252
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95095c92f8782c4b6d99ac1bf58dc23eb0a300a0.sol:160

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.169192
Transaction Length: 2
Severity: High
Contract: YFVault
Function name: increaseAllowance(address,uint256)
PC address: 10530
Estimated Gas Usage: 1060 - 1535
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95095c92f8782c4b6d99ac1bf58dc23eb0a300a0.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x6168F02A691Afe7caba520d4df18665e9c780CC6.sol
Total states:765
1.013911
==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:00.031431
Transaction Length: 0
Severity: High
Contract: ENFORCEDTRIBUTE
Function name: constructor
PC address: 28
Estimated Gas Usage: 10041 - 50136
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6168F02A691Afe7caba520d4df18665e9c780CC6.sol:60

now-1

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.352563
Transaction Length: 1
Severity: Medium
Contract: ENFORCEDTRIBUTE2
Function name: swap()
PC address: 97
Estimated Gas Usage: 7378 - 112809
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 628
Offset: 818
Offset: 1015
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x6168F02A691Afe7caba520d4df18665e9c780CC6.sol:35

function swap() public{
    require(msg.sender==address(s1),"transaction must originate with swap 1 contract");
    token.transfer(address(s1),min(token.balanceOf(address(this)),s1.toSend()));
  }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x146921eF7A94C50b96cb53Eb9C2CA4EB25D4Bfa8.sol
Total states:1059
14.617415
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.014920
Transaction Length: 1
Severity: High
Contract: DSPauseProxy
Function name: exec(address,bytes)
PC address: 277
Estimated Gas Usage: 351 - 446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x146921eF7A94C50b96cb53Eb9C2CA4EB25D4Bfa8.sol:3

*/

// hevm: flattened sources of l

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xa72079f5619c457994700d95c92096010566bf0b.sol
Total states:23078
7824.122885
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.432961
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xa72079f5619c457994700d95c92096010566bf0b.sol:135

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:51:49.480970
Transaction Length: 2
Severity: High
Contract: PepperSwap
Function name: increaseAllowance(address,uint256)
PC address: 7462
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xa72079f5619c457994700d95c92096010566bf0b.sol:135

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x45d47ca34b1e234ff4f37ca421163f48f5bc3908.sol
Total states:10360
124.220315
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.770738
Transaction Length: 1
Severity: High
Contract: YFUGovernance
Function name: propose(address,string)
PC address: 3296
Estimated Gas Usage: 441 - 536
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x45d47ca34b1e234ff4f37ca421163f48f5bc3908.sol:3

*/

/*
   ____            __   __  

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xddd90302fd78a503f3745189bb10c0b0263804e7.sol
Total states:540
0.778735
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xc250e583356c552c05fc3b864265a58f14054dc9.sol
Total states:2655
4.44255
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xbd301be09eb78df47019aa833d29edc5d815d838.sol
Total states:18855
47.33792
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.905412
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbd301be09eb78df47019aa833d29edc5d815d838.sol:119

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.927417
Transaction Length: 2
Severity: High
Contract: YFUEL
Function name: increaseAllowance(address,uint256)
PC address: 5586
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbd301be09eb78df47019aa833d29edc5d815d838.sol:119

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol
Total states:46840
109.494069
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047225
Transaction Length: 0
Severity: High
Contract: CrustTokenLocked
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:11

sg.data, they should not be accessed in suc

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.915717
Transaction Length: 0
Severity: High
Contract: CrustClaimsBase
Function name: constructor
PC address: 477
Estimated Gas Usage: 29180 - 134138
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.820434
Transaction Length: 0
Severity: High
Contract: CrustClaims
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.988309
Transaction Length: 0
Severity: High
Contract: CrustClaims18
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.928115
Transaction Length: 0
Severity: High
Contract: CrustClaims24
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:658

cap * (10 ** 18)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.993189
Transaction Length: 0
Severity: High
Contract: CrustClaims24Delayed
Function name: constructor
PC address: 480
Estimated Gas Usage: 29189 - 134147
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:658

cap * (10 ** 18)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.379232
Transaction Length: 1
Severity: Medium
Contract: CrustClaims
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.454320
Transaction Length: 1
Severity: Medium
Contract: CrustClaims18
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.092214
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.183897
Transaction Length: 1
Severity: Medium
Contract: CrustClaims24Delayed
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.215275
Transaction Length: 1
Severity: Medium
Contract: CrustClaimsBase
Function name: claimAll(bytes32)
PC address: 571
Estimated Gas Usage: 5766 - 76186
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2152
Offset: 5789
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:755

function claimAll(bytes32 pubKey) public {
    uint256 amount = _token.getBalance(msg.sender);
    _claim(msg.sender, amount, pubKey);
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.626894
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.209524
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:133

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.747290
Transaction Length: 2
Severity: High
Contract: CrustToken
Function name: increaseAllowance(address,uint256)
PC address: 5129
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:133

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.213062
Transaction Length: 1
Severity: Low
Contract: CrustClaims
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.322457
Transaction Length: 1
Severity: Low
Contract: CrustClaims18
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.990835
Transaction Length: 1
Severity: Low
Contract: CrustClaims24
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.152408
Transaction Length: 1
Severity: Low
Contract: CrustClaims24Delayed
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:764

_token.burn(account, amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.174014
Transaction Length: 1
Severity: Low
Contract: CrustClaimsBase
Function name: claim(uint256,bytes32)
PC address: 5789
Estimated Gas Usage: 1753 - 2649
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x586da73D56CdFA859E52aD2823b1eF5594aED63B.sol:764

_token.burn(account, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol
Total states:1669
2.958494
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.045496
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbb19436D81aaE39b56D95bc5e659818bDE51C446.sol:10

 uint amount) external returns (bool);
    

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol
Total states:1330
147.620633
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.956885
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: canHandle(address,address,uint256,uint256,bytes)
PC address: 288
Estimated Gas Usage: 416 - 511
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol:3

*/

// File: contracts/libs/SafeMat

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.225677
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 701
Estimated Gas Usage: 480 - 575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol:3

*/

// File: contracts/libs/SafeMat

--------------------

==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:03.412993
Transaction Length: 1
Severity: Medium
Contract: OneinchHandler
Function name: receive()
PC address: 812
Estimated Gas Usage: 138 - 233
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol:390

tx.origin

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.063043
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1164
Estimated Gas Usage: 2623 - 37280
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol:5

ontracts/libs/SafeMat

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:37.096389
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1166
Estimated Gas Usage: 2623 - 37280
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol:3

*/

// File: contracts/libs/SafeMath

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:32.688202
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1312
Estimated Gas Usage: 1724 - 4501
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol:5

ontracts/libs/SafeMat

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:55.677849
Transaction Length: 1
Severity: High
Contract: OneinchHandler
Function name: handle(address,address,uint256,uint256,bytes)
PC address: 1314
Estimated Gas Usage: 1724 - 4501
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xccd281635cfa8980970d8f38d08725a4ccb44756.sol:3

*/

// File: contracts/libs/SafeMath

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x7e25E9973E37D6B8d2B150053eb53B282ec7f178.sol
Total states:3493
11.406186
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x2ee3c3d83a40c1d45b315567ffe1534e21a843d7.sol
Total states:3399
5.746637
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xaf2a2a37b3f0cb585852cecb9ca17a1c95f4621f.sol
Total states:9009
18.107351
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.640070
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xaf2a2a37b3f0cb585852cecb9ca17a1c95f4621f.sol:133

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x62A3bcF9E0163B34ffE925C0a20515a558e35dB5.sol
Total states:5894
12.724799
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.928948
Transaction Length: 1
Severity: High
Contract: Staker
Function name: price()
PC address: 13889
Estimated Gas Usage: 6201 - 110737
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x62A3bcF9E0163B34ffE925C0a20515a558e35dB5.sol:24

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x4393e22cbce46a0919d52bbc798884777554a7b8.sol
Total states:4633
8.252575
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.041852
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x4393e22cbce46a0919d52bbc798884777554a7b8.sol:17

dentifier: MIT

//pragma solidity ^0.6.0;
p

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x024b70A301178f4522494b67fC1bcCE57D4366df.sol
Total states:1439
3.264911
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.340127
Transaction Length: 1
Severity: Low
Contract: PolicyFactory
Function name: create(address)
PC address: 2551
Estimated Gas Usage: 6993 - 77925
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x024b70A301178f4522494b67fC1bcCE57D4366df.sol:312

config().setPolicy(_newPolicyAddress)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x6c2b2aa51180a9c08f11bc0827001acb217b0cdf.sol
Total states:1065
2.582601
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xf50510bc5abce4a6733b85237d84e2c4f1988e09.sol
Total states:3488
7.202303
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x75d98EfA9B4F38661cB3ade7A7b2840BB2954806.sol
Total states:6207
11.421782
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.443696
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 381
Estimated Gas Usage: 287 - 382
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x75d98EfA9B4F38661cB3ade7A7b2840BB2954806.sol:42

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.184459
Transaction Length: 1
Severity: High
Contract: Gifatoken
Function name: safeAdd(uint256,uint256)
PC address: 4260
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x75d98EfA9B4F38661cB3ade7A7b2840BB2954806.sol:42

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xF7cCD6fA9ef5a9dbf7A82422bB19c82A8746cDad.sol
Total states:150
1.908006
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x2927071efbc6bdc21b87c27f2923689cec562fd7.sol
Total states:8897
25.209227
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.124122
Transaction Length: 0
Severity: High
Contract: eVault
Function name: constructor
PC address: 234
Estimated Gas Usage: 6824 - 64159
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x2927071efbc6bdc21b87c27f2923689cec562fd7.sol:5

ty >=0.5 <0.7.1

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.863719
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x2927071efbc6bdc21b87c27f2923689cec562fd7.sol:160

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xba4020186f15b570f82eeb66230c9d3df23f7b78.sol
Total states:60
0.750251
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x6d0f5149c502faf215c89ab306ec3e50b15e2892.sol
Total states:5259
51.5487
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.480219
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeMul(uint256,uint256)
PC address: 483
Estimated Gas Usage: 305 - 400
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6d0f5149c502faf215c89ab306ec3e50b15e2892.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.618805
Transaction Length: 1
Severity: High
Contract: SafeMath
Function name: safeAdd(uint256,uint256)
PC address: 532
Estimated Gas Usage: 331 - 426
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6d0f5149c502faf215c89ab306ec3e50b15e2892.sol:28

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.875286
Transaction Length: 1
Severity: High
Contract: PortionToken
Function name: safeMul(uint256,uint256)
PC address: 3325
Estimated Gas Usage: 327 - 422
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6d0f5149c502faf215c89ab306ec3e50b15e2892.sol:32

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.255531
Transaction Length: 1
Severity: High
Contract: PortionToken
Function name: safeAdd(uint256,uint256)
PC address: 3509
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6d0f5149c502faf215c89ab306ec3e50b15e2892.sol:28

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x539e890f31f8e3fc63d5a2f5756a785c20f5c85d.sol
Total states:8965
273.054496
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.441683
Transaction Length: 1
Severity: High
Contract: GOLDENBRIDGECOIN
Function name: approveAndCall(address,uint256,bytes)
PC address: 1372
Estimated Gas Usage: 467 - 562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x539e890f31f8e3fc63d5a2f5756a785c20f5c85d.sol:3



*/



//pragma solidity ^0.5.0;
p

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:31.477566
Transaction Length: 1
Severity: Medium
Contract: GOLDENBRIDGECOIN
Function name: approveAndCall(address,uint256,bytes)
PC address: 4762
Estimated Gas Usage: 8734 - 34264
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x539e890f31f8e3fc63d5a2f5756a785c20f5c85d.sol:418

ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xd45EBffF8D344ebf083E85fe770c425FadB273F8.sol
Total states:0
0.013695
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x95643414b1fca2f53daaf9064b5e976098ae75e9.sol
Total states:6519
489.860429
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.375494
Transaction Length: 1
Severity: High
Contract: CTT
Function name: transferFrom(address,address,uint256)
PC address: 1835
Estimated Gas Usage: 476 - 571
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95643414b1fca2f53daaf9064b5e976098ae75e9.sol:127

_value*8

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.665836
Transaction Length: 1
Severity: High
Contract: CTT
Function name: transferFrom(address,address,uint256)
PC address: 1851
Estimated Gas Usage: 476 - 571
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95643414b1fca2f53daaf9064b5e976098ae75e9.sol:128

_value+burn_token

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:06:40.003069
Transaction Length: 2
Severity: High
Contract: CTT
Function name: burnFrom(address,uint256)
PC address: 3577
Estimated Gas Usage: 7546 - 28781
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95643414b1fca2f53daaf9064b5e976098ae75e9.sol:168

allowed[_from][msg.sender] -= _value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:06:43.816632
Transaction Length: 2
Severity: High
Contract: CTT
Function name: burnFrom(address,uint256)
PC address: 3593
Estimated Gas Usage: 12979 - 54214
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95643414b1fca2f53daaf9064b5e976098ae75e9.sol:169

_totalSupply -= _value

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:48.909612
Transaction Length: 1
Severity: High
Contract: CTT
Function name: transfer(address,uint256)
PC address: 3919
Estimated Gas Usage: 442 - 537
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95643414b1fca2f53daaf9064b5e976098ae75e9.sol:103

_value*8

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:49.947322
Transaction Length: 1
Severity: High
Contract: CTT
Function name: transfer(address,uint256)
PC address: 3935
Estimated Gas Usage: 442 - 537
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x95643414b1fca2f53daaf9064b5e976098ae75e9.sol:104

_value+burn_token

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol
Total states:21575
178.558939
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.027695
Transaction Length: 0
Severity: High
Contract: ERC20
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:9

56D39296F0cbB648873a5d3;
    address consta

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.328654
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: fallback
PC address: 142
Estimated Gas Usage: 2311 - 39600
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: 0x594153a000000000000000000000000000000000000000000000000000000000
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1036

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:01.331089
Transaction Length: 1
Severity: Medium
Contract: PoolProxy
Function name: fallback
PC address: 160
Estimated Gas Usage: 3056 - 74345
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 931
Offset: 142
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1045

return(ptr, size)

--------------------

==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:01.048748
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: fallback
PC address: 264
Estimated Gas Usage: 725 - 3547
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(0,
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy),
       14_code(PoolFactoryProxy))
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:903

delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.051333
Transaction Length: 1
Severity: Low
Contract: Deposit3Tokens
Function name: period_timestamp(uint256)
PC address: 380
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:993

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.141181
Transaction Length: 1
Severity: Low
Contract: Deposit2Tokens
Function name: period_timestamp(uint256)
PC address: 393
Estimated Gas Usage: 278 - 373
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:987

uint[100000000000000000000000000000] public period_timestamp

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:50.399189
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 537
Estimated Gas Usage: 1433 - 2470
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:58

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:55.306990
Transaction Length: 1
Severity: High
Contract: Pool
Function name: getSupportAddresses(address)
PC address: 577
Estimated Gas Usage: 1583 - 2996
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:58

function getSupportAddresses(address _depositAddress) public view returns(address[] memory){
        return supportAddresses[_depositAddress];
    }

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.599696
Transaction Length: 1
Severity: Low
Contract: TokenManager
Function name: supportAddresses(address,uint256)
PC address: 613
Estimated Gas Usage: 752 - 1037
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:56

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.181565
Transaction Length: 1
Severity: Low
Contract: PoolProxy
Function name: supportAddresses(address,uint256)
PC address: 1317
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:56

mapping(address => address[]) public supportAddresses

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:03.033549
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1575
Estimated Gas Usage: 4173 - 40386
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1083

IERC20(tokenAddress).transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:09.125891
Transaction Length: 1
Severity: Medium
Contract: Pool
Function name: deposit(address,uint256)
PC address: 1891
Estimated Gas Usage: 5889 - 76759
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1086

IERC20(tokenAddress).approve(EXCHANGE_CONTRACT, amount)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.956043
Transaction Length: 1
Severity: Low
Contract: PoolFactoryProxy
Function name: supportAddresses(address,uint256)
PC address: 2114
Estimated Gas Usage: 840 - 1125
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:56

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.605370
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2259
Estimated Gas Usage: 8446 - 148446
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:4

y >=0.5 <0.7.17

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:24.540221
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 2262
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:3


pragma solidity >=0.5 <0.7.17;

 contract 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.254275
Transaction Length: 2
Severity: High
Contract: PoolToken
Function name: increaseAllowance(address,uint256)
PC address: 4840
Estimated Gas Usage: 1037 - 1512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:140

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.495064
Transaction Length: 1
Severity: Low
Contract: PoolFactory
Function name: supportAddresses(address,uint256)
PC address: 5037
Estimated Gas Usage: 796 - 1081
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:56

mapping(address => address[]) public supportAddresses

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:09.981037
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: supportAddresses(address,uint256)
PC address: 8485
Estimated Gas Usage: 818 - 1103
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:56

mapping(address => address[]) public supportAddresses

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.101535
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17754
Estimated Gas Usage: 5008 - 75599
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:4

y >=0.5 <0.7.17

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.056997
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17757
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:3


pragma solidity >=0.5 <0.7.17;

 contract 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:32.928842
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17778
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1242

IOneSplit(EXCHANGE_CONTRACT).getExpectedReturn(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, 100, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.429116
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17813
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:2


*/
pragma solidity >

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:39.415006
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17819
Estimated Gas Usage: 5128 - 75905
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:6

anager {
    


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:47.002924
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17839
Estimated Gas Usage: 5186 - 76056
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:9

3;
    address consta

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:55.813611
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 17841
Estimated Gas Usage: 5186 - 76056
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:9

56D39296F0cbB648873a5d3;
    address constan

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:36.963911
Transaction Length: 1
Severity: High
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18208
Estimated Gas Usage: 5661 - 77946
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1243

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:36.427054
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 18245
Estimated Gas Usage: 6389 - 78579
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1243

IOneSplit(EXCHANGE_CONTRACT).swap.value(msg.value)(IERC20(ETH_ADDRESS), IERC20(DAI_ADDRESS), msg.value, _amount, _distribution, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:05.368739
Transaction Length: 1
Severity: Low
Contract: Pool
Function name: deposit(address,uint256)
PC address: 19161
Estimated Gas Usage: 5923 - 76793
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x84961782f2fb4156ab475e1dcceaf06e4da92691.sol:1258

IERC20(DAI_ADDRESS).approve(_depositPool, amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xcf2a3cd5e41391f27be3332a68e177b163478ab5.sol
Total states:18192
41.391712
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.238244
Transaction Length: 2
Severity: High
Contract: softyearnv2
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xcf2a3cd5e41391f27be3332a68e177b163478ab5.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:32.286585
Transaction Length: 2
Severity: High
Contract: softyearnv2
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xcf2a3cd5e41391f27be3332a68e177b163478ab5.sol:54

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x616330e681039d0da8ee3a1b43b204ff2113c084.sol
Total states:481
3.959241
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x7E0863540d86Aef4dd768BD5f8f8a5d82a92E6D4.sol
Total states:6625
12.333786
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.841336
Transaction Length: 1
Severity: High
Contract: LPTokenWrapper
Function name: stake(uint256)
PC address: 1964
Estimated Gas Usage: 402 - 497
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x7E0863540d86Aef4dd768BD5f8f8a5d82a92E6D4.sol:158

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xd7a73b03f82b241a0aff562ae6f3d2a1d38ce5b9.sol
Total states:2150
1.699588
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xc0FbaEeb737487A5B8990515d7eB6AFb404692E7.sol
Total states:5737
13.570652
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xb48e0f69e6a3064f5498d495f77ad83e0874ab28.sol
Total states:613
3.26942
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol
Total states:19786
456.408959
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:15.446447
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 186
Estimated Gas Usage: 8339 - 180876
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 290
Offset: 687
Offset: 1095
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:116

function daiJoin_join(address apt, address urn, uint wad) public {
        // Gets DAI from the user's wallet
        DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad);
        // Approves adapter to take the DAI amount
        DaiJoinLike(apt).dai().approve(apt, wad);
        // Joins DAI into the vat
        DaiJoinLike(apt).join(urn, wad);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:01.757190
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 290
Estimated Gas Usage: 1076 - 1452
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai()

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:02:00.802236
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 439
Estimated Gas Usage: 8362 - 180899
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 3185
Offset: 3582
Offset: 3990
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:116

function daiJoin_join(address apt, address urn, uint wad) public {
        // Gets DAI from the user's wallet
        DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad);
        // Approves adapter to take the DAI amount
        DaiJoinLike(apt).dai().approve(apt, wad);
        // Joins DAI into the vat
        DaiJoinLike(apt).join(urn, wad);
    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:01:30.114433
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashGem(address,address,bytes32,uint256)
PC address: 481
Estimated Gas Usage: 5342 - 108941
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2670
Offset: 2849
Offset: 3056
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:888

function cashGem(
        address gemJoin,
        address end,
        bytes32 ilk,
        uint wad
    ) public {
        EndLike(end).cash(ilk, wad);
        // Exits token amount to the user's wallet as a token
        GemJoinLike(gemJoin).exit(msg.sender, mul(wad, EndLike(end).fix(ilk)) / RAY);
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.741209
Transaction Length: 1
Severity: Low
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 563
Estimated Gas Usage: 2792 - 37920
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:01:47.244536
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 591
Estimated Gas Usage: 8384 - 180921
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 3186
Offset: 3583
Offset: 3991
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:116

function daiJoin_join(address apt, address urn, uint wad) public {
        // Gets DAI from the user's wallet
        DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad);
        // Approves adapter to take the DAI amount
        DaiJoinLike(apt).dai().approve(apt, wad);
        // Joins DAI into the vat
        DaiJoinLike(apt).join(urn, wad);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:01.712233
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 645
Estimated Gas Usage: 1079 - 1455
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:924

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:07.668057
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 687
Estimated Gas Usage: 4327 - 73736
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:05.181877
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 808
Estimated Gas Usage: 2701 - 37544
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:926

PotLike(pot).drip()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:10.207694
Transaction Length: 1
Severity: Low
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 908
Estimated Gas Usage: 5998 - 110064
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:23.043087
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: pack(address,address,uint256)
PC address: 992
Estimated Gas Usage: 9169 - 181987
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:864

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:47.801288
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 1017
Estimated Gas Usage: 4537 - 73942
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:930

PotLike(pot).exit(pie)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:15.426425
Transaction Length: 1
Severity: Medium
Contract: Common
Function name: daiJoin_join(address,address,uint256)
PC address: 1095
Estimated Gas Usage: 7593 - 146130
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:122

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:24.050883
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 1143
Estimated Gas Usage: 6075 - 109761
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:932

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:24.780397
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 1765
Estimated Gas Usage: 1167 - 1733
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:878

EndLike(end).cash(ilk, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:52.106837
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 2156
Estimated Gas Usage: 4583 - 74182
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:881

GemJoinLike(ethJoin).exit(address(this), wadC)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:26.001706
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: join(address,address,uint256)
PC address: 2224
Estimated Gas Usage: 1095 - 1471
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:906

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:09.114216
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 2280
Estimated Gas Usage: 6118 - 109998
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:883

GemJoinLike(ethJoin).gem()

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:36.785098
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: giveToProxy(address,address,uint256,address)
PC address: 2309
Estimated Gas Usage: 3756 - 72884
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 12617
Offset: 10643
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:267

function giveToProxy(
        address proxyRegistry,
        address manager,
        uint cdp,
        address dst
    ) public {
        // Gets actual proxy address
        address proxy = ProxyRegistryLike(proxyRegistry).proxies(dst);
        // Checks if the proxy address already existed and dst address is still the owner
        if (proxy == address(0) || ProxyLike(proxy).owner() != dst) {
            uint csize;
            assembly {
                csize := extcodesize(dst)
            }
            // We want to avoid creating a proxy for a contract address that might not be able to handle proxies, then losing the CDP
            require(csize == 0, "Dst-is-a-contract");
            // Creates the proxy for the dst address
            proxy = ProxyRegistryLike(proxyRegistry).build(dst);
        }
        // Transfers CDP to the dst proxy
        give(manager, cdp, proxy);
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:29.725554
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: join(address,address,uint256)
PC address: 2387
Estimated Gas Usage: 2717 - 37560
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:908

PotLike(pot).drip()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:10.915417
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashGem(address,address,bytes32,uint256)
PC address: 2670
Estimated Gas Usage: 1189 - 1755
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:894

EndLike(end).cash(ilk, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:30.094356
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: cashGem(address,address,bytes32,uint256)
PC address: 3056
Estimated Gas Usage: 4594 - 74193
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:896

GemJoinLike(gemJoin).exit(msg.sender, mul(wad, EndLike(end).fix(ilk)) / RAY)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:45.708181
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3185
Estimated Gas Usage: 1114 - 1490
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:32.131217
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3186
Estimated Gas Usage: 1136 - 1512
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:47.770880
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3458
Estimated Gas Usage: 2815 - 37943
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:34.300640
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3459
Estimated Gas Usage: 2837 - 37965
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:52.249813
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3582
Estimated Gas Usage: 4350 - 73759
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:38.665518
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3583
Estimated Gas Usage: 4372 - 73781
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:55.040871
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3803
Estimated Gas Usage: 6021 - 110087
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:41.485272
Transaction Length: 1
Severity: Low
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3804
Estimated Gas Usage: 6043 - 110109
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:00.782195
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: daiJoin_join(address,address,uint256)
PC address: 3990
Estimated Gas Usage: 7616 - 146153
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:122

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:47.224466
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsEnd
Function name: daiJoin_join(address,address,uint256)
PC address: 3991
Estimated Gas Usage: 7638 - 146175
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:122

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:02.470396
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exitAll(address,address)
PC address: 4121
Estimated Gas Usage: 1112 - 1488
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:949

DaiJoinLike(daiJoin).vat()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:05.500113
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exitAll(address,address)
PC address: 4284
Estimated Gas Usage: 2734 - 37577
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:951

PotLike(pot).drip()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:09.738367
Transaction Length: 1
Severity: Medium
Contract: DssProxyActionsDsr
Function name: exitAll(address,address)
PC address: 4672
Estimated Gas Usage: 6039 - 110006
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:955

PotLike(pot).exit(pie)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.709406
Transaction Length: 1
Severity: High
Contract: DssProxyActionsEnd
Function name: cashETH(address,address,bytes32,uint256)
PC address: 4815
Estimated Gas Usage: 3657 - 72785
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:111

x * y

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.856510
Transaction Length: 1
Severity: High
Contract: DssProxyActionsDsr
Function name: exit(address,address,uint256)
PC address: 5387
Estimated Gas Usage: 3639 - 72668
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:111

x * y

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:04.622406
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8321
Estimated Gas Usage: 2911 - 38043
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:467

GemJoinLike(ethJoin).exit(address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:07.713029
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8445
Estimated Gas Usage: 4446 - 73859
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:469

GemJoinLike(ethJoin).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:10.010608
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8614
Estimated Gas Usage: 6085 - 110060
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:469

GemJoinLike(ethJoin).gem().withdraw(wad)

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:00:12.937097
Transaction Length: 1
Severity: High
Contract: DssProxyActions
Function name: exitETH(address,address,uint256,uint256)
PC address: 8683
Estimated Gas Usage: 6883 - 145044
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:471

msg.sender.transfer(wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:59.992684
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: freeETH(address,address,uint256,uint256)
PC address: 9233
Estimated Gas Usage: 3042 - 38269
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:313

ManagerLike(manager).flux(cdp, dst, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:43.194488
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: giveToProxy(address,address,uint256,address)
PC address: 10643
Estimated Gas Usage: 5392 - 75082
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:264

ManagerLike(manager).give(cdp, usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:19.626850
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: move(address,uint256,address,uint256)
PC address: 10843
Estimated Gas Usage: 1267 - 1928
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:322

ManagerLike(manager).move(cdp, dst, rad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:36.352011
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: quit(address,uint256,address)
PC address: 12433
Estimated Gas Usage: 1198 - 1764
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:339

ManagerLike(manager).quit(cdp, dst)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:47.353009
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: giveToProxy(address,address,uint256,address)
PC address: 13223
Estimated Gas Usage: 5320 - 74820
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:284

ProxyRegistryLike(proxyRegistry).build(dst)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:49.918931
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: urnAllow(address,address,uint256)
PC address: 15084
Estimated Gas Usage: 1264 - 1830
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:304

ManagerLike(manager).urnAllow(usr, ok)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:49.418897
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: openLockETHAndDraw(address,address,address,address,bytes32,uint256)
PC address: 15278
Estimated Gas Usage: 1294 - 1860
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:256

ManagerLike(manager).open(ilk, usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:01.906885
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: shift(address,uint256,uint256)
PC address: 17663
Estimated Gas Usage: 1245 - 1811
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:355

ManagerLike(manager).shift(cdpSrc, cdpOrg)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:59.183016
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: safeLockGem(address,address,uint256,uint256,bool,address)
PC address: 17798
Estimated Gas Usage: 3003 - 37941
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:229

GemJoinLike(apt).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:02.792274
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: safeLockGem(address,address,uint256,uint256,bool,address)
PC address: 18071
Estimated Gas Usage: 4704 - 74394
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:229

GemJoinLike(apt).gem().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:12.090222
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: gemJoin_join(address,address,uint256,bool)
PC address: 18195
Estimated Gas Usage: 4513 - 73922
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:231

GemJoinLike(apt).gem()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:54.321195
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: safeLockGem(address,address,uint256,uint256,bool,address)
PC address: 18604
Estimated Gas Usage: 3064 - 38192
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:234

GemJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:14.079534
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: frob(address,uint256,int256,int256)
PC address: 18761
Estimated Gas Usage: 1227 - 1888
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:331

ManagerLike(manager).frob(cdp, dink, dart)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:20.885867
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: nope(address,address)
PC address: 20145
Estimated Gas Usage: 1195 - 1666
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:248

HopeLike(obj).nope(usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:09.750007
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: safeLockETH(address,address,uint256,address)
PC address: 20273
Estimated Gas Usage: 2932 - 37870
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:218

GemJoinLike(apt).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:12.716773
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: safeLockETH(address,address,uint256,address)
PC address: 20431
Estimated Gas Usage: 4545 - 73950
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:218

GemJoinLike(apt).gem().deposit.value(msg.value)()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:42.833144
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: lockETH(address,address,uint256)
PC address: 20556
Estimated Gas Usage: 4371 - 73495
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:220

GemJoinLike(apt).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:46.028371
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: lockETH(address,address,uint256)
PC address: 20777
Estimated Gas Usage: 6041 - 109822
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:220

GemJoinLike(apt).gem().approve(address(apt), msg.value)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:37.502437
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: ethJoin_join(address,address)
PC address: 20964
Estimated Gas Usage: 7567 - 145819
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:222

GemJoinLike(apt).join(urn, msg.value)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:45.206650
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: hope(address,address)
PC address: 22277
Estimated Gas Usage: 1150 - 1621
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:241

HopeLike(obj).hope(usr)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:46.938974
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: cdpAllow(address,uint256,address,uint256)
PC address: 22476
Estimated Gas Usage: 1266 - 1927
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:296

ManagerLike(manager).cdpAllow(cdp, usr, ok)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:00.934427
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: transfer(address,address,uint256)
PC address: 25160
Estimated Gas Usage: 1285 - 1851
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:213

GemLike(gem).transfer(dst, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:04.311688
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: openLockGNTAndDraw(address,address,address,address,bytes32,uint256,uint256)
PC address: 25571
Estimated Gas Usage: 2956 - 37894
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:685

GemJoinLike(gntJoin).gem()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:06.957645
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: openLockGNTAndDraw(address,address,address,address,bytes32,uint256,uint256)
PC address: 25792
Estimated Gas Usage: 4627 - 74222
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:685

GemLike(GemJoinLike(gntJoin).gem()).transfer(bag, wadC)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:15.088950
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 25947
Estimated Gas Usage: 1159 - 1535
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:17.076682
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26220
Estimated Gas Usage: 2860 - 37988
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:118

DaiJoinLike(apt).dai().transferFrom(msg.sender, address(this), wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:20.786805
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26344
Estimated Gas Usage: 4395 - 73804
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:23.502288
Transaction Length: 1
Severity: Low
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26565
Estimated Gas Usage: 6066 - 110132
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:120

DaiJoinLike(apt).dai().approve(apt, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:02:29.048247
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: daiJoin_join(address,address,uint256)
PC address: 26752
Estimated Gas Usage: 7661 - 146198
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:122

DaiJoinLike(apt).join(urn, wad)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:04.853771
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: enter(address,address,uint256)
PC address: 29428
Estimated Gas Usage: 1240 - 1806
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:347

ManagerLike(manager).enter(src, cdp)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:03:14.266901
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: makeGemBag(address)
PC address: 29961
Estimated Gas Usage: 1206 - 1677
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:361

GNTJoinLike(gemJoin).make(address(this))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:19.153044
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: draw(address,address,address,uint256,uint256)
PC address: 31041
Estimated Gas Usage: 6209 - 110271
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:159

JugLike(jug).drip(ilk)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:53.565780
Transaction Length: 1
Severity: Medium
Contract: DssProxyActions
Function name: freeGem(address,address,uint256,uint256)
PC address: 31598
Estimated Gas Usage: 1197 - 1573
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/noloop/noloop6/0x66883acdDcDFF2DDDECBCBc623B9c40f664C8f1D.sol:147

GemJoinLike(gemJoin).dec()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x3e5723c9040d24e7fb4be9f9849f73dd6305204a.sol
Total states:7697
28.608106
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.528891
Transaction Length: 1
Severity: High
Contract: yeldDAI
Function name: updatePrice()
PC address: 4031
Estimated Gas Usage: 1068 - 1163
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x3e5723c9040d24e7fb4be9f9849f73dd6305204a.sol:408

lastPriceUpdate + priceUpdatePeriod

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x4cA805cE8EcE2E63FfC1F9f8F2731D3F48DF89Df.sol
Total states:3279
4.715499
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xb3edeca8bd80e444b87af14f7cd4e655c4117a12.sol
Total states:18192
40.128392
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.455513
Transaction Length: 2
Severity: High
Contract: aaple
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xb3edeca8bd80e444b87af14f7cd4e655c4117a12.sol:58

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.251648
Transaction Length: 2
Severity: High
Contract: aaple
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xb3edeca8bd80e444b87af14f7cd4e655c4117a12.sol:59

balances[from] -= value

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x47082A19EC51c5c4d3b3BD47e81e25D174e599a4.sol
Total states:1370
6.437342
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:00.658447
Transaction Length: 1
Severity: Low
Contract: TinlakeSpell
Function name: cast()
PC address: 2339
Estimated Gas Usage: 7027 - 28253
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x47082A19EC51c5c4d3b3BD47e81e25D174e599a4.sol:88

root.relyContract(ASSESSOR_ADMIN, ASSESSOR_ADMIN_ADMIN1)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.375510
Transaction Length: 1
Severity: Low
Contract: TinlakeSpell
Function name: cast()
PC address: 2610
Estimated Gas Usage: 8634 - 64331
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x47082A19EC51c5c4d3b3BD47e81e25D174e599a4.sol:89

root.relyContract(ASSESSOR_ADMIN, ASSESSOR_ADMIN_ADMIN2)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.309543
Transaction Length: 1
Severity: Low
Contract: TinlakeSpell
Function name: cast()
PC address: 2881
Estimated Gas Usage: 10241 - 100409
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x47082A19EC51c5c4d3b3BD47e81e25D174e599a4.sol:92

root.relyContract(JUNIOR_MEMBERLIST, JUNIOR_MEMBERLIST_ADMIN1)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:03.416728
Transaction Length: 1
Severity: Low
Contract: TinlakeSpell
Function name: cast()
PC address: 3152
Estimated Gas Usage: 11848 - 136487
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x47082A19EC51c5c4d3b3BD47e81e25D174e599a4.sol:93

root.relyContract(JUNIOR_MEMBERLIST, JUNIOR_MEMBERLIST_ADMIN2)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:04.718906
Transaction Length: 1
Severity: Low
Contract: TinlakeSpell
Function name: cast()
PC address: 3423
Estimated Gas Usage: 13455 - 172565
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x47082A19EC51c5c4d3b3BD47e81e25D174e599a4.sol:94

root.relyContract(JUNIOR_MEMBERLIST, JUNIOR_MEMBERLIST_ADMIN3)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:06.194471
Transaction Length: 1
Severity: Low
Contract: TinlakeSpell
Function name: cast()
PC address: 3694
Estimated Gas Usage: 15062 - 208643
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x47082A19EC51c5c4d3b3BD47e81e25D174e599a4.sol:97

root.relyContract(SENIOR_MEMBERLIST, SENIOR_MEMBERLIST_ADMIN1)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x7826B2B9D35530976AF35a56A6d2249749A9a400.sol
Total states:3445
11.168667
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x390cc97854f85ddb7e84229589b3cc7be16cf0f1.sol
Total states:7439
17.251841
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.626503
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x390cc97854f85ddb7e84229589b3cc7be16cf0f1.sol:106

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x4e3642603a75528489c2d94f86e9507260d3c5a1.sol
Total states:3429
5.542606
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xbc944ac853f62ad10d354b9cdbbdecac14e263c0.sol
Total states:76097
143.009734
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:52.318386
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbc944ac853f62ad10d354b9cdbbdecac14e263c0.sol:60

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:51.463576
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbc944ac853f62ad10d354b9cdbbdecac14e263c0.sol:60

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:56.012216
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbc944ac853f62ad10d354b9cdbbdecac14e263c0.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:01.336945
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbc944ac853f62ad10d354b9cdbbdecac14e263c0.sol:63

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:55.625439
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbc944ac853f62ad10d354b9cdbbdecac14e263c0.sol:62

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:01.712674
Transaction Length: 2
Severity: High
Contract: TTT_FINANCE
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xbc944ac853f62ad10d354b9cdbbdecac14e263c0.sol:63

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x8bdf979c6cb932f186e755887d0964c9ee624121.sol
Total states:86
0.122403
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x34317e2da45fec7c525aca8dabf22cbc877128a3.sol
Total states:5272
62.154567
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:57.097447
Transaction Length: 1
Severity: Low
Contract: VidyaFLUX
Function name: feedInventory()
PC address: 6827
Estimated Gas Usage: 8677 - 30943
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x34317e2da45fec7c525aca8dabf22cbc877128a3.sol:788

erc20.transfer(maintenanceAddress, toInventory)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:58.209974
Transaction Length: 1
Severity: Low
Contract: VidyaFLUX
Function name: feedInventory()
PC address: 7084
Estimated Gas Usage: 10788 - 68041
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x34317e2da45fec7c525aca8dabf22cbc877128a3.sol:794

erc20.transfer(msg.sender, bonus)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.481738
Transaction Length: 1
Severity: High
Contract: VidyaFLUX
Function name: calculateTokensReceived(uint256)
PC address: 9622
Estimated Gas Usage: 809 - 904
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x34317e2da45fec7c525aca8dabf22cbc877128a3.sol:64

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:55.078526
Transaction Length: 1
Severity: Low
Contract: VidyaFLUX
Function name: calculateTokensReceived(uint256)
PC address: 9645
Estimated Gas Usage: 847 - 942
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/noloop/noloop6/0x34317e2da45fec7c525aca8dabf22cbc877128a3.sol:66

assert(c / a == b)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:59.236182
Transaction Length: 1
Severity: Low
Contract: VidyaFLUX
Function name: buy(uint256,address)
PC address: 9987
Estimated Gas Usage: 1683 - 2674
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/noloop/noloop6/0x34317e2da45fec7c525aca8dabf22cbc877128a3.sol:326

erc20.transferFrom(msg.sender, address(this), _amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xebd9e595f6c5adaf28771ed0e78c8e012a3c226d.sol
Total states:1839
1.714738
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x095c673D34034332F0Dc74D3484EB9524D1318e5.sol
Total states:676
1.36736
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xc1e4eb1328dd58328688f81308f896e2e4f09433.sol
Total states:13839
31.543663
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.051692
Transaction Length: 0
Severity: High
Contract: ERC20Detailed
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xc1e4eb1328dd58328688f81308f896e2e4f09433.sol:15

 view returns (uint);
    function balanceO

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.486455
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3582
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xc1e4eb1328dd58328688f81308f896e2e4f09433.sol:123

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.147655
Transaction Length: 2
Severity: High
Contract: VCN
Function name: increaseAllowance(address,uint256)
PC address: 4415
Estimated Gas Usage: 1081 - 1556
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xc1e4eb1328dd58328688f81308f896e2e4f09433.sol:123

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xc4bb9344e81f76c2d92d625c19be2107c892e1a7.sol
Total states:9014
17.700241
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.447976
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xc4bb9344e81f76c2d92d625c19be2107c892e1a7.sol:109

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x6b4a5b6ebea258c3d570928b2bad53d5f7e8a423.sol
Total states:76081
145.398494
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.769834
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 1915
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6b4a5b6ebea258c3d570928b2bad53d5f7e8a423.sol:58

balances[_to]+_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:53.587811
Transaction Length: 2
Severity: High
Contract: UNISEX
Function name: transferFrom(address,address,uint256)
PC address: 2066
Estimated Gas Usage: 2530 - 3575
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6b4a5b6ebea258c3d570928b2bad53d5f7e8a423.sol:58

balances[_to]+_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.301792
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2136
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6b4a5b6ebea258c3d570928b2bad53d5f7e8a423.sol:60

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.279464
Transaction Length: 2
Severity: High
Contract: Token
Function name: transferFrom(address,address,uint256)
PC address: 2213
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6b4a5b6ebea258c3d570928b2bad53d5f7e8a423.sol:61

balances[_to]+=_amount

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:57.261257
Transaction Length: 2
Severity: High
Contract: UNISEX
Function name: transferFrom(address,address,uint256)
PC address: 2287
Estimated Gas Usage: 8674 - 30289
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6b4a5b6ebea258c3d570928b2bad53d5f7e8a423.sol:60

allowed[_from][msg.sender]-=_amount

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:02.180679
Transaction Length: 2
Severity: High
Contract: UNISEX
Function name: transferFrom(address,address,uint256)
PC address: 2364
Estimated Gas Usage: 14197 - 56002
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0x6b4a5b6ebea258c3d570928b2bad53d5f7e8a423.sol:61

balances[_to]+=_amount

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x350ae46a6fdc97a27c1b0a00fdb24637a6ff1a3b.sol
Total states:490
0.600835
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x608f5d086566b2aa41d37e909a298fa8a2166bef.sol
Total states:554
1.438408
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x66605a5b87ea0370aec238e4ea05023d7e5d90d5.sol
Total states:428
1.300555
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xcdae92c9d665609ad02a60802d92f3174e61e7c0.sol
Total states:481
3.700714
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0x91f5e4554a5BacC18056Eb3F96bB76699d6edC88.sol
Total states:713
0.489183
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/noloop/noloop6/0xd1ef0930887653416041af4b11fedac05db6b80b.sol
Total states:18192
40.959914
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.948378
Transaction Length: 2
Severity: High
Contract: virginsvc
Function name: transferFrom(address,address,uint256)
PC address: 1861
Estimated Gas Usage: 2041 - 2896
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xd1ef0930887653416041af4b11fedac05db6b80b.sol:53

balances[to] += value

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:31.785006
Transaction Length: 2
Severity: High
Contract: virginsvc
Function name: transferFrom(address,address,uint256)
PC address: 1938
Estimated Gas Usage: 7564 - 28609
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/noloop/noloop6/0xd1ef0930887653416041af4b11fedac05db6b80b.sol:54

balances[from] -= value

--------------------

