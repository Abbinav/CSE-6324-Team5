$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x248fd59aba2c8e7184b23733b4b30d257770a99d.sol
Total states:5004
24.747911
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:11.711246
Transaction Length: 1
Severity: Medium
Contract: KOREv2Router
Function name: refreshApproval()
PC address: 1203
Estimated Gas Usage: 7875 - 113921
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5916
Offset: 6239
Offset: 6562
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/m_loop/loop4/0x248fd59aba2c8e7184b23733b4b30d257770a99d.sol:840

function refreshApproval() public {
        IUniswapV2Pair(_koreWETHPair).approve(address(_koreVault), uint(-1));
        IERC20(_koreToken).approve(_wKoreToken, uint(-1));
        IERC20(_wKoreToken).approve(address(_koreVault), uint(-1));
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:08.098688
Transaction Length: 1
Severity: Low
Contract: KOREv2Router
Function name: fallback
PC address: 2301
Estimated Gas Usage: 7975 - 29769
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x248fd59aba2c8e7184b23733b4b30d257770a99d.sol:878

_WETH.deposit.value(msg.value)()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:09.103805
Transaction Length: 1
Severity: Low
Contract: KOREv2Router
Function name: refreshApproval()
PC address: 5916
Estimated Gas Usage: 1958 - 3184
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x248fd59aba2c8e7184b23733b4b30d257770a99d.sol:841

IUniswapV2Pair(_koreWETHPair).approve(address(_koreVault), uint(-1))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:10.198941
Transaction Length: 1
Severity: Low
Contract: KOREv2Router
Function name: refreshApproval()
PC address: 6239
Estimated Gas Usage: 4506 - 41049
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x248fd59aba2c8e7184b23733b4b30d257770a99d.sol:842

IERC20(_koreToken).approve(_wKoreToken, uint(-1))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:11.620963
Transaction Length: 1
Severity: Low
Contract: KOREv2Router
Function name: refreshApproval()
PC address: 6562
Estimated Gas Usage: 7054 - 78914
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x248fd59aba2c8e7184b23733b4b30d257770a99d.sol:843

IERC20(_wKoreToken).approve(address(_koreVault), uint(-1))

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol
Total states:272
69.239211
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.081253
Transaction Length: 0
Severity: High
Contract: FarmPrdzEth96
Function name: constructor
PC address: 430
Estimated Gas Usage: 82565 - 406328
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.528807
Transaction Length: 0
Severity: Low
Contract: FarmPrdzEth96
Function name: constructor
PC address: 444
Estimated Gas Usage: 82575 - 406338
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x287e3DED4441117Ed742864e71e05C4439189ABC.sol:39

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol
Total states:13356
355.901672
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.946895
Transaction Length: 1
Severity: High
Contract: Module
Function name: getModuleAddress(string)
PC address: 416
Estimated Gas Usage: 385 - 480
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol:3

*/

// File: @openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.568104
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 659
Estimated Gas Usage: 386 - 481
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.148902
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 661
Estimated Gas Usage: 386 - 481
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.473843
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 744
Estimated Gas Usage: 562 - 657
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.395704
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 746
Estimated Gas Usage: 562 - 657
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:34.995330
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 829
Estimated Gas Usage: 738 - 833
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:54.538780
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 831
Estimated Gas Usage: 738 - 833
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:14.862288
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 914
Estimated Gas Usage: 914 - 1009
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:46.190547
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 916
Estimated Gas Usage: 914 - 1009
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:16.903256
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: getModuleAddress(string)
PC address: 1601
Estimated Gas Usage: 451 - 546
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol:3

*/

// File: @openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:15.946342
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: update(address[],address[],uint256)
PC address: 2390
Estimated Gas Usage: 384 - 479
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:19.124948
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: update(address[],address[],uint256)
PC address: 2392
Estimated Gas Usage: 384 - 479
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:30.184996
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: update(address[],address[],uint256)
PC address: 2538
Estimated Gas Usage: 717 - 3494
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:40.881702
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: update(address[],address[],uint256)
PC address: 2540
Estimated Gas Usage: 717 - 3494
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x330c5a9ab746b16020d70108167ea518226a6a8b.sol:3

*/

// File: @openzeppelin\contracts

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xaad291c225f04beb18e8111576b808d1dcedd717.sol
Total states:18334
2661.27296
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.484680
Transaction Length: 1
Severity: High
Contract: master
Function name: airdrop(address,address[],uint256[])
PC address: 458
Estimated Gas Usage: 375 - 470
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xaad291c225f04beb18e8111576b808d1dcedd717.sol:5

olidity 0.5.7;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.543157
Transaction Length: 1
Severity: High
Contract: master
Function name: airdrop(address,address[],uint256[])
PC address: 460
Estimated Gas Usage: 375 - 470
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xaad291c225f04beb18e8111576b808d1dcedd717.sol:3

*/

//pragma solidity 0.5.7;
pragma 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.357586
Transaction Length: 1
Severity: High
Contract: master
Function name: airdrop(address,address[],uint256[])
PC address: 606
Estimated Gas Usage: 717 - 3494
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xaad291c225f04beb18e8111576b808d1dcedd717.sol:5

olidity 0.5.7;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.740263
Transaction Length: 1
Severity: High
Contract: master
Function name: airdrop(address,address[],uint256[])
PC address: 608
Estimated Gas Usage: 717 - 3494
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xaad291c225f04beb18e8111576b808d1dcedd717.sol:3

*/

//pragma solidity 0.5.7;
pragma 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:05.470120
Transaction Length: 1
Severity: High
Contract: master
Function name: name()
PC address: 790
Estimated Gas Usage: 1914 - 3044
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xaad291c225f04beb18e8111576b808d1dcedd717.sol:68

function name() public view returns(string memory) {
        return _name;
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:11:16.697499
Transaction Length: 1
Severity: High
Contract: master
Function name: symbol()
PC address: 1757
Estimated Gas Usage: 1957 - 3087
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xaad291c225f04beb18e8111576b808d1dcedd717.sol:72

function symbol() public view returns(string memory) {
        return _symbol;
    }

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:14:06.065736
Transaction Length: 1
Severity: Low
Contract: master
Function name: decreaseAllowance(address,uint256)
PC address: 9553
Estimated Gas Usage: 973 - 1448
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xaad291c225f04beb18e8111576b808d1dcedd717.sol:40

assert(b <= a)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:26:57.923295
Transaction Length: 2
Severity: Low
Contract: master
Function name: decreaseAllowance(address,uint256)
PC address: 9553
Estimated Gas Usage: 973 - 1448
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xaad291c225f04beb18e8111576b808d1dcedd717.sol:40

assert(b <= a)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:17:52.387486
Transaction Length: 2
Severity: High
Contract: master
Function name: increaseAllowance(address,uint256)
PC address: 9571
Estimated Gas Usage: 1003 - 1478
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xaad291c225f04beb18e8111576b808d1dcedd717.sol:45

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:24:26.782150
Transaction Length: 2
Severity: Low
Contract: master
Function name: increaseAllowance(address,uint256)
PC address: 9584
Estimated Gas Usage: 1013 - 1488
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xaad291c225f04beb18e8111576b808d1dcedd717.sol:46

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xa8181bc9ea1ebfba0e1a42a1ac08f1533cbbf402.sol
Total states:1759
5.606968
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xb824867f6afbd01eea3bdcd24b573a9feaa69b3d.sol
Total states:1308
1.078048
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol
Total states:22644
1105.745132
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.169709
Transaction Length: 1
Severity: High
Contract: Module
Function name: getModuleAddress(string)
PC address: 416
Estimated Gas Usage: 385 - 480
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.414886
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 511
Estimated Gas Usage: 364 - 459
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:5

openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.907050
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 513
Estimated Gas Usage: 364 - 459
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:3

*/

// File: @openzeppelin\upgrades\

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.207898
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 596
Estimated Gas Usage: 540 - 635
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:5

openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.162179
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 598
Estimated Gas Usage: 540 - 635
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:3

*/

// File: @openzeppelin\upgrades\

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.500471
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 681
Estimated Gas Usage: 716 - 811
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:5

openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:46.713554
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 683
Estimated Gas Usage: 716 - 811
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:3

*/

// File: @openzeppelin\upgrades\

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:06.815719
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 766
Estimated Gas Usage: 892 - 987
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:5

openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:45.397549
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 768
Estimated Gas Usage: 892 - 987
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:3

*/

// File: @openzeppelin\upgrades\

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.343311
Transaction Length: 1
Severity: High
Contract: StakingPoolBase
Function name: stake(uint256,bytes)
PC address: 876
Estimated Gas Usage: 414 - 509
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.693115
Transaction Length: 1
Severity: High
Contract: StakingPool
Function name: stake(uint256,bytes)
PC address: 1086
Estimated Gas Usage: 436 - 531
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.413796
Transaction Length: 1
Severity: High
Contract: StakingPoolADEL
Function name: stake(uint256,bytes)
PC address: 1086
Estimated Gas Usage: 436 - 531
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.365700
Transaction Length: 1
Severity: High
Contract: StakingPoolBase
Function name: stakeFor(address,uint256,bytes)
PC address: 1105
Estimated Gas Usage: 469 - 564
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:16.133673
Transaction Length: 1
Severity: High
Contract: StakingPool
Function name: stakeFor(address,uint256,bytes)
PC address: 1315
Estimated Gas Usage: 491 - 586
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.075007
Transaction Length: 1
Severity: High
Contract: StakingPoolADEL
Function name: stakeFor(address,uint256,bytes)
PC address: 1315
Estimated Gas Usage: 491 - 586
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:20.141961
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: getModuleAddress(string)
PC address: 1453
Estimated Gas Usage: 451 - 546
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:22.633747
Transaction Length: 1
Severity: High
Contract: StakingPoolBase
Function name: getPersonalStakeUnlockedTimestamps(address)
PC address: 1667
Estimated Gas Usage: 2628 - 4231
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:1518

function getPersonalStakeUnlockedTimestamps(address _address) external view returns (uint256[] memory) {
    uint256[] memory timestamps;
    (timestamps,,) = getPersonalStakes(_address);

    return timestamps;
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:07.913839
Transaction Length: 1
Severity: High
Contract: StakingPool
Function name: getPersonalStakeUnlockedTimestamps(address)
PC address: 1877
Estimated Gas Usage: 2584 - 4187
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:1518

function getPersonalStakeUnlockedTimestamps(address _address) external view returns (uint256[] memory) {
    uint256[] memory timestamps;
    (timestamps,,) = getPersonalStakes(_address);

    return timestamps;
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:25.612666
Transaction Length: 1
Severity: High
Contract: StakingPoolADEL
Function name: getPersonalStakeUnlockedTimestamps(address)
PC address: 1877
Estimated Gas Usage: 2584 - 4187
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:1518

function getPersonalStakeUnlockedTimestamps(address _address) external view returns (uint256[] memory) {
    uint256[] memory timestamps;
    (timestamps,,) = getPersonalStakes(_address);

    return timestamps;
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:28.600300
Transaction Length: 1
Severity: High
Contract: StakingPool
Function name: getPersonalStakeUnlockedTimestamps(address)
PC address: 1917
Estimated Gas Usage: 2734 - 4713
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:1518

function getPersonalStakeUnlockedTimestamps(address _address) external view returns (uint256[] memory) {
    uint256[] memory timestamps;
    (timestamps,,) = getPersonalStakes(_address);

    return timestamps;
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:50.935255
Transaction Length: 1
Severity: High
Contract: StakingPoolADEL
Function name: getPersonalStakeUnlockedTimestamps(address)
PC address: 1917
Estimated Gas Usage: 2734 - 4713
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:1518

function getPersonalStakeUnlockedTimestamps(address _address) external view returns (uint256[] memory) {
    uint256[] memory timestamps;
    (timestamps,,) = getPersonalStakes(_address);

    return timestamps;
  }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.791484
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3249
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:212

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:54.981706
Transaction Length: 1
Severity: Low
Contract: StakingPoolBase
Function name: stakeFor(address,uint256,bytes)
PC address: 13457
Estimated Gas Usage: 2998 - 7001
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x063E22147bcA7eA413327e2125F5F01DA537D48E.sol:1378

stakingToken.transferFrom(_address, address(this), _amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x091ac882e57b89e071c8b153be3aab668a80303d.sol
Total states:22554
102.923462
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.157057
Transaction Length: 0
Severity: High
Contract: Town
Function name: constructor
PC address: 844
Estimated Gas Usage: 558 - 3889
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x091ac882e57b89e071c8b153be3aab668a80303d.sol:1404

distributionPeriod * 1 days

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.945879
Transaction Length: 0
Severity: High
Contract: Town
Function name: constructor
PC address: 1422
Estimated Gas Usage: 46536 - 230197
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x091ac882e57b89e071c8b153be3aab668a80303d.sol:303

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.661804
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x091ac882e57b89e071c8b153be3aab668a80303d.sol:225

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.990707
Transaction Length: 1
Severity: Low
Contract: TownToken
Function name: transfer(address,uint256)
PC address: 3334
Estimated Gas Usage: 2044 - 3175
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x091ac882e57b89e071c8b153be3aab668a80303d.sol:1100

_town.checkProposal(recipient)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.603528
Transaction Length: 2
Severity: High
Contract: ExternalTokenTemplate
Function name: increaseAllowance(address,uint256)
PC address: 3494
Estimated Gas Usage: 922 - 1397
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x091ac882e57b89e071c8b153be3aab668a80303d.sol:225

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:03.590329
Transaction Length: 1
Severity: Low
Contract: TownToken
Function name: getHolderByIndex(uint256)
PC address: 4982
Estimated Gas Usage: 725 - 820
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x091ac882e57b89e071c8b153be3aab668a80303d.sol:1076

_holders[index]

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.756409
Transaction Length: 2
Severity: High
Contract: TownToken
Function name: increaseAllowance(address,uint256)
PC address: 6628
Estimated Gas Usage: 967 - 1442
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x091ac882e57b89e071c8b153be3aab668a80303d.sol:225

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x9a0a8c3ab75544b471abb6381388cfb96365132c.sol
Total states:149
2.762547
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol
Total states:17674
689.484666
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.922051
Transaction Length: 1
Severity: High
Contract: Module
Function name: getModuleAddress(string)
PC address: 416
Estimated Gas Usage: 385 - 480
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:3

*/

// File: @openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.349301
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 511
Estimated Gas Usage: 364 - 459
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.183574
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 513
Estimated Gas Usage: 364 - 459
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.082183
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 596
Estimated Gas Usage: 540 - 635
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.656699
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 598
Estimated Gas Usage: 540 - 635
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:35.772163
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 681
Estimated Gas Usage: 716 - 811
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:03.947237
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 683
Estimated Gas Usage: 716 - 811
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:29.989594
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 766
Estimated Gas Usage: 892 - 987
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:56.032109
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 768
Estimated Gas Usage: 892 - 987
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:21.567403
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: getModuleAddress(string)
PC address: 1453
Estimated Gas Usage: 451 - 546
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:3

*/

// File: @openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.231474
Transaction Length: 1
Severity: High
Contract: CurveFiProtocol_renBTC
Function name: handleDeposit(address[],uint256[])
PC address: 1711
Estimated Gas Usage: 452 - 547
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.235404
Transaction Length: 1
Severity: High
Contract: CurveFiProtocol_renBTC
Function name: handleDeposit(address[],uint256[])
PC address: 1713
Estimated Gas Usage: 452 - 547
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:15.686680
Transaction Length: 1
Severity: High
Contract: CurveFiProtocol_renBTC
Function name: handleDeposit(address[],uint256[])
PC address: 1859
Estimated Gas Usage: 785 - 3562
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.176015
Transaction Length: 1
Severity: High
Contract: CurveFiProtocol_renBTC
Function name: handleDeposit(address[],uint256[])
PC address: 1861
Estimated Gas Usage: 785 - 3562
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:32.296415
Transaction Length: 1
Severity: High
Contract: CurveFiProtocol_renBTC
Function name: getModuleAddress(string)
PC address: 2143
Estimated Gas Usage: 407 - 502
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:3

*/

// File: @openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:07.180172
Transaction Length: 1
Severity: High
Contract: CurveFiProtocol_renBTC
Function name: withdraw(address,uint256[])
PC address: 2508
Estimated Gas Usage: 397 - 492
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:11.919609
Transaction Length: 1
Severity: High
Contract: CurveFiProtocol_renBTC
Function name: withdraw(address,uint256[])
PC address: 2510
Estimated Gas Usage: 397 - 492
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:38.622265
Transaction Length: 1
Severity: High
Contract: CurveFiProtocol_renBTC
Function name: supportedTokens()
PC address: 3015
Estimated Gas Usage: 1250 - 2097
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:1595

function supportedTokens() public view returns(address[] memory){
        return _registeredTokens;
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:57.117887
Transaction Length: 1
Severity: High
Contract: CurveFiProtocol_renBTC
Function name: supportedTokens()
PC address: 3055
Estimated Gas Usage: 1400 - 2623
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x548c847f97f42E11948aee042dacD2e6F2076274.sol:1595

function supportedTokens() public view returns(address[] memory){
        return _registeredTokens;
    }

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xf3c6586e56c0c595749b8b75ac2a888d20bb48da.sol
Total states:1682
10.262216
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.844111
Transaction Length: 1
Severity: High
Contract: TokenPool
Function name: balance()
PC address: 1682
Estimated Gas Usage: 2430 - 37419
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xf3c6586e56c0c595749b8b75ac2a888d20bb48da.sol:5

racts/contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.619371
Transaction Length: 1
Severity: High
Contract: TokenPool
Function name: balance()
PC address: 1685
Estimated Gas Usage: 2430 - 37419
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xf3c6586e56c0c595749b8b75ac2a888d20bb48da.sol:3



// File: contracts/contracts/math/SafeMat

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.330987
Transaction Length: 1
Severity: High
Contract: TokenPool
Function name: balance()
PC address: 1697
Estimated Gas Usage: 2430 - 37419
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xf3c6586e56c0c595749b8b75ac2a888d20bb48da.sol:407

token.balanceOf(address(this))

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:02.349871
Transaction Length: 1
Severity: High
Contract: TokenPool
Function name: balance()
PC address: 2443
Estimated Gas Usage: 2430 - 37419
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xf3c6586e56c0c595749b8b75ac2a888d20bb48da.sol:66

ing zero, but the
     

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xe9d7e590171cb5080ab8dfd45850692a714260f0.sol
Total states:77
2.944607
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xd79e0a04d7f8bca8cf9bce460f63b8765defbc8e.sol
Total states:184
0.256447
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xad81748b316716070005c6664e8ef562dfb9d602.sol
Total states:736
1.415532
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xf79b548ff56E661ee19a59303178E444E9e81FCc.sol
Total states:1466
37.118539
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:02.727212
Transaction Length: 1
Severity: Medium
Contract: Comptroller
Function name: harvest()
PC address: 365
Estimated Gas Usage: 5543 - 75299
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1951
Offset: 2150
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/m_loop/loop4/0xf79b548ff56E661ee19a59303178E444E9e81FCc.sol:501

function harvest() external {
        // address(this) needs to be the authorizedController() in core
        core.harvest();

        // any extraneous dusd tokens in the contract will also be harvested
        uint revenue = dusd.balanceOf(address(this));
        emit Harvested(revenue);
        if (revenue > 0) {
            address[] memory _beneficiaries = beneficiaries;
            uint beneficiariesLength = _beneficiaries.length;
            for (uint i = 0; i < beneficiariesLength; i++) {
                dusd.safeTransfer(_beneficiaries[i], revenue.mul(allocations[i]).div(MAX));
            }
        }
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.879169
Transaction Length: 1
Severity: High
Contract: Comptroller
Function name: modifyBeneficiaries(address[],uint256[])
PC address: 447
Estimated Gas Usage: 385 - 480
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xf79b548ff56E661ee19a59303178E444E9e81FCc.sol:9

ma solidity 0.5.17;
p

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.686164
Transaction Length: 1
Severity: High
Contract: Comptroller
Function name: modifyBeneficiaries(address[],uint256[])
PC address: 449
Estimated Gas Usage: 385 - 480
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xf79b548ff56E661ee19a59303178E444E9e81FCc.sol:3



*/



//pragma solidity 0.5.17;
pr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.101656
Transaction Length: 1
Severity: High
Contract: Comptroller
Function name: modifyBeneficiaries(address[],uint256[])
PC address: 532
Estimated Gas Usage: 561 - 656
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xf79b548ff56E661ee19a59303178E444E9e81FCc.sol:9

ma solidity 0.5.17;
p

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.094943
Transaction Length: 1
Severity: High
Contract: Comptroller
Function name: modifyBeneficiaries(address[],uint256[])
PC address: 534
Estimated Gas Usage: 561 - 656
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xf79b548ff56E661ee19a59303178E444E9e81FCc.sol:3



*/



//pragma solidity 0.5.17;
pr

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:02.089949
Transaction Length: 1
Severity: Low
Contract: Comptroller
Function name: allocations(uint256)
PC address: 1807
Estimated Gas Usage: 679 - 774
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xf79b548ff56E661ee19a59303178E444E9e81FCc.sol:488

uint[] public allocations

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.630105
Transaction Length: 1
Severity: Low
Contract: Comptroller
Function name: harvest()
PC address: 1951
Estimated Gas Usage: 989 - 1365
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xf79b548ff56E661ee19a59303178E444E9e81FCc.sol:503

core.harvest()

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:35.318801
Transaction Length: 1
Severity: Low
Contract: Comptroller
Function name: beneficiaries(uint256)
PC address: 3775
Estimated Gas Usage: 722 - 817
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xf79b548ff56E661ee19a59303178E444E9e81FCc.sol:487

address[] public beneficiaries

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.465897
Transaction Length: 1
Severity: High
Contract: Comptroller
Function name: earned(address)
PC address: 3989
Estimated Gas Usage: 3576 - 72700
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xf79b548ff56E661ee19a59303178E444E9e81FCc.sol:205

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xA5976897BC0081e3895013B08654DfEc50Bcb33F.sol
Total states:9233
32.260266
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol
Total states:52177
1028.844277
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.142228
Transaction Length: 1
Severity: High
Contract: Module
Function name: getModuleAddress(string)
PC address: 416
Estimated Gas Usage: 385 - 480
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.428314
Transaction Length: 1
Severity: High
Contract: PoolToken
Function name: initialize(string,string,uint8)
PC address: 1000
Estimated Gas Usage: 409 - 504
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.495329
Transaction Length: 1
Severity: High
Contract: PoolToken_CurveFi_SBTC
Function name: initialize(string,string,uint8)
PC address: 1000
Estimated Gas Usage: 409 - 504
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.224336
Transaction Length: 1
Severity: High
Contract: PoolToken
Function name: initialize(string,string,uint8)
PC address: 1151
Estimated Gas Usage: 751 - 3528
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.415919
Transaction Length: 1
Severity: High
Contract: PoolToken_CurveFi_SBTC
Function name: initialize(string,string,uint8)
PC address: 1151
Estimated Gas Usage: 751 - 3528
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.392064
Transaction Length: 1
Severity: High
Contract: DistributionToken
Function name: claimDistributions(address[],uint256)
PC address: 2226
Estimated Gas Usage: 429 - 524
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:5

openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.009614
Transaction Length: 1
Severity: High
Contract: DistributionToken
Function name: claimDistributions(address[],uint256)
PC address: 2228
Estimated Gas Usage: 429 - 524
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:3

*/

// File: @openzeppelin\upgrades\

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.500636
Transaction Length: 1
Severity: High
Contract: DistributionToken
Function name: claimDistributions(address[])
PC address: 2357
Estimated Gas Usage: 363 - 458
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:5

openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.793512
Transaction Length: 1
Severity: High
Contract: DistributionToken
Function name: claimDistributions(address[])
PC address: 2359
Estimated Gas Usage: 363 - 458
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:3

*/

// File: @openzeppelin\upgrades\

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:24.621402
Transaction Length: 1
Severity: High
Contract: PoolToken
Function name: getModuleAddress(string)
PC address: 2526
Estimated Gas Usage: 429 - 524
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:20.388454
Transaction Length: 1
Severity: High
Contract: PoolToken_CurveFi_SBTC
Function name: getModuleAddress(string)
PC address: 2526
Estimated Gas Usage: 429 - 524
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:14.378860
Transaction Length: 1
Severity: High
Contract: PoolToken
Function name: initialize(address,string,string)
PC address: 3179
Estimated Gas Usage: 485 - 580
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:17.696750
Transaction Length: 1
Severity: High
Contract: PoolToken_CurveFi_SBTC
Function name: initialize(address,string,string)
PC address: 3179
Estimated Gas Usage: 485 - 580
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.894787
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3249
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:212

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:33.430916
Transaction Length: 1
Severity: High
Contract: PoolToken
Function name: initialize(address,string,string)
PC address: 3330
Estimated Gas Usage: 827 - 3604
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:39.778408
Transaction Length: 1
Severity: High
Contract: PoolToken_CurveFi_SBTC
Function name: initialize(address,string,string)
PC address: 3330
Estimated Gas Usage: 827 - 3604
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.300301
Transaction Length: 1
Severity: Low
Contract: DistributionToken
Function name: distributions(uint256)
PC address: 3405
Estimated Gas Usage: 724 - 819
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:995

Distribution[] public distributions

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.545085
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3429
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:212

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.953336
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 4214
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:212

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:33.432579
Transaction Length: 1
Severity: Low
Contract: PoolToken
Function name: distributions(uint256)
PC address: 6392
Estimated Gas Usage: 768 - 863
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:995

Distribution[] public distributions

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:32.334898
Transaction Length: 1
Severity: Low
Contract: PoolToken_CurveFi_SBTC
Function name: distributions(uint256)
PC address: 6392
Estimated Gas Usage: 768 - 863
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:995

Distribution[] public distributions

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.794231
Transaction Length: 2
Severity: High
Contract: DistributionToken
Function name: increaseAllowance(address,uint256)
PC address: 6759
Estimated Gas Usage: 1104 - 1579
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xb36574b390afbccc1bc68ed8c0e38b0da489e067.sol:212

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x5cc1477f5b86a97abc6b82229f76fc9bba52b399.sol
Total states:90
1.101847
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xf988df5509af01cc5b76ff1fa3ed3b5f31baaf84.sol
Total states:738
3.624396
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x4b03b591b8cd6dc9000af9e1e350b8b1a3bdb157.sol
Total states:426
0.654317
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xd210336b5918dbc8425442528f12d4d65fd093ea.sol
Total states:16824
34.893722
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.509248
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xd210336b5918dbc8425442528f12d4d65fd093ea.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.507469
Transaction Length: 1
Severity: Low
Contract: TOKENBOX
Function name: lockState(address,uint256)
PC address: 4015
Estimated Gas Usage: 830 - 1115
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xd210336b5918dbc8425442528f12d4d65fd093ea.sol:319

lockInfo[_holder][_idx]

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.580502
Transaction Length: 2
Severity: High
Contract: TOKENBOX
Function name: increaseAllowance(address,uint256)
PC address: 11746
Estimated Gas Usage: 968 - 1443
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xd210336b5918dbc8425442528f12d4d65fd093ea.sol:38

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x154c28ba3736ee4e5e89e0081a00f04ec67992f0.sol
Total states:195
1177.002823
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:43.445670
Transaction Length: 1
Severity: High
Contract: Core
Function name: whitelistTokens(address[])
PC address: 887
Estimated Gas Usage: 364 - 459
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x154c28ba3736ee4e5e89e0081a00f04ec67992f0.sol:9

ma solidity 0.5.17;
p

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:46.602000
Transaction Length: 1
Severity: High
Contract: Core
Function name: whitelistTokens(address[])
PC address: 889
Estimated Gas Usage: 364 - 459
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x154c28ba3736ee4e5e89e0081a00f04ec67992f0.sol:3



*/



//pragma solidity 0.5.17;
pr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:11.624998
Transaction Length: 1
Severity: High
Contract: Core
Function name: whitelistPeak(address,uint256[],uint256,bool)
PC address: 1096
Estimated Gas Usage: 441 - 536
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x154c28ba3736ee4e5e89e0081a00f04ec67992f0.sol:9

ma solidity 0.5.17;
p

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:15.959146
Transaction Length: 1
Severity: High
Contract: Core
Function name: whitelistPeak(address,uint256[],uint256,bool)
PC address: 1098
Estimated Gas Usage: 441 - 536
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x154c28ba3736ee4e5e89e0081a00f04ec67992f0.sol:3



*/



//pragma solidity 0.5.17;
pr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.165436
Transaction Length: 1
Severity: High
Contract: Core
Function name: currentSystemState()
PC address: 2994
Estimated Gas Usage: 2276 - 37170
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x154c28ba3736ee4e5e89e0081a00f04ec67992f0.sol:9

solidity 0.5.17

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.090227
Transaction Length: 1
Severity: High
Contract: Core
Function name: currentSystemState()
PC address: 2997
Estimated Gas Usage: 2322 - 37309
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x154c28ba3736ee4e5e89e0081a00f04ec67992f0.sol:5

*/



//pragma solidity 0.5.17;
pragma soli

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.782021
Transaction Length: 1
Severity: High
Contract: Core
Function name: totalSystemAssets()
PC address: 3018
Estimated Gas Usage: 2322 - 37309
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x154c28ba3736ee4e5e89e0081a00f04ec67992f0.sol:728

oracle.getPriceFeed()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.376321
Transaction Length: 1
Severity: High
Contract: Core
Function name: totalSystemAssets()
PC address: 3043
Estimated Gas Usage: 2322 - 37309
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x154c28ba3736ee4e5e89e0081a00f04ec67992f0.sol:3

6

*/



//pragma sol

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.619738
Transaction Length: 1
Severity: High
Contract: Core
Function name: totalSystemAssets()
PC address: 3049
Estimated Gas Usage: 2322 - 37309
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x154c28ba3736ee4e5e89e0081a00f04ec67992f0.sol:10

=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.726479
Transaction Length: 1
Severity: High
Contract: Core
Function name: totalSystemAssets()
PC address: 3069
Estimated Gas Usage: 2380 - 37460
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x154c28ba3736ee4e5e89e0081a00f04ec67992f0.sol:20

s the amount of token

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.816620
Transaction Length: 1
Severity: High
Contract: Core
Function name: totalSystemAssets()
PC address: 3071
Estimated Gas Usage: 2380 - 37460
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x154c28ba3736ee4e5e89e0081a00f04ec67992f0.sol:19

/**
     * @dev Returns the amount of tokens

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:38.899876
Transaction Length: 1
Severity: High
Contract: Core
Function name: dusdToUsd(uint256,bool)
PC address: 13475
Estimated Gas Usage: 2367 - 37354
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x154c28ba3736ee4e5e89e0081a00f04ec67992f0.sol:185

div(a, b, "SafeMath: division by zero")

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol
Total states:48326
443.409359
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.693105
Transaction Length: 1
Severity: High
Contract: Liquidity
Function name: totalRewarded()
PC address: 1667
Estimated Gas Usage: 2933 - 37922
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:5

se-Identifier: 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.509161
Transaction Length: 1
Severity: High
Contract: PoolGetters
Function name: totalRewarded()
PC address: 1667
Estimated Gas Usage: 2933 - 37922
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:5

se-Identifier: 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.542948
Transaction Length: 1
Severity: High
Contract: PoolSetters
Function name: totalRewarded()
PC address: 1667
Estimated Gas Usage: 2933 - 37922
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:5

se-Identifier: 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.332414
Transaction Length: 1
Severity: High
Contract: Liquidity
Function name: totalRewarded()
PC address: 1670
Estimated Gas Usage: 2933 - 37922
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3



// SPDX-License-Identifier: apache

//pra

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.317886
Transaction Length: 1
Severity: High
Contract: PoolGetters
Function name: totalRewarded()
PC address: 1670
Estimated Gas Usage: 2933 - 37922
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3



// SPDX-License-Identifier: apache

//pra

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.320265
Transaction Length: 1
Severity: High
Contract: PoolSetters
Function name: totalRewarded()
PC address: 1670
Estimated Gas Usage: 2933 - 37922
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3



// SPDX-License-Identifier: apache

//pra

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.001904
Transaction Length: 1
Severity: High
Contract: Liquidity
Function name: totalRewarded()
PC address: 1682
Estimated Gas Usage: 2933 - 37922
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2252

dollar().balanceOf(address(this))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.982626
Transaction Length: 1
Severity: High
Contract: PoolGetters
Function name: totalRewarded()
PC address: 1682
Estimated Gas Usage: 2933 - 37922
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2252

dollar().balanceOf(address(this))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.989935
Transaction Length: 1
Severity: High
Contract: PoolSetters
Function name: totalRewarded()
PC address: 1682
Estimated Gas Usage: 2933 - 37922
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2252

dollar().balanceOf(address(this))

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:03.246457
Transaction Length: 1
Severity: High
Contract: Liquidity
Function name: totalRewarded()
PC address: 2749
Estimated Gas Usage: 2933 - 37922
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:26

      return c;
    }



--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:03.026410
Transaction Length: 1
Severity: High
Contract: PoolGetters
Function name: totalRewarded()
PC address: 2749
Estimated Gas Usage: 2933 - 37922
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:26

      return c;
    }



--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:03.077034
Transaction Length: 1
Severity: High
Contract: PoolSetters
Function name: totalRewarded()
PC address: 2749
Estimated Gas Usage: 2933 - 37922
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:26

      return c;
    }



--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.490367
Transaction Length: 1
Severity: Low
Contract: Getters
Function name: expiringCouponsAtIndex(uint256,uint256)
PC address: 2821
Estimated Gas Usage: 1090 - 1375
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3076

_state.epochs[epoch].coupons.expiring[i]

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.862391
Transaction Length: 1
Severity: High
Contract: Getters
Function name: totalNet()
PC address: 4187
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:5

se-Identifier: 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.763151
Transaction Length: 1
Severity: High
Contract: Getters
Function name: totalNet()
PC address: 4190
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3



// SPDX-License-Identifier: apache

//pra

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.324731
Transaction Length: 1
Severity: High
Contract: Getters
Function name: totalNet()
PC address: 4202
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2971

dollar().totalSupply()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.622407
Transaction Length: 1
Severity: High
Contract: Permission
Function name: totalNet()
PC address: 4387
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:5

se-Identifier: 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.721147
Transaction Length: 1
Severity: High
Contract: Setters
Function name: totalNet()
PC address: 4387
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:5

se-Identifier: 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.540245
Transaction Length: 1
Severity: High
Contract: Permission
Function name: totalNet()
PC address: 4390
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3



// SPDX-License-Identifier: apache

//pra

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.615090
Transaction Length: 1
Severity: High
Contract: Setters
Function name: totalNet()
PC address: 4390
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3



// SPDX-License-Identifier: apache

//pra

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.102330
Transaction Length: 1
Severity: High
Contract: Permission
Function name: totalNet()
PC address: 4402
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2971

dollar().totalSupply()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.189285
Transaction Length: 1
Severity: High
Contract: Setters
Function name: totalNet()
PC address: 4402
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2971

dollar().totalSupply()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.857586
Transaction Length: 1
Severity: High
Contract: Deployer1
Function name: totalNet()
PC address: 5018
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:5

se-Identifier: 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.765549
Transaction Length: 1
Severity: High
Contract: Deployer1
Function name: totalNet()
PC address: 5021
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3



// SPDX-License-Identifier: apache

//pra

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.329399
Transaction Length: 1
Severity: High
Contract: Deployer1
Function name: totalNet()
PC address: 5034
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2971

dollar().totalSupply()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.104101
Transaction Length: 1
Severity: High
Contract: Deployer2
Function name: totalNet()
PC address: 5175
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:5

se-Identifier: 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.995973
Transaction Length: 1
Severity: High
Contract: Deployer2
Function name: totalNet()
PC address: 5178
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3



// SPDX-License-Identifier: apache

//pra

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.562411
Transaction Length: 1
Severity: High
Contract: Deployer2
Function name: totalNet()
PC address: 5191
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2971

dollar().totalSupply()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.869248
Transaction Length: 1
Severity: High
Contract: Deployer3
Function name: totalNet()
PC address: 5208
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:5

se-Identifier: 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.745652
Transaction Length: 1
Severity: High
Contract: Deployer3
Function name: totalNet()
PC address: 5211
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:3



// SPDX-License-Identifier: apache

//pra

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.320843
Transaction Length: 1
Severity: High
Contract: Deployer3
Function name: totalNet()
PC address: 5224
Estimated Gas Usage: 2775 - 37669
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:2971

dollar().totalSupply()

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:05.542545
Transaction Length: 1
Severity: High
Contract: Getters
Function name: totalNet()
PC address: 5628
Estimated Gas Usage: 2775 - 37669
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:67

   * - Multiplication c

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:05.153306
Transaction Length: 1
Severity: High
Contract: Permission
Function name: totalNet()
PC address: 5918
Estimated Gas Usage: 2775 - 37669
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:80

urn c;
    }

    /**
 

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:05.250248
Transaction Length: 1
Severity: High
Contract: Setters
Function name: totalNet()
PC address: 5918
Estimated Gas Usage: 2775 - 37669
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:80

urn c;
    }

    /**
 

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:05.382915
Transaction Length: 1
Severity: High
Contract: Deployer1
Function name: totalNet()
PC address: 8077
Estimated Gas Usage: 2775 - 37669
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:80

urn c;
    }

    /**
 

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:05.641256
Transaction Length: 1
Severity: High
Contract: Deployer2
Function name: totalNet()
PC address: 8234
Estimated Gas Usage: 2775 - 37669
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:80

urn c;
    }

    /**
 

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:05.407444
Transaction Length: 1
Severity: High
Contract: Deployer3
Function name: totalNet()
PC address: 8333
Estimated Gas Usage: 2775 - 37669
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xCc336bD59cDCb4eD6f6d145E86b3474CD2c6640f.sol:91

   * Requirements:
    

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xfd87ba715d93e2e00e66fc995c39549073cdf6fc.sol
Total states:3568
14.458129
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.578764
Transaction Length: 1
Severity: Low
Contract: Authorizable
Function name: authorities(uint256)
PC address: 472
Estimated Gas Usage: 805 - 900
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xfd87ba715d93e2e00e66fc995c39549073cdf6fc.sol:2356

address[] public authorities

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.450950
Transaction Length: 1
Severity: Low
Contract: ERC20BridgeProxy
Function name: authorities(uint256)
PC address: 1015
Estimated Gas Usage: 827 - 922
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xfd87ba715d93e2e00e66fc995c39549073cdf6fc.sol:2356

address[] public authorities

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xe7a0f13bfac736976f8f1f7c39433e2b59f8bb52.sol
Total states:138
213.000514
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.593509
Transaction Length: 1
Severity: High
Contract: EthPiptSwap
Function name: convertOddToCvpAndSendToPayout(address[])
PC address: 503
Estimated Gas Usage: 364 - 459
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe7a0f13bfac736976f8f1f7c39433e2b59f8bb52.sol:6

/powerpool.finance/



--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.176879
Transaction Length: 1
Severity: High
Contract: EthPiptSwap
Function name: convertOddToCvpAndSendToPayout(address[])
PC address: 505
Estimated Gas Usage: 364 - 459
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe7a0f13bfac736976f8f1f7c39433e2b59f8bb52.sol:3

*/

/*
https://powerpool.finance/

 

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:06.548561
Transaction Length: 1
Severity: High
Contract: EthPiptSwap
Function name: getEthAndTokensIn(uint256,address[])
PC address: 970
Estimated Gas Usage: 390 - 485
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe7a0f13bfac736976f8f1f7c39433e2b59f8bb52.sol:6

/powerpool.finance/



--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:10.993650
Transaction Length: 1
Severity: High
Contract: EthPiptSwap
Function name: getEthAndTokensIn(uint256,address[])
PC address: 972
Estimated Gas Usage: 390 - 485
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe7a0f13bfac736976f8f1f7c39433e2b59f8bb52.sol:3

*/

/*
https://powerpool.finance/

 

--------------------

==== Use of tx.origin ====
SWC ID: 111
FOUND TIME: 0:00:15.510653
Transaction Length: 1
Severity: Medium
Contract: EthPiptSwap
Function name: convertOddToCvpAndSendToPayout(address[])
PC address: 3111
Estimated Gas Usage: 574 - 3351
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: ../../contracts/m_loop/loop4/0xe7a0f13bfac736976f8f1f7c39433e2b59f8bb52.sol:831

tx.origin

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:58.766306
Transaction Length: 1
Severity: Low
Contract: EthPiptSwap
Function name: getEthAndTokensIn(uint256,address[])
PC address: 6527
Estimated Gas Usage: 3152 - 41149
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xe7a0f13bfac736976f8f1f7c39433e2b59f8bb52.sol:871

tokens[0]

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:33.651073
Transaction Length: 1
Severity: Low
Contract: EthPiptSwap
Function name: feeLevels(uint256)
PC address: 8707
Estimated Gas Usage: 767 - 862
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xe7a0f13bfac736976f8f1f7c39433e2b59f8bb52.sol:703

uint256[] public feeLevels

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.955892
Transaction Length: 1
Severity: High
Contract: EthPiptSwap
Function name: getAmountOut(uint256,uint256,uint256)
PC address: 15569
Estimated Gas Usage: 500 - 595
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe7a0f13bfac736976f8f1f7c39433e2b59f8bb52.sol:290

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x1980d385b2416f3b3c240800c4b2f668e4e8b8ad.sol
Total states:2324
1.99385
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x528732d7ff76a31bd419f1d57d549d7643c02db2.sol
Total states:1293
3.221533
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.053728
Transaction Length: 0
Severity: High
Contract: GLDS
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x528732d7ff76a31bd419f1d57d549d7643c02db2.sol:26

es two unsigned integers, reverts on overfl

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x3246ac4f28148c75e18152ba4d80c93606555ad0.sol
Total states:3260
15.561067
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x9028c4b1d36c8d72217902bd4c2c4e2bf38668fc.sol
Total states:16022
379.34483
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:54.531615
Transaction Length: 1
Severity: Low
Contract: SpacePodsUSDT
Function name: depositSZToken(address,uint256)
PC address: 7032
Estimated Gas Usage: 3085 - 4406
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x9028c4b1d36c8d72217902bd4c2c4e2bf38668fc.sol:336

token.intTransfer(_from,address(this),amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:45.715002
Transaction Length: 2
Severity: Low
Contract: SpacePodsUSDT
Function name: depositSZToken(address,uint256)
PC address: 7032
Estimated Gas Usage: 3085 - 4406
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x9028c4b1d36c8d72217902bd4c2c4e2bf38668fc.sol:336

token.intTransfer(_from,address(this),amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:21.143812
Transaction Length: 1
Severity: Low
Contract: SpacePodsUSDT
Function name: depositToken(address,uint256)
PC address: 7631
Estimated Gas Usage: 2685 - 3581
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x9028c4b1d36c8d72217902bd4c2c4e2bf38668fc.sol:309

token.deposit(_from,amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:15.011219
Transaction Length: 2
Severity: Low
Contract: SpacePodsUSDT
Function name: depositToken(address,uint256)
PC address: 7631
Estimated Gas Usage: 2685 - 3581
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x9028c4b1d36c8d72217902bd4c2c4e2bf38668fc.sol:309

token.deposit(_from,amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:05.069425
Transaction Length: 1
Severity: Low
Contract: SpacePodsUSDT
Function name: depositTokenTerm(address,uint256,uint256)
PC address: 7968
Estimated Gas Usage: 4425 - 40403
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x9028c4b1d36c8d72217902bd4c2c4e2bf38668fc.sol:312

token.intTransfer(_from,address(this),amount * (10 ** 12))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:46.918346
Transaction Length: 2
Severity: Low
Contract: SpacePodsUSDT
Function name: depositTokenTerm(address,uint256,uint256)
PC address: 7968
Estimated Gas Usage: 4425 - 40403
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x9028c4b1d36c8d72217902bd4c2c4e2bf38668fc.sol:312

token.intTransfer(_from,address(this),amount * (10 ** 12))

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:09.167316
Transaction Length: 1
Severity: Low
Contract: SpacePodsUSDT
Function name: interests(uint256)
PC address: 11449
Estimated Gas Usage: 746 - 841
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x9028c4b1d36c8d72217902bd4c2c4e2bf38668fc.sol:146

InterestStruct[] public interests

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:17.505311
Transaction Length: 1
Severity: Low
Contract: SpacePodsUSDT
Function name: borrow(uint256)
PC address: 20812
Estimated Gas Usage: 57191 - 296141
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x9028c4b1d36c8d72217902bd4c2c4e2bf38668fc.sol:654

catToken.intTransfer(_addr,address(this),amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x488E43a7aD0b7244767A223c68A60e0a684b33a4.sol
Total states:272
73.253061
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.082979
Transaction Length: 0
Severity: High
Contract: FarmPrdzEth60
Function name: constructor
PC address: 430
Estimated Gas Usage: 82565 - 406328
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x488E43a7aD0b7244767A223c68A60e0a684b33a4.sol:34

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.479976
Transaction Length: 0
Severity: Low
Contract: FarmPrdzEth60
Function name: constructor
PC address: 444
Estimated Gas Usage: 82575 - 406338
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x488E43a7aD0b7244767A223c68A60e0a684b33a4.sol:35

assert(c >= a)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x33c2c9b579c04748a9dd1069aae24ef47239ff37.sol
Total states:10094
22.467474
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.046156
Transaction Length: 0
Severity: High
Contract: SOL
Function name: constructor
PC address: 98
Estimated Gas Usage: 233 - 3006
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x33c2c9b579c04748a9dd1069aae24ef47239ff37.sol:28

 view returns(uint);



    function transf

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.313322
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x33c2c9b579c04748a9dd1069aae24ef47239ff37.sol:288

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xc8b227ae84a162744465007c38240b367928d5f8.sol
Total states:2116
85.26532
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:48.944507
Transaction Length: 1
Severity: Low
Contract: SakeSwapBatchTrade
Function name: swapExactETHForTokens(address,uint8,bool)
PC address: 1334
Estimated Gas Usage: 5815 - 76305
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xc8b227ae84a162744465007c38240b367928d5f8.sol:426

IWETH(weth).deposit.value(msg.value)()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:59.264263
Transaction Length: 1
Severity: Low
Contract: SakeSwapBatchTrade
Function name: swapExactETHForTokens(address,uint8,bool)
PC address: 1622
Estimated Gas Usage: 8284 - 113905
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xc8b227ae84a162744465007c38240b367928d5f8.sol:427

IERC20(weth).approve(address(router), uint256(-1))

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:23.508732
Transaction Length: 1
Severity: Medium
Contract: SakeSwapBatchTrade
Function name: swapExactETHForTokens(address,uint8,bool)
PC address: 1911
Estimated Gas Usage: 10396 - 151004
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/m_loop/loop4/0xc8b227ae84a162744465007c38240b367928d5f8.sol:428

IERC20(token).approve(address(router), uint256(-1))

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:24.184540
Transaction Length: 1
Severity: Low
Contract: SakeSwapBatchTrade
Function name: receive()
PC address: 4183
Estimated Gas Usage: 613 - 1038
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xc8b227ae84a162744465007c38240b367928d5f8.sol:406

assert(msg.sender == weth)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x5fe619bc74a971836c9c71ade2d944fd93457c60.sol
Total states:3281
3622.091788
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.574311
Transaction Length: 1
Severity: Low
Contract: AgnosticPrivateSale
Function name: allUsers(uint256)
PC address: 2771
Estimated Gas Usage: 701 - 796
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x5fe619bc74a971836c9c71ade2d944fd93457c60.sol:140

address[] public allUsers

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xfdd6d5c17d5d0fff346554a657f183b9a03720ea.sol
Total states:77
3.265984
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x8f3228A67Fde7BD306716904E1d086462f8711f8.sol
Total states:427
39.710708
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.194763
Transaction Length: 1
Severity: High
Contract: VaultKeeper
Function name: earn(address[])
PC address: 158
Estimated Gas Usage: 296 - 391
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x8f3228A67Fde7BD306716904E1d086462f8711f8.sol:5

olidity 0.7.0;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.481988
Transaction Length: 1
Severity: High
Contract: VaultKeeper
Function name: earn(address[])
PC address: 160
Estimated Gas Usage: 296 - 391
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x8f3228A67Fde7BD306716904E1d086462f8711f8.sol:3

*/

//pragma solidity 0.7.0;
pragma 

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:26.617522
Transaction Length: 1
Severity: Medium
Contract: VaultKeeper
Function name: earn(address[])
PC address: 197
Estimated Gas Usage: 3734 - 72391
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 360
Offset: 360
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/m_loop/loop4/0x8f3228A67Fde7BD306716904E1d086462f8711f8.sol:14

function earn(address[] calldata vaults) external {
        for (uint i=0; i<vaults.length; i++) {
            Vault(vaults[i]).earn();
        }
    }

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:36.253889
Transaction Length: 1
Severity: Medium
Contract: VaultKeeper
Function name: earn(address[])
PC address: 360
Estimated Gas Usage: 4582 - 73520
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/m_loop/loop4/0x8f3228A67Fde7BD306716904E1d086462f8711f8.sol:16

Vault(vaults[i]).earn()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol
Total states:35577
226.526857
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.129599
Transaction Length: 1
Severity: High
Contract: LidSimplifiedPresaleRedeemer
Function name: initialize(uint256,uint256,uint256[],uint256[],address,address)
PC address: 1004
Estimated Gas Usage: 417 - 512
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:5

olidity 0.5.16;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.154489
Transaction Length: 1
Severity: High
Contract: LidSimplifiedPresaleRedeemer
Function name: initialize(uint256,uint256,uint256[],uint256[],address,address)
PC address: 1006
Estimated Gas Usage: 417 - 512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:3

*/

//pragma solidity 0.5.16;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:15.129228
Transaction Length: 1
Severity: High
Contract: LidSimplifiedPresaleRedeemer
Function name: initialize(uint256,uint256,uint256[],uint256[],address,address)
PC address: 1089
Estimated Gas Usage: 593 - 688
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:5

olidity 0.5.16;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.894790
Transaction Length: 1
Severity: High
Contract: LidSimplifiedPresaleRedeemer
Function name: initialize(uint256,uint256,uint256[],uint256[],address,address)
PC address: 1091
Estimated Gas Usage: 593 - 688
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:3

*/

//pragma solidity 0.5.16;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.232196
Transaction Length: 1
Severity: High
Contract: LidSimplifiedPresale
Function name: setTokenPools(uint256,uint256,address[],uint256[])
PC address: 1195
Estimated Gas Usage: 462 - 557
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:5

olidity 0.5.16;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.236857
Transaction Length: 1
Severity: High
Contract: LidSimplifiedPresale
Function name: setTokenPools(uint256,uint256,address[],uint256[])
PC address: 1197
Estimated Gas Usage: 462 - 557
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:3

*/

//pragma solidity 0.5.16;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.373276
Transaction Length: 1
Severity: High
Contract: LidSimplifiedPresale
Function name: setTokenPools(uint256,uint256,address[],uint256[])
PC address: 1280
Estimated Gas Usage: 638 - 733
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:5

olidity 0.5.16;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.195300
Transaction Length: 1
Severity: High
Contract: LidSimplifiedPresale
Function name: setTokenPools(uint256,uint256,address[],uint256[])
PC address: 1282
Estimated Gas Usage: 638 - 733
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:3

*/

//pragma solidity 0.5.16;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.407543
Transaction Length: 1
Severity: High
Contract: LidSimplifiedPresaleAccess
Function name: interpolate(uint256,uint256,uint256,uint256,uint256)
PC address: 2313
Estimated Gas Usage: 997 - 1848
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:162

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.788624
Transaction Length: 1
Severity: Low
Contract: LidSimplifiedPresaleRedeemer
Function name: bonusRangeBP(uint256)
PC address: 2585
Estimated Gas Usage: 745 - 840
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:784

uint[] public bonusRangeBP

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.544132
Transaction Length: 1
Severity: Low
Contract: LidSimplifiedPresale
Function name: tokenPools(uint256)
PC address: 3262
Estimated Gas Usage: 703 - 798
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:1266

address[] public tokenPools

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:03.811877
Transaction Length: 2
Severity: Low
Contract: LidSimplifiedPresale
Function name: tokenPools(uint256)
PC address: 3262
Estimated Gas Usage: 703 - 798
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:1266

address[] public tokenPools

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:39.681187
Transaction Length: 1
Severity: Low
Contract: LidSimplifiedPresaleRedeemer
Function name: bonusRangeStart(uint256)
PC address: 6017
Estimated Gas Usage: 744 - 839
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:783

uint[] public bonusRangeStart

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:37.163056
Transaction Length: 1
Severity: Low
Contract: LidStaking
Function name: stakeHandlers(uint256)
PC address: 6118
Estimated Gas Usage: 790 - 885
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:962

IStakeHandler[] public stakeHandlers

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:00.807930
Transaction Length: 2
Severity: High
Contract: LidStaking
Function name: unregisterStakeHandler(uint256)
PC address: 6315
Estimated Gas Usage: 1699 - 2124
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:1112

stakeHandlers.length-1

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:09.071551
Transaction Length: 2
Severity: Low
Contract: LidStaking
Function name: unregisterStakeHandler(uint256)
PC address: 6326
Estimated Gas Usage: 1709 - 2134
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:1112

stakeHandlers[stakeHandlers.length-1]

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:35.736570
Transaction Length: 1
Severity: High
Contract: LidSimplifiedPresaleRedeemer
Function name: calculateRatePerEth(uint256,uint256,uint256)
PC address: 6866
Estimated Gas Usage: 955 - 1050
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:162

a * b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:30.303313
Transaction Length: 1
Severity: Low
Contract: LidSimplifiedPresale
Function name: tokenPoolBPs(uint256)
PC address: 13267
Estimated Gas Usage: 722 - 817
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:1267

uint[] public tokenPoolBPs

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.858199
Transaction Length: 1
Severity: High
Contract: LidStaking
Function name: findTaxAmount(uint256,uint256)
PC address: 13348
Estimated Gas Usage: 474 - 569
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50011ba91948c198ba6e298cc703f03cb66734e4.sol:162

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x193495072f4beaef219bf6e075dcb3692a673fab.sol
Total states:39010
264.574162
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x8c9e37f0e99d7e82bffed46dc83af17e9fe9f41f.sol
Total states:2324
1.913037
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x594000baf94b5185054cf7ba809d9ec089e2e62e.sol
Total states:21448
41.052883
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x5248ab2b7f0db71161f8fa975c49576a8e38a24f.sol
Total states:77
3.282717
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xf8484b3d9e8189d4743b0ecf35a87c58b76cee7b.sol
Total states:77
2.922057
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x27cf81031a70cb2e8af1772897220a3ddf02a46a.sol
Total states:474
1.01908
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.094448
Transaction Length: 0
Severity: High
Contract: EthMadness
Function name: constructor
PC address: 147
Estimated Gas Usage: 5724 - 28827
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x27cf81031a70cb2e8af1772897220a3ddf02a46a.sol:15

function approve(addr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.109753
Transaction Length: 0
Severity: High
Contract: EthMadness
Function name: constructor
PC address: 149
Estimated Gas Usage: 5724 - 28827
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x27cf81031a70cb2e8af1772897220a3ddf02a46a.sol:13

 returns (bool);

    function approve(addre

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x0a037baedcec0a60c8d30dd33e41bf94717ed160.sol
Total states:15168
35.999766
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.098316
Transaction Length: 0
Severity: High
Contract: LexList
Function name: constructor
PC address: 110
Estimated Gas Usage: 257 - 3030
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x0a037baedcec0a60c8d30dd33e41bf94717ed160.sol:9

╗     
███

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.113458
Transaction Length: 0
Severity: High
Contract: LexList
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x0a037baedcec0a60c8d30dd33e41bf94717ed160.sol:9

═╝   ██╔██╗     
███

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.375591
Transaction Length: 1
Severity: High
Contract: LexList
Function name: list(address[])
PC address: 284
Estimated Gas Usage: 319 - 414
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x0a037baedcec0a60c8d30dd33e41bf94717ed160.sol:6

     ████

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.887890
Transaction Length: 1
Severity: High
Contract: LexList
Function name: list(address[])
PC address: 286
Estimated Gas Usage: 319 - 414
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x0a037baedcec0a60c8d30dd33e41bf94717ed160.sol:3

*/

/*
██╗     █████

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.889344
Transaction Length: 1
Severity: High
Contract: LexList
Function name: updateMessage(string)
PC address: 506
Estimated Gas Usage: 363 - 458
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x0a037baedcec0a60c8d30dd33e41bf94717ed160.sol:3

*/

/*
██╗     ████

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:14.908503
Transaction Length: 1
Severity: High
Contract: LexList
Function name: delist(address[])
PC address: 625
Estimated Gas Usage: 385 - 480
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x0a037baedcec0a60c8d30dd33e41bf94717ed160.sol:6

     ████

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.332216
Transaction Length: 1
Severity: High
Contract: LexList
Function name: delist(address[])
PC address: 627
Estimated Gas Usage: 385 - 480
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x0a037baedcec0a60c8d30dd33e41bf94717ed160.sol:3

*/

/*
██╗     █████

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:22.488732
Transaction Length: 1
Severity: Low
Contract: LexList
Function name: listings(uint256)
PC address: 4295
Estimated Gas Usage: 722 - 817
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x0a037baedcec0a60c8d30dd33e41bf94717ed160.sol:23

address[] public listings

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xc18f41600d111a195b107f89e82f45331ace38bb.sol
Total states:3678
244.074627
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:04:00.016124
Transaction Length: 1
Severity: Medium
Contract: miningPoolAirdropper
Function name: test(uint256,uint256)
PC address: 1224
Estimated Gas Usage: 4741 - 75368
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 5208
Offset: 5466
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/m_loop/loop4/0xc18f41600d111a195b107f89e82f45331ace38bb.sol:1202

function test (uint256 j,uint256 pid) public view returns(uint256  a){

           address _addr =  masterChef.regisUser(j);

            

           (,uint256 amount,,,) =  masterChef.userInfo(pid,_addr);

           if(pid == 0){

               return Math.sqrt(amount.mul(amount).mul(1e18).div(pzUsdtPrice).div(1e6));

           }else if(pid == 1){

               return Math.sqrt(amount.mul(amount).mul(ethPzPrice));

           }

          

    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:01.214182
Transaction Length: 1
Severity: Low
Contract: miningPoolAirdropper
Function name: airDefiTransfer(address)
PC address: 2591
Estimated Gas Usage: 3020 - 4296
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xc18f41600d111a195b107f89e82f45331ace38bb.sol:1136

token.transfer(_recipients,airdropAmout)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:42.766264
Transaction Length: 1
Severity: High
Contract: miningPoolAirdropper
Function name: countPz(uint256,uint256)
PC address: 6086
Estimated Gas Usage: 859 - 954
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xc18f41600d111a195b107f89e82f45331ace38bb.sol:268

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xaee188053b3911234e52305ec1b4d9603ff68863.sol
Total states:2324
2.067344
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x672bf615718637b3349f8c417b0f0364a244593b.sol
Total states:4628
11.772827
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.395441
Transaction Length: 1
Severity: Low
Contract: HypeStake
Function name: ADDFUNDS(uint256)
PC address: 6904
Estimated Gas Usage: 1663 - 2654
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x672bf615718637b3349f8c417b0f0364a244593b.sol:764

IERC20(Hype).transferFromStake(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:06.255125
Transaction Length: 1
Severity: Low
Contract: HypeStake
Function name: STAKE(uint256)
PC address: 7447
Estimated Gas Usage: 2451 - 3442
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x672bf615718637b3349f8c417b0f0364a244593b.sol:668

IERC20(Hype).transferFromStake(msg.sender, address(this), tokens)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.397008
Transaction Length: 2
Severity: Low
Contract: HypeStake
Function name: STAKE(uint256)
PC address: 7447
Estimated Gas Usage: 2472 - 3463
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x672bf615718637b3349f8c417b0f0364a244593b.sol:668

IERC20(Hype).transferFromStake(msg.sender, address(this), tokens)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.039936
Transaction Length: 1
Severity: High
Contract: HypeStake
Function name: ADDFUNDS(uint256)
PC address: 9273
Estimated Gas Usage: 3425 - 38602
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x672bf615718637b3349f8c417b0f0364a244593b.sol:228

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x785fc58bf1e5461da6192fc81cf9cb3c8e7e6928.sol
Total states:4378
15.705387
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:07.959422
Transaction Length: 1
Severity: Low
Contract: HDCOREv1Router
Function name: fallback
PC address: 2051
Estimated Gas Usage: 7941 - 29735
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x785fc58bf1e5461da6192fc81cf9cb3c8e7e6928.sol:641

_WETH.deposit.value(msg.value)()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:08.794979
Transaction Length: 1
Severity: Low
Contract: HDCOREv1Router
Function name: refreshApproval()
PC address: 4460
Estimated Gas Usage: 1899 - 3125
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x785fc58bf1e5461da6192fc81cf9cb3c8e7e6928.sol:625

IUniswapV2Pair(_hdcoreWETHPair).approve(address(_hdcoreVault), uint(-1))

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x57813e8D1E77c069e66d0BCE3729288Ac4d6f0c8.sol
Total states:60
43.723567
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:22.167061
Transaction Length: 1
Severity: Low
Contract: MainnetUsdtToUsdtAssimilator
Function name: intakeRawAndGetBalance(uint256)
PC address: 3607
Estimated Gas Usage: 896 - 3106
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x57813e8D1E77c069e66d0BCE3729288Ac4d6f0c8.sol:956

token.call(data)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xe29659a35260b87264ebf1155dd03b7de17d9b26.sol
Total states:14690
303.440997
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:44.195627
Transaction Length: 1
Severity: Low
Contract: SpacePodsDAI
Function name: depositSZToken(address,uint256)
PC address: 7015
Estimated Gas Usage: 2653 - 3974
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xe29659a35260b87264ebf1155dd03b7de17d9b26.sol:332

token.intTransfer(_from,address(this),amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:22.358880
Transaction Length: 2
Severity: Low
Contract: SpacePodsDAI
Function name: depositSZToken(address,uint256)
PC address: 7015
Estimated Gas Usage: 2653 - 3974
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xe29659a35260b87264ebf1155dd03b7de17d9b26.sol:332

token.intTransfer(_from,address(this),amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:17.677859
Transaction Length: 1
Severity: Low
Contract: SpacePodsDAI
Function name: depositToken(address,uint256)
PC address: 7599
Estimated Gas Usage: 2666 - 3892
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xe29659a35260b87264ebf1155dd03b7de17d9b26.sol:306

token.deposit(_from,amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:54.989882
Transaction Length: 2
Severity: Low
Contract: SpacePodsDAI
Function name: depositToken(address,uint256)
PC address: 7599
Estimated Gas Usage: 2666 - 3892
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xe29659a35260b87264ebf1155dd03b7de17d9b26.sol:306

token.deposit(_from,amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:01.066785
Transaction Length: 1
Severity: Low
Contract: SpacePodsDAI
Function name: depositTokenTerm(address,uint256,uint256)
PC address: 7929
Estimated Gas Usage: 4398 - 40706
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xe29659a35260b87264ebf1155dd03b7de17d9b26.sol:309

token.intTransfer(_from,address(this),amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:30.395631
Transaction Length: 2
Severity: Low
Contract: SpacePodsDAI
Function name: depositTokenTerm(address,uint256,uint256)
PC address: 7929
Estimated Gas Usage: 4398 - 40706
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xe29659a35260b87264ebf1155dd03b7de17d9b26.sol:309

token.intTransfer(_from,address(this),amount)

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:49.518017
Transaction Length: 1
Severity: Low
Contract: SpacePodsDAI
Function name: interests(uint256)
PC address: 11068
Estimated Gas Usage: 746 - 841
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xe29659a35260b87264ebf1155dd03b7de17d9b26.sol:144

InterestStruct[] public interests

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xebccd7d19767007fd6cedb5b1ead8e364e65fe39.sol
Total states:16824
35.986534
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.822157
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xebccd7d19767007fd6cedb5b1ead8e364e65fe39.sol:38

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.480207
Transaction Length: 1
Severity: Low
Contract: COMMAOPENCHAT
Function name: lockState(address,uint256)
PC address: 4016
Estimated Gas Usage: 830 - 1115
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xebccd7d19767007fd6cedb5b1ead8e364e65fe39.sol:319

lockInfo[_holder][_idx]

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.455475
Transaction Length: 2
Severity: High
Contract: COMMAOPENCHAT
Function name: increaseAllowance(address,uint256)
PC address: 11747
Estimated Gas Usage: 968 - 1443
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xebccd7d19767007fd6cedb5b1ead8e364e65fe39.sol:38

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xcC4D9E47c0c43A384A205F954e8a80C2a2e9d0b1.sol
Total states:3761
41.722826
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.025881
Transaction Length: 1
Severity: High
Contract: Tellor
Function name: submitMiningSolution(string,uint256[5],uint256[5])
PC address: 1033
Estimated Gas Usage: 407 - 502
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xcC4D9E47c0c43A384A205F954e8a80C2a2e9d0b1.sol:3

*/

// File: contracts/libraries/Sa

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.361780
Transaction Length: 1
Severity: High
Contract: Tellor
Function name: submitMiningSolution(string,uint256,uint256)
PC address: 1230
Estimated Gas Usage: 341 - 436
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xcC4D9E47c0c43A384A205F954e8a80C2a2e9d0b1.sol:3

*/

// File: contracts/libraries/Sa

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xa12AA89BeB87332e8bfC2087956d11960E3d103e.sol
Total states:34354
252.223207
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x31d19349b6db6a3231a493bd272c942735f659db.sol
Total states:1759
6.188606
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xc4749f416c7dc27e09f67ac02f23a90e0ba6ad21.sol
Total states:4618
965.548551
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.671557
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: deleteTokens(uint256[])
PC address: 726
Estimated Gas Usage: 408 - 503
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xc4749f416c7dc27e09f67ac02f23a90e0ba6ad21.sol:9

e: openzeppelin-solid

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.635855
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: deleteTokens(uint256[])
PC address: 728
Estimated Gas Usage: 408 - 503
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xc4749f416c7dc27e09f67ac02f23a90e0ba6ad21.sol:3



*/



// File: openzeppelin-solidi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.859039
Transaction Length: 1
Severity: High
Contract: ERC721
Function name: safeTransferFrom(address,address,uint256,bytes)
PC address: 1136
Estimated Gas Usage: 477 - 572
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xc4749f416c7dc27e09f67ac02f23a90e0ba6ad21.sol:3



*/



// File: openzeppelin-solid

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.808224
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: safeTransferFrom(address,address,uint256,bytes)
PC address: 1759
Estimated Gas Usage: 522 - 617
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xc4749f416c7dc27e09f67ac02f23a90e0ba6ad21.sol:3



*/



// File: openzeppelin-solid

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:26.464116
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: getMessageHash(address,uint256[],uint256)
PC address: 1976
Estimated Gas Usage: 373 - 468
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xc4749f416c7dc27e09f67ac02f23a90e0ba6ad21.sol:9

e: openzeppelin-solid

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:31.730739
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: getMessageHash(address,uint256[],uint256)
PC address: 1978
Estimated Gas Usage: 373 - 468
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xc4749f416c7dc27e09f67ac02f23a90e0ba6ad21.sol:3



*/



// File: openzeppelin-solidi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:14:05.570406
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: claimLandTokens(address,uint256[],uint256,uint8,bytes32,bytes32)
PC address: 2288
Estimated Gas Usage: 417 - 512
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xc4749f416c7dc27e09f67ac02f23a90e0ba6ad21.sol:9

e: openzeppelin-solid

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:14:10.975505
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: claimLandTokens(address,uint256[],uint256,uint8,bytes32,bytes32)
PC address: 2290
Estimated Gas Usage: 417 - 512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xc4749f416c7dc27e09f67ac02f23a90e0ba6ad21.sol:3



*/



// File: openzeppelin-solidi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:59.475928
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: getMessageHash(address,uint256[],uint256)
PC address: 6030
Estimated Gas Usage: 786 - 4222
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xc4749f416c7dc27e09f67ac02f23a90e0ba6ad21.sol:2170

abi.encode(userAddress, plotIds, nonce)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:50.936490
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: getMessageHash(address,uint256[],uint256)
PC address: 6070
Estimated Gas Usage: 936 - 4748
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xc4749f416c7dc27e09f67ac02f23a90e0ba6ad21.sol:2170

abi.encode(userAddress, plotIds, nonce)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xc2080c74de89e6dc871b083ddc99279f25c3bc83.sol
Total states:669
1.299037
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xaaa601ae20077f9fae80494ddc36bb39c952c2d03.sol
Total states:7896
55.37677
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.138430
Transaction Length: 1
Severity: High
Contract: PriceFeeds
Function name: setPriceFeed(address[],address[])
PC address: 1295
Estimated Gas Usage: 385 - 480
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xaaa601ae20077f9fae80494ddc36bb39c952c2d03.sol:6

yright 2017-2020, bZe

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.379989
Transaction Length: 1
Severity: High
Contract: PriceFeeds
Function name: setPriceFeed(address[],address[])
PC address: 1297
Estimated Gas Usage: 385 - 480
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xaaa601ae20077f9fae80494ddc36bb39c952c2d03.sol:3

*/

/**
 * Copyright 2017-2020, bZer

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:17.865967
Transaction Length: 1
Severity: High
Contract: PriceFeeds
Function name: setPriceFeed(address[],address[])
PC address: 1380
Estimated Gas Usage: 561 - 656
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xaaa601ae20077f9fae80494ddc36bb39c952c2d03.sol:6

yright 2017-2020, bZe

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:32.477612
Transaction Length: 1
Severity: High
Contract: PriceFeeds
Function name: setPriceFeed(address[],address[])
PC address: 1382
Estimated Gas Usage: 561 - 656
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xaaa601ae20077f9fae80494ddc36bb39c952c2d03.sol:3

*/

/**
 * Copyright 2017-2020, bZer

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:45.474610
Transaction Length: 1
Severity: High
Contract: PriceFeeds
Function name: setDecimals(address[])
PC address: 1865
Estimated Gas Usage: 385 - 480
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xaaa601ae20077f9fae80494ddc36bb39c952c2d03.sol:6

yright 2017-2020, bZe

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:49.336078
Transaction Length: 1
Severity: High
Contract: PriceFeeds
Function name: setDecimals(address[])
PC address: 1867
Estimated Gas Usage: 385 - 480
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xaaa601ae20077f9fae80494ddc36bb39c952c2d03.sol:3

*/

/**
 * Copyright 2017-2020, bZer

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.227737
Transaction Length: 1
Severity: High
Contract: PriceFeeds
Function name: checkPriceDisagreement(address,address,uint256,uint256,uint256)
PC address: 6399
Estimated Gas Usage: 1065 - 1490
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xaaa601ae20077f9fae80494ddc36bb39c952c2d03.sol:181

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x5df8603b461d536bf6095c73d9857c14d1a8945d.sol
Total states:4206
6.989736
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.205632
Transaction Length: 1
Severity: Low
Contract: DODOMine
Function name: updatePool(uint256)
PC address: 3648
Estimated Gas Usage: 852 - 947
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x5df8603b461d536bf6095c73d9857c14d1a8945d.sol:517

poolInfos[_pid]

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.581742
Transaction Length: 1
Severity: Low
Contract: DODOMine
Function name: poolInfos(uint256)
PC address: 4121
Estimated Gas Usage: 893 - 988
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x5df8603b461d536bf6095c73d9857c14d1a8945d.sol:360

PoolInfo[] public poolInfos

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol
Total states:52177
1061.389869
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.197083
Transaction Length: 1
Severity: High
Contract: Module
Function name: getModuleAddress(string)
PC address: 416
Estimated Gas Usage: 385 - 480
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.040004
Transaction Length: 1
Severity: High
Contract: PoolToken
Function name: initialize(string,string,uint8)
PC address: 1000
Estimated Gas Usage: 409 - 504
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.923613
Transaction Length: 1
Severity: High
Contract: PoolToken_Aave_sUSD
Function name: initialize(string,string,uint8)
PC address: 1000
Estimated Gas Usage: 409 - 504
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.223049
Transaction Length: 1
Severity: High
Contract: PoolToken
Function name: initialize(string,string,uint8)
PC address: 1151
Estimated Gas Usage: 751 - 3528
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:12.494867
Transaction Length: 1
Severity: High
Contract: PoolToken_Aave_sUSD
Function name: initialize(string,string,uint8)
PC address: 1151
Estimated Gas Usage: 751 - 3528
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.419726
Transaction Length: 1
Severity: High
Contract: DistributionToken
Function name: claimDistributions(address[],uint256)
PC address: 2226
Estimated Gas Usage: 429 - 524
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:5

openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.179820
Transaction Length: 1
Severity: High
Contract: DistributionToken
Function name: claimDistributions(address[],uint256)
PC address: 2228
Estimated Gas Usage: 429 - 524
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:3

*/

// File: @openzeppelin\upgrades\

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.686898
Transaction Length: 1
Severity: High
Contract: DistributionToken
Function name: claimDistributions(address[])
PC address: 2357
Estimated Gas Usage: 363 - 458
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:5

openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:15.152636
Transaction Length: 1
Severity: High
Contract: DistributionToken
Function name: claimDistributions(address[])
PC address: 2359
Estimated Gas Usage: 363 - 458
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:3

*/

// File: @openzeppelin\upgrades\

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:30.185156
Transaction Length: 1
Severity: High
Contract: PoolToken
Function name: getModuleAddress(string)
PC address: 2526
Estimated Gas Usage: 429 - 524
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:35.113024
Transaction Length: 1
Severity: High
Contract: PoolToken_Aave_sUSD
Function name: getModuleAddress(string)
PC address: 2526
Estimated Gas Usage: 429 - 524
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:26.903693
Transaction Length: 1
Severity: High
Contract: PoolToken
Function name: initialize(address,string,string)
PC address: 3179
Estimated Gas Usage: 485 - 580
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:31.442066
Transaction Length: 1
Severity: High
Contract: PoolToken_Aave_sUSD
Function name: initialize(address,string,string)
PC address: 3179
Estimated Gas Usage: 485 - 580
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.109378
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3249
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:212

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:47.756613
Transaction Length: 1
Severity: High
Contract: PoolToken
Function name: initialize(address,string,string)
PC address: 3330
Estimated Gas Usage: 827 - 3604
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:55.808216
Transaction Length: 1
Severity: High
Contract: PoolToken_Aave_sUSD
Function name: initialize(address,string,string)
PC address: 3330
Estimated Gas Usage: 827 - 3604
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:3

*/

// File: @openzeppelin\upgrades

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.343052
Transaction Length: 1
Severity: Low
Contract: DistributionToken
Function name: distributions(uint256)
PC address: 3405
Estimated Gas Usage: 724 - 819
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:995

Distribution[] public distributions

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.471998
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3429
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:212

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.041051
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 4214
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:212

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:39.556159
Transaction Length: 1
Severity: Low
Contract: PoolToken
Function name: distributions(uint256)
PC address: 6392
Estimated Gas Usage: 768 - 863
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:995

Distribution[] public distributions

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:40.465638
Transaction Length: 1
Severity: Low
Contract: PoolToken_Aave_sUSD
Function name: distributions(uint256)
PC address: 6392
Estimated Gas Usage: 768 - 863
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:995

Distribution[] public distributions

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.001088
Transaction Length: 2
Severity: High
Contract: DistributionToken
Function name: increaseAllowance(address,uint256)
PC address: 6759
Estimated Gas Usage: 1104 - 1579
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1f29d7dB5428fe4d65524925014fC34294429B50.sol:212

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x0f58c61b4ba65b02e18f53a1c13bfd105bd61090.sol
Total states:18680
153.36429
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.848669
Transaction Length: 1
Severity: High
Contract: BasketCoin
Function name: bulkTransfer(address[],uint256[])
PC address: 757
Estimated Gas Usage: 408 - 503
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x0f58c61b4ba65b02e18f53a1c13bfd105bd61090.sol:5

olidity ^0.5.17;
prag

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.748484
Transaction Length: 1
Severity: High
Contract: BasketCoin
Function name: bulkTransfer(address[],uint256[])
PC address: 759
Estimated Gas Usage: 408 - 503
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x0f58c61b4ba65b02e18f53a1c13bfd105bd61090.sol:3

*/

//pragma solidity ^0.5.17;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.469851
Transaction Length: 1
Severity: High
Contract: BasketCoin
Function name: bulkTransfer(address[],uint256[])
PC address: 842
Estimated Gas Usage: 584 - 679
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x0f58c61b4ba65b02e18f53a1c13bfd105bd61090.sol:5

olidity ^0.5.17;
prag

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:27.252776
Transaction Length: 1
Severity: High
Contract: BasketCoin
Function name: bulkTransfer(address[],uint256[])
PC address: 844
Estimated Gas Usage: 584 - 679
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x0f58c61b4ba65b02e18f53a1c13bfd105bd61090.sol:3

*/

//pragma solidity ^0.5.17;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:46.555085
Transaction Length: 1
Severity: High
Contract: BasketCoin
Function name: transferAndCall(address,uint256,bytes)
PC address: 1417
Estimated Gas Usage: 511 - 606
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x0f58c61b4ba65b02e18f53a1c13bfd105bd61090.sol:3

*/

//pragma solidity ^0.5.17;
prag

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:56.013310
Transaction Length: 1
Severity: Low
Contract: BasketCoin
Function name: unfreeze(uint256)
PC address: 6429
Estimated Gas Usage: 1375 - 1660
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x0f58c61b4ba65b02e18f53a1c13bfd105bd61090.sol:212

_burnedAmount * FLOAT_SCALAR / info.totalFrozen

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:23.615762
Transaction Length: 2
Severity: Low
Contract: BasketCoin
Function name: unfreeze(uint256)
PC address: 6429
Estimated Gas Usage: 1375 - 1660
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x0f58c61b4ba65b02e18f53a1c13bfd105bd61090.sol:212

_burnedAmount * FLOAT_SCALAR / info.totalFrozen

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x623e539cd4108e6cab4458f25517adc48eeb4725.sol
Total states:836
2.332797
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x02c1ffd832143973fcec0cf3cac020ecb43dfb1a.sol
Total states:1950
5.902023
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol
Total states:1586
686.863016
==== Delegatecall Proxy ====
SWC ID: 112
FOUND TIME: 0:00:00.245935
Transaction Length: 1
Severity: Low
Contract: OwnedUpgradeabilityProxy
Function name: fallback
PC address: 180
Estimated Gas Usage: 771 - 5753
The contract implements a delegatecall proxy.
The smart contract forwards the received calldata via delegatecall. Note that callerscan execute arbitrary functions in the callee contract and that the callee contract can access the storage of the calling contract. Make sure that the callee contract is audited properly.DELEGATECALL target: Concat(5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy),
       5_code(OwnedUpgradeabilityProxy))
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:913

delegatecall(gas, _impl, ptr, calldatasize, 0, 0)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.593810
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: initiate(address,address,address,address[])
PC address: 1211
Estimated Gas Usage: 463 - 558
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:9

e: contracts/external

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.548935
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: initiate(address,address,address,address[])
PC address: 1213
Estimated Gas Usage: 463 - 558
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:3



*/



// File: contracts/external/

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:01:16.630368
Transaction Length: 1
Severity: Medium
Contract: MarketRegistry
Function name: transferAssets(address,address,uint256)
PC address: 2105
Estimated Gas Usage: 3436 - 72609
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 10805
Offset: 26176
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:2516

function transferAssets(address _asset, address payable _to, uint _amount) external onlyAuthorizedToGovern {

      _transferAsset(_asset, _to, _amount);

    }

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:01:38.583069
Transaction Length: 1
Severity: Medium
Contract: MarketRegistry
Function name: setMasterAddress()
PC address: 2131
Estimated Gas Usage: 20392 - 150836
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 11129
Offset: 11658
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:2176

function setMasterAddress() public {

      OwnedUpgradeabilityProxy proxy =  OwnedUpgradeabilityProxy(address(uint160(address(this))));

      require(msg.sender == proxy.proxyOwner(),"Sender is not proxy owner.");

      ms = IMaster(msg.sender);

      masterAddress = msg.sender;

      governance = IGovernance(ms.getLatestAddress("GV"));

    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:28.447976
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: updateMarketImplementations(uint256[],address[])
PC address: 2899
Estimated Gas Usage: 451 - 546
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:9

e: contracts/external

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:31.401337
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: updateMarketImplementations(uint256[],address[])
PC address: 2901
Estimated Gas Usage: 451 - 546
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:3



*/



// File: contracts/external/

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:36.482495
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: updateMarketImplementations(uint256[],address[])
PC address: 2987
Estimated Gas Usage: 627 - 722
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:9

e: contracts/external

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:52.878874
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: updateMarketImplementations(uint256[],address[])
PC address: 2989
Estimated Gas Usage: 627 - 722
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:3



*/



// File: contracts/external/

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:08.743900
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: callMarketResultEvent(uint256[],uint256,uint256,uint256)
PC address: 3585
Estimated Gas Usage: 363 - 458
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:9

e: contracts/external

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:11.560238
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: callMarketResultEvent(uint256[],uint256,uint256,uint256)
PC address: 3587
Estimated Gas Usage: 363 - 458
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:3



*/



// File: contracts/external/

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:18.997290
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: callClaimedEvent(address,uint256[],address[],uint256,address)
PC address: 4369
Estimated Gas Usage: 484 - 579
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:9

e: contracts/external

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:24.777669
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: callClaimedEvent(address,uint256[],address[],uint256,address)
PC address: 4371
Estimated Gas Usage: 484 - 579
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:3



*/



// File: contracts/external/

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:33.288691
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: callClaimedEvent(address,uint256[],address[],uint256,address)
PC address: 4457
Estimated Gas Usage: 660 - 755
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:9

e: contracts/external

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:42.435122
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: callClaimedEvent(address,uint256[],address[],uint256,address)
PC address: 4459
Estimated Gas Usage: 660 - 755
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:3



*/



// File: contracts/external/

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:08:48.384240
Transaction Length: 1
Severity: Medium
Contract: MarketRegistry
Function name: upgradeContractImplementation(address,address)
PC address: 4762
Estimated Gas Usage: 4098 - 73461
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 21857
Offset: 22280
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:2152

function upgradeContractImplementation(address payable _proxyAddress, address _newImplementation) 

        external onlyAuthorizedToGovern

    {

      require(_newImplementation != address(0));

      OwnedUpgradeabilityProxy tempInstance 

          = OwnedUpgradeabilityProxy(_proxyAddress);

      tempInstance.upgradeTo(_newImplementation);

    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:10:06.820061
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: createGovernanceProposal(string,string,string,bytes,uint256,address,uint256,uint256,uint256)
PC address: 5068
Estimated Gas Usage: 362 - 457
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:3



*/



// File: contracts/external

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:10:23.568427
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: createGovernanceProposal(string,string,string,bytes,uint256,address,uint256,uint256,uint256)
PC address: 5222
Estimated Gas Usage: 704 - 3481
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:3



*/



// File: contracts/external

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:10:55.737204
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: createGovernanceProposal(string,string,string,bytes,uint256,address,uint256,uint256,uint256)
PC address: 5376
Estimated Gas Usage: 1046 - 6505
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:3



*/



// File: contracts/external

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:02:19.897588
Transaction Length: 1
Severity: Low
Contract: MarketRegistry
Function name: updateConfigAddressParameters(bytes8,address)
PC address: 13397
Estimated Gas Usage: 3816 - 39604
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:2574

marketUtility.updateAddressParameters(code, value)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:31.163129
Transaction Length: 1
Severity: Low
Contract: MarketRegistry
Function name: updateUintParameters(bytes8,uint256)
PC address: 16788
Estimated Gas Usage: 3812 - 39600
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:2564

marketUtility.updateUintParameters(code, value)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:03:51.354676
Transaction Length: 1
Severity: Low
Contract: MarketRegistry
Function name: burnDisputedProposalTokens(uint256)
PC address: 17424
Estimated Gas Usage: 3858 - 39836
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:2442

IMarket(disputedMarket).resolveDispute(false, 0)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:04:00.652807
Transaction Length: 1
Severity: Low
Contract: MarketRegistry
Function name: burnDisputedProposalTokens(uint256)
PC address: 17752
Estimated Gas Usage: 7571 - 78982
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:2448

plotToken.burn(_stakedAmount)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:36.521540
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18576
Estimated Gas Usage: 1945 - 36509
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:9

contracts/exter

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:47.903207
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18579
Estimated Gas Usage: 2065 - 36815
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:5

*/



// File: contracts/external/openzeppe

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:52.508420
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18602
Estimated Gas Usage: 2065 - 36815
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:2744

IMarket(_marketAdd).getData()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:43.207183
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18638
Estimated Gas Usage: 2065 - 36815
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:3

8

*/



// File: con

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:57.874551
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18644
Estimated Gas Usage: 2065 - 36815
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:9

lidity/math/Sa

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:05.785258
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18665
Estimated Gas Usage: 2123 - 36966
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:26

metic operations in S

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:12.052684
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18667
Estimated Gas Usage: 2123 - 36966
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:22

 checks.

 *

 * Arithmetic operations in So

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:20.305369
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18720
Estimated Gas Usage: 2223 - 37159
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:3

8

*/



// File: con

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:26.210278
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18726
Estimated Gas Usage: 2223 - 37159
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:9

lidity/math/Sa

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:34.528605
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18747
Estimated Gas Usage: 2281 - 37310
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:26

metic operations in S

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:40.576647
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18749
Estimated Gas Usage: 2281 - 37310
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:22

 checks.

 *

 * Arithmetic operations in So

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:50.701827
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18802
Estimated Gas Usage: 2381 - 37503
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:3

8

*/



// File: con

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:56.367749
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18808
Estimated Gas Usage: 2381 - 37503
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:9

lidity/math/Sa

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:05.636137
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18829
Estimated Gas Usage: 2439 - 37654
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:26

metic operations in S

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:11.543364
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: getMarketDetails(address)
PC address: 18831
Estimated Gas Usage: 2439 - 37654
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:22

 checks.

 *

 * Arithmetic operations in So

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:06:17.805768
Transaction Length: 1
Severity: Low
Contract: MarketRegistry
Function name: createMarket(uint256,uint256)
PC address: 19617
Estimated Gas Usage: 2068 - 3583
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:2252

marketCurrencies[_marketCurrencyIndex]

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:08:48.360796
Transaction Length: 1
Severity: Medium
Contract: MarketRegistry
Function name: upgradeContractImplementation(address,address)
PC address: 22280
Estimated Gas Usage: 3350 - 38713
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:2164

tempInstance.upgradeTo(_newImplementation)

--------------------

==== Unprotected Ether Withdrawal ====
SWC ID: 105
FOUND TIME: 0:01:16.448012
Transaction Length: 1
Severity: High
Contract: MarketRegistry
Function name: transferAssets(address,address,uint256)
PC address: 26176
Estimated Gas Usage: 2655 - 37828
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:2542

_recipient.transfer(_amount)

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:08.396800
Transaction Length: 1
Severity: Medium
Contract: MarketRegistry
Function name: transferAssets(address,address,uint256)
PC address: 26373
Estimated Gas Usage: 3452 - 38910
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/m_loop/loop4/0x495d3a0530367ed4331833eae74b32d4848401f0.sol:2546

IToken(_asset).transfer(_recipient, _amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xcfcbd5c6fbbac2183bd76b5caa4bd86fa0953dd6.sol
Total states:426
0.735145
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x35488195f26570a8fe0043e47186b0bc5681fe89.sol
Total states:2367
5.372737
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.319918
Transaction Length: 2
Severity: Medium
Contract: EOGLottery
Function name: GetPoints()
PC address: 270
Estimated Gas Usage: 7630 - 78640
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1279
Offset: 1594
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/m_loop/loop4/0x35488195f26570a8fe0043e47186b0bc5681fe89.sol:56

function GetPoints() public view returns(uint){
        uint Maxrand=0;
        for(uint i=0 ;i < Competitors.length;i++){
            if( EIP20Interface(EOGAddress).balanceOf(Competitors[i])>MinEOG){
                Maxrand += EIP20Interface(EOGAddress).balanceOf(Competitors[i])/(10**13);
            }
        }
        return Maxrand;
    }

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:00.577040
Transaction Length: 1
Severity: Low
Contract: EOGLottery
Function name: GetMaxHolder()
PC address: 4150
Estimated Gas Usage: 625 - 720
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x35488195f26570a8fe0043e47186b0bc5681fe89.sol:74

Competitors[0]

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:01.403915
Transaction Length: 1
Severity: Low
Contract: EOGLottery
Function name: Random(uint256)
PC address: 5388
Estimated Gas Usage: 1353 - 2297
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x35488195f26570a8fe0043e47186b0bc5681fe89.sol:69

uint(keccak256(abi.encodePacked(block.timestamp, block.difficulty,Competitors.length,seed))) % max

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:03.536935
Transaction Length: 2
Severity: Low
Contract: EOGLottery
Function name: Random(uint256)
PC address: 5388
Estimated Gas Usage: 1353 - 2297
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x35488195f26570a8fe0043e47186b0bc5681fe89.sol:69

uint(keccak256(abi.encodePacked(block.timestamp, block.difficulty,Competitors.length,seed))) % max

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x65efb57c57c0b870f378ba08ee6ba305ca14491f.sol
Total states:491
0.583524
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xA9A9300Ab9A70c43C19d6F42e3308Be24d73D885.sol
Total states:621
14.56237
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x50dEb51bDB3f89D7A1536dc2a60A9EfCf85636d3.sol
Total states:1423
431.775737
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.219297
Transaction Length: 1
Severity: High
Contract: Airdrop
Function name: multiTransfer(address,address[],uint256[])
PC address: 223
Estimated Gas Usage: 329 - 424
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50dEb51bDB3f89D7A1536dc2a60A9EfCf85636d3.sol:5

olidity 0.6.10;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.402667
Transaction Length: 1
Severity: High
Contract: Airdrop
Function name: multiTransfer(address,address[],uint256[])
PC address: 225
Estimated Gas Usage: 329 - 424
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50dEb51bDB3f89D7A1536dc2a60A9EfCf85636d3.sol:3

*/

//pragma solidity 0.6.10;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:17.307939
Transaction Length: 1
Severity: High
Contract: Airdrop
Function name: multiTransfer(address,address[],uint256[])
PC address: 371
Estimated Gas Usage: 671 - 3448
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50dEb51bDB3f89D7A1536dc2a60A9EfCf85636d3.sol:5

olidity 0.6.10;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:29.019594
Transaction Length: 1
Severity: High
Contract: Airdrop
Function name: multiTransfer(address,address[],uint256[])
PC address: 373
Estimated Gas Usage: 671 - 3448
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50dEb51bDB3f89D7A1536dc2a60A9EfCf85636d3.sol:3

*/

//pragma solidity 0.6.10;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:19.934944
Transaction Length: 1
Severity: High
Contract: Airdrop
Function name: getSymbol(address)
PC address: 687
Estimated Gas Usage: 2291 - 37698
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50dEb51bDB3f89D7A1536dc2a60A9EfCf85636d3.sol:83

function getSymbol(address token) public view returns(string memory) {
    return ERC20(token).symbol();
  }

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:07.384116
Transaction Length: 1
Severity: Low
Contract: Airdrop
Function name: multiTransfer(address,address[],uint256[])
PC address: 938
Estimated Gas Usage: 1039 - 6870
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0x50dEb51bDB3f89D7A1536dc2a60A9EfCf85636d3.sol:93

amounts[i]

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:01:27.874001
Transaction Length: 1
Severity: Medium
Contract: Airdrop
Function name: multiTransfer(address,address[],uint256[])
PC address: 1136
Estimated Gas Usage: 1941 - 8431
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/m_loop/loop4/0x50dEb51bDB3f89D7A1536dc2a60A9EfCf85636d3.sol:93

ERC20(token).transferFrom(msg.sender, receivers[i], amounts[i])

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:26.068940
Transaction Length: 1
Severity: High
Contract: Airdrop
Function name: getSymbol(address)
PC address: 1389
Estimated Gas Usage: 1854 - 36418
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50dEb51bDB3f89D7A1536dc2a60A9EfCf85636d3.sol:5

dity 0.6.10;
pr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:41.766238
Transaction Length: 1
Severity: High
Contract: Airdrop
Function name: getSymbol(address)
PC address: 1392
Estimated Gas Usage: 1947 - 36604
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50dEb51bDB3f89D7A1536dc2a60A9EfCf85636d3.sol:3



//pragma solidity 0.6.10;
pragma solidity

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:50.093450
Transaction Length: 1
Severity: High
Contract: Airdrop
Function name: getSymbol(address)
PC address: 1413
Estimated Gas Usage: 1947 - 36604
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50dEb51bDB3f89D7A1536dc2a60A9EfCf85636d3.sol:84

ERC20(token).symbol()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:33.159250
Transaction Length: 1
Severity: High
Contract: Airdrop
Function name: getSymbol(address)
PC address: 1438
Estimated Gas Usage: 1947 - 36604
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50dEb51bDB3f89D7A1536dc2a60A9EfCf85636d3.sol:2


*/

//pragma solidit

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:59.069624
Transaction Length: 1
Severity: High
Contract: Airdrop
Function name: getSymbol(address)
PC address: 1444
Estimated Gas Usage: 1947 - 36604
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50dEb51bDB3f89D7A1536dc2a60A9EfCf85636d3.sol:6

 <0.7.17;

lib

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:03:13.108338
Transaction Length: 1
Severity: High
Contract: Airdrop
Function name: getSymbol(address)
PC address: 1466
Estimated Gas Usage: 2005 - 36755
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x50dEb51bDB3f89D7A1536dc2a60A9EfCf85636d3.sol:12

6) {
    // Gas optimization: this is cheap

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xe2eb8d3dafe3b1f3ccda5f3ba798d869646a1638.sol
Total states:3887
39.716205
==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:08.049418
Transaction Length: 1
Severity: Low
Contract: MidasZAP
Function name: fallback()
PC address: 1212
Estimated Gas Usage: 2253 - 3667
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xe2eb8d3dafe3b1f3ccda5f3ba798d869646a1638.sol:294

_WETH.deposit.value(msg.value)()

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:29.904268
Transaction Length: 2
Severity: Low
Contract: MidasZAP
Function name: fallback()
PC address: 1212
Estimated Gas Usage: 2253 - 3667
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xe2eb8d3dafe3b1f3ccda5f3ba798d869646a1638.sol:294

_WETH.deposit.value(msg.value)()

--------------------

==== External Call To User-Supplied Address ====
SWC ID: 107
FOUND TIME: 0:00:21.429895
Transaction Length: 2
Severity: Medium
Contract: MidasZAP
Function name: addLiquidityETHOnly(address)
PC address: 1212
Estimated Gas Usage: 1798 - 2882
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on thecontract state.
--------------------
In file: ../../contracts/m_loop/loop4/0xe2eb8d3dafe3b1f3ccda5f3ba798d869646a1638.sol:294

_WETH.deposit.value(msg.value)()

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x1376e533858302ba05ab910097f5babc5619692f.sol
Total states:195
1170.262917
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:41.384934
Transaction Length: 1
Severity: High
Contract: Core
Function name: whitelistTokens(address[])
PC address: 887
Estimated Gas Usage: 364 - 459
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1376e533858302ba05ab910097f5babc5619692f.sol:9

ma solidity 0.5.17;
p

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:05:44.882646
Transaction Length: 1
Severity: High
Contract: Core
Function name: whitelistTokens(address[])
PC address: 889
Estimated Gas Usage: 364 - 459
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1376e533858302ba05ab910097f5babc5619692f.sol:3



*/



//pragma solidity 0.5.17;
pr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:10.471135
Transaction Length: 1
Severity: High
Contract: Core
Function name: whitelistPeak(address,uint256[],uint256,bool)
PC address: 1096
Estimated Gas Usage: 441 - 536
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1376e533858302ba05ab910097f5babc5619692f.sol:9

ma solidity 0.5.17;
p

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:15.264137
Transaction Length: 1
Severity: High
Contract: Core
Function name: whitelistPeak(address,uint256[],uint256,bool)
PC address: 1098
Estimated Gas Usage: 441 - 536
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1376e533858302ba05ab910097f5babc5619692f.sol:3



*/



//pragma solidity 0.5.17;
pr

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.159131
Transaction Length: 1
Severity: High
Contract: Core
Function name: currentSystemState()
PC address: 2994
Estimated Gas Usage: 2276 - 37170
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1376e533858302ba05ab910097f5babc5619692f.sol:9

solidity 0.5.17

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.790767
Transaction Length: 1
Severity: High
Contract: Core
Function name: currentSystemState()
PC address: 2997
Estimated Gas Usage: 2322 - 37309
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1376e533858302ba05ab910097f5babc5619692f.sol:5

*/



//pragma solidity 0.5.17;
pragma soli

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.492944
Transaction Length: 1
Severity: High
Contract: Core
Function name: totalSystemAssets()
PC address: 3018
Estimated Gas Usage: 2322 - 37309
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1376e533858302ba05ab910097f5babc5619692f.sol:728

oracle.getPriceFeed()

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.068363
Transaction Length: 1
Severity: High
Contract: Core
Function name: totalSystemAssets()
PC address: 3043
Estimated Gas Usage: 2322 - 37309
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1376e533858302ba05ab910097f5babc5619692f.sol:3

5

*/



//pragma sol

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.350606
Transaction Length: 1
Severity: High
Contract: Core
Function name: totalSystemAssets()
PC address: 3049
Estimated Gas Usage: 2322 - 37309
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1376e533858302ba05ab910097f5babc5619692f.sol:10

=0.5 <0.7.17;


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.462354
Transaction Length: 1
Severity: High
Contract: Core
Function name: totalSystemAssets()
PC address: 3069
Estimated Gas Usage: 2380 - 37460
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1376e533858302ba05ab910097f5babc5619692f.sol:20

s the amount of token

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.564382
Transaction Length: 1
Severity: High
Contract: Core
Function name: totalSystemAssets()
PC address: 3071
Estimated Gas Usage: 2380 - 37460
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1376e533858302ba05ab910097f5babc5619692f.sol:19

/**
     * @dev Returns the amount of tokens

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:39.232095
Transaction Length: 1
Severity: High
Contract: Core
Function name: dusdToUsd(uint256,bool)
PC address: 13475
Estimated Gas Usage: 2367 - 37354
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1376e533858302ba05ab910097f5babc5619692f.sol:185

div(a, b, "SafeMath: division by zero")

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x7bdc1fe46bd1edf1b74a20886bc1786bc41dbd46.sol
Total states:1126
67.564385
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.798768
Transaction Length: 1
Severity: High
Contract: VaultBatchEarn
Function name: batchAddVault(address[],uint256[],uint8[])
PC address: 762
Estimated Gas Usage: 384 - 479
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x7bdc1fe46bd1edf1b74a20886bc1786bc41dbd46.sol:5

cense-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.423147
Transaction Length: 1
Severity: High
Contract: VaultBatchEarn
Function name: batchAddVault(address[],uint256[],uint8[])
PC address: 764
Estimated Gas Usage: 384 - 479
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x7bdc1fe46bd1edf1b74a20886bc1786bc41dbd46.sol:3

*/

// SPDX-License-Identifier: MIT


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:08.925531
Transaction Length: 1
Severity: High
Contract: VaultBatchEarn
Function name: batchAddVault(address[],uint256[],uint8[])
PC address: 847
Estimated Gas Usage: 560 - 655
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x7bdc1fe46bd1edf1b74a20886bc1786bc41dbd46.sol:5

cense-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.208406
Transaction Length: 1
Severity: High
Contract: VaultBatchEarn
Function name: batchAddVault(address[],uint256[],uint8[])
PC address: 849
Estimated Gas Usage: 560 - 655
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x7bdc1fe46bd1edf1b74a20886bc1786bc41dbd46.sol:3

*/

// SPDX-License-Identifier: MIT


--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.452798
Transaction Length: 1
Severity: High
Contract: VaultBatchEarn
Function name: batchAddVault(address[],uint256[],uint8[])
PC address: 932
Estimated Gas Usage: 736 - 831
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x7bdc1fe46bd1edf1b74a20886bc1786bc41dbd46.sol:5

cense-Identifier: MIT

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:54.146811
Transaction Length: 1
Severity: High
Contract: VaultBatchEarn
Function name: batchAddVault(address[],uint256[],uint8[])
PC address: 934
Estimated Gas Usage: 736 - 831
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x7bdc1fe46bd1edf1b74a20886bc1786bc41dbd46.sol:3

*/

// SPDX-License-Identifier: MIT


--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xd16d6d45a9b2eabdcfe303a8dcdbcbb87aa6fe25.sol
Total states:2324
2.195492
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x2c0a32e0ca9834587d1336fca21db7e873682fcf.sol
Total states:738
3.655059
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xac40e5ecbe40066c51d9e15361679f414d7dec12.sol
Total states:10269
3079.268756
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:22.101793
Transaction Length: 2
Severity: Medium
Contract: LPStaker
Function name: withdraw(address)
PC address: 226
Estimated Gas Usage: 23398 - 156297
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1742
Offset: 2124
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/m_loop/loop4/0xac40e5ecbe40066c51d9e15361679f414d7dec12.sol:208

function withdraw(address to) external {
        StakeState storage ss = _states[msg.sender];
        require(ss.lockedUntil < block.timestamp, "still locked");
        require(ss.balance > 0, "must have tokens to withdraw");
        uint128 balance = ss.balance;
        uint64 reward = ss.reward;
        uint128 bonusBalance = ss.bonusBalance;
        ss.balance = 0;
        ss.lockedUntil = 0;
        ss.reward = 0;
        
        if (bonusBalance > 0) {
            ss.bonusBalance = 0;
            reward += uint64((2500 * 1000000 * bonusBalance) / totalBonusDeposits); // TODO
        }
        
        require(depositToken.transfer(to, balance), "transfer unsuccessful");
        require(rewardToken.transfer(to, reward), "transfer unsuccessful");
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:09.974442
Transaction Length: 2
Severity: Low
Contract: LPStaker
Function name: withdraw(address)
PC address: 1742
Estimated Gas Usage: 20413 - 84139
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xac40e5ecbe40066c51d9e15361679f414d7dec12.sol:224

depositToken.transfer(to, balance)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:20.357923
Transaction Length: 2
Severity: Low
Contract: LPStaker
Function name: withdraw(address)
PC address: 2124
Estimated Gas Usage: 22549 - 121262
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xac40e5ecbe40066c51d9e15361679f414d7dec12.sol:225

rewardToken.transfer(to, reward)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:17:22.404548
Transaction Length: 1
Severity: Low
Contract: LPStaker
Function name: depositWithBonus(uint128,bool)
PC address: 3563
Estimated Gas Usage: 33957 - 139825
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xac40e5ecbe40066c51d9e15361679f414d7dec12.sol:205

depositToken.transferFrom(msg.sender, address(this), amount)

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:22:01.467075
Transaction Length: 2
Severity: Low
Contract: LPStaker
Function name: depositWithBonus(uint128,bool)
PC address: 3563
Estimated Gas Usage: 33957 - 139825
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xac40e5ecbe40066c51d9e15361679f414d7dec12.sol:205

depositToken.transferFrom(msg.sender, address(this), amount)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xe879f44E6e0002629A4EE8dC5bDfb8fB7d096f962.sol
Total states:24247
174.11615
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.924057
Transaction Length: 1
Severity: High
Contract: DMGYieldFarmingV1
Function name: initialize(address,address,address,uint256,address[],address[],uint8[],uint16[])
PC address: 3958
Estimated Gas Usage: 598 - 693
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe879f44E6e0002629A4EE8dC5bDfb8fB7d096f962.sol:5

olidity ^0.5.0;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.950435
Transaction Length: 1
Severity: High
Contract: DMGYieldFarmingV1
Function name: initialize(address,address,address,uint256,address[],address[],uint8[],uint16[])
PC address: 3960
Estimated Gas Usage: 598 - 693
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe879f44E6e0002629A4EE8dC5bDfb8fB7d096f962.sol:3

*/

//pragma solidity ^0.5.0;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.680858
Transaction Length: 1
Severity: High
Contract: DMGYieldFarmingV1
Function name: initialize(address,address,address,uint256,address[],address[],uint8[],uint16[])
PC address: 4106
Estimated Gas Usage: 931 - 3708
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe879f44E6e0002629A4EE8dC5bDfb8fB7d096f962.sol:5

olidity ^0.5.0;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.871967
Transaction Length: 1
Severity: High
Contract: DMGYieldFarmingV1
Function name: initialize(address,address,address,uint256,address[],address[],uint8[],uint16[])
PC address: 4108
Estimated Gas Usage: 931 - 3708
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe879f44E6e0002629A4EE8dC5bDfb8fB7d096f962.sol:3

*/

//pragma solidity ^0.5.0;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:48.399227
Transaction Length: 1
Severity: High
Contract: DMGYieldFarmingV1
Function name: initialize(address,address,address,uint256,address[],address[],uint8[],uint16[])
PC address: 4254
Estimated Gas Usage: 1264 - 6723
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe879f44E6e0002629A4EE8dC5bDfb8fB7d096f962.sol:5

olidity ^0.5.0;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:59.014951
Transaction Length: 1
Severity: High
Contract: DMGYieldFarmingV1
Function name: initialize(address,address,address,uint256,address[],address[],uint8[],uint16[])
PC address: 4256
Estimated Gas Usage: 1264 - 6723
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe879f44E6e0002629A4EE8dC5bDfb8fB7d096f962.sol:3

*/

//pragma solidity ^0.5.0;
pragma

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol
Total states:4753
7.007625
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:02.103409
Transaction Length: 1
Severity: Low
Contract: YFVVIPVoteV2
Function name: voters(address,uint256,uint256)
PC address: 6948
Estimated Gas Usage: 554 - 1029
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xdc58a481c27a6a376c02b97e1be2fafa0b22775b.sol:177

mapping(address => mapping(uint256 => address[MAX_VOTERS_PER_ITEM])) public voters

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xd27ecaf9a9119be565c87f6f081d5e604d846484.sol
Total states:4618
949.665446
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.646675
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: deleteTokens(uint256[])
PC address: 726
Estimated Gas Usage: 408 - 503
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xd27ecaf9a9119be565c87f6f081d5e604d846484.sol:9

e: openzeppelin-solid

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.229272
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: deleteTokens(uint256[])
PC address: 728
Estimated Gas Usage: 408 - 503
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xd27ecaf9a9119be565c87f6f081d5e604d846484.sol:3



*/



// File: openzeppelin-solidi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.796768
Transaction Length: 1
Severity: High
Contract: ERC721
Function name: safeTransferFrom(address,address,uint256,bytes)
PC address: 1136
Estimated Gas Usage: 477 - 572
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xd27ecaf9a9119be565c87f6f081d5e604d846484.sol:3



*/



// File: openzeppelin-solid

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.510371
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: safeTransferFrom(address,address,uint256,bytes)
PC address: 1759
Estimated Gas Usage: 522 - 617
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xd27ecaf9a9119be565c87f6f081d5e604d846484.sol:3



*/



// File: openzeppelin-solid

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.205692
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: getMessageHash(address,uint256[],uint256)
PC address: 1976
Estimated Gas Usage: 373 - 468
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xd27ecaf9a9119be565c87f6f081d5e604d846484.sol:9

e: openzeppelin-solid

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.273931
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: getMessageHash(address,uint256[],uint256)
PC address: 1978
Estimated Gas Usage: 373 - 468
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xd27ecaf9a9119be565c87f6f081d5e604d846484.sol:3



*/



// File: openzeppelin-solidi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:13:49.846410
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: claimLandTokens(address,uint256[],uint256,uint8,bytes32,bytes32)
PC address: 2288
Estimated Gas Usage: 417 - 512
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xd27ecaf9a9119be565c87f6f081d5e604d846484.sol:9

e: openzeppelin-solid

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:13:55.946240
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: claimLandTokens(address,uint256[],uint256,uint8,bytes32,bytes32)
PC address: 2290
Estimated Gas Usage: 417 - 512
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xd27ecaf9a9119be565c87f6f081d5e604d846484.sol:3



*/



// File: openzeppelin-solidi

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:57.904150
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: getMessageHash(address,uint256[],uint256)
PC address: 6030
Estimated Gas Usage: 786 - 4222
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xd27ecaf9a9119be565c87f6f081d5e604d846484.sol:2170

abi.encode(userAddress, plotIds, nonce)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:48.113020
Transaction Length: 1
Severity: High
Contract: AetherianLand
Function name: getMessageHash(address,uint256[],uint256)
PC address: 6070
Estimated Gas Usage: 936 - 4748
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xd27ecaf9a9119be565c87f6f081d5e604d846484.sol:2170

abi.encode(userAddress, plotIds, nonce)

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xf69eb1fec5b166080ab6322ffe90fd7fb980807b.sol
Total states:11899
36.113008
==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:17.886573
Transaction Length: 1
Severity: Low
Contract: LidStaking
Function name: stakeHandlers(uint256)
PC address: 6118
Estimated Gas Usage: 790 - 885
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xf69eb1fec5b166080ab6322ffe90fd7fb980807b.sol:405

IStakeHandler[] public stakeHandlers

--------------------

==== Integer Underflow ====
SWC ID: 101
FOUND TIME: 0:00:00.681471
Transaction Length: 2
Severity: High
Contract: LidStaking
Function name: unregisterStakeHandler(uint256)
PC address: 6315
Estimated Gas Usage: 1699 - 2124
The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xf69eb1fec5b166080ab6322ffe90fd7fb980807b.sol:555

stakeHandlers.length-1

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:07.236260
Transaction Length: 2
Severity: Low
Contract: LidStaking
Function name: unregisterStakeHandler(uint256)
PC address: 6326
Estimated Gas Usage: 1709 - 2134
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xf69eb1fec5b166080ab6322ffe90fd7fb980807b.sol:555

stakeHandlers[stakeHandlers.length-1]

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.270909
Transaction Length: 1
Severity: High
Contract: LidStaking
Function name: findTaxAmount(uint256,uint256)
PC address: 13348
Estimated Gas Usage: 474 - 569
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xf69eb1fec5b166080ab6322ffe90fd7fb980807b.sol:148

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x3E63e6F0D6E90E120Eb31e005aa149b476a89492.sol
Total states:5490
22.141286
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x1d78ec233c424b38c3893f2b19c3c85b7ba2b39a.sol
Total states:1216
0.769853
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.046516
Transaction Length: 0
Severity: High
Contract: SpartanCouncil
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x1d78ec233c424b38c3893f2b19c3c85b7ba2b39a.sol:20

e

 * there is an account (an owner) that c

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xa57f64458d85073911263e4e92c9913805c45d0d.sol
Total states:1986
20.11027
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.180105
Transaction Length: 1
Severity: High
Contract: StrategyAddTwoSidesOptimal
Function name: execute(address,uint256,bytes)
PC address: 726
Estimated Gas Usage: 376 - 471
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xa57f64458d85073911263e4e92c9913805c45d0d.sol:3

*/

// File: openzeppelin-solidity-

--------------------

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
FOUND TIME: 0:00:00.178182
Transaction Length: 0
Severity: Medium
Contract: StrategyAddTwoSidesOptimal
Function name: constructor
PC address: 867
Estimated Gas Usage: 38791 - 235224
Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 375
Offset: 664
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.

--------------------
In file: ../../contracts/m_loop/loop4/0xa57f64458d85073911263e4e92c9913805c45d0d.sol:619

contract StrategyAddTwoSidesOptimal is Ownable, ReentrancyGuard, Strategy {
    using SafeToken for address;
    using SafeMath for uint256;

    IUniswapV2Factory public factory;
    IUniswapV2Router02 public router;
    address public weth;
    address public goblin;

    /// @dev Create a new add two-side optimal strategy instance.
    /// @param _router The Uniswap router smart contract.
    constructor(IUniswapV2Router02 _router, address _goblin) public {
        factory = IUniswapV2Factory(_router.factory());
        router = _router;
        weth = _router.WETH();
        goblin = _goblin;
    }
    
    /// @dev Throws if called by any account other than the goblin.
    modifier onlyGoblin() {
        require(isGoblin(), "caller is not the goblin");
        _;
    }

    /// @dev Returns true if the caller is the current goblin.
    function isGoblin() public view returns (bool) {
        return msg.sender == goblin;
    }

    /// @dev Compute optimal deposit amount
    /// @param amtA amount of token A desired to deposit
    /// @param amtB amonut of token B desired to deposit
    /// @param resA amount of token A in reserve
    /// @param resB amount of token B in reserve
    function optimalDeposit(
        uint256 amtA,
        uint256 amtB,
        uint256 resA,
        uint256 resB
    ) internal pure returns (uint256 swapAmt, bool isReversed) {
        if (amtA.mul(resB) >= amtB.mul(resA)) {
            swapAmt = _optimalDepositA(amtA, amtB, resA, resB);
            isReversed = false;
        } else {
            swapAmt = _optimalDepositA(amtB, amtA, resB, resA);
            isReversed = true;
        }
    }

    /// @dev Compute optimal deposit amount helper
    /// @param amtA amount of token A desired to deposit
    /// @param amtB amonut of token B desired to deposit
    /// @param resA amount of token A in reserve
    /// @param resB amount of token B in reserve
    function _optimalDepositA(
        uint256 amtA,
        uint256 amtB,
        uint256 resA,
        uint256 resB
    ) internal pure returns (uint256) {
        require(amtA.mul(resB) >= amtB.mul(resA), "Reversed");

        uint256 a = 997;
        uint256 b = uint256(1997).mul(resA);
        uint256 _c = (amtA.mul(resB)).sub(amtB.mul(resA));
        uint256 c = _c.mul(1000).div(amtB.add(resB)).mul(resA);

        uint256 d = a.mul(c).mul(4);
        uint256 e = Math.sqrt(b.mul(b).add(d));

        uint256 numerator = e.sub(b);
        uint256 denominator = a.mul(2);

        return numerator.div(denominator);
    }

    /// @dev Execute worker strategy. Take LP tokens + ETH. Return LP tokens + ETH.
    /// @param user User address
    /// @param data Extra calldata information passed along to this strategy.
    function execute(address user, uint256, /* debt */ bytes calldata data) 
        external         
        payable  
        onlyGoblin       
        nonReentrant 
    {
        // 1. Find out what farming token we are dealing with.
        (address fToken, uint256 fAmount, uint256 minLPAmount) = abi.decode(data, (address, uint256, uint256));
        IUniswapV2Pair lpToken = IUniswapV2Pair(factory.getPair(fToken, weth));        
        // 2. Compute the optimal amount of ETH and fToken to be converted.  
        if (fAmount > 0) {  
            fToken.safeTransferFrom(user, address(this), fAmount);            
        }
        uint256 ethBalance = address(this).balance;
        uint256 swapAmt;
        bool isReversed;
        {
            (uint256 r0, uint256 r1, ) = lpToken.getReserves();
            (uint256 ethReserve, uint256 fReserve) = lpToken.token0() == weth ? (r0, r1) : (r1, r0);
            (swapAmt, isReversed) = optimalDeposit(ethBalance, fToken.myBalance(), ethReserve, fReserve);
        }
        // 3. Convert between ETH and farming tokens
        fToken.safeApprove(address(router), 0);
        fToken.safeApprove(address(router), uint256(-1));
        address[] memory path = new address[](2);
        (path[0], path[1]) = isReversed ? (fToken, weth) : (weth, fToken);
        if (isReversed) {
            router.swapExactTokensForETH(swapAmt, 0, path, address(this), now); // farming tokens to ETH
        } else {
            router.swapExactETHForTokens.value(swapAmt)(0, path, address(this), now); // ETH to farming tokens
        }
        // 4. Mint more LP tokens and return all LP tokens to the sender.
        (,, uint256 moreLPAmount) = router.addLiquidityETH.value(address(this).balance)(
            fToken, fToken.myBalance(), 0, 0, address(this), now
        );
        require(moreLPAmount >= minLPAmount, "insufficient LP tokens received");
        lpToken.transfer(msg.sender, lpToken.balanceOf(address(this)));
    }

    /// @dev Recover ERC20 tokens that were accidentally sent to this smart contract.
    /// @param token The token contract. Can be anything. This contract should not hold ERC20 tokens.
    /// @param to The address to send the tokens to.
    /// @param value The number of tokens to transfer to `to`.
    function recover(address token, address to, uint256 value) external onlyOwner nonReentrant {
        token.safeTransfer(to, value);
    }

    function() external payable {}
}

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x5B57e808b0ddCF097e25C5f5E3d8d3c2b0D26319.sol
Total states:2744
33.327102
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.996636
Transaction Length: 1
Severity: High
Contract: CompoundStrategy
Function name: initialize(address,address,address,address[],address[])
PC address: 1358
Estimated Gas Usage: 484 - 579
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x5B57e808b0ddCF097e25C5f5E3d8d3c2b0D26319.sol:5

olidity 0.5.11;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.470435
Transaction Length: 1
Severity: High
Contract: CompoundStrategy
Function name: initialize(address,address,address,address[],address[])
PC address: 1360
Estimated Gas Usage: 484 - 579
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x5B57e808b0ddCF097e25C5f5E3d8d3c2b0D26319.sol:3

*/

//pragma solidity 0.5.11;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:11.734854
Transaction Length: 1
Severity: High
Contract: CompoundStrategy
Function name: initialize(address,address,address,address[],address[])
PC address: 1443
Estimated Gas Usage: 660 - 755
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x5B57e808b0ddCF097e25C5f5E3d8d3c2b0D26319.sol:5

olidity 0.5.11;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:19.664169
Transaction Length: 1
Severity: High
Contract: CompoundStrategy
Function name: initialize(address,address,address,address[],address[])
PC address: 1445
Estimated Gas Usage: 660 - 755
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x5B57e808b0ddCF097e25C5f5E3d8d3c2b0D26319.sol:3

*/

//pragma solidity 0.5.11;
pragma

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xdf9d4674a430bdcc096a3a403128357ab36844ba.sol
Total states:3589
130.208036
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.121744
Transaction Length: 1
Severity: High
Contract: WadzPayToken
Function name: whitelistAddresses(address[])
PC address: 1097
Estimated Gas Usage: 430 - 525
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xdf9d4674a430bdcc096a3a403128357ab36844ba.sol:5

olidity ^0.5.9;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.239800
Transaction Length: 1
Severity: High
Contract: WadzPayToken
Function name: whitelistAddresses(address[])
PC address: 1099
Estimated Gas Usage: 430 - 525
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xdf9d4674a430bdcc096a3a403128357ab36844ba.sol:3

*/

//pragma solidity ^0.5.9;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:54.880242
Transaction Length: 1
Severity: High
Contract: WadzPayToken
Function name: symbol()
PC address: 1967
Estimated Gas Usage: 550 - 1680
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xdf9d4674a430bdcc096a3a403128357ab36844ba.sol:46

string public constant symbol = "WTK"

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:41.428137
Transaction Length: 1
Severity: High
Contract: WadzPayToken
Function name: setAdministrators(address[])
PC address: 2268
Estimated Gas Usage: 407 - 502
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xdf9d4674a430bdcc096a3a403128357ab36844ba.sol:5

olidity ^0.5.9;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:44.787030
Transaction Length: 1
Severity: High
Contract: WadzPayToken
Function name: setAdministrators(address[])
PC address: 2270
Estimated Gas Usage: 407 - 502
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xdf9d4674a430bdcc096a3a403128357ab36844ba.sol:3

*/

//pragma solidity ^0.5.9;
pragma

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xe879f44E6e0002629A4EE8dC5bDfb8fB7d096f96.sol
Total states:24247
175.639176
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.920787
Transaction Length: 1
Severity: High
Contract: DMGYieldFarmingV1
Function name: initialize(address,address,address,uint256,address[],address[],uint8[],uint16[])
PC address: 3958
Estimated Gas Usage: 598 - 693
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe879f44E6e0002629A4EE8dC5bDfb8fB7d096f96.sol:5

olidity ^0.5.0;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:09.952492
Transaction Length: 1
Severity: High
Contract: DMGYieldFarmingV1
Function name: initialize(address,address,address,uint256,address[],address[],uint8[],uint16[])
PC address: 3960
Estimated Gas Usage: 598 - 693
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe879f44E6e0002629A4EE8dC5bDfb8fB7d096f96.sol:3

*/

//pragma solidity ^0.5.0;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.686230
Transaction Length: 1
Severity: High
Contract: DMGYieldFarmingV1
Function name: initialize(address,address,address,uint256,address[],address[],uint8[],uint16[])
PC address: 4106
Estimated Gas Usage: 931 - 3708
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe879f44E6e0002629A4EE8dC5bDfb8fB7d096f96.sol:5

olidity ^0.5.0;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:28.860055
Transaction Length: 1
Severity: High
Contract: DMGYieldFarmingV1
Function name: initialize(address,address,address,uint256,address[],address[],uint8[],uint16[])
PC address: 4108
Estimated Gas Usage: 931 - 3708
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe879f44E6e0002629A4EE8dC5bDfb8fB7d096f96.sol:3

*/

//pragma solidity ^0.5.0;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:48.346774
Transaction Length: 1
Severity: High
Contract: DMGYieldFarmingV1
Function name: initialize(address,address,address,uint256,address[],address[],uint8[],uint16[])
PC address: 4254
Estimated Gas Usage: 1264 - 6723
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe879f44E6e0002629A4EE8dC5bDfb8fB7d096f96.sol:5

olidity ^0.5.0;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:59.026645
Transaction Length: 1
Severity: High
Contract: DMGYieldFarmingV1
Function name: initialize(address,address,address,uint256,address[],address[],uint8[],uint16[])
PC address: 4256
Estimated Gas Usage: 1264 - 6723
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe879f44E6e0002629A4EE8dC5bDfb8fB7d096f96.sol:3

*/

//pragma solidity ^0.5.0;
pragma

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x9227a3d959654C8004fA77DfFc380EC40880FFF6.sol
Total states:10240
101.61488
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.074199
Transaction Length: 0
Severity: High
Contract: ERC721Full
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x9227a3d959654C8004fA77DfFc380EC40880FFF6.sol:22

 of the transaction and its data. While the

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.232999
Transaction Length: 0
Severity: High
Contract: ERC721Metadata
Function name: constructor
PC address: 112
Estimated Gas Usage: 257 - 3030
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x9227a3d959654C8004fA77DfFc380EC40880FFF6.sol:22

 of the transaction and its data. While the

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.047934
Transaction Length: 0
Severity: High
Contract: TradeableERC721Token
Function name: constructor
PC address: 117
Estimated Gas Usage: 5263 - 28036
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x9227a3d959654C8004fA77DfFc380EC40880FFF6.sol:22

 of the transaction and its data. While the

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.007574
Transaction Length: 1
Severity: High
Contract: ERC721
Function name: safeTransferFrom(address,address,uint256,bytes)
PC address: 1136
Estimated Gas Usage: 477 - 572
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x9227a3d959654C8004fA77DfFc380EC40880FFF6.sol:3



*/



// File: openzeppelin-solid

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:02.302543
Transaction Length: 1
Severity: High
Contract: ERC721Enumerable
Function name: safeTransferFrom(address,address,uint256,bytes)
PC address: 1379
Estimated Gas Usage: 477 - 572
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x9227a3d959654C8004fA77DfFc380EC40880FFF6.sol:3



*/



// File: openzeppelin-solid

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x59d4082ea093060f99b652493fdf0d02f12e518e.sol
Total states:149
2.714642
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x19c36da0293e6dccd1e5fba44a7a2d7eaff030e8.sol
Total states:2398
19.330913
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xf2d4a5dd017d78289c404de98c37ce245e417c7f.sol
Total states:670
1.775826
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xe0f176e57ef636b09c317edbb4ad2df4216a0816.sol
Total states:1880
93.193989
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.291254
Transaction Length: 1
Severity: High
Contract: BeneficiaryOperations
Function name: transferBeneficiaryShip(address[])
PC address: 360
Estimated Gas Usage: 342 - 437
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe0f176e57ef636b09c317edbb4ad2df4216a0816.sol:5

penzeppelin-solidity/

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.821627
Transaction Length: 1
Severity: High
Contract: BeneficiaryOperations
Function name: transferBeneficiaryShip(address[])
PC address: 362
Estimated Gas Usage: 342 - 437
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe0f176e57ef636b09c317edbb4ad2df4216a0816.sol:3

*/

// File: openzeppelin-solidity/c

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:37.347112
Transaction Length: 1
Severity: High
Contract: BeneficiaryOperations
Function name: transferBeneficiaryShipWithHowMany(address[],uint256)
PC address: 776
Estimated Gas Usage: 341 - 436
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe0f176e57ef636b09c317edbb4ad2df4216a0816.sol:5

penzeppelin-solidity/

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:40.229239
Transaction Length: 1
Severity: High
Contract: BeneficiaryOperations
Function name: transferBeneficiaryShipWithHowMany(address[],uint256)
PC address: 778
Estimated Gas Usage: 341 - 436
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xe0f176e57ef636b09c317edbb4ad2df4216a0816.sol:3

*/

// File: openzeppelin-solidity/c

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:29.841749
Transaction Length: 1
Severity: Low
Contract: BeneficiaryOperations
Function name: allOperations(uint256)
PC address: 1715
Estimated Gas Usage: 701 - 796
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xe0f176e57ef636b09c317edbb4ad2df4216a0816.sol:386

bytes32[] public allOperations

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:27.947193
Transaction Length: 1
Severity: Low
Contract: BeneficiaryOperations
Function name: beneficiaries(uint256)
PC address: 4636
Estimated Gas Usage: 744 - 839
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xe0f176e57ef636b09c317edbb4ad2df4216a0816.sol:385

address[] public beneficiaries

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xEEbeC7874f46C4452610A11FA6bE0264f7f0557F.sol
Total states:951
25.664909
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x47935edfb3cdd358c50f6c0add1cc24662e30f5f.sol
Total states:27421
54.463924
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.519045
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3244
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x47935edfb3cdd358c50f6c0add1cc24662e30f5f.sol:134

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.898963
Transaction Length: 2
Severity: High
Contract: ERC20Burnable
Function name: increaseAllowance(address,uint256)
PC address: 3424
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x47935edfb3cdd358c50f6c0add1cc24662e30f5f.sol:134

a + b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.252011
Transaction Length: 2
Severity: High
Contract: ERC20Mintable
Function name: increaseAllowance(address,uint256)
PC address: 3847
Estimated Gas Usage: 1059 - 1534
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x47935edfb3cdd358c50f6c0add1cc24662e30f5f.sol:134

a + b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xfe354e0180fba93d67e9766fb7b6c85130627124.sol
Total states:19207
246.200307
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.909826
Transaction Length: 1
Severity: High
Contract: H4X
Function name: bulkTransfer(address[],uint256[])
PC address: 757
Estimated Gas Usage: 408 - 503
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xfe354e0180fba93d67e9766fb7b6c85130627124.sol:7

 Kevin is Satoshi    

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.914816
Transaction Length: 1
Severity: High
Contract: H4X
Function name: bulkTransfer(address[],uint256[])
PC address: 759
Estimated Gas Usage: 408 - 503
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xfe354e0180fba93d67e9766fb7b6c85130627124.sol:3

*/

/**
 * 
 * Kevin is Satoshi     

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.540414
Transaction Length: 1
Severity: High
Contract: H4X
Function name: bulkTransfer(address[],uint256[])
PC address: 842
Estimated Gas Usage: 584 - 679
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xfe354e0180fba93d67e9766fb7b6c85130627124.sol:7

 Kevin is Satoshi    

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:25.647577
Transaction Length: 1
Severity: High
Contract: H4X
Function name: bulkTransfer(address[],uint256[])
PC address: 844
Estimated Gas Usage: 584 - 679
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xfe354e0180fba93d67e9766fb7b6c85130627124.sol:3

*/

/**
 * 
 * Kevin is Satoshi     

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:52.050698
Transaction Length: 1
Severity: High
Contract: H4X
Function name: transferAndCall(address,uint256,bytes)
PC address: 1417
Estimated Gas Usage: 511 - 606
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xfe354e0180fba93d67e9766fb7b6c85130627124.sol:3

*/

/**
 * 
 * Kevin is Satoshi    

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:01:00.035830
Transaction Length: 1
Severity: Low
Contract: H4X
Function name: unfreeze(uint256)
PC address: 6412
Estimated Gas Usage: 1375 - 1660
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xfe354e0180fba93d67e9766fb7b6c85130627124.sol:224

_burnedAmount * FLOAT_SCALAR / info.totalFrozen

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:02:37.555235
Transaction Length: 2
Severity: Low
Contract: H4X
Function name: unfreeze(uint256)
PC address: 6412
Estimated Gas Usage: 1375 - 1660
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xfe354e0180fba93d67e9766fb7b6c85130627124.sol:224

_burnedAmount * FLOAT_SCALAR / info.totalFrozen

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol
Total states:21393
1148.357977
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.717809
Transaction Length: 1
Severity: High
Contract: Module
Function name: getModuleAddress(string)
PC address: 416
Estimated Gas Usage: 385 - 480
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:3

*/

// File: @openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.796031
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 511
Estimated Gas Usage: 364 - 459
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.831149
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 513
Estimated Gas Usage: 364 - 459
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:10.684239
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 596
Estimated Gas Usage: 540 - 635
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.274861
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 598
Estimated Gas Usage: 540 - 635
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:30.917303
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 681
Estimated Gas Usage: 716 - 811
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:02.257980
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 683
Estimated Gas Usage: 716 - 811
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:24.437131
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 766
Estimated Gas Usage: 892 - 987
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:01.061522
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: addRewards(address[],address[],uint256[],uint256[])
PC address: 768
Estimated Gas Usage: 892 - 987
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:03.761310
Transaction Length: 1
Severity: High
Contract: CompoundProtocol
Function name: handleDeposit(address[],uint256[])
PC address: 1413
Estimated Gas Usage: 430 - 525
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:04.368085
Transaction Length: 1
Severity: High
Contract: CompoundProtocol_DAI
Function name: handleDeposit(address[],uint256[])
PC address: 1413
Estimated Gas Usage: 430 - 525
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:06.903980
Transaction Length: 1
Severity: High
Contract: CompoundProtocol
Function name: handleDeposit(address[],uint256[])
PC address: 1415
Estimated Gas Usage: 430 - 525
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.565201
Transaction Length: 1
Severity: High
Contract: CompoundProtocol_DAI
Function name: handleDeposit(address[],uint256[])
PC address: 1415
Estimated Gas Usage: 430 - 525
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:33.003391
Transaction Length: 1
Severity: High
Contract: RewardVestingModule
Function name: getModuleAddress(string)
PC address: 1453
Estimated Gas Usage: 451 - 546
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:3

*/

// File: @openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:18.405610
Transaction Length: 1
Severity: High
Contract: CompoundProtocol
Function name: handleDeposit(address[],uint256[])
PC address: 1561
Estimated Gas Usage: 763 - 3540
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:23.202358
Transaction Length: 1
Severity: High
Contract: CompoundProtocol_DAI
Function name: handleDeposit(address[],uint256[])
PC address: 1561
Estimated Gas Usage: 763 - 3540
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:33.090535
Transaction Length: 1
Severity: High
Contract: CompoundProtocol
Function name: handleDeposit(address[],uint256[])
PC address: 1563
Estimated Gas Usage: 763 - 3540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:38.568996
Transaction Length: 1
Severity: High
Contract: CompoundProtocol_DAI
Function name: handleDeposit(address[],uint256[])
PC address: 1563
Estimated Gas Usage: 763 - 3540
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:59.806123
Transaction Length: 1
Severity: High
Contract: CompoundProtocol
Function name: getModuleAddress(string)
PC address: 1845
Estimated Gas Usage: 407 - 502
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:3

*/

// File: @openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:59.519686
Transaction Length: 1
Severity: High
Contract: CompoundProtocol_DAI
Function name: getModuleAddress(string)
PC address: 1845
Estimated Gas Usage: 407 - 502
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:3

*/

// File: @openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:28.105817
Transaction Length: 1
Severity: High
Contract: CompoundProtocol
Function name: withdraw(address,uint256[])
PC address: 2136
Estimated Gas Usage: 484 - 579
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:33.590263
Transaction Length: 1
Severity: High
Contract: CompoundProtocol_DAI
Function name: withdraw(address,uint256[])
PC address: 2136
Estimated Gas Usage: 484 - 579
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:5

openzeppelin\contract

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:32.504789
Transaction Length: 1
Severity: High
Contract: CompoundProtocol
Function name: withdraw(address,uint256[])
PC address: 2138
Estimated Gas Usage: 484 - 579
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:02:38.819625
Transaction Length: 1
Severity: High
Contract: CompoundProtocol_DAI
Function name: withdraw(address,uint256[])
PC address: 2138
Estimated Gas Usage: 484 - 579
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:3

*/

// File: @openzeppelin\contracts

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:40.673236
Transaction Length: 1
Severity: High
Contract: CompoundProtocol
Function name: supportedTokens()
PC address: 2569
Estimated Gas Usage: 988 - 4657
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:1402

function supportedTokens() public view returns(address[] memory){
        address[] memory tokens = new address[](1);
        tokens[0] = address(baseToken);
        return tokens;
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:04:41.033454
Transaction Length: 1
Severity: High
Contract: CompoundProtocol_DAI
Function name: supportedTokens()
PC address: 2569
Estimated Gas Usage: 988 - 4657
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:1402

function supportedTokens() public view returns(address[] memory){
        address[] memory tokens = new address[](1);
        tokens[0] = address(baseToken);
        return tokens;
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:03.537238
Transaction Length: 1
Severity: High
Contract: CompoundProtocol
Function name: supportedTokens()
PC address: 2609
Estimated Gas Usage: 1138 - 5183
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:1402

function supportedTokens() public view returns(address[] memory){
        address[] memory tokens = new address[](1);
        tokens[0] = address(baseToken);
        return tokens;
    }

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:06:06.824673
Transaction Length: 1
Severity: High
Contract: CompoundProtocol_DAI
Function name: supportedTokens()
PC address: 2609
Estimated Gas Usage: 1138 - 5183
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:1402

function supportedTokens() public view returns(address[] memory){
        address[] memory tokens = new address[](1);
        tokens[0] = address(baseToken);
        return tokens;
    }

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:03.214434
Transaction Length: 1
Severity: Low
Contract: CompoundProtocol
Function name: balanceOf(address)
PC address: 6632
Estimated Gas Usage: 2032 - 3163
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:1379

cToken.balanceOfUnderlying(address(this))

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:01:11.458211
Transaction Length: 1
Severity: Low
Contract: CompoundProtocol_DAI
Function name: balanceOf(address)
PC address: 6632
Estimated Gas Usage: 2032 - 3163
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:1379

cToken.balanceOfUnderlying(address(this))

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.918142
Transaction Length: 1
Severity: High
Contract: CompoundProtocol_DAI
Function name: normalizedBalance()
PC address: 16386
Estimated Gas Usage: 5661 - 43288
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:294

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.682120
Transaction Length: 1
Severity: High
Contract: CompoundProtocol
Function name: normalizedBalance()
PC address: 16715
Estimated Gas Usage: 5661 - 43288
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xFDce35FfC60769C7eC608107361fF453Da541E66.sol:294

a * b

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol
Total states:1322
82.064306
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:01.843126
Transaction Length: 1
Severity: High
Contract: TimeLock
Function name: addParameters(address[],uint256[],uint256[])
PC address: 857
Estimated Gas Usage: 384 - 479
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol:5

olidity ^0.6.0;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.103097
Transaction Length: 1
Severity: High
Contract: TimeLock
Function name: addParameters(address[],uint256[],uint256[])
PC address: 859
Estimated Gas Usage: 384 - 479
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol:3

*/

//pragma solidity ^0.6.0;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:13.099465
Transaction Length: 1
Severity: High
Contract: TimeLock
Function name: addParameters(address[],uint256[],uint256[])
PC address: 942
Estimated Gas Usage: 560 - 655
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol:5

olidity ^0.6.0;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:23.703139
Transaction Length: 1
Severity: High
Contract: TimeLock
Function name: addParameters(address[],uint256[],uint256[])
PC address: 944
Estimated Gas Usage: 560 - 655
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol:3

*/

//pragma solidity ^0.6.0;
pragma

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:37.847292
Transaction Length: 1
Severity: High
Contract: TimeLock
Function name: addParameters(address[],uint256[],uint256[])
PC address: 1027
Estimated Gas Usage: 736 - 831
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol:5

olidity ^0.6.0;
pragm

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:01:01.817064
Transaction Length: 1
Severity: High
Contract: TimeLock
Function name: addParameters(address[],uint256[],uint256[])
PC address: 1029
Estimated Gas Usage: 736 - 831
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0x134d4cf3d8c94c698b82e374aae48adcc3794c7f.sol:3

*/

//pragma solidity ^0.6.0;
pragma

--------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xfa30ec96de9840a611fcb64e7312f97bde6e155a.sol
Total states:11917
31.872376
The analysis was completed successfully. No issues were detected.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$                                                  $
$                                                  $
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Williams test file: ../../contracts/m_loop/loop4/0xda2f1b37aa2032c283611818c93589907e085293.sol
Total states:22554
99.981303
==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:00.321470
Transaction Length: 0
Severity: High
Contract: Town
Function name: constructor
PC address: 844
Estimated Gas Usage: 558 - 3889
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xda2f1b37aa2032c283611818c93589907e085293.sol:1402

distributionPeriod * 1 days

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:21.581043
Transaction Length: 0
Severity: High
Contract: Town
Function name: constructor
PC address: 1422
Estimated Gas Usage: 46536 - 230197
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xda2f1b37aa2032c283611818c93589907e085293.sol:303

a * b

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.770043
Transaction Length: 2
Severity: High
Contract: ERC20
Function name: increaseAllowance(address,uint256)
PC address: 3044
Estimated Gas Usage: 989 - 1464
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xda2f1b37aa2032c283611818c93589907e085293.sol:225

a + b

--------------------

==== External Call To Fixed Address ====
SWC ID: 107
FOUND TIME: 0:00:02.880812
Transaction Length: 1
Severity: Low
Contract: TownToken
Function name: transfer(address,uint256)
PC address: 3334
Estimated Gas Usage: 2044 - 3175
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: ../../contracts/m_loop/loop4/0xda2f1b37aa2032c283611818c93589907e085293.sol:1100

_town.checkProposal(recipient)

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:07.918223
Transaction Length: 2
Severity: High
Contract: ExternalTokenTemplate
Function name: increaseAllowance(address,uint256)
PC address: 3494
Estimated Gas Usage: 922 - 1397
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xda2f1b37aa2032c283611818c93589907e085293.sol:225

a + b

--------------------

==== Exception State ====
SWC ID: 110
FOUND TIME: 0:00:03.478442
Transaction Length: 1
Severity: Low
Contract: TownToken
Function name: getHolderByIndex(uint256)
PC address: 4982
Estimated Gas Usage: 725 - 820
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: ../../contracts/m_loop/loop4/0xda2f1b37aa2032c283611818c93589907e085293.sol:1076

_holders[index]

--------------------

==== Integer Overflow ====
SWC ID: 101
FOUND TIME: 0:00:05.791627
Transaction Length: 2
Severity: High
Contract: TownToken
Function name: increaseAllowance(address,uint256)
PC address: 6628
Estimated Gas Usage: 967 - 1442
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: ../../contracts/m_loop/loop4/0xda2f1b37aa2032c283611818c93589907e085293.sol:225

a + b

--------------------

