(node:26701) Warning: Accessing non-existent property 'cat' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:26701) Warning: Accessing non-existent property 'cd' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'chmod' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'cp' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'dirs' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'pushd' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'popd' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'echo' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'tempdir' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'pwd' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'exec' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'ls' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'find' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'grep' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'head' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'ln' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'mkdir' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'rm' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'mv' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'sed' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'set' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'sort' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'tail' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'test' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'to' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'toEnd' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'touch' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'uniq' of module exports inside circular dependency
(node:26701) Warning: Accessing non-existent property 'which' of module exports inside circular dependency
./loops/0xfd87ba715d93e2e00e66fc995c39549073cdf6fc.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlline 2798:23 extraneous input 'assetData' expecting {',', ')'}
line 2826:24 extraneous input 'password' expecting {',', ')'}
line 2860:23 extraneous input 'assetData' expecting {',', ')'}
line 2888:20 no viable alternative at input '.decode(assetData.sliceDestructive(4,assetData.length),(address,'
line 2888:20 no viable alternative at input '(address,'
line 2888:20 no viable alternative at input 'address,'
line 2956:38 extraneous input 'assetData' expecting {',', ')'}
line 2972:8 no viable alternative at input '.decode(assetData.sliceDestructive(4,assetData.length),(address))'
line 2972:8 no viable alternative at input '(address))'
line 2970:20 no viable alternative at input 'address)'
line 2972:8 extraneous input ')' expecting ';'
ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 86
column: 8
content: 0x28006595

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 183
column: 8
content: 0x08c379a0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1299
column: 8
content: 0xe946c1bb

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1307
column: 8
content: 0xc996af7b

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1851
column: 8
content: 0x140a84db

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1859
column: 8
content: 0xe9f83771

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1867
column: 8
content: 0xb65a25b9

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1875
column: 8
content: 0xde16f1a0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1883
column: 8
content: 0xeb5108a2

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 2060
column: 8
content: 0x1de45ad1

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 2854
column: 39
content: 0xdc1600f3

ruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 2584
column: 8
content: authorities.length-=1

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 2408
column: 8
content: for(uint256i=0;i<authorities.length;i++){if(authorities[i]==target){_removeAuthorizedAddressAtIndex(target,i);break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2408
column: 8
content: for(uint256i=0;i<authorities.length;i++){if(authorities[i]==target){_removeAuthorizedAddressAtIndex(target,i);break;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 50
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 50
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 169
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 169
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 292
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 292
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1285
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1285
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1410
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1410
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1631
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1631
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1704
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1704
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1837
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1837
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2046
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2046
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2163
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2163
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2306
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2306
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2635
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2635
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2780
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2780
column: 22
content: <

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 2854
column: 20
content: private

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 231
column: 4
content: functionrrevert(bytesmemoryerrorData)internalpure{assembly{revert(add(errorData,0x20),mload(errorData))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 320
column: 4
content: functionrawAddress(bytesmemoryinput)internalpurereturns(uint256memoryAddress){assembly{memoryAddress:=input}returnmemoryAddress;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 348
column: 4
content: functioncontentAddress(bytesmemoryinput)internalpurereturns(uint256memoryAddress){assembly{memoryAddress:=add(input,32)}returnmemoryAddress;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 378
column: 4
content: functionmemCopy(uint256dest,uint256source,uint256length)internalpure{if(length<32){assembly{letmask:=sub(exp(256,sub(32,length)),1)lets:=and(mload(source),not(mask))letd:=and(mload(dest),mask)mstore(dest,or(s,d))}}else{if(source==dest){return;}if(source>dest){assembly{length:=sub(length,32)letsEnd:=add(source,length)letdEnd:=add(dest,length)letlast:=mload(sEnd)for{}lt(source,sEnd){}{mstore(dest,mload(source))source:=add(source,32)dest:=add(dest,32)}mstore(dEnd,last)}}else{assembly{length:=sub(length,32)letsEnd:=add(source,length)letdEnd:=add(dest,length)letfirst:=mload(source)for{}slt(dest,dEnd){}{mstore(dEnd,mload(sEnd))sEnd:=sub(sEnd,32)dEnd:=sub(dEnd,32)}mstore(dest,first)}}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 678
column: 4
content: functionsliceDestructive(bytesmemoryb,uint256from,uint256to)internalpurereturns(bytesmemoryresult){if(from>to){LibRichErrors.rrevert(LibBytesRichErrors.InvalidByteOperationError(LibBytesRichErrors.InvalidByteOperationErrorCodes.FromLessThanOrEqualsToRequired,from,to));}if(to>b.length){LibRichErrors.rrevert(LibBytesRichErrors.InvalidByteOperationError(LibBytesRichErrors.InvalidByteOperationErrorCodes.ToLessThanOrEqualsLengthRequired,to,b.length));}assembly{result:=add(b,from)mstore(result,sub(to,from))}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 752
column: 4
content: functionpopLastByte(bytesmemoryb)internalpurereturns(bytes1result){if(b.length==0){LibRichErrors.rrevert(LibBytesRichErrors.InvalidByteOperationError(LibBytesRichErrors.InvalidByteOperationErrorCodes.LengthGreaterThanZeroRequired,b.length,0));}result=b[b.length-1];assembly{letnewLen:=sub(mload(b),1)mstore(b,newLen)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 844
column: 4
content: functionreadAddress(bytesmemoryb,uint256index)internalpurereturns(addressresult){if(b.length<index+20){LibRichErrors.rrevert(LibBytesRichErrors.InvalidByteOperationError(LibBytesRichErrors.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsTwentyRequired,b.length,index+20));}index+=20;assembly{result:=and(mload(add(b,index)),0xffffffffffffffffffffffffffffffffffffffff)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 914
column: 4
content: functionwriteAddress(bytesmemoryb,uint256index,addressinput)internalpure{if(b.length<index+20){LibRichErrors.rrevert(LibBytesRichErrors.InvalidByteOperationError(LibBytesRichErrors.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsTwentyRequired,b.length,index+20));}index+=20;assembly{letneighbors:=and(mload(add(b,index)),0xffffffffffffffffffffffff0000000000000000000000000000000000000000)input:=and(input,0xffffffffffffffffffffffffffffffffffffffff)mstore(add(b,index),xor(input,neighbors))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1012
column: 4
content: functionreadBytes32(bytesmemoryb,uint256index)internalpurereturns(bytes32result){if(b.length<index+32){LibRichErrors.rrevert(LibBytesRichErrors.InvalidByteOperationError(LibBytesRichErrors.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsThirtyTwoRequired,b.length,index+32));}index+=32;assembly{result:=mload(add(b,index))}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1072
column: 4
content: functionwriteBytes32(bytesmemoryb,uint256index,bytes32input)internalpure{if(b.length<index+32){LibRichErrors.rrevert(LibBytesRichErrors.InvalidByteOperationError(LibBytesRichErrors.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsThirtyTwoRequired,b.length,index+32));}index+=32;assembly{mstore(add(b,index),input)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1192
column: 4
content: functionreadBytes4(bytesmemoryb,uint256index)internalpurereturns(bytes4result){if(b.length<index+4){LibRichErrors.rrevert(LibBytesRichErrors.InvalidByteOperationError(LibBytesRichErrors.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsFourRequired,b.length,index+4));}index+=32;assembly{result:=mload(add(b,index))result:=and(result,0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1260
column: 4
content: functionwriteLength(bytesmemoryb,uint256length)internalpure{assembly{mstore(b,length)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 239
column: 8
content: assembly{revert(add(errorData,0x20),mload(errorData))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 330
column: 8
content: assembly{memoryAddress:=input}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 358
column: 8
content: assembly{memoryAddress:=add(input,32)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 402
column: 12
content: assembly{letmask:=sub(exp(256,sub(32,length)),1)lets:=and(mload(source),not(mask))letd:=and(mload(dest),mask)mstore(dest,or(s,d))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 458
column: 16
content: assembly{length:=sub(length,32)letsEnd:=add(source,length)letdEnd:=add(dest,length)letlast:=mload(sEnd)for{}lt(source,sEnd){}{mstore(dest,mload(source))source:=add(source,32)dest:=add(dest,32)}mstore(dEnd,last)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 516
column: 16
content: assembly{length:=sub(length,32)letsEnd:=add(source,length)letdEnd:=add(dest,length)letfirst:=mload(source)for{}slt(dest,dEnd){}{mstore(dEnd,mload(sEnd))sEnd:=sub(sEnd,32)dEnd:=sub(dEnd,32)}mstore(dest,first)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 732
column: 8
content: assembly{result:=add(b,from)mstore(result,sub(to,from))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 784
column: 8
content: assembly{letnewLen:=sub(mload(b),1)mstore(b,newLen)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 888
column: 8
content: assembly{result:=and(mload(add(b,index)),0xffffffffffffffffffffffffffffffffffffffff)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 958
column: 8
content: assembly{letneighbors:=and(mload(add(b,index)),0xffffffffffffffffffffffff0000000000000000000000000000000000000000)input:=and(input,0xffffffffffffffffffffffffffffffffffffffff)mstore(add(b,index),xor(input,neighbors))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1052
column: 8
content: assembly{result:=mload(add(b,index))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1112
column: 8
content: assembly{mstore(add(b,index),input)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1232
column: 8
content: assembly{result:=mload(add(b,index))result:=and(result,0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1268
column: 8
content: assembly{mstore(b,length)}

SOLIDITY_PRAGMAS_VERSION :26
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_ADDRESS_HARDCODED :11
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
SOLIDITY_USING_INLINE_ASSEMBLY :14
SOLIDITY_SHOULD_NOT_BE_PURE :12

---------------------------------------------
For contract 0xfd87ba715d93e2e00e66fc995c39549073cdf6fc.sol
Tool Runtime = 2.223927031001949 seconds
#############################################