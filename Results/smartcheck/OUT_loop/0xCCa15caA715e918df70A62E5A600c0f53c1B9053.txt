(node:14207) Warning: Accessing non-existent property 'cat' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:14207) Warning: Accessing non-existent property 'cd' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'chmod' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'cp' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'dirs' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'pushd' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'popd' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'echo' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'tempdir' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'pwd' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'exec' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'ls' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'find' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'grep' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'head' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'ln' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'mkdir' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'rm' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'mv' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'sed' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'set' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'sort' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'tail' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'test' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'to' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'toEnd' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'touch' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'uniq' of module exports inside circular dependency
(node:14207) Warning: Accessing non-existent property 'which' of module exports inside circular dependency
./loops/0xCCa15caA715e918df70A62E5A600c0f53c1B9053.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 54
column: 51
content: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

ruleId: SOLIDITY_CALL_WITHOUT_DATA
patternId: 111ppp
severity: 2
line: 89
column: 38
content: call.value(amount)("")

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 113
column: 8
content: for(uinti=0;i<swapSequences.length;i++){uinttokenAmountOut;for(uintk=0;k<swapSequences[i].length;k++){Swapmemoryswap=swapSequences[i][k];TokenInterfaceSwapTokenIn=TokenInterface(swap.tokenIn);if(k==1){swap.swapAmount=tokenAmountOut;}PoolInterfacepool=PoolInterface(swap.pool);if(SwapTokenIn.allowance(address(this),swap.pool)>0){SwapTokenIn.approve(swap.pool,0);}SwapTokenIn.approve(swap.pool,swap.swapAmount);(tokenAmountOut,)=pool.swapExactAmountIn(swap.tokenIn,swap.swapAmount,swap.tokenOut,swap.limitReturnAmount,swap.maxPrice);}totalAmountOut=add(tokenAmountOut,totalAmountOut);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 115
column: 12
content: for(uintk=0;k<swapSequences[i].length;k++){Swapmemoryswap=swapSequences[i][k];TokenInterfaceSwapTokenIn=TokenInterface(swap.tokenIn);if(k==1){swap.swapAmount=tokenAmountOut;}PoolInterfacepool=PoolInterface(swap.pool);if(SwapTokenIn.allowance(address(this),swap.pool)>0){SwapTokenIn.approve(swap.pool,0);}SwapTokenIn.approve(swap.pool,swap.swapAmount);(tokenAmountOut,)=pool.swapExactAmountIn(swap.tokenIn,swap.swapAmount,swap.tokenOut,swap.limitReturnAmount,swap.maxPrice);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 160
column: 8
content: for(uinti=0;i<swapSequences.length;i++){uinttokenAmountInFirstSwap;if(swapSequences[i].length==1){Swapmemoryswap=swapSequences[i][0];TokenInterfaceSwapTokenIn=TokenInterface(swap.tokenIn);PoolInterfacepool=PoolInterface(swap.pool);if(SwapTokenIn.allowance(address(this),swap.pool)>0){SwapTokenIn.approve(swap.pool,0);}SwapTokenIn.approve(swap.pool,swap.limitReturnAmount);(tokenAmountInFirstSwap,)=pool.swapExactAmountOut(swap.tokenIn,swap.limitReturnAmount,swap.tokenOut,swap.swapAmount,swap.maxPrice);}else{uintintermediateTokenAmount;SwapmemorysecondSwap=swapSequences[i][1];PoolInterfacepoolSecondSwap=PoolInterface(secondSwap.pool);intermediateTokenAmount=poolSecondSwap.calcInGivenOut(poolSecondSwap.getBalance(secondSwap.tokenIn),poolSecondSwap.getDenormalizedWeight(secondSwap.tokenIn),poolSecondSwap.getBalance(secondSwap.tokenOut),poolSecondSwap.getDenormalizedWeight(secondSwap.tokenOut),secondSwap.swapAmount,poolSecondSwap.getSwapFee());SwapmemoryfirstSwap=swapSequences[i][0];TokenInterfaceFirstSwapTokenIn=TokenInterface(firstSwap.tokenIn);PoolInterfacepoolFirstSwap=PoolInterface(firstSwap.pool);if(FirstSwapTokenIn.allowance(address(this),firstSwap.pool)<uint(-1)){FirstSwapTokenIn.approve(firstSwap.pool,uint(-1));}(tokenAmountInFirstSwap,)=poolFirstSwap.swapExactAmountOut(firstSwap.tokenIn,firstSwap.limitReturnAmount,firstSwap.tokenOut,intermediateTokenAmount,firstSwap.maxPrice);TokenInterfaceSecondSwapTokenIn=TokenInterface(secondSwap.tokenIn);if(SecondSwapTokenIn.allowance(address(this),secondSwap.pool)<uint(-1)){SecondSwapTokenIn.approve(secondSwap.pool,uint(-1));}poolSecondSwap.swapExactAmountOut(secondSwap.tokenIn,secondSwap.limitReturnAmount,secondSwap.tokenOut,secondSwap.swapAmount,secondSwap.maxPrice);}totalAmountIn=add(tokenAmountInFirstSwap,totalAmountIn);}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 66
column: 4
content: functiontransferFromAll(TokenInterfacetoken,uint256amount)internalreturns(bool){if(isETH(token)){weth.deposit.value(msg.value)();}else{require(token.transferFrom(msg.sender,address(this),amount),"ERR_TRANSFER_FAILED");}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 113
column: 8
content: for(uinti=0;i<swapSequences.length;i++){uinttokenAmountOut;for(uintk=0;k<swapSequences[i].length;k++){Swapmemoryswap=swapSequences[i][k];TokenInterfaceSwapTokenIn=TokenInterface(swap.tokenIn);if(k==1){swap.swapAmount=tokenAmountOut;}PoolInterfacepool=PoolInterface(swap.pool);if(SwapTokenIn.allowance(address(this),swap.pool)>0){SwapTokenIn.approve(swap.pool,0);}SwapTokenIn.approve(swap.pool,swap.swapAmount);(tokenAmountOut,)=pool.swapExactAmountIn(swap.tokenIn,swap.swapAmount,swap.tokenOut,swap.limitReturnAmount,swap.maxPrice);}totalAmountOut=add(tokenAmountOut,totalAmountOut);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 115
column: 12
content: for(uintk=0;k<swapSequences[i].length;k++){Swapmemoryswap=swapSequences[i][k];TokenInterfaceSwapTokenIn=TokenInterface(swap.tokenIn);if(k==1){swap.swapAmount=tokenAmountOut;}PoolInterfacepool=PoolInterface(swap.pool);if(SwapTokenIn.allowance(address(this),swap.pool)>0){SwapTokenIn.approve(swap.pool,0);}SwapTokenIn.approve(swap.pool,swap.swapAmount);(tokenAmountOut,)=pool.swapExactAmountIn(swap.tokenIn,swap.swapAmount,swap.tokenOut,swap.limitReturnAmount,swap.maxPrice);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 160
column: 8
content: for(uinti=0;i<swapSequences.length;i++){uinttokenAmountInFirstSwap;if(swapSequences[i].length==1){Swapmemoryswap=swapSequences[i][0];TokenInterfaceSwapTokenIn=TokenInterface(swap.tokenIn);PoolInterfacepool=PoolInterface(swap.pool);if(SwapTokenIn.allowance(address(this),swap.pool)>0){SwapTokenIn.approve(swap.pool,0);}SwapTokenIn.approve(swap.pool,swap.limitReturnAmount);(tokenAmountInFirstSwap,)=pool.swapExactAmountOut(swap.tokenIn,swap.limitReturnAmount,swap.tokenOut,swap.swapAmount,swap.maxPrice);}else{uintintermediateTokenAmount;SwapmemorysecondSwap=swapSequences[i][1];PoolInterfacepoolSecondSwap=PoolInterface(secondSwap.pool);intermediateTokenAmount=poolSecondSwap.calcInGivenOut(poolSecondSwap.getBalance(secondSwap.tokenIn),poolSecondSwap.getDenormalizedWeight(secondSwap.tokenIn),poolSecondSwap.getBalance(secondSwap.tokenOut),poolSecondSwap.getDenormalizedWeight(secondSwap.tokenOut),secondSwap.swapAmount,poolSecondSwap.getSwapFee());SwapmemoryfirstSwap=swapSequences[i][0];TokenInterfaceFirstSwapTokenIn=TokenInterface(firstSwap.tokenIn);PoolInterfacepoolFirstSwap=PoolInterface(firstSwap.pool);if(FirstSwapTokenIn.allowance(address(this),firstSwap.pool)<uint(-1)){FirstSwapTokenIn.approve(firstSwap.pool,uint(-1));}(tokenAmountInFirstSwap,)=poolFirstSwap.swapExactAmountOut(firstSwap.tokenIn,firstSwap.limitReturnAmount,firstSwap.tokenOut,intermediateTokenAmount,firstSwap.maxPrice);TokenInterfaceSecondSwapTokenIn=TokenInterface(secondSwap.tokenIn);if(SecondSwapTokenIn.allowance(address(this),secondSwap.pool)<uint(-1)){SecondSwapTokenIn.approve(secondSwap.pool,uint(-1));}poolSecondSwap.swapExactAmountOut(secondSwap.tokenIn,secondSwap.limitReturnAmount,secondSwap.tokenOut,secondSwap.swapAmount,secondSwap.maxPrice);}totalAmountIn=add(tokenAmountInFirstSwap,totalAmountIn);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 32
column: 0
content: contractTokenInterface{functionbalanceOf(address)publicviewreturns(uint);functionallowance(address,address)publicviewreturns(uint);functionapprove(address,uint)publicreturns(bool);functiontransfer(address,uint)publicreturns(bool);functiontransferFrom(address,address,uint)publicreturns(bool);functiondeposit()publicpayable;functionwithdraw(uint)public;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 19
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 19
column: 22
content: <

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 54
column: 12
content: private

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 24
column: 84
content: (uint,uint)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 25
column: 85
content: (uint,uint)

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 53
column: 4
content: TokenInterfaceweth;

SOLIDITY_VISIBILITY :1
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :3
SOLIDITY_CALL_WITHOUT_DATA :1
SOLIDITY_SHOULD_RETURN_STRUCT :2

---------------------------------------------
For contract 0xCCa15caA715e918df70A62E5A600c0f53c1B9053.sol
Tool Runtime = 1.768890706000093 seconds
#############################################