(node:25854) Warning: Accessing non-existent property 'cat' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:25854) Warning: Accessing non-existent property 'cd' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'chmod' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'cp' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'dirs' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'pushd' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'popd' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'echo' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'tempdir' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'pwd' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'exec' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'ls' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'find' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'grep' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'head' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'ln' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'mkdir' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'rm' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'mv' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'sed' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'set' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'sort' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'tail' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'test' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'to' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'toEnd' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'touch' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'uniq' of module exports inside circular dependency
(node:25854) Warning: Accessing non-existent property 'which' of module exports inside circular dependency
./loops/0x24d48513eac38449ec7c310a79584f87785f856f.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ARRAY_LENGTH_MANIPULATION
patternId: 872bdd
severity: 1
line: 304
column: 8
content: owners.length-=1

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 234
column: 8
content: for(uinti=0;i<_owners.length;i++){require(!isOwner[_owners[i]]&&_owners[i]!=address(0));isOwner[_owners[i]]=true;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 294
column: 8
content: for(uinti=0;i<owners.length-1;i++){if(owners[i]==owner){owners[i]=owners[owners.length-1];break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 334
column: 8
content: for(uinti=0;i<owners.length;i++){if(owners[i]==owner){owners[i]=newOwner;break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 556
column: 8
content: for(uinti=0;i<owners.length;i++){if(confirmations[transactionId][owners[i]])count+=1;if(count==required)returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 642
column: 8
content: for(uinti=0;i<owners.length;i++){if(confirmations[transactionId][owners[i]])count+=1;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 671
column: 8
content: for(uinti=0;i<transactionCount;i++){if(pending&&!transactions[i].executed||executed&&transactions[i].executed)count+=1;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 726
column: 8
content: for(i=0;i<owners.length;i++){if(confirmations[transactionId][owners[i]]){confirmationsTemp[count]=owners[i];count+=1;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 776
column: 8
content: for(i=0;i<transactionCount;i++){if(pending&&!transactions[i].executed||executed&&transactions[i].executed){transactionIdsTemp[count]=i;count+=1;}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 632
column: 4
content: functiongetConfirmationCount(uinttransactionId)publicviewreturns(uintcount){for(uinti=0;i<owners.length;i++){if(confirmations[transactionId][owners[i]])count+=1;}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 661
column: 4
content: functiongetTransactionCount(boolpending,boolexecuted)publicviewreturns(uintcount){for(uinti=0;i<transactionCount;i++){if(pending&&!transactions[i].executed||executed&&transactions[i].executed)count+=1;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 234
column: 8
content: for(uinti=0;i<_owners.length;i++){require(!isOwner[_owners[i]]&&_owners[i]!=address(0));isOwner[_owners[i]]=true;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 334
column: 8
content: for(uinti=0;i<owners.length;i++){if(owners[i]==owner){owners[i]=newOwner;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 556
column: 8
content: for(uinti=0;i<owners.length;i++){if(confirmations[transactionId][owners[i]])count+=1;if(count==required)returntrue;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 642
column: 8
content: for(uinti=0;i<owners.length;i++){if(confirmations[transactionId][owners[i]])count+=1;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 726
column: 8
content: for(i=0;i<owners.length;i++){if(confirmations[transactionId][owners[i]]){confirmationsTemp[count]=owners[i];count+=1;}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 20
column: 0
content: contractMultiSigWallet{eventConfirmation(addressindexedsender,uintindexedtransactionId);eventRevocation(addressindexedsender,uintindexedtransactionId);eventSubmission(uintindexedtransactionId);eventExecution(uintindexedtransactionId);eventExecutionFailure(uintindexedtransactionId);eventDeposit(addressindexedsender,uintvalue);eventOwnerAddition(addressindexedowner);eventOwnerRemoval(addressindexedowner);eventRequirementChange(uintrequired);uintconstantpublicMAX_OWNER_COUNT=50;mapping(uint=>Transaction)publictransactions;mapping(uint=>mapping(address=>bool))publicconfirmations;mapping(address=>bool)publicisOwner;address[]publicowners;uintpublicrequired;uintpublictransactionCount;structTransaction{addressdestination;uintvalue;bytesdata;boolexecuted;}modifieronlyWallet(){require(msg.sender==address(this));_;}modifierownerDoesNotExist(addressowner){require(!isOwner[owner]);_;}modifierownerExists(addressowner){require(isOwner[owner]);_;}modifiertransactionExists(uinttransactionId){require(transactions[transactionId].destination!=address(0));_;}modifierconfirmed(uinttransactionId,addressowner){require(confirmations[transactionId][owner]);_;}modifiernotConfirmed(uinttransactionId,addressowner){require(!confirmations[transactionId][owner]);_;}modifiernotExecuted(uinttransactionId){require(!transactions[transactionId].executed);_;}modifiernotNull(address_address){require(_address!=address(0));_;}modifiervalidRequirement(uintownerCount,uint_required){require(ownerCount<=MAX_OWNER_COUNT&&_required<=ownerCount&&_required!=0&&ownerCount!=0);_;}function()externalpayable{if(msg.value>0)emitDeposit(msg.sender,msg.value);}constructor(address[]memory_owners,uint_required)publicvalidRequirement(_owners.length,_required){for(uinti=0;i<_owners.length;i++){require(!isOwner[_owners[i]]&&_owners[i]!=address(0));isOwner[_owners[i]]=true;}owners=_owners;required=_required;}functionaddOwner(addressowner)publiconlyWalletownerDoesNotExist(owner)notNull(owner)validRequirement(owners.length+1,required){isOwner[owner]=true;owners.push(owner);emitOwnerAddition(owner);}functionremoveOwner(addressowner)publiconlyWalletownerExists(owner){isOwner[owner]=false;for(uinti=0;i<owners.length-1;i++){if(owners[i]==owner){owners[i]=owners[owners.length-1];break;}}owners.length-=1;if(required>owners.length)changeRequirement(owners.length);emitOwnerRemoval(owner);}functionreplaceOwner(addressowner,addressnewOwner)publiconlyWalletownerExists(owner)ownerDoesNotExist(newOwner){for(uinti=0;i<owners.length;i++){if(owners[i]==owner){owners[i]=newOwner;break;}}isOwner[owner]=false;isOwner[newOwner]=true;emitOwnerRemoval(owner);emitOwnerAddition(newOwner);}functionchangeRequirement(uint_required)publiconlyWalletvalidRequirement(owners.length,_required){required=_required;emitRequirementChange(_required);}functionsubmitTransaction(addressdestination,uintvalue,bytesmemorydata)publicreturns(uinttransactionId){transactionId=addTransaction(destination,value,data);confirmTransaction(transactionId);}functionconfirmTransaction(uinttransactionId)publicownerExists(msg.sender)transactionExists(transactionId)notConfirmed(transactionId,msg.sender){confirmations[transactionId][msg.sender]=true;emitConfirmation(msg.sender,transactionId);executeTransaction(transactionId);}functionrevokeConfirmation(uinttransactionId)publicownerExists(msg.sender)confirmed(transactionId,msg.sender)notExecuted(transactionId){confirmations[transactionId][msg.sender]=false;emitRevocation(msg.sender,transactionId);}functionexecuteTransaction(uinttransactionId)publicownerExists(msg.sender)confirmed(transactionId,msg.sender)notExecuted(transactionId){if(isConfirmed(transactionId)){Transactionstoragetxn=transactions[transactionId];txn.executed=true;if(external_call(txn.destination,txn.value,txn.data.length,txn.data))emitExecution(transactionId);else{emitExecutionFailure(transactionId);txn.executed=false;}}}functionexternal_call(addressdestination,uintvalue,uintdataLength,bytesmemorydata)internalreturns(bool){boolresult;assembly{letx:=mload(0x40)letd:=add(data,32)result:=call(sub(gas,34710),destination,value,d,dataLength,x,0)}returnresult;}functionisConfirmed(uinttransactionId)publicviewreturns(bool){uintcount=0;for(uinti=0;i<owners.length;i++){if(confirmations[transactionId][owners[i]])count+=1;if(count==required)returntrue;}}functionaddTransaction(addressdestination,uintvalue,bytesmemorydata)internalnotNull(destination)returns(uinttransactionId){transactionId=transactionCount;transactions[transactionId]=Transaction({destination:destination,value:value,data:data,executed:false});transactionCount+=1;emitSubmission(transactionId);}functiongetConfirmationCount(uinttransactionId)publicviewreturns(uintcount){for(uinti=0;i<owners.length;i++){if(confirmations[transactionId][owners[i]])count+=1;}}functiongetTransactionCount(boolpending,boolexecuted)publicviewreturns(uintcount){for(uinti=0;i<transactionCount;i++){if(pending&&!transactions[i].executed||executed&&transactions[i].executed)count+=1;}}functiongetOwners()publicviewreturns(address[]memory){returnowners;}functiongetConfirmations(uinttransactionId)publicviewreturns(address[]memory_confirmations){address[]memoryconfirmationsTemp=newaddress[](owners.length);uintcount=0;uinti;for(i=0;i<owners.length;i++){if(confirmations[transactionId][owners[i]]){confirmationsTemp[count]=owners[i];count+=1;}}_confirmations=newaddress[](count);for(i=0;i<count;i++){_confirmations[i]=confirmationsTemp[i];}}functiongetTransactionIds(uintfrom,uintto,boolpending,boolexecuted)publicviewreturns(uint[]memory_transactionIds){uint[]memorytransactionIdsTemp=newuint[](transactionCount);uintcount=0;uinti;for(i=0;i<transactionCount;i++){if(pending&&!transactions[i].executed||executed&&transactions[i].executed){transactionIdsTemp[count]=i;count+=1;}}_transactionIds=newuint[](to-from);for(i=from;i<to;i++){_transactionIds[i-from]=transactionIdsTemp[i];}}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 10
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 10
column: 22
content: <

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 502
column: 8
content: assembly{letx:=mload(0x40)letd:=add(data,32)result:=call(sub(gas,34710),destination,value,d,dataLength,x,0)}

SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_ARRAY_LENGTH_MANIPULATION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :2
SOLIDITY_EXTRA_GAS_IN_LOOPS :8
SOLIDITY_GAS_LIMIT_IN_LOOPS :5
SOLIDITY_USING_INLINE_ASSEMBLY :1

---------------------------------------------
For contract 0x24d48513eac38449ec7c310a79584f87785f856f.sol
Tool Runtime = 1.728595172000496 seconds
#############################################