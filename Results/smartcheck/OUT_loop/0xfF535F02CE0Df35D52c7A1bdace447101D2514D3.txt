(node:26440) Warning: Accessing non-existent property 'cat' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:26440) Warning: Accessing non-existent property 'cd' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'chmod' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'cp' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'dirs' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'pushd' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'popd' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'echo' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'tempdir' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'pwd' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'exec' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'ls' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'find' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'grep' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'head' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'ln' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'mkdir' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'rm' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'mv' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'sed' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'set' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'sort' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'tail' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'test' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'to' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'toEnd' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'touch' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'uniq' of module exports inside circular dependency
(node:26440) Warning: Accessing non-existent property 'which' of module exports inside circular dependency
./loops/0xfF535F02CE0Df35D52c7A1bdace447101D2514D3.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlline 143:64 extraneous input 'reason' expecting {',', ')'}
line 264:48 extraneous input 'names' expecting {',', ')'}
line 264:74 extraneous input 'destinations' expecting {',', ')'}
line 278:64 extraneous input 'reason' expecting {',', ')'}
line 712:49 no viable alternative at input '(bool))'
line 712:48 no viable alternative at input 'bool)'
line 712:50 mismatched input ',' expecting ';'
line 712:96 extraneous input ')' expecting ';'
line 970:86 extraneous input 'periodIDs' expecting {',', ')'}
line 979:52 extraneous input 'periodIDs' expecting {',', ')'}
line 987:34 mismatched input 'payable' expecting {',', ')'}
line 987:56 no viable alternative at input 'recoverAddress)'
line 987:56 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 987:66 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1206:86 extraneous input 'periodIDs' expecting {',', ')'}
line 1239:52 extraneous input 'periodIDs' expecting {',', ')'}
line 1299:34 mismatched input 'payable' expecting {',', ')'}
line 1299:56 no viable alternative at input 'recoverAddress)'
line 1299:56 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1299:77 mismatched input '{' expecting {';', '='}
line 1300:31 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1300:46 extraneous input ')' expecting {';', '='}
line 1303:31 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1303:38 extraneous input ')' expecting {';', '='}
line 1305:27 mismatched input '(' expecting {';', '='}
line 1305:42 mismatched input ',' expecting ')'
line 1305:50 extraneous input ')' expecting {';', '='}
line 1308:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 80
column: 8
content: nominatedOwner=address(0)

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 267
column: 8
content: for(uinti=0;i<names.length;i++){repository[names[i]]=destinations[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 312
column: 8
content: for(uinti=0;i<_addressesToCache.length;i++){if(_addressesToCache[i]!=bytes32(0)){resolverAddressesRequired.push(_addressesToCache[i]);}else{break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 329
column: 8
content: for(uinti=0;i<resolverAddressesRequired.length;i++){bytes32name=resolverAddressesRequired[i];addressCache[name]=resolver.requireAndGetAddress(name,"Resolver missing target");}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 352
column: 8
content: for(uinti=0;i<resolverAddressesRequired.length;i++){bytes32name=resolverAddressesRequired[i];if(resolver.getAddress(name)!=addressCache[name]||addressCache[name]==address(0)){returnfalse;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 369
column: 8
content: for(uinti=0;i<resolverAddressesRequired.length;i++){addressesRequired[i]=resolverAddressesRequired[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1211
column: 8
content: for(uinti=0;i<periodIDs.length;i++){uintperiodID=periodIDs[i];totalRewards=totalRewards.add(_calculateRewards(account,periodID));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1240
column: 8
content: for(uinti=0;i<periodIDs.length;i++){uintperiodID=periodIDs[i];_claimRewards(msg.sender,periodID);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 267
column: 8
content: for(uinti=0;i<names.length;i++){repository[names[i]]=destinations[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 312
column: 8
content: for(uinti=0;i<_addressesToCache.length;i++){if(_addressesToCache[i]!=bytes32(0)){resolverAddressesRequired.push(_addressesToCache[i]);}else{break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 329
column: 8
content: for(uinti=0;i<resolverAddressesRequired.length;i++){bytes32name=resolverAddressesRequired[i];addressCache[name]=resolver.requireAndGetAddress(name,"Resolver missing target");}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 352
column: 8
content: for(uinti=0;i<resolverAddressesRequired.length;i++){bytes32name=resolverAddressesRequired[i];if(resolver.getAddress(name)!=addressCache[name]||addressCache[name]==address(0)){returnfalse;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 369
column: 8
content: for(uinti=0;i<resolverAddressesRequired.length;i++){addressesRequired[i]=resolverAddressesRequired[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1211
column: 8
content: for(uinti=0;i<periodIDs.length;i++){uintperiodID=periodIDs[i];totalRewards=totalRewards.add(_calculateRewards(account,periodID));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1240
column: 8
content: for(uinti=0;i<periodIDs.length;i++){uintperiodID=periodIDs[i];_claimRewards(msg.sender,periodID);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1108
column: 0
content: contractTradingRewardsisITradingRewards,ReentrancyGuard,Owned,Pausable,MixinResolver{usingSafeMathforuint;usingSafeDecimalMathforuint;usingSafeERC20forIERC20;uintprivate_currentPeriodID;uintprivate_balanceAssignedToRewards;mapping(uint=>Period)private_periods;structPeriod{boolisFinalized;uintrecordedFees;uinttotalRewards;uintavailableRewards;mapping(address=>uint)unaccountedFeesForAccount;}addressprivate_periodController;bytes32privateconstantCONTRACT_EXCHANGER="Exchanger";bytes32privateconstantCONTRACT_SYNTHETIX="Synthetix";bytes32[24]private_addressesToCache=[CONTRACT_EXCHANGER,CONTRACT_SYNTHETIX];constructor(addressowner,addressperiodController,addressresolver)publicOwned(owner)MixinResolver(resolver,_addressesToCache){require(periodController!=address(0),"Invalid period controller");_periodController=periodController;}functionsynthetix()internalviewreturns(IERC20){returnIERC20(requireAndGetAddress(CONTRACT_SYNTHETIX,"Missing Synthetix address"));}functionexchanger()internalviewreturns(IExchanger){returnIExchanger(requireAndGetAddress(CONTRACT_EXCHANGER,"Missing Exchanger address"));}functiongetAvailableRewards()externalviewreturns(uint){return_balanceAssignedToRewards;}functiongetUnassignedRewards()externalviewreturns(uint){returnsynthetix().balanceOf(address(this)).sub(_balanceAssignedToRewards);}functiongetRewardsToken()externalviewreturns(address){returnaddress(synthetix());}functiongetPeriodController()externalviewreturns(address){return_periodController;}functiongetCurrentPeriod()externalviewreturns(uint){return_currentPeriodID;}functiongetPeriodIsClaimable(uintperiodID)externalviewreturns(bool){return_periods[periodID].isFinalized;}functiongetPeriodIsFinalized(uintperiodID)externalviewreturns(bool){return_periods[periodID].isFinalized;}functiongetPeriodRecordedFees(uintperiodID)externalviewreturns(uint){return_periods[periodID].recordedFees;}functiongetPeriodTotalRewards(uintperiodID)externalviewreturns(uint){return_periods[periodID].totalRewards;}functiongetPeriodAvailableRewards(uintperiodID)externalviewreturns(uint){return_periods[periodID].availableRewards;}functiongetUnaccountedFeesForAccountForPeriod(addressaccount,uintperiodID)externalviewreturns(uint){return_periods[periodID].unaccountedFeesForAccount[account];}functiongetAvailableRewardsForAccountForPeriod(addressaccount,uintperiodID)externalviewreturns(uint){return_calculateRewards(account,periodID);}functiongetAvailableRewardsForAccountForPeriods(addressaccount,uint[]calldataperiodIDs)externalviewreturns(uinttotalRewards){for(uinti=0;i<periodIDs.length;i++){uintperiodID=periodIDs[i];totalRewards=totalRewards.add(_calculateRewards(account,periodID));}}function_calculateRewards(addressaccount,uintperiodID)internalviewreturns(uint){Periodstorageperiod=_periods[periodID];if(period.availableRewards==0||period.recordedFees==0||!period.isFinalized){return0;}uintaccountFees=period.unaccountedFeesForAccount[account];if(accountFees==0){return0;}uintparticipationRatio=accountFees.divideDecimal(period.recordedFees);returnparticipationRatio.multiplyDecimal(period.totalRewards);}functionclaimRewardsForPeriod(uintperiodID)externalnonReentrantnotPaused{_claimRewards(msg.sender,periodID);}functionclaimRewardsForPeriods(uint[]calldataperiodIDs)externalnonReentrantnotPaused{for(uinti=0;i<periodIDs.length;i++){uintperiodID=periodIDs[i];_claimRewards(msg.sender,periodID);}}function_claimRewards(addressaccount,uintperiodID)internal{Periodstorageperiod=_periods[periodID];require(period.isFinalized,"Period is not finalized");uintamountToClaim=_calculateRewards(account,periodID);require(amountToClaim>0,"No rewards available");period.unaccountedFeesForAccount[account]=0;period.availableRewards=period.availableRewards.sub(amountToClaim);_balanceAssignedToRewards=_balanceAssignedToRewards.sub(amountToClaim);synthetix().safeTransfer(account,amountToClaim);emitRewardsClaimed(account,amountToClaim,periodID);}functionrecordExchangeFeeForAccount(uintusdFeeAmount,addressaccount)externalonlyExchanger{Periodstorageperiod=_periods[_currentPeriodID];period.unaccountedFeesForAccount[account]=period.unaccountedFeesForAccount[account].add(usdFeeAmount);period.recordedFees=period.recordedFees.add(usdFeeAmount);emitExchangeFeeRecorded(account,usdFeeAmount,_currentPeriodID);}functioncloseCurrentPeriodWithRewards(uintrewards)externalonlyPeriodController{uintcurrentBalance=synthetix().balanceOf(address(this));uintavailableForNewRewards=currentBalance.sub(_balanceAssignedToRewards);require(rewards<=availableForNewRewards,"Insufficient free rewards");Periodstorageperiod=_periods[_currentPeriodID];period.totalRewards=rewards;period.availableRewards=rewards;period.isFinalized=true;_balanceAssignedToRewards=_balanceAssignedToRewards.add(rewards);emitPeriodFinalizedWithRewards(_currentPeriodID,rewards);_currentPeriodID=_currentPeriodID.add(1);emitNewPeriodStarted(_currentPeriodID);}functionrecoverEther(addresspayablerecoverAddress)externalonlyOwner{_validateRecoverAddress(recoverAddress);uintamount=address(this).balance;recoverAddress.transfer(amount);emitEtherRecovered(recoverAddress,amount);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 111
column: 4
content: functionsetPaused(bool_paused)externalonlyOwner{if(_paused==paused){return;}paused=_paused;if(paused){lastPauseTime=now;}emitPauseChanged(paused);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 326
column: 4
content: functionsetResolverAndSyncCache(AddressResolver_resolver)externalonlyOwner{resolver=_resolver;for(uinti=0;i<resolverAddressesRequired.length;i++){bytes32name=resolverAddressesRequired[i];addressCache[name]=resolver.requireAndGetAddress(name,"Resolver missing target");}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 57
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 57
column: 22
content: <

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 302
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 465
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 466
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 467
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 732
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 772
column: 9
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1115
column: 9
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1116
column: 9
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1117
column: 28
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1127
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1131
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1132
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1134
column: 16
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 657
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 761
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1109
column: 4
content: usingSafeMathforuint;

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 634
column: 4
content: functionisContract(addressaccount)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(account)}returnsize>0;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 188
column: 16
content: (uintcratio,boolanyRateIsInvalid)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 203
column: 16
content: (uintmaxIssuable,uintalreadyIssued,uinttotalSystemDebt)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 218
column: 16
content: (uinttransferable,boolanyRateIsInvalid)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 249
column: 23
content: (uinttotalRedeemed,uintamountToLiquidate)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1015
column: 16
content: (uintreclaimAmount,uintrebateAmount,uintnumEntries)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1035
column: 16
content: (uintamountReceived,uintfee,uintexchangeFeeRate)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1084
column: 16
content: (uintreclaimed,uintrefunded,uintnumEntries)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 661
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 665
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 676
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 681
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 686
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 707
column: 65
content: call(data)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 987
column: 4
content: functionrecoverEther(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1299
column: 4
content: functionrecoverEther(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1300
column: 8
content: _validateRecoverAddress(recoverAddress);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1302
column: 8
content: uintamount=address(this).balance;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1303
column: 8
content: recoverAddress.transfer(amount);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1305
column: 8
content: emitEtherRecovered

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1305
column: 27
content: (recoverAddress,amount);

SOLIDITY_VISIBILITY :7
SOLIDITY_SAFEMATH :3
SOLIDITY_OVERPOWERED_ROLE :2
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :13
SOLIDITY_EXTRA_GAS_IN_LOOPS :7
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :7
SOLIDITY_UNCHECKED_CALL :6
SOLIDITY_SHOULD_RETURN_STRUCT :7
SOLIDITY_SHOULD_NOT_BE_VIEW :1

---------------------------------------------
For contract 0xfF535F02CE0Df35D52c7A1bdace447101D2514D3.sol
Tool Runtime = 2.293829559999722 seconds
#############################################