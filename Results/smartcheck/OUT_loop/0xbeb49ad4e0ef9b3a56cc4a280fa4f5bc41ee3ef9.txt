(node:26570) Warning: Accessing non-existent property 'cat' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:26570) Warning: Accessing non-existent property 'cd' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'chmod' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'cp' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'dirs' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'pushd' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'popd' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'echo' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'tempdir' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'pwd' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'exec' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'ls' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'find' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'grep' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'head' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'ln' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'mkdir' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'rm' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'mv' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'sed' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'set' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'sort' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'tail' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'test' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'to' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'toEnd' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'touch' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'uniq' of module exports inside circular dependency
(node:26570) Warning: Accessing non-existent property 'which' of module exports inside circular dependency
./loops/0xbeb49ad4e0ef9b3a56cc4a280fa4f5bc41ee3ef9.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlline 304:57 extraneous input 'payable' expecting {',', ')'}
line 596:71 extraneous input 'payable' expecting {',', ')'}
line 692:49 no viable alternative at input '(bool))'
line 692:48 no viable alternative at input 'bool)'
line 692:50 mismatched input ',' expecting ';'
line 692:96 extraneous input ')' expecting ';'
line 1038:27 extraneous input 'pools' expecting {',', ')'}
line 1039:27 extraneous input 'assets' expecting {',', ')'}
line 1077:27 extraneous input 'addrs' expecting {',', ')'}
line 1078:24 extraneous input 'toggles' expecting {',', ')'}
line 1160:27 extraneous input 'assets' expecting {',', ')'}
line 1161:27 extraneous input 'amounts' expecting {',', ')'}
line 1228:27 extraneous input 'tokens' expecting {',', ')'}
line 1346:27 extraneous input 'tokens' expecting {',', ')'}
ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 44
column: 54
content: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 45
column: 47
content: 0x56d811088235F11C8920698a204A5010a788f4b3

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 46
column: 48
content: 0xB72B31907C1C95F3650b64b2469e08EdACeE5e8F

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1059
column: 16
content: underlyingToLoanPool[loanPoolToUnderlying[pools[i]]]=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1060
column: 16
content: loanPoolToUnderlying[pools[i]]=address(0)

ruleId: SOLIDITY_CALL_WITHOUT_DATA
patternId: 111ppp
severity: 2
line: 622
column: 37
content: call.value(amount)("")

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1045
column: 8
content: for(uint256i=0;i<pools.length;i++){require(pools[i]!=assets[i],"pool == asset");require(pools[i]!=address(0),"pool == 0");addresspool=loanPoolToUnderlying[pools[i]];if(assets[i]==address(0)){require(pool!=address(0),"pool not exists");}else{require(pool==address(0),"pool exists");}if(assets[i]==address(0)){underlyingToLoanPool[loanPoolToUnderlying[pools[i]]]=address(0);loanPoolToUnderlying[pools[i]]=address(0);loanPoolsSet.removeAddress(pools[i]);}else{loanPoolToUnderlying[pools[i]]=assets[i];underlyingToLoanPool[assets[i]]=pools[i];loanPoolsSet.addAddress(pools[i]);}emitSetLoanPool(msg.sender,pools[i],assets[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1084
column: 8
content: for(uint256i=0;i<addrs.length;i++){supportedTokens[addrs[i]]=toggles[i];emitSetSupportedTokens(msg.sender,addrs[i],toggles[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1167
column: 8
content: for(uint256i=0;i<assets.length;i++){require(amounts[i]<=WEI_PERCENT_PRECISION,"value too high");uint256oldValue=liquidationIncentivePercent[assets[i]];liquidationIncentivePercent[assets[i]]=amounts[i];emitSetLiquidationIncentivePercent(msg.sender,assets[i],oldValue,amounts[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1239
column: 8
content: for(uint256i=0;i<tokens.length;i++){token=tokens[i];if(feeType==FeeType.All||feeType==FeeType.Lending){balance=lendingFeeTokensHeld[token];if(balance!=0){amounts[i]=balance;lendingFeeTokensHeld[token]=0;lendingFeeTokensPaid[token]=lendingFeeTokensPaid[token].add(balance);emitWithdrawLendingFees(msg.sender,token,receiver,balance);}}if(feeType==FeeType.All||feeType==FeeType.Trading){balance=tradingFeeTokensHeld[token];if(balance!=0){amounts[i]+=balance;tradingFeeTokensHeld[token]=0;tradingFeeTokensPaid[token]=tradingFeeTokensPaid[token].add(balance);emitWithdrawTradingFees(msg.sender,token,receiver,balance);}}if(feeType==FeeType.All||feeType==FeeType.Borrowing){balance=borrowingFeeTokensHeld[token];if(balance!=0){amounts[i]+=balance;borrowingFeeTokensHeld[token]=0;borrowingFeeTokensPaid[token]=borrowingFeeTokensPaid[token].add(balance);emitWithdrawBorrowingFees(msg.sender,token,receiver,balance);}}if(amounts[i]!=0){IERC20(token).safeTransfer(receiver,amounts[i]);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1355
column: 8
content: for(uint256i=0;i<tokens.length;i++){token=tokens[i];if(feeType==FeeType.Lending){amountsHeld[i]=lendingFeeTokensHeld[token];amountsPaid[i]=lendingFeeTokensPaid[token];}elseif(feeType==FeeType.Trading){amountsHeld[i]=tradingFeeTokensHeld[token];amountsPaid[i]=tradingFeeTokensPaid[token];}elseif(feeType==FeeType.Borrowing){amountsHeld[i]=borrowingFeeTokensHeld[token];amountsPaid[i]=borrowingFeeTokensPaid[token];}else{amountsHeld[i]=lendingFeeTokensHeld[token]+tradingFeeTokensHeld[token]+borrowingFeeTokensHeld[token];amountsPaid[i]=lendingFeeTokensPaid[token]+tradingFeeTokensPaid[token]+borrowingFeeTokensPaid[token];}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1045
column: 8
content: for(uint256i=0;i<pools.length;i++){require(pools[i]!=assets[i],"pool == asset");require(pools[i]!=address(0),"pool == 0");addresspool=loanPoolToUnderlying[pools[i]];if(assets[i]==address(0)){require(pool!=address(0),"pool not exists");}else{require(pool==address(0),"pool exists");}if(assets[i]==address(0)){underlyingToLoanPool[loanPoolToUnderlying[pools[i]]]=address(0);loanPoolToUnderlying[pools[i]]=address(0);loanPoolsSet.removeAddress(pools[i]);}else{loanPoolToUnderlying[pools[i]]=assets[i];underlyingToLoanPool[assets[i]]=pools[i];loanPoolsSet.addAddress(pools[i]);}emitSetLoanPool(msg.sender,pools[i],assets[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1084
column: 8
content: for(uint256i=0;i<addrs.length;i++){supportedTokens[addrs[i]]=toggles[i];emitSetSupportedTokens(msg.sender,addrs[i],toggles[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1167
column: 8
content: for(uint256i=0;i<assets.length;i++){require(amounts[i]<=WEI_PERCENT_PRECISION,"value too high");uint256oldValue=liquidationIncentivePercent[assets[i]];liquidationIncentivePercent[assets[i]]=amounts[i];emitSetLiquidationIncentivePercent(msg.sender,assets[i],oldValue,amounts[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1239
column: 8
content: for(uint256i=0;i<tokens.length;i++){token=tokens[i];if(feeType==FeeType.All||feeType==FeeType.Lending){balance=lendingFeeTokensHeld[token];if(balance!=0){amounts[i]=balance;lendingFeeTokensHeld[token]=0;lendingFeeTokensPaid[token]=lendingFeeTokensPaid[token].add(balance);emitWithdrawLendingFees(msg.sender,token,receiver,balance);}}if(feeType==FeeType.All||feeType==FeeType.Trading){balance=tradingFeeTokensHeld[token];if(balance!=0){amounts[i]+=balance;tradingFeeTokensHeld[token]=0;tradingFeeTokensPaid[token]=tradingFeeTokensPaid[token].add(balance);emitWithdrawTradingFees(msg.sender,token,receiver,balance);}}if(feeType==FeeType.All||feeType==FeeType.Borrowing){balance=borrowingFeeTokensHeld[token];if(balance!=0){amounts[i]+=balance;borrowingFeeTokensHeld[token]=0;borrowingFeeTokensPaid[token]=borrowingFeeTokensPaid[token].add(balance);emitWithdrawBorrowingFees(msg.sender,token,receiver,balance);}}if(amounts[i]!=0){IERC20(token).safeTransfer(receiver,amounts[i]);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1355
column: 8
content: for(uint256i=0;i<tokens.length;i++){token=tokens[i];if(feeType==FeeType.Lending){amountsHeld[i]=lendingFeeTokensHeld[token];amountsPaid[i]=lendingFeeTokensPaid[token];}elseif(feeType==FeeType.Trading){amountsHeld[i]=tradingFeeTokensHeld[token];amountsPaid[i]=tradingFeeTokensPaid[token];}elseif(feeType==FeeType.Borrowing){amountsHeld[i]=borrowingFeeTokensHeld[token];amountsPaid[i]=borrowingFeeTokensPaid[token];}else{amountsHeld[i]=lendingFeeTokensHeld[token]+tradingFeeTokensHeld[token]+borrowingFeeTokensHeld[token];amountsPaid[i]=lendingFeeTokensPaid[token]+tradingFeeTokensPaid[token]+borrowingFeeTokensPaid[token];}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 981
column: 4
content: functioninitialize(addresstarget)externalonlyOwner{_setTarget(this.setPriceFeedContract.selector,target);_setTarget(this.setSwapsImplContract.selector,target);_setTarget(this.setLoanPool.selector,target);_setTarget(this.setSupportedTokens.selector,target);_setTarget(this.setLendingFeePercent.selector,target);_setTarget(this.setTradingFeePercent.selector,target);_setTarget(this.setBorrowingFeePercent.selector,target);_setTarget(this.setAffiliateFeePercent.selector,target);_setTarget(this.setLiquidationIncentivePercent.selector,target);_setTarget(this.setMaxDisagreement.selector,target);_setTarget(this.setSourceBufferPercent.selector,target);_setTarget(this.setMaxSwapSize.selector,target);_setTarget(this.setFeesController.selector,target);_setTarget(this.withdrawFees.selector,target);_setTarget(this.withdrawProtocolToken.selector,target);_setTarget(this.depositProtocolToken.selector,target);_setTarget(this.queryFees.selector,target);_setTarget(this.getLoanPoolsList.selector,target);_setTarget(this.isLoanPool.selector,target);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1007
column: 4
content: functionsetPriceFeedContract(addressnewContract)externalonlyOwner{addressoldContract=priceFeeds;priceFeeds=newContract;emitSetPriceFeedContract(msg.sender,oldContract,newContract);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1022
column: 4
content: functionsetSwapsImplContract(addressnewContract)externalonlyOwner{addressoldContract=swapsImpl;swapsImpl=newContract;emitSetSwapsImplContract(msg.sender,oldContract,newContract);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1037
column: 4
content: functionsetLoanPool(address[]calldatapools,address[]calldataassets)externalonlyOwner{require(pools.length==assets.length,"count mismatch");for(uint256i=0;i<pools.length;i++){require(pools[i]!=assets[i],"pool == asset");require(pools[i]!=address(0),"pool == 0");addresspool=loanPoolToUnderlying[pools[i]];if(assets[i]==address(0)){require(pool!=address(0),"pool not exists");}else{require(pool==address(0),"pool exists");}if(assets[i]==address(0)){underlyingToLoanPool[loanPoolToUnderlying[pools[i]]]=address(0);loanPoolToUnderlying[pools[i]]=address(0);loanPoolsSet.removeAddress(pools[i]);}else{loanPoolToUnderlying[pools[i]]=assets[i];underlyingToLoanPool[assets[i]]=pools[i];loanPoolsSet.addAddress(pools[i]);}emitSetLoanPool(msg.sender,pools[i],assets[i]);}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1076
column: 4
content: functionsetSupportedTokens(address[]calldataaddrs,bool[]calldatatoggles)externalonlyOwner{require(addrs.length==toggles.length,"count mismatch");for(uint256i=0;i<addrs.length;i++){supportedTokens[addrs[i]]=toggles[i];emitSetSupportedTokens(msg.sender,addrs[i],toggles[i]);}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1095
column: 4
content: functionsetLendingFeePercent(uint256newValue)externalonlyOwner{require(newValue<=WEI_PERCENT_PRECISION,"value too high");uint256oldValue=lendingFeePercent;lendingFeePercent=newValue;emitSetLendingFeePercent(msg.sender,oldValue,newValue);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1111
column: 4
content: functionsetTradingFeePercent(uint256newValue)externalonlyOwner{require(newValue<=WEI_PERCENT_PRECISION,"value too high");uint256oldValue=tradingFeePercent;tradingFeePercent=newValue;emitSetTradingFeePercent(msg.sender,oldValue,newValue);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1127
column: 4
content: functionsetBorrowingFeePercent(uint256newValue)externalonlyOwner{require(newValue<=WEI_PERCENT_PRECISION,"value too high");uint256oldValue=borrowingFeePercent;borrowingFeePercent=newValue;emitSetBorrowingFeePercent(msg.sender,oldValue,newValue);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1143
column: 4
content: functionsetAffiliateFeePercent(uint256newValue)externalonlyOwner{require(newValue<=WEI_PERCENT_PRECISION,"value too high");uint256oldValue=affiliateFeePercent;affiliateFeePercent=newValue;emitSetAffiliateFeePercent(msg.sender,oldValue,newValue);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1159
column: 4
content: functionsetLiquidationIncentivePercent(address[]calldataassets,uint256[]calldataamounts)externalonlyOwner{require(assets.length==amounts.length,"count mismatch");for(uint256i=0;i<assets.length;i++){require(amounts[i]<=WEI_PERCENT_PRECISION,"value too high");uint256oldValue=liquidationIncentivePercent[assets[i]];liquidationIncentivePercent[assets[i]]=amounts[i];emitSetLiquidationIncentivePercent(msg.sender,assets[i],oldValue,amounts[i]);}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1181
column: 4
content: functionsetMaxDisagreement(uint256newValue)externalonlyOwner{maxDisagreement=newValue;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1189
column: 4
content: functionsetSourceBufferPercent(uint256newValue)externalonlyOwner{sourceBufferPercent=newValue;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1197
column: 4
content: functionsetMaxSwapSize(uint256newValue)externalonlyOwner{uint256oldValue=maxSwapSize;maxSwapSize=newValue;emitSetMaxSwapSize(msg.sender,oldValue,newValue);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1212
column: 4
content: functionsetFeesController(addressnewController)externalonlyOwner{addressoldController=feesController;feesController=newController;emitSetFeesController(msg.sender,oldController,newController);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 11
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 11
column: 22
content: <

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 324
column: 12
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 637
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 765
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 164
column: 4
content: functioncontainsAddress(Bytes32Setstorageset,addressaddrvalue)internalviewreturns(bool){bytes32value;assembly{value:=addrvalue}returnset.index[value]!=0;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 238
column: 4
content: functiongetAddress(Bytes32Setstorageset,uint256index)internalviewreturns(address){bytes32value=set.values[index];addressaddrvalue;assembly{addrvalue:=value}returnaddrvalue;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 579
column: 4
content: functionisContract(addressaccount)internalviewreturns(bool){bytes32codehash;bytes32accountHash=0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;assembly{codehash:=extcodehash(account)}return(codehash!=accountHash&&codehash!=0x0);}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 857
column: 16
content: (address,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1302
column: 16
content: (addressrewardToken,uint256withdrawAmount)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1350
column: 16
content: (uint256[]memoryamountsHeld,uint256[]memoryamountsPaid)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 622
column: 37
content: call.value(amount)("")

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 641
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 645
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 656
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 661
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 666
column: 8
content: callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 687
column: 65
content: call(data)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 79
column: 8
content: assembly{value:=addrvalue}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 110
column: 8
content: assembly{value:=addrvalue}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 170
column: 8
content: assembly{value:=addrvalue}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 245
column: 8
content: assembly{addrvalue:=value}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 586
column: 8
content: assembly{codehash:=extcodehash(account)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1314
column: 8
content: assembly{totalWithdrawn:=sload(slot)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1323
column: 12
content: assembly{sstore(slot,totalEmission)}

SOLIDITY_SAFEMATH :2
SOLIDITY_OVERPOWERED_ROLE :14
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :5
SOLIDITY_ADDRESS_HARDCODED :5
SOLIDITY_GAS_LIMIT_IN_LOOPS :5
SOLIDITY_USING_INLINE_ASSEMBLY :7
SOLIDITY_UNCHECKED_CALL :7
SOLIDITY_CALL_WITHOUT_DATA :1
SOLIDITY_SHOULD_RETURN_STRUCT :3
SOLIDITY_SHOULD_NOT_BE_VIEW :3

---------------------------------------------
For contract 0xbeb49ad4e0ef9b3a56cc4a280fa4f5bc41ee3ef9.sol
Tool Runtime = 2.4741268180005136 seconds
#############################################