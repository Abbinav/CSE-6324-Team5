(node:13943) Warning: Accessing non-existent property 'cat' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:13943) Warning: Accessing non-existent property 'cd' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'chmod' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'cp' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'dirs' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'pushd' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'popd' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'echo' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'tempdir' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'pwd' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'exec' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'ls' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'find' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'grep' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'head' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'ln' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'mkdir' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'rm' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'mv' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'sed' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'set' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'sort' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'tail' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'test' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'to' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'toEnd' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'touch' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'uniq' of module exports inside circular dependency
(node:13943) Warning: Accessing non-existent property 'which' of module exports inside circular dependency
./loops/0x723091df82333033f1b646fe1ad7bbbf9cbe420c.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlline 103:24 extraneous input 'poolTokenName' expecting {',', ')'}
line 103:37 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 104:24 mismatched input 'poolTokenSymbol' expecting {';', '='}
line 104:39 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 106:4 mismatched input ')' expecting {';', '='}
line 109:47 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 109:61 extraneous input ')' expecting {';', '='}
line 110:37 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 110:43 mismatched input ',' expecting {';', '='}
line 110:50 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 112:46 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 112:52 mismatched input ',' expecting {';', '='}
line 112:59 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 114:27 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 115:27 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 116:27 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 122:29 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 123:17 mismatched input ',' expecting {';', '='}
line 124:25 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 125:19 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 125:25 mismatched input '.' expecting {';', '='}
line 125:39 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 125:56 mismatched input ')' expecting {';', '='}
line 127:8 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 130:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 2632:20 no viable alternative at input 'addresspayable'
ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1059
column: 15
content: 0x000000000000000000000000000000000000000E

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1806
column: 8
content: _owner=address(0)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 817
column: 4
content: functionapprove(addressspender,uint256amount)publicreturns(bool){allowed[msg.sender][spender]=amount;emitApproval(msg.sender,spender,amount);returntrue;}

ruleId: SOLIDITY_EXACT_TIME
patternId: 1955d9
severity: 2
line: 584
column: 12
content: state.pool.indexStartTime[asset]==block.timestamp

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1018
column: 4
content: functioncallWith32BytesReturnsUint256(addressto,bytes32functionSelector,bytes32param1)privateviewreturns(uint256result,boolsuccess){assembly{letfreePtr:=mload(0x40)lettmp1:=mload(freePtr)lettmp2:=mload(add(freePtr,4))mstore(freePtr,functionSelector)mstore(add(freePtr,4),param1)success:=staticcall(gas,to,freePtr,36,freePtr,32)result:=mload(freePtr)mstore(freePtr,tmp1)mstore(add(freePtr,4),tmp2)}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 24
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 24
column: 22
content: <

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 288
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1149
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1154
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1158
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1757
column: 12
content: private

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 951
column: 8
content: if(!success){revert("ASSEMBLY_CALL_GET_ASSET_PRICE_FAILED");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 984
column: 8
content: if(!success){revert("ASSEMBLY_CALL_GET_HOT_BALANCE_FAILED");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1011
column: 8
content: if(!success){revert("ASSEMBLY_CALL_GET_BORROW_INTEREST_RATE_FAILED");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 2150
column: 8
content: if(!result){revert("TOKEN_TRANSFER_ERROR");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 2193
column: 8
content: if(!result){revert("TOKEN_TRANSFER_FROM_ERROR");}

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 2436
column: 15
content: if(method==uint8(SignatureMethod.EIP712)){recovered=ecrecover(hash,v,signature.r,signature.s);}else{revert("INVALID_SIGN_METHOD");}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 190
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 285
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 286
column: 4
content: usingSafeMathforint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 749
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1081
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 2589
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 2590
column: 4
content: usingSafeMathforint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 2905
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 3000
column: 4
content: function_hashContent(Types.Ordermemoryorder)internalpurereturns(bytes32result){bytes32orderType=EIP712_ORDER_TYPE;assembly{letstart:=sub(order,32)lettmp:=mload(start)mstore(start,orderType)result:=keccak256(start,288)mstore(start,tmp)}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 931
column: 4
content: functiongetAssetPriceFromPriceOracle(addressoracleAddress,addressasset)internalviewreturns(uint256){bytes32functionSelector=0x41976e0900000000000000000000000000000000000000000000000000000000;(uint256result,boolsuccess)=callWith32BytesReturnsUint256(oracleAddress,functionSelector,bytes32(uint256(uint160(asset))));if(!success){revert("ASSEMBLY_CALL_GET_ASSET_PRICE_FAILED");}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 964
column: 4
content: functiongetHotBalance(addresshotToken,addressowner)internalviewreturns(uint256){bytes32functionSelector=0x70a0823100000000000000000000000000000000000000000000000000000000;(uint256result,boolsuccess)=callWith32BytesReturnsUint256(hotToken,functionSelector,bytes32(uint256(uint160(owner))));if(!success){revert("ASSEMBLY_CALL_GET_HOT_BALANCE_FAILED");}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 991
column: 4
content: functiongetBorrowInterestRate(addressinterestModel,uint256borrowRatio)internalviewreturns(uint256){bytes32functionSelector=0x69e8a15f00000000000000000000000000000000000000000000000000000000;(uint256result,boolsuccess)=callWith32BytesReturnsUint256(interestModel,functionSelector,bytes32(borrowRatio));if(!success){revert("ASSEMBLY_CALL_GET_BORROW_INTEREST_RATE_FAILED");}returnresult;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 1018
column: 4
content: functioncallWith32BytesReturnsUint256(addressto,bytes32functionSelector,bytes32param1)privateviewreturns(uint256result,boolsuccess){assembly{letfreePtr:=mload(0x40)lettmp1:=mload(freePtr)lettmp2:=mload(add(freePtr,4))mstore(freePtr,functionSelector)mstore(add(freePtr,4),param1)success:=staticcall(gas,to,freePtr,36,freePtr,32)result:=mload(freePtr)mstore(freePtr,tmp1)mstore(add(freePtr,4),tmp2)}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 549
column: 16
content: (uint256borrowInterestRate,uint256supplyInterestRate)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 708
column: 16
content: (uint256currentSupplyIndex,uint256currentBorrowIndex)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1025
column: 16
content: (uint256result,boolsuccess)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 945
column: 41
content: callWith32BytesReturnsUint256(oracleAddress,functionSelector,bytes32(uint256(uint160(asset))))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 978
column: 41
content: callWith32BytesReturnsUint256(hotToken,functionSelector,bytes32(uint256(uint160(owner))))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1005
column: 41
content: callWith32BytesReturnsUint256(interestModel,functionSelector,bytes32(borrowRatio))

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1027
column: 8
content: assembly{letfreePtr:=mload(0x40)lettmp1:=mload(freePtr)lettmp2:=mload(add(freePtr,4))mstore(freePtr,functionSelector)mstore(add(freePtr,4),param1)success:=staticcall(gas,to,freePtr,36,freePtr,32)result:=mload(freePtr)mstore(freePtr,tmp1)mstore(add(freePtr,4),tmp2)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 2125
column: 8
content: assembly{lettmp1:=mload(0)lettmp2:=mload(4)lettmp3:=mload(36)mstore(0,0xa9059cbb00000000000000000000000000000000000000000000000000000000)mstore(4,to)mstore(36,amount)letcallResult:=call(gas,token,0,0,68,0,32)letreturnValue:=mload(0)mstore(0,tmp1)mstore(4,tmp2)mstore(36,tmp3)result:=and(eq(callResult,1),or(eq(returndatasize,0),and(eq(returndatasize,32),gt(returnValue,0))))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 2165
column: 8
content: assembly{lettmp1:=mload(0)lettmp2:=mload(4)lettmp3:=mload(36)lettmp4:=mload(68)mstore(0,0x23b872dd00000000000000000000000000000000000000000000000000000000)mstore(4,from)mstore(36,to)mstore(68,amount)letcallResult:=call(gas,token,0,0,100,0,32)letreturnValue:=mload(0)mstore(0,tmp1)mstore(4,tmp2)mstore(36,tmp3)mstore(68,tmp4)result:=and(eq(callResult,1),or(eq(returndatasize,0),and(eq(returndatasize,32),gt(returnValue,0))))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 3027
column: 8
content: assembly{letstart:=sub(order,32)lettmp:=mload(start)mstore(start,orderType)result:=keccak256(start,288)mstore(start,tmp)}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 98
column: 4
content: functioncreateAsset(Store.Statestoragestate,addressasset,addressoracleAddress,addressinterestModelAddress,stringcalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 103
column: 24
content: poolTokenName,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 104
column: 8
content: stringcalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 104
column: 24
content: poolTokenSymbol,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 105
column: 8
content: uint8poolTokenDecimals)external{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 109
column: 8
content: Requires.requirePriceOracleAddressValid(oracleAddress);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 110
column: 8
content: Requires.requireAssetNotExist(state,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 110
column: 45
content: asset);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 112
column: 8
content: LendingPool.initializeAssetLendingPool(state,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 112
column: 54
content: asset);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 114
column: 8
content: state.assets[asset].priceOracle=IPriceOracle(oracleAddress);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 115
column: 8
content: state.assets[asset].interestModel=IInterestModel(interestModelAddress);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 116
column: 8
content: state.assets[asset].lendingPoolToken=ILendingPoolToken(address(newLendingPoolToken(poolTokenName,poolTokenSymbol,poolTokenDecimals)));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 122
column: 8
content: Events.logCreateAsset(asset,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 124
column: 12
content: oracleAddress,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 125
column: 12
content: address(state.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 125
column: 26
content: assets[asset].lendingPoolToken),

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 126
column: 12
content: interestModelAddress);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 751
column: 4
content: mapping(address=>uint256)balances;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1083
column: 4
content: uint256constantBASE=10**18;

SOLIDITY_VISIBILITY :20
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :5
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_UNCHECKED_CALL :3
SOLIDITY_SHOULD_RETURN_STRUCT :3
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_EXACT_TIME :1
SOLIDITY_ERC20_APPROVE :1
SOLIDITY_SAFEMATH :8
SOLIDITY_REVERT_REQUIRE :6
SOLIDITY_USING_INLINE_ASSEMBLY :4
SOLIDITY_SHOULD_NOT_BE_VIEW :4

---------------------------------------------
For contract 0x723091df82333033f1b646fe1ad7bbbf9cbe420c.sol
Tool Runtime = 3.3320235989995126 seconds
#############################################