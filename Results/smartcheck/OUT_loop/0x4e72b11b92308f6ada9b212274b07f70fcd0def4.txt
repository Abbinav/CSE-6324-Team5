(node:17836) Warning: Accessing non-existent property 'cat' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:17836) Warning: Accessing non-existent property 'cd' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'chmod' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'cp' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'dirs' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'pushd' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'popd' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'echo' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'tempdir' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'pwd' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'exec' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'ls' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'find' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'grep' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'head' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'ln' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'mkdir' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'rm' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'mv' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'sed' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'set' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'sort' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'tail' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'test' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'to' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'toEnd' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'touch' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'uniq' of module exports inside circular dependency
(node:17836) Warning: Accessing non-existent property 'which' of module exports inside circular dependency
./loops/0x4e72b11b92308f6ada9b212274b07f70fcd0def4.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlline 607:19 extraneous input 'trieValue' expecting {',', ')'}
line 615:19 extraneous input 'trieValue' expecting {',', ')'}
line 1035:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1424
column: 41
content: 0x0000000000000000000000000000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 173
column: 37
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 174
column: 36
content: 0xB8

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 175
column: 37
content: 0xC0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 176
column: 36
content: 0xF8

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 178
column: 37
content: 0xB7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 179
column: 37
content: 0xF7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 391
column: 35
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 392
column: 33
content: 0xc0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 400
column: 43
content: 0x7f

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 646
column: 2
content: addresspublicconstantNA=address(0);

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 460
column: 8
content: for(uinti=0;i<self.length;i++){payload=mergeBytes(payload,self[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 477
column: 8
content: for(i=0;i<param1.length;i++){merged[k]=param1[i];k++;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 482
column: 8
content: for(i=0;i<param2.length;i++){merged[k]=param2[i];k++;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 525
column: 8
content: for(uintj=0;j<rs.length;j++){rs[j]=b[i++];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 550
column: 4
content: for(;i+1<level.length;i+=2){nextLevel[i/2]=keccak256(abi.encodePacked(level[i],level[i+1]));}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 225
column: 4
content: functiontoUint(RLPItemmemoryself)internalpurereturns(uintdata){(uintrStartPos,uintlen)=_decode(self);assembly{data:=div(mload(rStartPos),exp(256,sub(32,len)))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 236
column: 4
content: functiontoAddress(RLPItemmemoryself)internalpurereturns(addressdata){(uintrStartPos,)=_decode(self);assembly{data:=div(mload(rStartPos),exp(256,12))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 662
column: 2
content: functiondecodePos(uint_pos)internalpurereturns(uintv1,uintv2){assembly{v1:=div(_pos,exp(2,128))v2:=and(_pos,sub(exp(2,128),1))}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 460
column: 8
content: for(uinti=0;i<self.length;i++){payload=mergeBytes(payload,self[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 477
column: 8
content: for(i=0;i<param1.length;i++){merged[k]=param1[i];k++;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 482
column: 8
content: for(i=0;i<param2.length;i++){merged[k]=param2[i];k++;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 525
column: 8
content: for(uintj=0;j<rs.length;j++){rs[j]=b[i++];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 215
column: 15
content: idx<numItems

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 826
column: 11
content: _pre.epochs[epochNumber].initialized

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 834
column: 13
content: _pre.epochs[epochNumber].RE.numEnter==0&&_pre.epochs[epochNumber].initialized

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 846
column: 13
content: blockNumber<=endBlockNumber

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1754
column: 0
content: contractSubmitHandlerisLayer2Storage,Layer2Event,Layer2Base{usingSafeMathforuint;usingSafeMathforuint64;usingMathfor*;usingDatafor*;usingAddressforaddress;usingBMTfor*;constructor(address_epochHandler)public{epochHandler=_epochHandler;submitHandler=address(this);}functionsubmitNRE(uint_pos1,uint_pos2,bytes32_epochStateRoot,bytes32_epochTransactionsRoot,bytes32_epochReceiptsRoot)publicpayablereturns(boolsuccess){(uintforkNumber,uintepochNumber)=_pos1.decodePos();require(currentFork==forkNumber,"currentFork == forkNumber");(uintstartBlockNumber,uintendBlockNumber)=_pos2.decodePos();forks[forkNumber].insertNRE(epochNumber,_epochStateRoot,_epochTransactionsRoot,_epochReceiptsRoot,startBlockNumber,endBlockNumber);_delegatePrepareORE();if(address(seigManager)!=address(0)){require(SeigManagerI(seigManager).updateSeigniorage());}returntrue;}functionsubmitORB(uint_pos,bytes32_statesRoot,bytes32_transactionsRoot,bytes32_receiptsRoot)publicpayablereturns(boolsuccess){uintforkNumber;uintblockNumber;(forkNumber,blockNumber)=_pos.decodePos();require(currentFork==forkNumber);require(forks[forkNumber].lastBlock+1==blockNumber);Data.ForkstoragecurFork=forks[forkNumber];uintepochNumber;uintrequestBlockId;if(forkNumber==0||forks[forkNumber-1].forkedBlock!=0&&curFork.rebased){(epochNumber,blockNumber)=curFork.insertBlock(_statesRoot,_transactionsRoot,_receiptsRoot,true,false,false);if(!development){_transactionsRoot._checkTxRoot(ORBs[curFork.blocks[curFork.lastBlock].requestBlockId],EROs,false);}requestBlockId=curFork.blocks[blockNumber].requestBlockId;curFork.epochs[epochNumber].RE.numEnter+=ORBs[requestBlockId].numEnter;emitBlockSubmitted(forkNumber,epochNumber,blockNumber,true,false);if(blockNumber==curFork.epochs[epochNumber].endBlockNumber){_delegatePrepareNRE();}if(address(seigManager)!=address(0)){require(SeigManagerI(seigManager).updateSeigniorage());}returntrue;}(epochNumber,blockNumber)=curFork.insertBlock(_statesRoot,_transactionsRoot,_receiptsRoot,true,false,true);Data.ForkstoragepreFork=forks[forkNumber-1];Data.PlasmaBlockstoragecurBlock=curFork.blocks[blockNumber];curBlock.referenceBlock=curFork.nextBlockToRebase;curBlock.requestBlockId=preFork.blocks[curFork.nextBlockToRebase].requestBlockId;if(!development){_transactionsRoot._checkTxRoot(ORBs[curBlock.requestBlockId],EROs,true);}emitBlockSubmitted(forkNumber,epochNumber,blockNumber,true,false);if(curFork.checkNextORBToRebase(preFork,ORBs)){curFork.epochs[epochNumber].endBlockNumber=uint64(blockNumber);emitEpochRebased(forkNumber,epochNumber,curFork.epochs[epochNumber].startBlockNumber,blockNumber,curFork.epochs[epochNumber].RE.requestStart,0,false,true,false);_delegatePrepareNREAfterURE();}if(address(seigManager)!=address(0)){require(SeigManagerI(seigManager).updateSeigniorage());}returntrue;}functionsubmitURB(uint_pos,bytes32_statesRoot,bytes32_transactionsRoot,bytes32_receiptsRoot)publicpayablereturns(boolsuccess){uintforkNumber;uintblockNumber;(forkNumber,blockNumber)=_pos.decodePos();boolfirstURB=currentFork+1==forkNumber;require(firstURB||currentFork==forkNumber);Data.Forkstoragefork=forks[forkNumber];if(firstURB){currentFork=forkNumber;fork=forks[forkNumber];require(fork.timestamp+Data.URE_TIMEOUT()>block.timestamp);require(blockNumber==fork.firstBlock);emitForked(forkNumber,fork.lastEpoch,fork.firstBlock);}else{require(blockNumber==fork.lastBlock.add64(1));}Data.Epochstorageepoch=fork.epochs[fork.lastEpoch];require(epoch.isRequest);require(epoch.userActivated);Data.PlasmaBlockstorageb=fork.blocks[blockNumber];b.epochNumber=fork.lastEpoch;b.statesRoot=_statesRoot;b.transactionsRoot=_transactionsRoot;b.receiptsRoot=_receiptsRoot;b.timestamp=uint64(block.timestamp);b.isRequest=true;b.userActivated=true;fork.lastBlock=uint64(blockNumber);if(!development){_transactionsRoot._checkTxRoot(URBs[fork.blocks[fork.lastBlock].requestBlockId],ERUs,false);}emitBlockSubmitted(forkNumber,fork.lastEpoch,blockNumber,true,true);if(blockNumber==epoch.endBlockNumber){_delegatePrepareOREAfterURE();}if(address(seigManager)!=address(0)){require(SeigManagerI(seigManager).updateSeigniorage());}returntrue;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 8
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 8
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 134
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 134
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 163
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 163
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 383
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 383
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 535
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 535
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 599
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 599
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 622
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 622
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1327
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1327
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1359
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1359
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1465
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1465
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1566
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1566
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1705
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1705
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1742
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1742
column: 22
content: <

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 634
column: 2
content: usingSafeMathforuint;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 635
column: 2
content: usingSafeMathforuint64;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1755
column: 2
content: usingSafeMathforuint;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1756
column: 2
content: usingSafeMathforuint64;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 198
column: 4
content: functiontoRLPItem(bytesmemoryself)internalpurereturns(RLPItemmemory){uintlen=self.length;uintmemPtr;assembly{memPtr:=add(self,0x20)}returnRLPItem(memPtr,len);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 225
column: 4
content: functiontoUint(RLPItemmemoryself)internalpurereturns(uintdata){(uintrStartPos,uintlen)=_decode(self);assembly{data:=div(mload(rStartPos),exp(256,sub(32,len)))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 236
column: 4
content: functiontoAddress(RLPItemmemoryself)internalpurereturns(addressdata){(uintrStartPos,)=_decode(self);assembly{data:=div(mload(rStartPos),exp(256,12))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 271
column: 4
content: function_payloadOffset(RLPItemmemoryself)privatepurereturns(uint){uintb0;uintmemPtr=self._unsafeMemPtr;assembly{b0:=byte(0,mload(memPtr))}if(b0<DATA_SHORT_START)return0;if(b0<DATA_LONG_START||(b0>=LIST_SHORT_START&&b0<LIST_LONG_START))return1;if(b0<LIST_SHORT_START)returnb0-DATA_LONG_OFFSET+1;returnb0-LIST_LONG_OFFSET+1;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 291
column: 4
content: function_itemLength(uintmemPtr)privatepurereturns(uintlen){uintb0;assembly{b0:=byte(0,mload(memPtr))}if(b0<DATA_SHORT_START)len=1;elseif(b0<DATA_LONG_START)len=b0-DATA_SHORT_START+1;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 307
column: 4
content: function_decode(RLPItemmemoryself)privatepurereturns(uintmemPtr,uintlen){uintb0;uintstart=self._unsafeMemPtr;assembly{b0:=byte(0,mload(start))}if(b0<DATA_SHORT_START){memPtr=start;len=1;return(memPtr,len);}if(b0<DATA_LONG_START){len=self._unsafeLength-1;memPtr=start+1;}else{uintbLen;assembly{bLen:=sub(b0,0xB7)}len=self._unsafeLength-1-bLen;memPtr=start+bLen+1;}return(memPtr,len);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 352
column: 4
content: function_copyToBytes(uintbtsPtr,bytesmemorytgt,uintbtsLen)privatepure{assembly{{letwords:=div(add(btsLen,31),32)letrOffset:=btsPtrletwOffset:=add(tgt,0x20)for{leti:=0}lt(i,words){i:=add(i,1)}{letoffset:=mul(i,0x20)mstore(add(wOffset,offset),mload(add(rOffset,offset)))}mstore(add(tgt,add(0x20,mload(tgt))),0)}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 411
column: 4
content: functionencodeAddress(addressself)internalpurereturns(bytesmemory){bytesmemoryb;assembly{letm:=mload(0x40)mstore(add(m,20),xor(0x140000000000000000000000000000000000000000,self))mstore(0x40,add(m,52))b:=m}returnencodeBytes(b);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 513
column: 4
content: functiontoBinary(uintx)internalpurereturns(bytesmemory){uinti;bytesmemoryb=newbytes(32);assembly{mstore(add(b,32),x)}for(i=0;i<32;i++){if(b[i]!=0){break;}}bytesmemoryrs=newbytes(32-i);for(uintj=0;j<rs.length;j++){rs[j]=b[i++];}returnrs;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 563
column: 2
content: functioncheckMembership(bytes32leaf,uint256index,bytes32rootHash,bytesmemoryproof)internalpurereturns(bool){require(proof.length%32==0);uint256numElements=proof.length/32;require(numElements<16);bytes32proofElement;bytes32computedHash=leaf;for(uint256i=32;i<=32*numElements;i+=32){assembly{proofElement:=mload(add(proof,i))}if(index%2==0){computedHash=keccak256(abi.encodePacked(computedHash,proofElement));}else{computedHash=keccak256(abi.encodePacked(proofElement,computedHash));}index=index/2;}returncomputedHash==rootHash;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 662
column: 2
content: functiondecodePos(uint_pos)internalpurereturns(uintv1,uintv2){assembly{v1:=div(_pos,exp(2,128))v2:=and(_pos,sub(exp(2,128),1))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1060
column: 2
content: functiontoChildChainRequest(Requestmemoryself,address_to)internalpurereturns(Requestmemoryout){out.isExit=self.isExit;out.isTransfer=self.isTransfer;out.requestor=self.requestor;if(!self.isExit&&self.isTransfer){out.to=self.requestor;bytesmemoryb=self.trieValue;uint128v;assembly{v:=mload(add(b,0x20))}require(v>0);out.value=uint128(v);}else{out.to=_to;out.value=self.value;out.trieKey=self.trieKey;out.trieValue=self.trieValue;}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 1341
column: 2
content: functionisContract(addressaccount)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(account)}returnsize>0;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 310
column: 12
content: (uintmemPtr,uintlen)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 662
column: 54
content: (uintv1,uintv2)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 723
column: 12
content: (uintepochNumber,uintblockNumber)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1599
column: 59
content: delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_ORB_SIG))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1606
column: 59
content: delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1614
column: 59
content: delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_URB_SIG))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1622
column: 59
content: delegatecall(abi.encodeWithSelector(PREPARE_ORE_AFTER_URE_SIG))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1629
column: 59
content: delegatecall(abi.encodeWithSelector(PREPARE_NRE_AFTER_URE_SIG))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1645
column: 60
content: delegatecall(abi.encodeWithSelector(SUBMIT_NRE_SIG,_pos1,_pos2,_epochStateRoot,_epochTransactionsRoot,_epochReceiptsRoot))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1668
column: 60
content: delegatecall(abi.encodeWithSelector(SUBMIT_ORB_SIG,_pos,_statesRoot,_transactionsRoot,_receiptsRoot))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1690
column: 60
content: delegatecall(abi.encodeWithSelector(SUBMIT_URB_SIG,_pos,_statesRoot,_transactionsRoot,_receiptsRoot))

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 201
column: 8
content: assembly{memPtr:=add(self,0x20)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 227
column: 8
content: assembly{data:=div(mload(rStartPos),exp(256,sub(32,len)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 242
column: 8
content: assembly{data:=div(mload(rStartPos),exp(256,12))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 278
column: 8
content: assembly{b0:=byte(0,mload(memPtr))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 297
column: 8
content: assembly{b0:=byte(0,mload(memPtr))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 314
column: 8
content: assembly{b0:=byte(0,mload(start))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 327
column: 12
content: assembly{bLen:=sub(b0,0xB7)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 358
column: 8
content: assembly{{letwords:=div(add(btsLen,31),32)letrOffset:=btsPtrletwOffset:=add(tgt,0x20)for{leti:=0}lt(i,words){i:=add(i,1)}{letoffset:=mul(i,0x20)mstore(add(wOffset,offset),mload(add(rOffset,offset)))}mstore(add(tgt,add(0x20,mload(tgt))),0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 413
column: 8
content: assembly{letm:=mload(0x40)mstore(add(m,20),xor(0x140000000000000000000000000000000000000000,self))mstore(0x40,add(m,52))b:=m}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 516
column: 8
content: assembly{mstore(add(b,32),x)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 582
column: 6
content: assembly{proofElement:=mload(add(proof,i))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 663
column: 4
content: assembly{v1:=div(_pos,exp(2,128))v2:=and(_pos,sub(exp(2,128),1))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1078
column: 6
content: assembly{v:=mload(add(b,0x20))}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 173
column: 4
content: uintconstantDATA_SHORT_START=0x80;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 174
column: 4
content: uintconstantDATA_LONG_START=0xB8;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 175
column: 4
content: uintconstantLIST_SHORT_START=0xC0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 176
column: 4
content: uintconstantLIST_LONG_START=0xF8;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 178
column: 4
content: uintconstantDATA_LONG_OFFSET=0xB7;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 179
column: 4
content: uintconstantLIST_LONG_OFFSET=0xF7;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 391
column: 4
content: uint8constantSTRING_OFFSET=0x80;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 392
column: 4
content: uint8constantLIST_OFFSET=0xc0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1581
column: 2
content: bytes4constantPREPARE_TO_SUTMIBT_ORB_SIG=bytes4(keccak256("prepareORE()"));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1582
column: 2
content: bytes4constantPREPARE_TO_SUTMIBT_NRB_SIG=bytes4(keccak256("prepareNRE()"));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1583
column: 2
content: bytes4constantPREPARE_TO_SUTMIBT_URB_SIG=bytes4(keccak256("prepareToSubmitURB()"));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1584
column: 2
content: bytes4constantPREPARE_ORE_AFTER_URE_SIG=bytes4(keccak256("prepareOREAfterURE()"));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1585
column: 2
content: bytes4constantPREPARE_NRE_AFTER_URE_SIG=bytes4(keccak256("prepareNREAfterURE()"));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1588
column: 2
content: bytes4constantSUBMIT_NRE_SIG=bytes4(keccak256("submitNRE(uint256,uint256,bytes32,bytes32,bytes32)"));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1589
column: 2
content: bytes4constantSUBMIT_ORB_SIG=bytes4(keccak256("submitORB(uint256,bytes32,bytes32,bytes32)"));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1590
column: 2
content: bytes4constantSUBMIT_URB_SIG=bytes4(keccak256("submitURB(uint256,bytes32,bytes32,bytes32)"));

SOLIDITY_VISIBILITY :16
SOLIDITY_PRAGMAS_VERSION :26
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :3
SOLIDITY_EXTRA_GAS_IN_LOOPS :5
SOLIDITY_ADDRESS_HARDCODED :11
SOLIDITY_GAS_LIMIT_IN_LOOPS :8
SOLIDITY_UNCHECKED_CALL :8
SOLIDITY_SHOULD_RETURN_STRUCT :3
SOLIDITY_SHOULD_NOT_BE_PURE :12
SOLIDITY_SAFEMATH :4
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_USING_INLINE_ASSEMBLY :13
SOLIDITY_SHOULD_NOT_BE_VIEW :1

---------------------------------------------
For contract 0x4e72b11b92308f6ada9b212274b07f70fcd0def4.sol
Tool Runtime = 2.9327394859974447 seconds
#############################################