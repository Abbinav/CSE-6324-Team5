(node:2782) Warning: Accessing non-existent property 'cat' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:2782) Warning: Accessing non-existent property 'cd' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'chmod' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'cp' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'dirs' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'pushd' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'popd' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'echo' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'tempdir' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'pwd' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'exec' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'ls' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'find' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'grep' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'head' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'ln' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'mkdir' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'rm' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'mv' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'sed' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'set' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'sort' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'tail' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'test' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'to' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'toEnd' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'touch' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'uniq' of module exports inside circular dependency
(node:2782) Warning: Accessing non-existent property 'which' of module exports inside circular dependency
./loops/0xf7c41056dabf08a82682f3a31fa04e427678ff55.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlline 607:19 extraneous input 'trieValue' expecting {',', ')'}
line 615:19 extraneous input 'trieValue' expecting {',', ')'}
line 1035:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'memory', 'storage', 'emit', '_', 'revert', Identifier}
ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1424
column: 41
content: 0x0000000000000000000000000000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 173
column: 37
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 174
column: 36
content: 0xB8

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 175
column: 37
content: 0xC0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 176
column: 36
content: 0xF8

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 178
column: 37
content: 0xB7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 179
column: 37
content: 0xF7

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 391
column: 35
content: 0x80

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 392
column: 33
content: 0xc0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 400
column: 43
content: 0x7f

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 646
column: 2
content: addresspublicconstantNA=address(0);

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 460
column: 8
content: for(uinti=0;i<self.length;i++){payload=mergeBytes(payload,self[i]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 477
column: 8
content: for(i=0;i<param1.length;i++){merged[k]=param1[i];k++;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 482
column: 8
content: for(i=0;i<param2.length;i++){merged[k]=param2[i];k++;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 525
column: 8
content: for(uintj=0;j<rs.length;j++){rs[j]=b[i++];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 550
column: 4
content: for(;i+1<level.length;i+=2){nextLevel[i/2]=keccak256(abi.encodePacked(level[i],level[i+1]));}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 225
column: 4
content: functiontoUint(RLPItemmemoryself)internalpurereturns(uintdata){(uintrStartPos,uintlen)=_decode(self);assembly{data:=div(mload(rStartPos),exp(256,sub(32,len)))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 236
column: 4
content: functiontoAddress(RLPItemmemoryself)internalpurereturns(addressdata){(uintrStartPos,)=_decode(self);assembly{data:=div(mload(rStartPos),exp(256,12))}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 662
column: 2
content: functiondecodePos(uint_pos)internalpurereturns(uintv1,uintv2){assembly{v1:=div(_pos,exp(2,128))v2:=and(_pos,sub(exp(2,128),1))}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 460
column: 8
content: for(uinti=0;i<self.length;i++){payload=mergeBytes(payload,self[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 477
column: 8
content: for(i=0;i<param1.length;i++){merged[k]=param1[i];k++;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 482
column: 8
content: for(i=0;i<param2.length;i++){merged[k]=param2[i];k++;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 525
column: 8
content: for(uintj=0;j<rs.length;j++){rs[j]=b[i++];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 215
column: 15
content: idx<numItems

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 826
column: 11
content: _pre.epochs[epochNumber].initialized

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 834
column: 13
content: _pre.epochs[epochNumber].RE.numEnter==0&&_pre.epochs[epochNumber].initialized

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 846
column: 13
content: blockNumber<=endBlockNumber

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1866
column: 11
content: true

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1874
column: 13
content: forkedEpochNumber>latestRequestEpochNumber

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1576
column: 0
content: contractEpochHandlerisLayer2Storage,Layer2Event{usingSafeMathforuint;usingSafeMathforuint64;usingMathfor*;usingDatafor*;usingAddressforaddress;usingBMTfor*;constructor()public{epochHandler=address(this);}functionprepareToSubmitURB()publicpayable{Data.Forkstoragecur=forks[currentFork];Data.Forkstoragenext=forks[currentFork+1];boolfirstUAF=currentFork==0;cur.forkedBlock=cur.lastFinalizedBlock+1;next.firstBlock=cur.forkedBlock;next.firstEpoch=cur.blocks[next.firstBlock].epochNumber;next.lastEpoch=next.firstEpoch;next.lastFinalizedBlock=cur.lastFinalizedBlock;next.timestamp=uint64(block.timestamp);Data.Epochstorageepoch=next.epochs[next.firstEpoch];epoch.initialized=true;epoch.timestamp=uint64(block.timestamp);epoch.isRequest=true;epoch.userActivated=true;epoch.RE.requestStart=firstUAF?0:cur.epochs[cur.firstEpoch].RE.requestEnd+1;epoch.RE.requestEnd=uint64(ERUs.length-1);assert(epoch.RE.requestStart<=epoch.RE.requestEnd);uint64numBlocks=uint64(Data.calcNumBlock(epoch.RE.requestStart,epoch.RE.requestEnd));epoch.startBlockNumber=next.firstBlock;epoch.endBlockNumber=epoch.startBlockNumber.add64(numBlocks).sub64(1);epoch.RE.firstRequestBlockId=firstUAF?0:cur.epochs[cur.firstEpoch].RE.firstRequestBlockId.add64(cur.epochs[cur.firstEpoch].endBlockNumber.sub64(cur.epochs[cur.firstEpoch].startBlockNumber).add64(1));for(uint64i=0;i<numBlocks;i++){next.blocks[epoch.startBlockNumber.add64(i)].isRequest=true;next.blocks[epoch.startBlockNumber.add64(i)].userActivated=true;next.blocks[epoch.startBlockNumber.add64(i)].requestBlockId=epoch.RE.firstRequestBlockId+i;}emitEpochPrepared(currentFork+1,next.firstEpoch,epoch.startBlockNumber,epoch.endBlockNumber,epoch.RE.requestStart,epoch.RE.requestEnd,false,epoch.isRequest,epoch.userActivated,epoch.rebase);return;}functionprepareORE()publicpayable{Data.Forkstoragefork=forks[currentFork];require(currentFork==0||fork.rebased);uint64epochNumber=fork.lastEpoch+1;Data.Epochstorageepoch=fork.epochs[epochNumber];Data.EpochstoragenextRequestEpoch=fork.epochs[epochNumber+2];epoch.initialized=true;epoch.timestamp=uint64(block.timestamp);nextRequestEpoch.isRequest=true;nextRequestEpoch.RE.numEnter=uint64(numEnterForORB);numEnterForORB=0;if(epoch.RE.numEnter>0){if(fork.firstEnterEpoch==0){fork.firstEnterEpoch=epochNumber;}else{fork.epochs[fork.lastEnterEpoch].RE.nextEnterEpoch=epochNumber;}fork.lastEnterEpoch=epochNumber;}if(firstFilledORENumber[currentFork]==0&&!epoch.isEmpty){firstFilledORENumber[currentFork]=epochNumber;}uint64numBlocks=epoch.isEmpty?0:uint64(Math.divCeil(epoch.RE.requestEnd-epoch.RE.requestStart+1,Data.MAX_REQUESTS()));if(epoch.isEmpty){epoch.startBlockNumber=fork.epochs[epochNumber-1].endBlockNumber;epoch.endBlockNumber=epoch.startBlockNumber;}else{epoch.startBlockNumber=fork.epochs[epochNumber-1].endBlockNumber.add64(1);epoch.endBlockNumber=uint64(epoch.startBlockNumber+numBlocks-1);}if(EROs.length==0||EROs.length-1==uint(epoch.RE.requestEnd)){nextRequestEpoch.isEmpty=true;}if(!nextRequestEpoch.isEmpty){if(firstFilledORENumber[currentFork]==epochNumber&&epoch.rebase){nextRequestEpoch.RE.requestStart=epoch.RE.requestEnd+1;nextRequestEpoch.RE.firstRequestBlockId=epoch.RE.firstRequestBlockId+1;}elseif(firstFilledORENumber[currentFork]==0){nextRequestEpoch.RE.requestStart=epoch.RE.requestEnd;nextRequestEpoch.RE.firstRequestBlockId=epoch.RE.firstRequestBlockId;}elseif(!epoch.isEmpty){nextRequestEpoch.RE.requestStart=epoch.RE.requestEnd+1;nextRequestEpoch.RE.firstRequestBlockId=epoch.RE.firstRequestBlockId+numBlocks;}else{nextRequestEpoch.RE.requestStart=epoch.RE.requestEnd+1;nextRequestEpoch.RE.firstRequestBlockId=epoch.RE.firstRequestBlockId+1;}}else{nextRequestEpoch.RE.requestStart=epoch.RE.requestEnd;if(!epoch.isEmpty){nextRequestEpoch.RE.firstRequestBlockId=epoch.RE.firstRequestBlockId+numBlocks-1;}else{nextRequestEpoch.RE.firstRequestBlockId=epoch.RE.firstRequestBlockId;}}if(!epoch.isEmpty){if(firstNonEmptyRequestEpoch[currentFork]==0){firstNonEmptyRequestEpoch[currentFork]=epochNumber;}uintlastEpochNumber=lastNonEmptyRequestEpoch[currentFork];if(lastEpochNumber!=0){fork.epochs[lastEpochNumber].RE.nextEpoch=epochNumber;}lastNonEmptyRequestEpoch[currentFork]=epochNumber;}if(nextRequestEpoch.isEmpty){nextRequestEpoch.RE.requestEnd=nextRequestEpoch.RE.requestStart;}else{nextRequestEpoch.RE.requestEnd=uint64(EROs.length-1);ORBs[ORBs.length.sub(1)].submitted=true;}emitEpochPrepared(currentFork,epochNumber,epoch.startBlockNumber,epoch.endBlockNumber,epoch.RE.requestStart,epoch.RE.requestEnd,epoch.isEmpty,true,false,epoch.rebase);if(epoch.isEmpty){fork.lastEpoch=epochNumber;prepareNRE();}}functionprepareNRE()publicpayable{Data.Forkstoragefork=forks[currentFork];require(currentFork==0||fork.rebased);uint64epochNumber=fork.lastEpoch+1;Data.Epochstorageepoch=fork.epochs[epochNumber];uintstartBlockNumber=1;if(epochNumber!=1){startBlockNumber=fork.epochs[fork.lastEpoch].endBlockNumber+1;}epoch.initialized=true;epoch.timestamp=uint64(block.timestamp);epoch.startBlockNumber=uint64(startBlockNumber);epoch.endBlockNumber=uint64(startBlockNumber+NRELength-1);emitEpochPrepared(currentFork,epochNumber,epoch.startBlockNumber,epoch.endBlockNumber,0,0,false,false,false,epoch.rebase);}functionprepareOREAfterURE()publicpayable{Data.Forkstorage_f=forks[currentFork];boolisOREEmpty=_prepareOREAfterURE(_f,forks[currentFork.sub(1)],ORBs);uint64epochNumber=_f.lastEpoch+1;if(!isOREEmpty){firstFilledORENumber[currentFork]=epochNumber;}emitEpochPrepared(currentFork,epochNumber,_f.epochs[epochNumber].startBlockNumber,_f.epochs[epochNumber].endBlockNumber,_f.epochs[epochNumber].RE.requestStart,_f.epochs[epochNumber].RE.requestEnd,isOREEmpty,true,false,true);if(isOREEmpty){_f.epochs[epochNumber].endBlockNumber=_f.lastBlock;_f.lastEpoch=epochNumber;emitEpochRebased(currentFork,epochNumber,_f.epochs[epochNumber].startBlockNumber,_f.epochs[epochNumber].endBlockNumber,_f.epochs[epochNumber].RE.requestStart,_f.epochs[epochNumber].RE.requestEnd,true,true,false);prepareNREAfterURE();}}function_getLatestRequestInfo()internalreturns(uint64requestBlockId,uint64requestStart,uint64requestEnd){uintforkNumber=currentFork.sub(1);while(true){Data.Forkstoragefork=forks[forkNumber];uintforkedEpochNumber=fork.getForkedEpoch();uintlatestRequestEpochNumber=fork.epochs[fork.lastEpoch+1].isRequest?fork.lastEpoch+1:fork.lastEpoch;while(forkedEpochNumber>latestRequestEpochNumber){forkNumber=forkNumber.sub(1);fork=forks[forkNumber];forkedEpochNumber=fork.getForkedEpoch();latestRequestEpochNumber=fork.epochs[fork.lastEpoch+1].isRequest?fork.lastEpoch+1:fork.lastEpoch;}if(fork.epochs[latestRequestEpochNumber].initialized){uintfirstRequestEpochNumber=fork.blocks[fork.forkedBlock].epochNumber;if(!fork.epochs[firstRequestEpochNumber].isRequest){firstRequestEpochNumber+=1;}Data.EpochstoragefirstRequestEpoch=fork.epochs[firstRequestEpochNumber];Data.EpochstoragelatestRequestEpoch=fork.epochs[latestRequestEpochNumber];return(fork.blocks[latestRequestEpoch.startBlockNumber].requestBlockId,firstRequestEpoch.RE.requestStart,latestRequestEpoch.RE.requestEnd);}forkNumber=forkNumber.sub(1);}}functionprepareNREAfterURE()publicpayable{Data.Forkstorage_f=forks[currentFork];boolisNREEmpty=_prepareNREAfterURE(_f,forks[currentFork.sub(1)]);uint64epochNumber=_f.lastEpoch+1;emitEpochPrepared(currentFork,epochNumber,_f.epochs[epochNumber].startBlockNumber,0,0,0,isNREEmpty,false,false,true);if(isNREEmpty){_f.epochs[epochNumber].endBlockNumber=_f.lastBlock;_f.lastEpoch=epochNumber;_f.rebased=true;emitEpochRebased(currentFork,epochNumber,_f.epochs[epochNumber].startBlockNumber,_f.epochs[epochNumber].endBlockNumber,_f.epochs[epochNumber].RE.requestStart,_f.epochs[epochNumber].RE.requestEnd,true,false,false);prepareNRE();}}function_prepareOREAfterURE(Data.Forkstorage_cur,Data.Forkstorage_pre,Data.RequestBlock[]storage_rbs)internalreturns(boolisEmpty){require(!_cur.rebased);Data.Epochstorageepoch=_cur.epochs[_cur.lastEpoch];require(epoch.isRequest&&epoch.userActivated);uint64epochNumber=_cur.lastEpoch+1;uintforkedEpochNumber=_pre.blocks[_pre.forkedBlock].epochNumber;epoch=_cur.epochs[epochNumber];epoch.initialized=true;epoch.isRequest=true;epoch.rebase=true;epoch.timestamp=uint64(block.timestamp);uintfirstEpochNumber=_pre.epochs[forkedEpochNumber].isRequest?forkedEpochNumber:forkedEpochNumber+1;(epoch.RE.firstRequestBlockId,epoch.RE.requestStart,epoch.RE.requestEnd)=_getLatestRequestInfo();if(!_pre.epochs[firstEpochNumber].initialized){epoch.isEmpty=true;epoch.startBlockNumber=_cur.lastBlock;epoch.endBlockNumber=_cur.lastBlock;returntrue;}assert(_pre.epochs[firstEpochNumber].isRequest);epoch.isEmpty=forkedEpochNumber>_pre.lastEnterEpoch;if(epoch.isEmpty){epoch.startBlockNumber=_cur.lastBlock;epoch.endBlockNumber=_cur.lastBlock;returntrue;}uintfirstEnterEpoch=firstEpochNumber;while(_pre.epochs[firstEpochNumber].RE.numEnter==0){firstEnterEpoch+=2;}epoch.startBlockNumber=_cur.lastBlock.add64(1);uintpreBlockNumber=_pre.epochs[firstEnterEpoch].startBlockNumber;Data.RequestBlockstoragepreRB=_rbs[_pre.blocks[preBlockNumber].requestBlockId];while(preRB.numEnter==0){preBlockNumber+=1;preRB=_rbs[_pre.blocks[preBlockNumber].requestBlockId];}_cur.nextBlockToRebase=uint64(preBlockNumber);returnfalse;}function_prepareNREAfterURE(Data.Forkstorage_cur,Data.Forkstorage_pre)internalreturns(boolisEmpty){require(!_cur.rebased);Data.Epochstorageepoch=_cur.epochs[_cur.lastEpoch];require(epoch.rebase&&epoch.isRequest&&!epoch.userActivated);_cur.epochs[_cur.lastEpoch].endBlockNumber=_cur.lastBlock;uint64epochNumber=_cur.lastEpoch+1;uintforkedEpochNumber=_pre.blocks[_pre.forkedBlock].epochNumber;epoch=_cur.epochs[epochNumber];epoch.initialized=true;epoch.rebase=true;epoch.timestamp=uint64(block.timestamp);uintpreviousNRENumber=!_pre.epochs[forkedEpochNumber].isRequest?forkedEpochNumber:forkedEpochNumber+1;if(!_pre.epochs[previousNRENumber].initialized){epoch.startBlockNumber=_cur.lastBlock;epoch.endBlockNumber=_cur.lastBlock;epoch.isEmpty=true;_cur.rebased=true;returntrue;}assert(!_pre.epochs[previousNRENumber].isRequest);epoch.startBlockNumber=_cur.lastBlock.add64(1);_cur.nextBlockToRebase=previousNRENumber==forkedEpochNumber?_pre.forkedBlock:_pre.epochs[previousNRENumber].startBlockNumber;assert(_cur.nextBlockToRebase>=_pre.forkedBlock);returnfalse;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 8
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 8
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 134
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 134
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 163
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 163
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 383
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 383
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 535
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 535
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 599
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 599
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 622
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 622
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1327
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1327
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1359
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1359
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1465
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1465
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1566
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1566
column: 22
content: <

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 634
column: 2
content: usingSafeMathforuint;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 635
column: 2
content: usingSafeMathforuint64;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1577
column: 2
content: usingSafeMathforuint;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1578
column: 2
content: usingSafeMathforuint64;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 198
column: 4
content: functiontoRLPItem(bytesmemoryself)internalpurereturns(RLPItemmemory){uintlen=self.length;uintmemPtr;assembly{memPtr:=add(self,0x20)}returnRLPItem(memPtr,len);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 225
column: 4
content: functiontoUint(RLPItemmemoryself)internalpurereturns(uintdata){(uintrStartPos,uintlen)=_decode(self);assembly{data:=div(mload(rStartPos),exp(256,sub(32,len)))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 236
column: 4
content: functiontoAddress(RLPItemmemoryself)internalpurereturns(addressdata){(uintrStartPos,)=_decode(self);assembly{data:=div(mload(rStartPos),exp(256,12))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 271
column: 4
content: function_payloadOffset(RLPItemmemoryself)privatepurereturns(uint){uintb0;uintmemPtr=self._unsafeMemPtr;assembly{b0:=byte(0,mload(memPtr))}if(b0<DATA_SHORT_START)return0;if(b0<DATA_LONG_START||(b0>=LIST_SHORT_START&&b0<LIST_LONG_START))return1;if(b0<LIST_SHORT_START)returnb0-DATA_LONG_OFFSET+1;returnb0-LIST_LONG_OFFSET+1;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 291
column: 4
content: function_itemLength(uintmemPtr)privatepurereturns(uintlen){uintb0;assembly{b0:=byte(0,mload(memPtr))}if(b0<DATA_SHORT_START)len=1;elseif(b0<DATA_LONG_START)len=b0-DATA_SHORT_START+1;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 307
column: 4
content: function_decode(RLPItemmemoryself)privatepurereturns(uintmemPtr,uintlen){uintb0;uintstart=self._unsafeMemPtr;assembly{b0:=byte(0,mload(start))}if(b0<DATA_SHORT_START){memPtr=start;len=1;return(memPtr,len);}if(b0<DATA_LONG_START){len=self._unsafeLength-1;memPtr=start+1;}else{uintbLen;assembly{bLen:=sub(b0,0xB7)}len=self._unsafeLength-1-bLen;memPtr=start+bLen+1;}return(memPtr,len);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 352
column: 4
content: function_copyToBytes(uintbtsPtr,bytesmemorytgt,uintbtsLen)privatepure{assembly{{letwords:=div(add(btsLen,31),32)letrOffset:=btsPtrletwOffset:=add(tgt,0x20)for{leti:=0}lt(i,words){i:=add(i,1)}{letoffset:=mul(i,0x20)mstore(add(wOffset,offset),mload(add(rOffset,offset)))}mstore(add(tgt,add(0x20,mload(tgt))),0)}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 411
column: 4
content: functionencodeAddress(addressself)internalpurereturns(bytesmemory){bytesmemoryb;assembly{letm:=mload(0x40)mstore(add(m,20),xor(0x140000000000000000000000000000000000000000,self))mstore(0x40,add(m,52))b:=m}returnencodeBytes(b);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 513
column: 4
content: functiontoBinary(uintx)internalpurereturns(bytesmemory){uinti;bytesmemoryb=newbytes(32);assembly{mstore(add(b,32),x)}for(i=0;i<32;i++){if(b[i]!=0){break;}}bytesmemoryrs=newbytes(32-i);for(uintj=0;j<rs.length;j++){rs[j]=b[i++];}returnrs;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 563
column: 2
content: functioncheckMembership(bytes32leaf,uint256index,bytes32rootHash,bytesmemoryproof)internalpurereturns(bool){require(proof.length%32==0);uint256numElements=proof.length/32;require(numElements<16);bytes32proofElement;bytes32computedHash=leaf;for(uint256i=32;i<=32*numElements;i+=32){assembly{proofElement:=mload(add(proof,i))}if(index%2==0){computedHash=keccak256(abi.encodePacked(computedHash,proofElement));}else{computedHash=keccak256(abi.encodePacked(proofElement,computedHash));}index=index/2;}returncomputedHash==rootHash;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 662
column: 2
content: functiondecodePos(uint_pos)internalpurereturns(uintv1,uintv2){assembly{v1:=div(_pos,exp(2,128))v2:=and(_pos,sub(exp(2,128),1))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1060
column: 2
content: functiontoChildChainRequest(Requestmemoryself,address_to)internalpurereturns(Requestmemoryout){out.isExit=self.isExit;out.isTransfer=self.isTransfer;out.requestor=self.requestor;if(!self.isExit&&self.isTransfer){out.to=self.requestor;bytesmemoryb=self.trieValue;uint128v;assembly{v:=mload(add(b,0x20))}require(v>0);out.value=uint128(v);}else{out.to=_to;out.value=self.value;out.trieKey=self.trieKey;out.trieValue=self.trieValue;}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 1341
column: 2
content: functionisContract(addressaccount)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(account)}returnsize>0;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 310
column: 12
content: (uintmemPtr,uintlen)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 662
column: 54
content: (uintv1,uintv2)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 723
column: 12
content: (uintepochNumber,uintblockNumber)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1858
column: 12
content: (uint64requestBlockId,uint64requestStart,uint64requestEnd)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 201
column: 8
content: assembly{memPtr:=add(self,0x20)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 227
column: 8
content: assembly{data:=div(mload(rStartPos),exp(256,sub(32,len)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 242
column: 8
content: assembly{data:=div(mload(rStartPos),exp(256,12))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 278
column: 8
content: assembly{b0:=byte(0,mload(memPtr))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 297
column: 8
content: assembly{b0:=byte(0,mload(memPtr))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 314
column: 8
content: assembly{b0:=byte(0,mload(start))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 327
column: 12
content: assembly{bLen:=sub(b0,0xB7)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 358
column: 8
content: assembly{{letwords:=div(add(btsLen,31),32)letrOffset:=btsPtrletwOffset:=add(tgt,0x20)for{leti:=0}lt(i,words){i:=add(i,1)}{letoffset:=mul(i,0x20)mstore(add(wOffset,offset),mload(add(rOffset,offset)))}mstore(add(tgt,add(0x20,mload(tgt))),0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 413
column: 8
content: assembly{letm:=mload(0x40)mstore(add(m,20),xor(0x140000000000000000000000000000000000000000,self))mstore(0x40,add(m,52))b:=m}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 516
column: 8
content: assembly{mstore(add(b,32),x)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 582
column: 6
content: assembly{proofElement:=mload(add(proof,i))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 663
column: 4
content: assembly{v1:=div(_pos,exp(2,128))v2:=and(_pos,sub(exp(2,128),1))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1078
column: 6
content: assembly{v:=mload(add(b,0x20))}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 173
column: 4
content: uintconstantDATA_SHORT_START=0x80;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 174
column: 4
content: uintconstantDATA_LONG_START=0xB8;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 175
column: 4
content: uintconstantLIST_SHORT_START=0xC0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 176
column: 4
content: uintconstantLIST_LONG_START=0xF8;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 178
column: 4
content: uintconstantDATA_LONG_OFFSET=0xB7;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 179
column: 4
content: uintconstantLIST_LONG_OFFSET=0xF7;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 391
column: 4
content: uint8constantSTRING_OFFSET=0x80;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 392
column: 4
content: uint8constantLIST_OFFSET=0xc0;

SOLIDITY_VISIBILITY :8
SOLIDITY_SAFEMATH :4
SOLIDITY_PRAGMAS_VERSION :22
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :3
SOLIDITY_EXTRA_GAS_IN_LOOPS :5
SOLIDITY_ADDRESS_HARDCODED :11
SOLIDITY_GAS_LIMIT_IN_LOOPS :10
SOLIDITY_USING_INLINE_ASSEMBLY :13
SOLIDITY_SHOULD_RETURN_STRUCT :4
SOLIDITY_SHOULD_NOT_BE_VIEW :1
SOLIDITY_SHOULD_NOT_BE_PURE :12

---------------------------------------------
For contract 0xf7c41056dabf08a82682f3a31fa04e427678ff55.sol
Tool Runtime = 3.1805550629978825 seconds
#############################################