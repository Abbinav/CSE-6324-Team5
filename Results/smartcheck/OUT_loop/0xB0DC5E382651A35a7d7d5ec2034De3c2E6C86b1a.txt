(node:31642) Warning: Accessing non-existent property 'cat' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:31642) Warning: Accessing non-existent property 'cd' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'chmod' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'cp' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'dirs' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'pushd' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'popd' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'echo' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'tempdir' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'pwd' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'exec' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'ls' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'find' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'grep' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'head' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'ln' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'mkdir' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'rm' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'mv' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'sed' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'set' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'sort' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'tail' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'test' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'to' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'toEnd' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'touch' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'uniq' of module exports inside circular dependency
(node:31642) Warning: Accessing non-existent property 'which' of module exports inside circular dependency
./loops/0xB0DC5E382651A35a7d7d5ec2034De3c2E6C86b1a.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlline 264:49 extraneous input 'parameters' expecting {',', ')'}
line 1364:49 extraneous input 'parameters' expecting {',', ')'}
line 1383:120 no viable alternative at input '.decode(parameters,(uint,'
line 1383:120 no viable alternative at input '(uint,'
line 1383:120 no viable alternative at input 'uint,'
line 1407:120 no viable alternative at input '.decode(parameters,(uint,'
line 1407:120 no viable alternative at input '(uint,'
line 1407:120 no viable alternative at input 'uint,'
line 1430:138 no viable alternative at input '.decode(proofBytes,(bytes32[],'
line 1430:138 no viable alternative at input '(bytes32[],'
line 1430:138 no viable alternative at input 'bytes32[],'
line 1430:138 mismatched input ',' expecting ';'
line 1430:146 mismatched input ',' expecting ';'
line 1437:106 no viable alternative at input '.decode(parameters,(uint,'
line 1437:106 no viable alternative at input '(uint,'
line 1437:106 no viable alternative at input 'uint,'
line 1449:53 no viable alternative at input '.decode(parameters,(uint,'
line 1449:53 no viable alternative at input '(uint,'
line 1449:53 no viable alternative at input 'uint,'
line 1463:123 no viable alternative at input '.decode(parameters,(uint,'
line 1463:123 no viable alternative at input '(uint,'
line 1463:123 no viable alternative at input 'uint,'
line 1481:102 no viable alternative at input '.decode(parameters,(uint,'
line 1481:102 no viable alternative at input '(uint,'
line 1481:102 no viable alternative at input 'uint,'
ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1048
column: 34
content: (address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 14
column: 66
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 454
column: 76
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 471
column: 27
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 1034
column: 48
content: 0x0

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 62
column: 4
content: for(uinti=32;i<=proof.length;i+=32){assembly{element:=mload(add(elements,i))}hash=keccak256(abi.encodePacked(hash<element?abi.encodePacked(hash,element):abi.encodePacked(element,hash)));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 80
column: 4
content: for(uintj=32;j<=proof.length;j+=32){assembly{element:=mload(add(proof,j))}remaining=(proof.length-j+32)/32;while(remaining>0&&index%2==1&&index>2**remaining){index=uint(index)/2+1;}if(index%2==0){hash=keccak256(abi.encodePacked(abi.encodePacked(element,hash)));index=index/2;}else{hash=keccak256(abi.encodePacked(abi.encodePacked(hash,element)));index=uint(index)/2+1;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1347
column: 4
content: for(uinti=0;i<logics.length;i++){require(proposal!=logics[i],"can not be old contract");}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 486
column: 2
content: functiondebit(address,bytescalldata)externalreturns(address,uint){revert("not supported");}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1347
column: 4
content: for(uinti=0;i<logics.length;i++){require(proposal!=logics[i],"can not be old contract");}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 91
column: 13
content: remaining>0&&index%2==1&&index>2**remaining

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 383
column: 2
content: functionsetUpgradeOperator(addressupgradeOperator_)externalonlyOwner{upgradeOperator=upgradeOperator_;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 8
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 8
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 20
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 20
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 46
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 46
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 120
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 120
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 175
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 175
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 217
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 217
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 229
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 229
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 270
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 270
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 316
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 316
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 333
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 333
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 373
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 373
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 393
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 393
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 406
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 406
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 425
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 425
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 510
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 510
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 535
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 535
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1016
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1016
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1056
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1056
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1153
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1153
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1220
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1220
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1264
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1264
column: 22
content: <

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1096
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1097
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1098
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1099
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1100
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1101
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1102
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1103
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1104
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1105
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1106
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1107
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1108
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1109
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1110
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1111
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1112
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1113
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1114
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1115
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1116
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1239
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1240
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1241
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1242
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1243
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1244
column: 16
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1310
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1311
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1312
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1313
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1314
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1315
column: 7
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1316
column: 7
content: private

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1371
column: 9
content: if(action==RECLAIM_DEPOSIT_ON_HALT)returnreclaimDepositOnHalt(account,parameters);elserevert("invalid action");

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1294
column: 2
content: usingSafeMathforuint;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 56
column: 2
content: functioncheckProof(bytesmemoryproof,bytes32root,bytes32leaf)publicpurereturns(bool){if(proof.length%32!=0)returnfalse;bytesmemoryelements=proof;bytes32element;bytes32hash=leaf;for(uinti=32;i<=proof.length;i+=32){assembly{element:=mload(add(elements,i))}hash=keccak256(abi.encodePacked(hash<element?abi.encodePacked(hash,element):abi.encodePacked(element,hash)));}returnhash==root;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 73
column: 2
content: functioncheckProofOrdered(bytesmemoryproof,bytes32root,bytes32leaf,uintindex)publicpurereturns(bool){if(proof.length%32!=0)returnfalse;bytes32element;bytes32hash=leaf;uintremaining;for(uintj=32;j<=proof.length;j+=32){assembly{element:=mload(add(proof,j))}remaining=(proof.length-j+32)/32;while(remaining>0&&index%2==1&&index>2**remaining){index=uint(index)/2+1;}if(index%2==0){hash=keccak256(abi.encodePacked(abi.encodePacked(element,hash)));index=index/2;}else{hash=keccak256(abi.encodePacked(abi.encodePacked(hash,element)));index=uint(index)/2+1;}}returnhash==root;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 539
column: 4
content: functionconcat(bytesmemory_preBytes,bytesmemory_postBytes)internalpurereturns(bytesmemory){bytesmemorytempBytes;assembly{tempBytes:=mload(0x40)letlength:=mload(_preBytes)mstore(tempBytes,length)letmc:=add(tempBytes,0x20)letend:=add(mc,length)for{letcc:=add(_preBytes,0x20)}lt(mc,end){mc:=add(mc,0x20)cc:=add(cc,0x20)}{mstore(mc,mload(cc))}length:=mload(_postBytes)mstore(tempBytes,add(length,mload(tempBytes)))mc:=endend:=add(mc,length)for{letcc:=add(_postBytes,0x20)}lt(mc,end){mc:=add(mc,0x20)cc:=add(cc,0x20)}{mstore(mc,mload(cc))}mstore(0x40,and(add(add(end,iszero(add(length,mload(_preBytes)))),31),not(31)))}returntempBytes;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 754
column: 4
content: functionslice(bytesmemory_bytes,uint_start,uint_length)internalpurereturns(bytesmemory){require(_bytes.length>=(_start+_length));bytesmemorytempBytes;assembly{switchiszero(_length)case0{tempBytes:=mload(0x40)letlengthmod:=and(_length,31)letmc:=add(add(tempBytes,lengthmod),mul(0x20,iszero(lengthmod)))letend:=add(mc,_length)for{letcc:=add(add(add(_bytes,lengthmod),mul(0x20,iszero(lengthmod))),_start)}lt(mc,end){mc:=add(mc,0x20)cc:=add(cc,0x20)}{mstore(mc,mload(cc))}mstore(tempBytes,_length)mstore(0x40,and(add(mc,31),not(31)))}default{tempBytes:=mload(0x40)mstore(0x40,add(tempBytes,0x20))}}returntempBytes;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 816
column: 4
content: functiontoAddress(bytesmemory_bytes,uint_start)internalpurereturns(address){require(_bytes.length>=(_start+20));addresstempAddress;assembly{tempAddress:=div(mload(add(add(_bytes,0x20),_start)),0x1000000000000000000000000)}returntempAddress;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 825
column: 4
content: functiontoUint8(bytesmemory_bytes,uint_start)internalpurereturns(uint8){require(_bytes.length>=(_start+1));uint8tempUint;assembly{tempUint:=mload(add(add(_bytes,0x1),_start))}returntempUint;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 834
column: 4
content: functiontoUint16(bytesmemory_bytes,uint_start)internalpurereturns(uint16){require(_bytes.length>=(_start+2));uint16tempUint;assembly{tempUint:=mload(add(add(_bytes,0x2),_start))}returntempUint;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 843
column: 4
content: functiontoUint32(bytesmemory_bytes,uint_start)internalpurereturns(uint32){require(_bytes.length>=(_start+4));uint32tempUint;assembly{tempUint:=mload(add(add(_bytes,0x4),_start))}returntempUint;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 852
column: 4
content: functiontoUint64(bytesmemory_bytes,uint_start)internalpurereturns(uint64){require(_bytes.length>=(_start+8));uint64tempUint;assembly{tempUint:=mload(add(add(_bytes,0x8),_start))}returntempUint;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 861
column: 4
content: functiontoUint96(bytesmemory_bytes,uint_start)internalpurereturns(uint96){require(_bytes.length>=(_start+12));uint96tempUint;assembly{tempUint:=mload(add(add(_bytes,0xc),_start))}returntempUint;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 870
column: 4
content: functiontoUint128(bytesmemory_bytes,uint_start)internalpurereturns(uint128){require(_bytes.length>=(_start+16));uint128tempUint;assembly{tempUint:=mload(add(add(_bytes,0x10),_start))}returntempUint;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 879
column: 4
content: functiontoUint(bytesmemory_bytes,uint_start)internalpurereturns(uint256){require(_bytes.length>=(_start+32));uint256tempUint;assembly{tempUint:=mload(add(add(_bytes,0x20),_start))}returntempUint;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 888
column: 4
content: functiontoBytes32(bytesmemory_bytes,uint_start)internalpurereturns(bytes32){require(_bytes.length>=(_start+32));bytes32tempBytes32;assembly{tempBytes32:=mload(add(add(_bytes,0x20),_start))}returntempBytes32;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 897
column: 4
content: functionequal(bytesmemory_preBytes,bytesmemory_postBytes)internalpurereturns(bool){boolsuccess=true;assembly{letlength:=mload(_preBytes)switcheq(length,mload(_postBytes))case1{letcb:=1letmc:=add(_preBytes,0x20)letend:=add(mc,length)for{letcc:=add(_postBytes,0x20)}eq(add(lt(mc,end),cb),2){mc:=add(mc,0x20)cc:=add(cc,0x20)}{ifiszero(eq(mload(mc),mload(cc))){success:=0cb:=0}}}default{success:=0}}returnsuccess;}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1030
column: 2
content: functionrecover(bytes32hash,bytesmemorysignature)publicpurereturns(address){bytes32r;bytes32s;uint8v;if(signature.length!=65)return(address(0x0));assembly{r:=mload(add(signature,32))s:=mload(add(signature,64))v:=byte(0,mload(add(signature,96)))}if(v<27)v+=27;return(v!=27&&v!=28)?(address(0)):ecrecover(hash,v,r,s);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1120
column: 2
content: functionparseEntry(bytesmemoryparameters,bytesmemorysignature)internalpurereturns(Entrymemoryresult){result.ledgerId=parameters.toUint32(LEDGER_ID);result.account=parameters.toAddress(ACCOUNT);result.asset=parameters.toAddress(ASSET);result.instrument=parameters.toUint32(INSTRUMENT);result.entryType=EntryType(parameters.toUint8(ENTRY_TYPE));result.action=parameters.toUint8(ACTION);result.timestamp=parameters.toUint64(TIMESTAMP);result.quantity=parameters.toUint(QUANTITY);result.balance=parameters.toUint(BALANCE);result.notional=parameters.toUint(NOTIONAL);result.instrumentMargin=parameters.toUint(INSTRUMENT_MARGIN);result.margin=parameters.toUint(MARGIN);result.previous=parameters.toUint128(PREVIOUS);result.instrumentPrevious=parameters.toUint128(INSTRUMENT_PREVIOUS);result.gblockNumber=parameters.toUint32(GBLOCK_NUMBER);result.dataHash=parameters.toBytes32(DATA_HASH);result.position=Position(parameters.toUint8(SIGN),parameters.toUint64(NUMERATOR),parameters.toUint64(DENOMINATOR));bytesmemoryentryBytes=parameters;if(parameters.length>ENTRY_LENGTH){result.dataBytes=parameters.slice(ENTRY_LENGTH,parameters.length-ENTRY_LENGTH);require(result.dataHash==keccak256(result.dataBytes),"data hash mismatch");entryBytes=parameters.slice(0,ENTRY_LENGTH);}result.hash=keccak256(entryBytes);result.signer=recover(result.hash,signature);}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 940
column: 4
content: functionequalStorage(bytesstorage_preBytes,bytesmemory_postBytes)internalviewreturns(bool){boolsuccess=true;assembly{letfslot:=sload(_preBytes_slot)letslength:=div(and(fslot,sub(mul(0x100,iszero(and(fslot,1))),1)),2)letmlength:=mload(_postBytes)switcheq(slength,mlength)case1{ifiszero(iszero(slength)){switchlt(slength,32)case1{fslot:=mul(div(fslot,0x100),0x100)ifiszero(eq(fslot,mload(add(_postBytes,0x20)))){success:=0}}default{letcb:=1mstore(0x0,_preBytes_slot)letsc:=keccak256(0x0,0x20)letmc:=add(_postBytes,0x20)letend:=add(mc,mlength)for{}eq(add(lt(mc,end),cb),2){sc:=add(sc,1)mc:=add(mc,0x20)}{ifiszero(eq(sload(sc),mload(mc))){success:=0cb:=0}}}}}default{success:=0}}returnsuccess;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 264
column: 78
content: (addressasset,uintquantity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 320
column: 48
content: (addresscurrent,addressproposal,uintactivationBlock)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 486
column: 59
content: (address,uint)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1364
column: 88
content: (addressasset,uintquantity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1382
column: 91
content: (addressasset,uintquantity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1406
column: 98
content: (addressasset,uintquantity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1423
column: 82
content: (addressasset,uintquantity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1436
column: 86
content: (addressasset,uintquantity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1447
column: 86
content: (addressasset,uintquantity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1461
column: 81
content: (addressasset,uintquantity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1480
column: 88
content: (addressasset,uintquantity)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 63
column: 6
content: assembly{element:=mload(add(elements,i))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 81
column: 6
content: assembly{element:=mload(add(proof,j))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 549
column: 8
content: assembly{tempBytes:=mload(0x40)letlength:=mload(_preBytes)mstore(tempBytes,length)letmc:=add(tempBytes,0x20)letend:=add(mc,length)for{letcc:=add(_preBytes,0x20)}lt(mc,end){mc:=add(mc,0x20)cc:=add(cc,0x20)}{mstore(mc,mload(cc))}length:=mload(_postBytes)mstore(tempBytes,add(length,mload(tempBytes)))mc:=endend:=add(mc,length)for{letcc:=add(_postBytes,0x20)}lt(mc,end){mc:=add(mc,0x20)cc:=add(cc,0x20)}{mstore(mc,mload(cc))}mstore(0x40,and(add(add(end,iszero(add(length,mload(_preBytes)))),31),not(31)))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 618
column: 8
content: assembly{letfslot:=sload(_preBytes_slot)letslength:=div(and(fslot,sub(mul(0x100,iszero(and(fslot,1))),1)),2)letmlength:=mload(_postBytes)letnewlength:=add(slength,mlength)switchadd(lt(slength,32),lt(newlength,32))case2{sstore(_preBytes_slot,add(fslot,add(mul(div(mload(add(_postBytes,0x20)),exp(0x100,sub(32,mlength))),exp(0x100,sub(32,newlength))),mul(mlength,2))))}case1{mstore(0x0,_preBytes_slot)letsc:=add(keccak256(0x0,0x20),div(slength,32))sstore(_preBytes_slot,add(mul(newlength,2),1))letsubmod:=sub(32,slength)letmc:=add(_postBytes,submod)letend:=add(_postBytes,mlength)letmask:=sub(exp(0x100,submod),1)sstore(sc,add(and(fslot,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00),and(mload(mc),mask)))for{mc:=add(mc,0x20)sc:=add(sc,1)}lt(mc,end){sc:=add(sc,1)mc:=add(mc,0x20)}{sstore(sc,mload(mc))}mask:=exp(0x100,sub(mc,end))sstore(sc,mul(div(mload(mc),mask),mask))}default{mstore(0x0,_preBytes_slot)letsc:=add(keccak256(0x0,0x20),div(slength,32))sstore(_preBytes_slot,add(mul(newlength,2),1))letslengthmod:=mod(slength,32)letmlengthmod:=mod(mlength,32)letsubmod:=sub(32,slengthmod)letmc:=add(_postBytes,submod)letend:=add(_postBytes,mlength)letmask:=sub(exp(0x100,submod),1)sstore(sc,add(sload(sc),and(mload(mc),mask)))for{sc:=add(sc,1)mc:=add(mc,0x20)}lt(mc,end){sc:=add(sc,1)mc:=add(mc,0x20)}{sstore(sc,mload(mc))}mask:=exp(0x100,sub(mc,end))sstore(sc,mul(div(mload(mc),mask),mask))}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 764
column: 8
content: assembly{switchiszero(_length)case0{tempBytes:=mload(0x40)letlengthmod:=and(_length,31)letmc:=add(add(tempBytes,lengthmod),mul(0x20,iszero(lengthmod)))letend:=add(mc,_length)for{letcc:=add(add(add(_bytes,lengthmod),mul(0x20,iszero(lengthmod))),_start)}lt(mc,end){mc:=add(mc,0x20)cc:=add(cc,0x20)}{mstore(mc,mload(cc))}mstore(tempBytes,_length)mstore(0x40,and(add(mc,31),not(31)))}default{tempBytes:=mload(0x40)mstore(0x40,add(tempBytes,0x20))}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 819
column: 8
content: assembly{tempAddress:=div(mload(add(add(_bytes,0x20),_start)),0x1000000000000000000000000)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 828
column: 8
content: assembly{tempUint:=mload(add(add(_bytes,0x1),_start))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 837
column: 8
content: assembly{tempUint:=mload(add(add(_bytes,0x2),_start))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 846
column: 8
content: assembly{tempUint:=mload(add(add(_bytes,0x4),_start))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 855
column: 8
content: assembly{tempUint:=mload(add(add(_bytes,0x8),_start))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 864
column: 8
content: assembly{tempUint:=mload(add(add(_bytes,0xc),_start))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 873
column: 8
content: assembly{tempUint:=mload(add(add(_bytes,0x10),_start))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 882
column: 8
content: assembly{tempUint:=mload(add(add(_bytes,0x20),_start))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 891
column: 8
content: assembly{tempBytes32:=mload(add(add(_bytes,0x20),_start))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 900
column: 8
content: assembly{letlength:=mload(_preBytes)switcheq(length,mload(_postBytes))case1{letcb:=1letmc:=add(_preBytes,0x20)letend:=add(mc,length)for{letcc:=add(_postBytes,0x20)}eq(add(lt(mc,end),cb),2){mc:=add(mc,0x20)cc:=add(cc,0x20)}{ifiszero(eq(mload(mc),mload(cc))){success:=0cb:=0}}}default{success:=0}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 950
column: 8
content: assembly{letfslot:=sload(_preBytes_slot)letslength:=div(and(fslot,sub(mul(0x100,iszero(and(fslot,1))),1)),2)letmlength:=mload(_postBytes)switcheq(slength,mlength)case1{ifiszero(iszero(slength)){switchlt(slength,32)case1{fslot:=mul(div(fslot,0x100),0x100)ifiszero(eq(fslot,mload(add(_postBytes,0x20)))){success:=0}}default{letcb:=1mstore(0x0,_preBytes_slot)letsc:=keccak256(0x0,0x20)letmc:=add(_postBytes,0x20)letend:=add(mc,mlength)for{}eq(add(lt(mc,end),cb),2){sc:=add(sc,1)mc:=add(mc,0x20)}{ifiszero(eq(sload(sc),mload(mc))){success:=0cb:=0}}}}}default{success:=0}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1038
column: 4
content: assembly{r:=mload(add(signature,32))s:=mload(add(signature,64))v:=byte(0,mload(add(signature,96)))}

SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :42
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :34
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_ADDRESS_HARDCODED :5
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_SHOULD_RETURN_STRUCT :11
SOLIDITY_SHOULD_NOT_BE_PURE :16
SOLIDITY_SAFEMATH :1
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_USING_INLINE_ASSEMBLY :17
SOLIDITY_SHOULD_NOT_BE_VIEW :1

---------------------------------------------
For contract 0xB0DC5E382651A35a7d7d5ec2034De3c2E6C86b1a.sol
Tool Runtime = 2.705891265999526 seconds
#############################################