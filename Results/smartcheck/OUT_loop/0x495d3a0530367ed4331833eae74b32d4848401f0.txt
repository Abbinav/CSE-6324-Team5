(node:25327) Warning: Accessing non-existent property 'cat' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:25327) Warning: Accessing non-existent property 'cd' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'chmod' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'cp' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'dirs' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'pushd' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'popd' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'echo' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'tempdir' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'pwd' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'exec' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'ls' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'find' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'grep' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'head' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'ln' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'mkdir' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'rm' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'mv' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'sed' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'set' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'sort' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'tail' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'test' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'to' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'toEnd' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'touch' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'uniq' of module exports inside circular dependency
(node:25327) Warning: Accessing non-existent property 'which' of module exports inside circular dependency
./loops/0x495d3a0530367ed4331833eae74b32d4848401f0.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlline 637:24 extraneous input '_proposalTitle' expecting {',', ')'}
line 639:24 extraneous input '_proposalSD' expecting {',', ')'}
line 639:35 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 641:24 mismatched input '_proposalDescHash' expecting {';', '='}
line 641:41 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 645:4 mismatched input ')' expecting {';', '='}
line 677:24 extraneous input '_solutionHash' expecting {',', ')'}
line 677:37 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 679:23 mismatched input '_action' expecting {';', '='}
line 681:4 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 683:16 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 697:24 extraneous input '_proposalTitle' expecting {',', ')'}
line 699:24 extraneous input '_proposalSD' expecting {',', ')'}
line 699:35 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 701:24 mismatched input '_proposalDescHash' expecting {';', '='}
line 701:41 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 703:24 mismatched input ',' expecting {';', '='}
line 705:24 mismatched input '_solutionHash' expecting {';', '='}
line 705:37 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 707:23 mismatched input '_action' expecting {';', '='}
line 709:4 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 711:16 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1531:33 mismatched input 'payable' expecting {',', ')'}
line 1531:46 no viable alternative at input '_user)'
line 1531:46 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1531:55 extraneous input 'returns' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1531:71 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1575:32 mismatched input 'payable' expecting {',', ')'}
line 1575:39 extraneous input '[' expecting {';', 'solidity', 'experimental', 'from', '{', '(', 'constructor', 'returns', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'payable', 'pure', 'view', 'new', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1575:65 no viable alternative at input '_addressParams,'
line 1575:65 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1575:85 mismatched input ')' expecting {';', '='}
line 1605:58 extraneous input 'payable' expecting {',', ')'}
line 1605:71 no viable alternative at input 'value)'
line 1605:71 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1605:81 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1962:99 extraneous input 'payable' expecting {',', ')'}
line 1962:106 extraneous input '[' expecting {';', 'solidity', 'experimental', 'from', '{', '(', 'constructor', 'returns', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'payable', 'pure', 'view', 'new', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1962:129 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1962:138 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1964:13 mismatched input '(' expecting {';', '='}
line 1964:21 mismatched input '(' expecting ')'
line 1964:26 extraneous input '==' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1964:32 mismatched input '.' expecting {';', '='}
line 1964:39 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1966:30 mismatched input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1968:16 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1968:24 mismatched input '(' expecting {';', '='}
line 1968:36 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1972:22 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1974:20 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1974:36 mismatched input '(' expecting {';', '='}
line 1974:51 mismatched input '(' expecting ')'
line 1974:67 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1976:30 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1976:44 mismatched input ',' expecting {';', '='}
line 1976:61 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1978:22 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1990:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1880
column: 35
content: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1006
column: 4
content: functionimplementation()publicviewreturns(addressimpl){bytes32position=IMPLEMENTATION_POSITION;assembly{impl:=sload(position)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1149
column: 4
content: functionproxyOwner()publicviewreturns(addressowner){bytes32position=PROXY_OWNER_POSITION;assembly{owner:=sload(position)}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 889
column: 0
content: contractProxy{function()externalpayable{address_impl=implementation();require(_impl!=address(0));assembly{letptr:=mload(0x40)calldatacopy(ptr,0,calldatasize)letresult:=delegatecall(gas,_impl,ptr,calldatasize,0,0)letsize:=returndatasizereturndatacopy(ptr,0,size)switchresultcase0{revert(ptr,size)}default{return(ptr,size)}}}functionimplementation()publicviewreturns(address);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1365
column: 0
content: contractIMarket{enumPredictionStatus{Live,InSettlement,Cooling,InDispute,Settled}structMarketData{uint64startTime;uint64predictionTime;uint64neutralMinValue;uint64neutralMaxValue;}structMarketSettleData{uint64WinningOption;uint64settleTime;}MarketSettleDatapublicmarketSettleData;MarketDatapublicmarketData;functionWinningOption()publicviewreturns(uint256);functionmarketCurrency()publicviewreturns(bytes32);functiongetMarketFeedData()publicviewreturns(uint8,bytes32,address);functionsettleMarket()external;functiongetTotalStakedValueInPLOT()externalviewreturns(uint256);functioninitiate(uint64_startTime,uint64_predictionTime,uint64_minValue,uint64_maxValue)publicpayable;functionresolveDispute(boolaccepted,uint256finalResult)externalpayable;functiongetData()externalviewreturns(bytes32_marketCurrency,uint[]memoryminvalue,uint[]memorymaxvalue,uint[]memory_optionPrice,uint[]memory_ethStaked,uint[]memory_plotStaked,uint_predictionType,uint_expireTime,uint_predictionStatus);functionclaimReturn(addresspayable_user)publicreturns<missing ';'>(uint256);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1571
column: 0
content: contractIMarketUtility{functioninitialize(addresspayable[]calldata_addressParams,address_initiater)external;functionsetAuthorizedAddres()public;functionupdateUintParameters(bytes8code,uint256value)external;functionupdateAddressParameters(bytes8code,address<missing ')'>payablevalue)external;<missing ';'>functiongetMarketInitialParams()publicviewreturns(address[]memory,uint,uint,uint,uint);functiongetAssetPriceUSD(address_currencyAddress)externalviewreturns(uintlatestAnswer);functiongetPriceFeedDecimals(address_priceFeed)publicviewreturns(uint8);functiongetValueAndMultiplierParameters(address_asset,uint256_amount)publicviewreturns(uint256,uint256);functionupdate()external;functioncalculatePredictionValue(uint[]memoryparams,addressasset,addressuser,addressmarketFeedAddress,bool_checkMultiplier)publicviewreturns(uint_predictionValue,bool_multiplierApplied);functiongetBasicMarketDetails()publicviewreturns(uint256,uint256,uint256,uint256);functiongetDisputeResolutionParams()publicviewreturns(uint256);functioncalculateOptionPrice(uint[]memoryparams,addressmarketFeedAddress)publicviewreturns(uint_optionPrice);functiongetSettlemetPrice(address_currencyFeedAddress,uint256_settleTime)publicviewreturns(uint256latestAnswer,uint256roundId);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1770
column: 0
content: contractMarketRegistryisGoverned,Iupgradable{usingSafeMathfor*;enumMarketType{HourlyMarket,DailyMarket,WeeklyMarket}structMarketTypeData{uint64predictionTime;uint64optionRangePerc;}structMarketCurrency{addressmarketImplementation;uint8decimals;}structMarketCreationData{uint64initialStartTime;addressmarketAddress;addresspenultimateMarket;}structDisputeStake{uint64proposalId;addressstaker;uint256stakeAmount;uint256ethDeposited;uint256tokenDeposited;}structMarketData{boolisMarket;DisputeStakedisputeStakes;}structUserData{uint256lastClaimedIndex;uint256marketsCreated;uint256totalEthStaked;uint256totalPlotStaked;address[]marketsParticipated;mapping(address=>bool)marketsParticipatedFlag;}uintinternalmarketCreationIncentive;mapping(address=>MarketData)marketData;mapping(address=>UserData)userData;mapping(uint256=>mapping(uint256=>MarketCreationData))publicmarketCreationData;mapping(uint64=>address)disputeProposalId;addressconstantETH_ADDRESS=0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;addressinternalmarketInitiater;addresspublictokenController;MarketCurrency[]marketCurrencies;MarketTypeData[]marketTypes;boolpublicmarketCreationPaused;ITokenpublicplotToken;IMarketUtilitypublicmarketUtility;IGovernanceinternalgovernance;IMasterms;eventMarketQuestion(addressindexedmarketAdd,bytes32stockName,uint256indexedpredictionType,uint256startTime);eventPlacePrediction(addressindexeduser,uint256value,uint256predictionPoints,addresspredictionAsset,uint256prediction,addressindexedmarketAdd,uint256_leverage);eventMarketResult(addressindexedmarketAdd,uint256[]totalReward,uint256winningOption,uint256closeValue,uint256roundId);eventClaimed(addressindexedmarketAdd,addressindexeduser,uint256[]reward,address[]_predictionAssets,uint256incentive,addressincentiveToken);eventMarketTypes(uint256indexedindex,uint64predictionTime,uint64optionRangePerc);eventMarketCurrencies(uint256indexedindex,addressmarketImplementation,addressfeedAddress,bytes32currencyName);eventDisputeRaised(addressindexedmarketAdd,addressraisedBy,uint64proposalId,uint256proposedValue);eventDisputeResolved(addressindexedmarketAdd,boolstatus);functionisMarket(address_address)publicviewreturns(bool){returnmarketData[_address].isMarket;}functionisWhitelistedSponsor(address_address)publicviewreturns(bool){returnms.whitelistedSponsor(_address);}functioninitiate(address_defaultAddress,address_marketUtility,address_plotToken,address<missing ')'>payable[]memory_configParams)public{require(address<missing ';'>(ms)==msg.sender);marketCreationIncentive=50ether;plotToken=IToken(_plotToken);addresstcAddress=ms.getLatestAddress("TC");tokenController=tcAddress;marketUtility=IMarketUtility(_generateProxy<missing ';'>(_marketUtility));marketUtility.initialize(_configParams,_defaultAddress);marketInitiater=_defaultAddress;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 14
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 14
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 523
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 523
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 808
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 808
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 875
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 875
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 952
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 952
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1071
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1071
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1226
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1226
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1361
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1361
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1544
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1544
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1569
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1569
column: 22
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1750
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1750
column: 22
content: <

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 984
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1105
column: 12
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1774
column: 4
content: usingSafeMathfor*;

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 1006
column: 4
content: functionimplementation()publicviewreturns(addressimpl){bytes32position=IMPLEMENTATION_POSITION;assembly{impl:=sload(position)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 1149
column: 4
content: functionproxyOwner()publicviewreturns(addressowner){bytes32position=PROXY_OWNER_POSITION;assembly{owner:=sload(position)}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 739
column: 15
content: (uintproposalId,uintcategory,uintstatus,uintfinalVerdict,uinttotalReward)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1425
column: 52
content: (uint8,bytes32,address)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1495
column: 13
content: (bytes32_marketCurrency,uint[]memoryminvalue,uint[]memorymaxvalue,uint[]memory_optionPrice,uint[]memory_ethStaked,uint[]memory_plotStaked,uint_predictionType,uint_expireTime,uint_predictionStatus)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1625
column: 57
content: (address[]memory,uint,uint,uint,uint)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1643
column: 16
content: (uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1651
column: 158
content: (uint_predictionValue,bool_multiplierApplied)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1673
column: 16
content: (uint256,uint256,uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1709
column: 26
content: (uint256latestAnswer,uint256roundId)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 907
column: 8
content: assembly{letptr:=mload(0x40)calldatacopy(ptr,0,calldatasize)letresult:=delegatecall(gas,_impl,ptr,calldatasize,0,0)letsize:=returndatasizereturndatacopy(ptr,0,size)switchresultcase0{revert(ptr,size)}default{return(ptr,size)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1010
column: 8
content: assembly{impl:=sload(position)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1032
column: 8
content: assembly{sstore(position,_newImplementation)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1153
column: 8
content: assembly{owner:=sload(position)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1209
column: 8
content: assembly{sstore(position,_newProxyOwner)}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 635
column: 4
content: functioncreateProposal(stringcalldata_proposalTitle,stringcalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 673
column: 4
content: functionsubmitProposalWithSolution(uint_proposalId,stringcalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 695
column: 4
content: functioncreateProposalwithSolution(stringcalldata_proposalTitle,stringcalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1531
column: 4
content: functionclaimReturn(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1575
column: 4
content: functioninitialize(addresspayable[]calldata

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1605
column: 4
content: functionupdateAddressParameters(bytes8code,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1962
column: 4
content: functioninitiate(address_defaultAddress,address_marketUtility,address_plotToken,address<missing ')'>payable[]memory

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 639
column: 24
content: _proposalSD,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 641
column: 8
content: stringcalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 641
column: 24
content: _proposalDescHash,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 643
column: 8
content: uint_categoryId)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 677
column: 24
content: _solutionHash,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 679
column: 8
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 699
column: 24
content: _proposalSD,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 701
column: 8
content: stringcalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 701
column: 24
content: _proposalDescHash,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 703
column: 8
content: uint_categoryId,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 705
column: 8
content: stringcalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 705
column: 24
content: _solutionHash,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 707
column: 8
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1531
column: 62
content: (uint256);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1575
column: 51
content: _addressParams,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1575
column: 67
content: address_initiater)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1870
column: 4
content: mapping(address=>MarketData)marketData;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1872
column: 4
content: mapping(address=>UserData)userData;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1876
column: 4
content: mapping(uint64=>address)disputeProposalId;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1880
column: 4
content: addressconstantETH_ADDRESS=0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1888
column: 4
content: MarketCurrency[]marketCurrencies;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1890
column: 4
content: MarketTypeData[]marketTypes;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1904
column: 4
content: IMasterms;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1964
column: 13
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1964
column: 21
content: (ms)==msg.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1964
column: 33
content: sender);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1966
column: 6
content: marketCreationIncentive=50ether;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1968
column: 6
content: plotToken=IToken

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1968
column: 24
content: (_plotToken);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1970
column: 6
content: addresstcAddress=ms.getLatestAddress("TC");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1972
column: 6
content: tokenController=tcAddress;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1974
column: 6
content: marketUtility=IMarketUtility

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1974
column: 36
content: (_generateProxy<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1974
column: 51
content: (_marketUtility));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1976
column: 6
content: marketUtility.initialize(_configParams,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1976
column: 46
content: _defaultAddress);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1978
column: 6
content: marketInitiater=_defaultAddress;

SOLIDITY_VISIBILITY :44
SOLIDITY_SAFEMATH :1
SOLIDITY_PRAGMAS_VERSION :22
SOLIDITY_LOCKED_MONEY :4
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :2
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :2
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_USING_INLINE_ASSEMBLY :5
SOLIDITY_SHOULD_RETURN_STRUCT :8
SOLIDITY_SHOULD_NOT_BE_VIEW :2

---------------------------------------------
For contract 0x495d3a0530367ed4331833eae74b32d4848401f0.sol
Tool Runtime = 1.8019765880017076 seconds
#############################################