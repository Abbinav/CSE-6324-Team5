(node:28007) Warning: Accessing non-existent property 'cat' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:28007) Warning: Accessing non-existent property 'cd' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'chmod' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'cp' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'dirs' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'pushd' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'popd' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'echo' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'tempdir' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'pwd' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'exec' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'ls' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'find' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'grep' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'head' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'ln' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'mkdir' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'rm' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'mv' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'sed' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'set' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'sort' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'tail' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'test' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'to' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'toEnd' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'touch' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'uniq' of module exports inside circular dependency
(node:28007) Warning: Accessing non-existent property 'which' of module exports inside circular dependency
./noloops/0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlline 1481:26 mismatched input 'payable' expecting {',', ')'}
line 1481:37 no viable alternative at input 'usr,'
line 1481:37 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1481:47 mismatched input ')' expecting {';', '='}
line 1481:63 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1482:15 mismatched input '(' expecting {';', '='}
line 1482:19 mismatched input '(' expecting ')'
line 1482:25 mismatched input '>=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1483:16 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1483:20 mismatched input ',' expecting {';', '='}
line 1483:32 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1483:38 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1483:42 mismatched input ')' expecting {';', '='}
line 1484:20 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1484:24 extraneous input ')' expecting {';', '='}
line 1486:0 extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 424
column: 33
content: (delay,address(0),authority)

ruleId: SOLIDITY_EXACT_TIME
patternId: 1955d9
severity: 2
line: 1600
column: 16
content: now==ilks[ilk].rho

ruleId: SOLIDITY_EXACT_TIME
patternId: 1955d9
severity: 2
line: 1834
column: 16
content: now==rho

ruleId: SOLIDITY_EXACT_TIME
patternId: 1955d9
severity: 2
line: 1861
column: 16
content: now==rho

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1554
column: 4
content: functionrpow(uintx,uintn,uintb)internalpurereturns(uintz){assembly{switchxcase0{switchncase0{z:=b}default{z:=0}}default{switchmod(n,2)case0{z:=b}default{z:=x}lethalf:=div(b,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,b)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,b)}}}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1699
column: 4
content: functionsoul(addressusr)internalviewreturns(bytes32tag){assembly{tag:=extcodehash(usr)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1791
column: 4
content: functionrpow(uintx,uintn,uintbase)internalpurereturns(uintz){assembly{switchxcase0{switchncase0{z:=base}default{z:=0}}default{switchmod(n,2)case0{z:=base}default{z:=x}lethalf:=div(base,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,base)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,base)}}}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 2097
column: 4
content: functioneither(boolx,booly)internalpurereturns(boolz){assembly{z:=or(x,y)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 2100
column: 4
content: functionboth(boolx,booly)internalpurereturns(boolz){assembly{z:=and(x,y)}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1453
column: 0
content: contractETHJoinisLibNote{mapping(address=>uint)publicwards;functionrely(addressusr)externalnoteauth{wards[usr]=1;}functiondeny(addressusr)externalnoteauth{wards[usr]=0;}modifierauth{require(wards[msg.sender]==1,"ETHJoin/not-authorized");_;}VatLikeJoinpublicvat;bytes32publicilk;uintpubliclive;constructor(addressvat_,bytes32ilk_)public{wards[msg.sender]=1;live=1;vat=VatLikeJoin(vat_);ilk=ilk_;}functioncage()externalnoteauth{live=0;}functionjoin(addressusr)externalpayablenote{require(live==1,"ETHJoin/not-live");require(int(msg.value)>=0,"ETHJoin/overflow");vat.slip(ilk,usr,int(msg.value));}functionexit(addresspayableusr,uintwad)externalnote{require(int<missing ';'>(wad)>=0,"ETHJoin/overflow");vat.slip(ilk,msg.sender,-int(wad));usr.transfer(wad);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 14
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 14
column: 22
content: <

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 699
column: 8
content: if(what=="vow")vow=VowLike(data);elserevert("Cat/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 704
column: 13
content: if(what=="lump")ilks[ilk].lump=data;elserevert("Cat/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 708
column: 8
content: if(what=="flip"){vat.nope(ilks[ilk].flip);ilks[ilk].flip=flip;vat.hope(flip);}elserevert("Cat/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 938
column: 13
content: if(what=="spot")spot=Spotty(data);elserevert("End/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 943
column: 8
content: if(what=="wait")wait=data;elserevert("End/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1095
column: 13
content: if(what=="tau")tau=uint48(data);elserevert("Flapper/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1218
column: 13
content: if(what=="tau")tau=uint48(data);elserevert("Flipper/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1356
column: 13
content: if(what=="tau")tau=uint48(data);elserevert("Flopper/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1601
column: 8
content: if(what=="duty")ilks[ilk].duty=data;elserevert("Jug/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1605
column: 8
content: if(what=="base")base=data;elserevert("Jug/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1609
column: 8
content: if(what=="vow")vow=data;elserevert("Jug/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1835
column: 8
content: if(what=="dsr")dsr=data;elserevert("Pot/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1840
column: 8
content: if(what=="vow")vow=addr;elserevert("Pot/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1933
column: 8
content: if(what=="pip")ilks[ilk].pip=PipLikeSpot(pip_);elserevert("Spotter/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1938
column: 8
content: if(what=="par")par=data;elserevert("Spotter/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1943
column: 8
content: if(what=="mat")ilks[ilk].mat=data;elserevert("Spotter/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 2068
column: 8
content: if(what=="Line")Line=data;elserevert("Vat/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 2075
column: 13
content: if(what=="dust")ilks[ilk].dust=data;elserevert("Vat/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 2285
column: 13
content: if(what=="hump")hump=data;elserevert("Vow/file-unrecognized-param");

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 2295
column: 13
content: if(what=="flopper")flopper=FlopLike(data);elserevert("Vow/file-unrecognized-param");

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1554
column: 4
content: functionrpow(uintx,uintn,uintb)internalpurereturns(uintz){assembly{switchxcase0{switchncase0{z:=b}default{z:=0}}default{switchmod(n,2)case0{z:=b}default{z:=x}lethalf:=div(b,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,b)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,b)}}}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1791
column: 4
content: functionrpow(uintx,uintn,uintbase)internalpurereturns(uintz){assembly{switchxcase0{switchncase0{z:=base}default{z:=0}}default{switchmod(n,2)case0{z:=base}default{z:=x}lethalf:=div(base,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,base)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,base)}}}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 2097
column: 4
content: functioneither(boolx,booly)internalpurereturns(boolz){assembly{z:=or(x,y)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 2100
column: 4
content: functionboth(boolx,booly)internalpurereturns(boolz){assembly{z:=and(x,y)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 1699
column: 4
content: functionsoul(addressusr)internalviewreturns(bytes32tag){assembly{tag:=extcodehash(usr)}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 484
column: 49
content: (uint256Art,uint256rate,uint256spot)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 489
column: 57
content: (uint256ink,uint256art)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 504
column: 48
content: (uint256Art,uint256rate,uint256spot,uint256line,uint256dust)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 511
column: 61
content: (uint256ink,uint256art)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 525
column: 44
content: (addressflip,uint256chop,uint256lump)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 542
column: 49
content: (uint256bid,uint256lot,addressguy,uint48tic,uint48end,addressusr,addressgal,uint256tab)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 561
column: 49
content: (PipLikepip,uint256mat)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 607
column: 44
content: (uint256Art,uint256rate)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1879
column: 37
content: (bytes32,bool)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1746
column: 24
content: delegatecall(fax)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 153
column: 8
content: assembly{letmark:=msizemstore(0x40,add(mark,288))mstore(mark,0x20)mstore(add(mark,0x20),224)calldatacopy(add(mark,0x40),0,224)log4(mark,288,shl(224,shr(224,calldataload(0))),caller,calldataload(4),calldataload(36))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 625
column: 8
content: assembly{letmark:=msizemstore(0x40,add(mark,288))mstore(mark,0x20)mstore(add(mark,0x20),224)calldatacopy(add(mark,0x40),0,224)log4(mark,288,shl(224,shr(224,calldataload(0))),caller,calldataload(4),calldataload(36))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1555
column: 6
content: assembly{switchxcase0{switchncase0{z:=b}default{z:=0}}default{switchmod(n,2)case0{z:=b}default{z:=x}lethalf:=div(b,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,b)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,b)}}}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1638
column: 8
content: assembly{foo:=calldataload(4)bar:=calldataload(36)wad:=callvalue}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1703
column: 8
content: assembly{tag:=extcodehash(usr)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1792
column: 8
content: assembly{switchxcase0{switchncase0{z:=base}default{z:=0}}default{switchmod(n,2)case0{z:=base}default{z:=x}lethalf:=div(base,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,base)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,base)}}}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 2012
column: 8
content: assembly{letmark:=msizemstore(0x40,add(mark,288))mstore(mark,0x20)mstore(add(mark,0x20),224)calldatacopy(add(mark,0x40),0,224)log4(mark,288,shl(224,shr(224,calldataload(0))),calldataload(4),calldataload(36),calldataload(68))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 2098
column: 8
content: assembly{z:=or(x,y)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 2101
column: 8
content: assembly{z:=and(x,y)}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1481
column: 4
content: functionexit(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 290
column: 4
content: uint256constantONE=10**27;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 685
column: 4
content: uintconstantONE=10**27;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 919
column: 4
content: uintconstantWAD=10**18;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 920
column: 4
content: uintconstantRAY=10**27;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1061
column: 4
content: uint256constantONE=1.00E18;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1183
column: 4
content: uint256constantONE=1.00E18;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1319
column: 4
content: uint256constantONE=1.00E18;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1481
column: 34
content: usr,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1481
column: 39
content: uintwad)external

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1481
column: 58
content: note{require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1482
column: 15
content: (int<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1482
column: 19
content: (wad)>=0,"ETHJoin/overflow");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1483
column: 8
content: vat.slip(ilk,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1483
column: 22
content: msg.sender,-

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1483
column: 35
content: int(wad));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1484
column: 8
content: usr.transfer(wad);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1511
column: 4
content: uintconstantONE=10**27;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1577
column: 4
content: uint256constantONE=10**27;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1790
column: 4
content: uint256constantONE=10**27;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1921
column: 4
content: uintconstantONE=10**27;

SOLIDITY_VISIBILITY :21
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_REVERT_REQUIRE :20
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :5
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_USING_INLINE_ASSEMBLY :9
SOLIDITY_UNCHECKED_CALL :1
SOLIDITY_SHOULD_RETURN_STRUCT :9
SOLIDITY_SHOULD_NOT_BE_VIEW :1
SOLIDITY_SHOULD_NOT_BE_PURE :4
SOLIDITY_EXACT_TIME :3

---------------------------------------------
For contract 0x6a91178174995d6f43E3D29d57dC7D82b4c7EF15.sol
Tool Runtime = 3.999145124998904 seconds
#############################################