pragma directive defines a prior version to 0.5.12. Changing pragma version to 0.5.12....
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    UpsweepV1
Line:        57
Source: 
>     address payable public owner = msg.sender;
>     uint public ticketPrice = 100000000000000000;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UpsweepV1
Line:        123
Source: 
>     */
>     function join(bytes32 _hash)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UpsweepV1
Line:        162
Source: 
>     */
>     function abandon()
>     ^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UpsweepV1
Line:        189
Source: 
>     */
>     function reveal(
>     ^^^^^^^^^^^^^^^^
>         uint8 i, 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UpsweepV1
Line:        306
Source: 
>     */
>     function withdraw(uint gameId) 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UpsweepV1
Line:        340
Source: 
>     
>     function microTip()
>     ^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UpsweepV1
Line:        349
Source: 
>     
>     function changeOwner(address payable _newOwner)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UpsweepV1
Line:        358
Source: 
>     
>     function getHonour(uint _gameId)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    UpsweepV1
Line:        349
Source: 
>     
>     function changeOwner(address payable _newOwner)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    UpsweepV1
Line:        123
Source: 
>     */
>     function join(bytes32 _hash)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UpsweepV1
Line:        67
Source: 
>     
>     modifier onlyBy(address _account)
>                     ^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UpsweepV1
Line:        76
Source: 
>     
>     modifier circleIsPrivate(bool _closed) {
>                              ^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UpsweepV1
Line:        84
Source: 
>     
>     modifier circleIsPublic(bool _closed) {
>                             ^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UpsweepV1
Line:        92
Source: 
>     
>     modifier onlyAfter(uint _time) {
>                        ^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UpsweepV1
Line:        100
Source: 
>     
>     modifier onlyBefore(uint _time) {
>                         ^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UpsweepV1
Line:        108
Source: 
>     
>     modifier ticketIsAffordable(uint _amount) {
>                                 ^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    UpsweepV1
Line:        57
Source: 
>     address payable public owner = msg.sender;
>     uint public ticketPrice = 100000000000000000;
>                               ^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    UpsweepV1
Line:        335
Source: 
>         
>         msg.sender.transfer(payout);   
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    UpsweepV1
Line:        115
Source: 
>         if (msg.value > _amount)
>             msg.sender.transfer(msg.value - _amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    UpsweepV1
Line:        180
Source: 
>         emit Join(counter);
>         msg.sender.transfer(ticketPrice);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    UpsweepV1
Line:        373
Source: 
>         player[_gameId][msg.sender].gotHonour = true;
>         msg.sender.transfer(honour[_gameId]);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    UpsweepV1
Line:        345
Source: 
>     {
>         owner.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    UpsweepV1
Line:        115
Source: 
>         if (msg.value > _amount)
>             msg.sender.transfer(msg.value - _amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    UpsweepV1
Line:        180
Source: 
>         emit Join(counter);
>         msg.sender.transfer(ticketPrice);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    UpsweepV1
Line:        335
Source: 
>         
>         msg.sender.transfer(payout);   
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    UpsweepV1
Line:        373
Source: 
>         player[_gameId][msg.sender].gotHonour = true;
>         msg.sender.transfer(honour[_gameId]);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    UpsweepV1
Line:        38
Source: 
> 
>     uint public elapsed;
>     ^^^^^^^^^^^^^^^^^^^
>     uint public timeout;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    UpsweepV1
Line:        39
Source: 
>     uint public elapsed;
>     uint public timeout;
>     ^^^^^^^^^^^^^^^^^^^
>     uint public lastId;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    UpsweepV1
Line:        40
Source: 
>     uint public timeout;
>     uint public lastId;
>     ^^^^^^^^^^^^^^^^^^
>     uint public counter;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    UpsweepV1
Line:        41
Source: 
>     uint public lastId;
>     uint public counter;
>     ^^^^^^^^^^^^^^^^^^^
>     bool public closed;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    UpsweepV1
Line:        42
Source: 
>     uint public counter;
>     bool public closed;
>     ^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    UpsweepV1
Line:        115
Source: 
>         if (msg.value > _amount)
>             msg.sender.transfer(msg.value - _amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    UpsweepV1
Line:        345
Source: 
>     {
>         owner.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        138
Source: 
>         if (counter == 0) {
>             elapsed = block.number;
>             ^^^^^^^^^^^^^^^^^^^^^^
>             emit FirstBlock(block.number);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        142
Source: 
> 
>         player[lastId][msg.sender].commit = _hash;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        147
Source: 
>         if (counter == 39) {       
>             closed = true;
>             ^^^^^^^^^^^^^
>             uint temp = sub(block.number,elapsed);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        149
Source: 
>             uint temp = sub(block.number,elapsed);
>             timeout = add(temp,block.number);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             emit LastBlock(timeout);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        153
Source: 
>         
>         counter++;
>         ^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        258
Source: 
>                             uint8 temp = balancesById[lastId][19];
>                             balancesById[lastId][19] = 0;
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                             balancesById[lastId][0] += temp;  

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        259
Source: 
>                             balancesById[lastId][19] = 0;
>                             balancesById[lastId][0] += temp;  
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                             j = 0; 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        267
Source: 
>                             uint8 temp = balancesById[lastId][j];
>                             balancesById[lastId][j] = 0;
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                             balancesById[lastId][j + 1] += temp; 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        268
Source: 
>                             balancesById[lastId][j] = 0;
>                             balancesById[lastId][j + 1] += temp; 
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                             j += 1; 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        280
Source: 
>         // reset variables and start a new game.
>         closed = false;
>         ^^^^^^^^^^^^^^
>         if (timeout > 0) timeout = 0;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        281
Source: 
>         closed = false;
>         if (timeout > 0) timeout = 0;
>                          ^^^^^^^^^^^
>         elapsed = 0;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        282
Source: 
>         if (timeout > 0) timeout = 0;
>         elapsed = 0;
>         ^^^^^^^^^^^
>         // players that reveal are rewarded the ticket value of those

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        288
Source: 
>             uint among = sub(40,counter);
>             honour[lastId] = div(total,among);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             counter = 0;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        289
Source: 
>             honour[lastId] = div(total,among);
>             counter = 0;
>             ^^^^^^^^^^^
>         } 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UpsweepV1
Line:        291
Source: 
>         } 
>         lastId ++;
>         ^^^^^^^^^
>         emit NewId(lastId);

[0m

---------------------------------------------
For contract 0xa90249101da7cdf0bc01795b9609c37719075275.sol
Tool Runtime = 6.974622358000033 seconds
#############################################