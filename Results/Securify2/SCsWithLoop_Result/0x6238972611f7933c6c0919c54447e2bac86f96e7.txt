pragma directive defines a prior version to 0.5.12. Changing pragma version to 0.5.12....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CopaDelCrypto
Line:        52
Source: 
> 
>   function PlaceNewForecast(bytes32 f1, bytes32 f2, bytes32 f3, bytes12 f4)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public payable

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CopaDelCrypto
Line:        66
Source: 
> 
>   function UpdateForecast(bytes32 f1, bytes32 f2, bytes32 f3, bytes12 f4)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CopaDelCrypto
Line:        77
Source: 
> 
>   function CloseForecasting(uint16 exWinCount)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CopaDelCrypto
Line:        89
Source: 
> 
>   function PublishWorldCupResults(bytes32 res1, bytes32 res2, bytes32 res3, bytes12 res4)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CopaDelCrypto
Line:        105
Source: 
> 
>   function PublishWinnersScoreThres(uint16 scoreThres)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CopaDelCrypto
Line:        113
Source: 
> 
>   function VerifyPublishedResults(uint16 stepSize)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CopaDelCrypto
Line:        156
Source: 
> 
>   function WithdrawPrize()
>   ^^^^^^^^^^^^^^^^^^^^^^^^
>   public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CopaDelCrypto
Line:        182
Source: 
> 
>   function CancelGameAfterResultsPublished()
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CopaDelCrypto
Line:        191
Source: 
> 
>   function WithdrawUnclaimed()
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    CopaDelCrypto
Line:        89
Source: 
> 
>   function PublishWorldCupResults(bytes32 res1, bytes32 res2, bytes32 res3, bytes12 res4)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    CopaDelCrypto
Line:        105
Source: 
> 
>   function PublishWinnersScoreThres(uint16 scoreThres)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    CopaDelCrypto
Line:        302
Source: 
> 
>   function scoreGroups(bytes32 pred1, bytes32 pred2, bytes32 res1, bytes32 res2)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public pure

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    CopaDelCrypto
Line:        317
Source: 
> 
>   function scoreKnockouts(bytes32 pred2, bytes32 pred3, bytes12 pred4)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public view

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    CopaDelCrypto
Line:        52
Source: 
> 
>   function PlaceNewForecast(bytes32 f1, bytes32 f2, bytes32 f3, bytes12 f4)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public payable

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    CopaDelCrypto
Line:        66
Source: 
> 
>   function UpdateForecast(bytes32 f1, bytes32 f2, bytes32 f3, bytes12 f4)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    CopaDelCrypto
Line:        206
Source: 
> 
>   function getForecastData(bytes32 pred2, bytes32 pred3, bytes12 pred4, uint8 index)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public pure

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    CopaDelCrypto
Line:        264
Source: 
> 
>   function computeKnockoutPoints(uint8 pred, uint8 result, uint8 shootPred, uint8 shootResult,
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                                  uint8 roundFactorLeft, uint8 roundFactorRight, bool isInverted)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    CopaDelCrypto
Line:        364
Source: 
> 
>   function validateWinnersCount(uint32 winners, uint32 last, uint32 expected)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public pure

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    CopaDelCrypto
Line:        164
Source: 
>       forecasts[msg.sender].hasPaidOrWon = false;
>       if (!msg.sender.send(prizeValue)) {
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         forecasts[msg.sender].hasPaidOrWon = true;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CopaDelCrypto
Line:        52
Source: 
> 
>   function PlaceNewForecast(bytes32 f1, bytes32 f2, bytes32 f3, bytes12 f4)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public payable

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CopaDelCrypto
Line:        66
Source: 
> 
>   function UpdateForecast(bytes32 f1, bytes32 f2, bytes32 f3, bytes12 f4)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CopaDelCrypto
Line:        77
Source: 
> 
>   function CloseForecasting(uint16 exWinCount)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CopaDelCrypto
Line:        89
Source: 
> 
>   function PublishWorldCupResults(bytes32 res1, bytes32 res2, bytes32 res3, bytes12 res4)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CopaDelCrypto
Line:        105
Source: 
> 
>   function PublishWinnersScoreThres(uint16 scoreThres)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CopaDelCrypto
Line:        113
Source: 
> 
>   function VerifyPublishedResults(uint16 stepSize)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CopaDelCrypto
Line:        156
Source: 
> 
>   function WithdrawPrize()
>   ^^^^^^^^^^^^^^^^^^^^^^^^
>   public

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CopaDelCrypto
Line:        173
Source: 
> 
>   function CancelGame()
>   ^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CopaDelCrypto
Line:        182
Source: 
> 
>   function CancelGameAfterResultsPublished()
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CopaDelCrypto
Line:        191
Source: 
> 
>   function WithdrawUnclaimed()
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public onlyOwner

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    CopaDelCrypto
Line:        55
Source: 
>   {
>     require(!forecastingClosed && msg.value == 50000000000000000 && !forecasts[msg.sender].hasPaidOrWon);
>                                                ^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    CopaDelCrypto
Line:        164
Source: 
>       forecasts[msg.sender].hasPaidOrWon = false;
>       if (!msg.sender.send(prizeValue)) {
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         forecasts[msg.sender].hasPaidOrWon = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    CopaDelCrypto
Line:        199
Source: 
>     if (amount > 0) {
>       if (!msg.sender.send(amount)) {
>            ^^^^^^^^^^^^^^^^^^^^^^^
>         return false;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    CopaDelCrypto
Line:        164
Source: 
>       forecasts[msg.sender].hasPaidOrWon = false;
>       if (!msg.sender.send(prizeValue)) {
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         forecasts[msg.sender].hasPaidOrWon = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    CopaDelCrypto
Line:        199
Source: 
>     if (amount > 0) {
>       if (!msg.sender.send(amount)) {
>            ^^^^^^^^^^^^^^^^^^^^^^^
>         return false;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    CopaDelCrypto
Line:        130
Source: 
>       if (score >= publishedWinningScoreThreshold) {
>         wins++;
>         ^^^^
>         if (score == publishedWinningScoreThreshold) {

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    CopaDelCrypto
Line:        30
Source: 
> 
>   uint256 public prizeValue;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public resultsPublishedTime;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    CopaDelCrypto
Line:        31
Source: 
>   uint256 public prizeValue;
>   uint256 public resultsPublishedTime;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    CopaDelCrypto
Line:        33
Source: 
> 
>   bytes32 public worldCupResultPart1;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes32 public worldCupResultPart2;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    CopaDelCrypto
Line:        34
Source: 
>   bytes32 public worldCupResultPart1;
>   bytes32 public worldCupResultPart2;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes32 public worldCupResultPart3;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    CopaDelCrypto
Line:        35
Source: 
>   bytes32 public worldCupResultPart2;
>   bytes32 public worldCupResultPart3;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes12 public worldCupResultPart4;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    CopaDelCrypto
Line:        36
Source: 
>   bytes32 public worldCupResultPart3;
>   bytes12 public worldCupResultPart4;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    CopaDelCrypto
Line:        38
Source: 
> 
>   bool public forecastingClosed;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bool public resultsPublished;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    CopaDelCrypto
Line:        39
Source: 
>   bool public forecastingClosed;
>   bool public resultsPublished;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    CopaDelCrypto
Line:        41
Source: 
> 
>   uint32 public resultsValidationStep;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint32 public verifiedWinnersCount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    CopaDelCrypto
Line:        42
Source: 
>   uint32 public resultsValidationStep;
>   uint32 public verifiedWinnersCount;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint32 public verifiedWinnersLastCount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    CopaDelCrypto
Line:        43
Source: 
>   uint32 public verifiedWinnersCount;
>   uint32 public verifiedWinnersLastCount;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    CopaDelCrypto
Line:        45
Source: 
> 
>   uint16 public publishedWinningScoreThreshold;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint16 public expectedWinnersCount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    CopaDelCrypto
Line:        46
Source: 
>   uint16 public publishedWinningScoreThreshold;
>   uint16 public expectedWinnersCount;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    CopaDelCrypto
Line:        102
Source: 
>     verifiedWinnersLastCount = 0;
>     resultsPublishedTime = block.timestamp;
>                            ^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    CopaDelCrypto
Line:        178
Source: 
>     resultsPublished = true;
>     resultsPublishedTime = block.timestamp;
>                            ^^^^^^^^^^^^^^^
>     prizeValue = address(this).balance / players.length;

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    CopaDelCrypto
Line:        195
Source: 
>   {
>     require(resultsPublished && block.timestamp >= (resultsPublishedTime + 10 weeks));
>                                 ^^^^^^^^^^^^^^^
> 

[0m

---------------------------------------------
For contract 0x6238972611f7933c6c0919c54447e2bac86f96e7.sol
Tool Runtime = 21.475453216000005 seconds
#############################################