[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GemForRewardChecker
Line:        20
Source: 
> 
>     function addChecker(address checker) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(deployer == msg.sender, "addChecker/auth-error");

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    GemForRewardChecker
Line:        27
Source: 
>         for (uint256 i = 0; i < checkers.length; i++) {
>             (bool ret, ) = checkers[i].call(abi.encodeWithSignature("check(address)", gem));
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (ret) {

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    GemForRewardChecker
Line:        27
Source: 
>         for (uint256 i = 0; i < checkers.length; i++) {
>             (bool ret, ) = checkers[i].call(abi.encodeWithSignature("check(address)", gem));
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (ret) {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GemForRewardChecker
Line:        20
Source: 
> 
>     function addChecker(address checker) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(deployer == msg.sender, "addChecker/auth-error");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GemForRewardChecker
Line:        25
Source: 
> 
>     function check(address gem) external returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         for (uint256 i = 0; i < checkers.length; i++) {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    GemForRewardChecker
Line:        27
Source: 
>         for (uint256 i = 0; i < checkers.length; i++) {
>             (bool ret, ) = checkers[i].call(abi.encodeWithSignature("check(address)", gem));
>              ^^^^^^^^
>             if (ret) {

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        7
Source: 
> //pragma solidity >0.4.13 >=0.4.23 >=0.5.12 >=0.5.0 <0.6.0 >=0.5.10 <0.6.0 >=0.5.12 <0.6.0;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m

---------------------------------------------
For contract 0x096835f967D22EC35b78F887c3e9b936b84A3aF7.sol
Tool Runtime = 1.6894409450005696 seconds
#############################################