[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        201
Source: 
>         uint memPtr;
>         assembly {
>          ^^^^^^^^^
>             memPtr := add(self, 0x20)

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        227
Source: 
>         (uint rStartPos, uint len) = _decode(self);
>         assembly {
>          ^^^^^^^^^
>             data := div(mload(rStartPos), exp(256, sub(32, len)))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        242
Source: 
>         (uint rStartPos,) = _decode(self);
>         assembly {
>          ^^^^^^^^^
>             data := div(mload(rStartPos), exp(256, 12))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        278
Source: 
>         uint memPtr = self._unsafeMemPtr;
>         assembly {
>          ^^^^^^^^^
>             b0 := byte(0, mload(memPtr))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        297
Source: 
>         uint b0;
>         assembly {
>          ^^^^^^^^^
>             b0 := byte(0, mload(memPtr))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        314
Source: 
>         uint start = self._unsafeMemPtr;
>         assembly {
>          ^^^^^^^^^
>             b0 := byte(0, mload(start))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        327
Source: 
>             uint bLen;
>             assembly {
>              ^^^^^^^^^
>                 bLen := sub(b0, 0xB7) // DATA_LONG_OFFSET

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        358
Source: 
>         // we can write entire words, and just overwrite any excess.
>         assembly {
>          ^^^^^^^^^
>             {

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLPEncode
Line:        413
Source: 
>         bytes memory b;
>         assembly {
>          ^^^^^^^^^
>             let m := mload(0x40)

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLPEncode
Line:        516
Source: 
>         bytes memory b = new bytes(32);
>         assembly {
>          ^^^^^^^^^
>             mstore(add(b, 32), x)

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    BMT
Line:        582
Source: 
>     for (uint256 i = 32; i <= 32 * numElements; i += 32) {
>       assembly {
>        ^^^^^^^^^
>         proofElement := mload(add(proof, i))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Data
Line:        663
Source: 
>   function decodePos(uint _pos) internal pure returns (uint v1, uint v2) {
>     assembly {
>      ^^^^^^^^^
>       v1 := div(_pos, exp(2, 128))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Data
Line:        1078
Source: 
> 
>       assembly {
>        ^^^^^^^^^
>         v := mload(add(b, 0x20))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Address
Line:        1350
Source: 
>     // solium-disable-next-line security/no-inline-assembly
>     assembly { size := extcodesize(account) }
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return size > 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Layer2Storage
Line:        1367
Source: 
>    */
>   bool public development; // dev mode
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public operator;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Layer2Storage
Line:        1368
Source: 
>   bool public development; // dev mode
>   address public operator;
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public epochHandler;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Layer2Storage
Line:        1370
Source: 
>   address public epochHandler;
>   address public submitHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public etherToken;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Layer2Storage
Line:        1371
Source: 
>   address public submitHandler;
>   address public etherToken;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public seigManager;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Layer2Storage
Line:        1372
Source: 
>   address public etherToken;
>   address public seigManager;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Layer2Storage
Line:        1378
Source: 
>   // N NRBs are submitted or when preparing URBs submission.
>   uint public NRELength;
>    ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Layer2Storage
Line:        1381
Source: 
>   // Increase for each URB
>   uint public currentFork;
>    ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Layer2Storage
Line:        1406
Source: 
>   // Last applied request
>   uint public lastAppliedForkNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedEpochNumber;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Layer2Storage
Line:        1407
Source: 
>   uint public lastAppliedForkNumber;
>   uint public lastAppliedEpochNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedBlockNumber;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Layer2Storage
Line:        1408
Source: 
>   uint public lastAppliedEpochNumber;
>   uint public lastAppliedBlockNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Layer2Storage
Line:        1411
Source: 
>   // solium-disable mixedcase
>   uint public EROIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public ERUIdToFinalize;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Layer2Storage
Line:        1412
Source: 
>   uint public EROIdToFinalize;
>   uint public ERUIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable mixedcase

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    EpochHandler
Line:        1591
Source: 
>    */
>   function prepareToSubmitURB() public payable {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     Data.Fork storage cur = forks[currentFork];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    EpochHandler
Line:        1659
Source: 
>    */
>   function prepareORE() public payable {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     Data.Fork storage fork = forks[currentFork];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    EpochHandler
Line:        1811
Source: 
> 
>   function prepareOREAfterURE() public payable  {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     Data.Fork storage _f = forks[currentFork];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Locked Ether
Description: Contracts that may receive ether must also allow users to
             extract the deposited ether from the contract.
Type:        Violation
Contract:    EpochHandler
Line:        1576
Source: 
> 
> contract EpochHandler is Layer2Storage, Layer2Event {
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   using SafeMath for uint;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    RLP
Line:        241
Source: 
>     {
>         (uint rStartPos,) = _decode(self);
>           ^^^^^^^^^^^^^^
>         assembly {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Data
Line:        651
Source: 
>   // How many requests can be included in a single request block
>   function MAX_REQUESTS() internal pure returns (uint) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // TODO: use 100 in production mode

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Data
Line:        658
Source: 
>   // Timeout for URB submission
>   function URE_TIMEOUT() internal pure returns (uint) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return 1 hours;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1378
Source: 
>   // N NRBs are submitted or when preparing URBs submission.
>   uint public NRELength;
>    ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1389
Source: 
>   // Enter & Exit requests for ORB / URB
>   Data.Request[] public EROs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
>   Data.Request[] public ERUs;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1390
Source: 
>   Data.Request[] public EROs;
>   Data.Request[] public ERUs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1393
Source: 
>   // Consecutive request block. The fork where they are in is defined in Data.PlasmaBlock
>   Data.RequestBlock[] public ORBs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   Data.RequestBlock[] public URBs;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1394
Source: 
>   Data.RequestBlock[] public ORBs;
>   Data.RequestBlock[] public URBs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1411
Source: 
>   // solium-disable mixedcase
>   uint public EROIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public ERUIdToFinalize;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1412
Source: 
>   uint public EROIdToFinalize;
>   uint public ERUIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable mixedcase

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1459
Source: 
> 
>   bool public constant isLayer2 = true;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EpochHandler
Line:        1812
Source: 
>   function prepareOREAfterURE() public payable  {
>     Data.Fork storage _f = forks[currentFork];
>      ^^^^^^^^^^^^^^^^^^^^
>     bool isOREEmpty = _prepareOREAfterURE(_f, forks[currentFork.sub(1)], ORBs);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EpochHandler
Line:        1905
Source: 
>   function prepareNREAfterURE() public payable  {
>     Data.Fork storage _f = forks[currentFork];
>      ^^^^^^^^^^^^^^^^^^^^
>     bool isNREEmpty = _prepareNREAfterURE(_f, forks[currentFork.sub(1)]);

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        8
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        134
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        163
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        383
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        535
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        599
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        622
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1327
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1359
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1465
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1566
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>                                           ^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Layer2Storage
Line:        1457
Source: 
>   // Gas limit for request trasaction
>   uint public constant REQUEST_GAS = 100000;
>                                       ^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLP
Line:        204
Source: 
>         }
>         return RLPItem(memPtr, len);
>                         ^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLP
Line:        215
Source: 
>         uint idx;
>         while (idx < numItems) {
>                 ^^^
>             list[idx] = next(it);

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLP
Line:        252
Source: 
>         uint ptr = self._unsafeMemPtr + _payloadOffset(self);
>         it._unsafeItem = self;
>          ^^
>         it._unsafeNextPtr = ptr;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLP
Line:        260
Source: 
>         uint itemLength = _itemLength(ptr);
>         subItem._unsafeMemPtr = ptr;
>          ^^^^^^^
>         subItem._unsafeLength = itemLength;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLP
Line:        281
Source: 
>         }
>         if (b0 < DATA_SHORT_START)
>              ^^
>             return 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLP
Line:        300
Source: 
>         }
>         if (b0 < DATA_SHORT_START)
>              ^^
>             len = 1;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLP
Line:        317
Source: 
>         }
>         if (b0 < DATA_SHORT_START) {
>              ^^
>             memPtr = start;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLPEncode
Line:        419
Source: 
>         }
>         return encodeBytes(b);
>                             ^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    BMT
Line:        550
Source: 
> 
>     for (; i + 1 < level.length; i += 2) {
>             ^
>       nextLevel[i/2] = keccak256(abi.encodePacked(level[i], level[i+1]));

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    BMT
Line:        586
Source: 
>       if (index % 2 == 0) {
>         computedHash = keccak256(abi.encodePacked(computedHash, proofElement));
>                                                                  ^^^^^^^^^^^^
>       } else {

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Data
Line:        1068
Source: 
>   {
>     out.isExit = self.isExit;
>      ^^^
>     out.isTransfer = self.isTransfer;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Data
Line:        1136
Source: 
>   {
>     out.gasPrice = NA_TX_GAS_PRICE;
>      ^^^
>     out.gasLimit = uint64(NA_TX_GAS_LIMIT);

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Data
Line:        1270
Source: 
> 
>     r.status = uint64(items[0].toUint());
>      ^
>     r.cumulativeGasUsed = uint64(items[1].toUint());

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Address
Line:        1351
Source: 
>     assembly { size := extcodesize(account) }
>     return size > 0;
>             ^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Layer2Storage
Line:        1397
Source: 
>   // count enter requests for epoch
>   uint public numEnterForORB;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1367
Source: 
>    */
>   bool public development; // dev mode
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public operator;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1368
Source: 
>   bool public development; // dev mode
>   address public operator;
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public epochHandler;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1369
Source: 
>   address public operator;
>   address public epochHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public submitHandler;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1370
Source: 
>   address public epochHandler;
>   address public submitHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public etherToken;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1371
Source: 
>   address public submitHandler;
>   address public etherToken;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public seigManager;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1372
Source: 
>   address public etherToken;
>   address public seigManager;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1378
Source: 
>   // N NRBs are submitted or when preparing URBs submission.
>   uint public NRELength;
>    ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1381
Source: 
>   // Increase for each URB
>   uint public currentFork;
>    ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1397
Source: 
>   // count enter requests for epoch
>   uint public numEnterForORB;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1406
Source: 
>   // Last applied request
>   uint public lastAppliedForkNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedEpochNumber;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1407
Source: 
>   uint public lastAppliedForkNumber;
>   uint public lastAppliedEpochNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedBlockNumber;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1408
Source: 
>   uint public lastAppliedEpochNumber;
>   uint public lastAppliedBlockNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1411
Source: 
>   // solium-disable mixedcase
>   uint public EROIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public ERUIdToFinalize;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1412
Source: 
>   uint public EROIdToFinalize;
>   uint public ERUIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable mixedcase

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1367
Source: 
>    */
>   bool public development; // dev mode
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public operator;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1368
Source: 
>   bool public development; // dev mode
>   address public operator;
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public epochHandler;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1370
Source: 
>   address public epochHandler;
>   address public submitHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public etherToken;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1371
Source: 
>   address public submitHandler;
>   address public etherToken;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public seigManager;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1372
Source: 
>   address public etherToken;
>   address public seigManager;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1378
Source: 
>   // N NRBs are submitted or when preparing URBs submission.
>   uint public NRELength;
>    ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1381
Source: 
>   // Increase for each URB
>   uint public currentFork;
>    ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1406
Source: 
>   // Last applied request
>   uint public lastAppliedForkNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedEpochNumber;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1407
Source: 
>   uint public lastAppliedForkNumber;
>   uint public lastAppliedEpochNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedBlockNumber;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1408
Source: 
>   uint public lastAppliedEpochNumber;
>   uint public lastAppliedBlockNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1411
Source: 
>   // solium-disable mixedcase
>   uint public EROIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public ERUIdToFinalize;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1412
Source: 
>   uint public EROIdToFinalize;
>   uint public ERUIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable mixedcase

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1597
Source: 
> 
>     cur.forkedBlock = cur.lastFinalizedBlock + 1;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     next.firstBlock = cur.forkedBlock;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1598
Source: 
>     cur.forkedBlock = cur.lastFinalizedBlock + 1;
>     next.firstBlock = cur.forkedBlock;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     next.firstEpoch = cur.blocks[next.firstBlock].epochNumber;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1599
Source: 
>     next.firstBlock = cur.forkedBlock;
>     next.firstEpoch = cur.blocks[next.firstBlock].epochNumber;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1601
Source: 
> 
>     next.lastEpoch = next.firstEpoch;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     next.lastFinalizedBlock = cur.lastFinalizedBlock;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1602
Source: 
>     next.lastEpoch = next.firstEpoch;
>     next.lastFinalizedBlock = cur.lastFinalizedBlock;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     next.timestamp = uint64(block.timestamp);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1603
Source: 
>     next.lastFinalizedBlock = cur.lastFinalizedBlock;
>     next.timestamp = uint64(block.timestamp);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1608
Source: 
> 
>     epoch.initialized = true;
>      ^^^^^^^^^^^^^^^^^^^^^^^^
>     epoch.timestamp = uint64(block.timestamp);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1609
Source: 
>     epoch.initialized = true;
>     epoch.timestamp = uint64(block.timestamp);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     epoch.isRequest = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1610
Source: 
>     epoch.timestamp = uint64(block.timestamp);
>     epoch.isRequest = true;
>      ^^^^^^^^^^^^^^^^^^^^^^
>     epoch.userActivated = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1611
Source: 
>     epoch.isRequest = true;
>     epoch.userActivated = true;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1613
Source: 
> 
>     epoch.RE.requestStart = firstUAF ? 0 : cur.epochs[cur.firstEpoch].RE.requestEnd + 1;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     epoch.RE.requestEnd = uint64(ERUs.length - 1);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1614
Source: 
>     epoch.RE.requestStart = firstUAF ? 0 : cur.epochs[cur.firstEpoch].RE.requestEnd + 1;
>     epoch.RE.requestEnd = uint64(ERUs.length - 1);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1619
Source: 
>     uint64 numBlocks = uint64(Data.calcNumBlock(epoch.RE.requestStart, epoch.RE.requestEnd));
>     epoch.startBlockNumber = next.firstBlock;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     epoch.endBlockNumber = epoch.startBlockNumber

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1620
Source: 
>     epoch.startBlockNumber = next.firstBlock;
>     epoch.endBlockNumber = epoch.startBlockNumber
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       .add64(numBlocks)

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1624
Source: 
> 
>     epoch.RE.firstRequestBlockId = firstUAF ? 0 :
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       cur.epochs[cur.firstEpoch].RE.firstRequestBlockId

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1634
Source: 
>     for (uint64 i = 0; i < numBlocks; i++) {
>       next.blocks[epoch.startBlockNumber.add64(i)].isRequest = true;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       next.blocks[epoch.startBlockNumber.add64(i)].userActivated = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1635
Source: 
>       next.blocks[epoch.startBlockNumber.add64(i)].isRequest = true;
>       next.blocks[epoch.startBlockNumber.add64(i)].userActivated = true;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       next.blocks[epoch.startBlockNumber.add64(i)].requestBlockId = epoch.RE.firstRequestBlockId + i;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1636
Source: 
>       next.blocks[epoch.startBlockNumber.add64(i)].userActivated = true;
>       next.blocks[epoch.startBlockNumber.add64(i)].requestBlockId = epoch.RE.firstRequestBlockId + i;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1668
Source: 
> 
>     epoch.initialized = true;
>      ^^^^^^^^^^^^^^^^^^^^^^^^
>     epoch.timestamp = uint64(block.timestamp);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1669
Source: 
>     epoch.initialized = true;
>     epoch.timestamp = uint64(block.timestamp);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1671
Source: 
> 
>     nextRequestEpoch.isRequest = true;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     nextRequestEpoch.RE.numEnter = uint64(numEnterForORB);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1672
Source: 
>     nextRequestEpoch.isRequest = true;
>     nextRequestEpoch.RE.numEnter = uint64(numEnterForORB);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     numEnterForORB = 0;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1673
Source: 
>     nextRequestEpoch.RE.numEnter = uint64(numEnterForORB);
>     numEnterForORB = 0;
>      ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1680
Source: 
>         //       then fork.firstEnterEpoch > fork.lastEpoch
>         fork.firstEnterEpoch = epochNumber;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       } else {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1684
Source: 
>       }
>       fork.lastEnterEpoch = epochNumber;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1689
Source: 
>     if (firstFilledORENumber[currentFork] == 0 && !epoch.isEmpty) {
>       firstFilledORENumber[currentFork] = epochNumber;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1698
Source: 
>     if (epoch.isEmpty) {
>       epoch.startBlockNumber = fork.epochs[epochNumber - 1].endBlockNumber;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       epoch.endBlockNumber = epoch.startBlockNumber;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1699
Source: 
>       epoch.startBlockNumber = fork.epochs[epochNumber - 1].endBlockNumber;
>       epoch.endBlockNumber = epoch.startBlockNumber;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } else {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1707
Source: 
>     if (EROs.length == 0 || EROs.length - 1 == uint(epoch.RE.requestEnd)) {
>       nextRequestEpoch.isEmpty = true;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1713
Source: 
>       if (firstFilledORENumber[currentFork] == epochNumber && epoch.rebase) {
>         nextRequestEpoch.RE.requestStart = epoch.RE.requestEnd + 1;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         nextRequestEpoch.RE.firstRequestBlockId = epoch.RE.firstRequestBlockId + 1;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1714
Source: 
>         nextRequestEpoch.RE.requestStart = epoch.RE.requestEnd + 1;
>         nextRequestEpoch.RE.firstRequestBlockId = epoch.RE.firstRequestBlockId + 1;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       } else if (firstFilledORENumber[currentFork] == 0) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1737
Source: 
>       if (firstNonEmptyRequestEpoch[currentFork] == 0) {
>         firstNonEmptyRequestEpoch[currentFork] = epochNumber;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1742
Source: 
>       if (lastEpochNumber != 0) {
>         fork.epochs[lastEpochNumber].RE.nextEpoch = epochNumber;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1744
Source: 
>       }
>       lastNonEmptyRequestEpoch[currentFork] = epochNumber;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1749
Source: 
>     if (nextRequestEpoch.isEmpty) {
>       nextRequestEpoch.RE.requestEnd = nextRequestEpoch.RE.requestStart;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } else {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1772
Source: 
>     if (epoch.isEmpty) {
>       fork.lastEpoch = epochNumber;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       prepareNRE();

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1791
Source: 
> 
>     epoch.initialized = true;
>      ^^^^^^^^^^^^^^^^^^^^^^^^
>     epoch.timestamp = uint64(block.timestamp);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1792
Source: 
>     epoch.initialized = true;
>     epoch.timestamp = uint64(block.timestamp);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1794
Source: 
> 
>     epoch.startBlockNumber = uint64(startBlockNumber);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     epoch.endBlockNumber = uint64(startBlockNumber + NRELength - 1);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1795
Source: 
>     epoch.startBlockNumber = uint64(startBlockNumber);
>     epoch.endBlockNumber = uint64(startBlockNumber + NRELength - 1);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1751
Source: 
>     } else {
>       nextRequestEpoch.RE.requestEnd = uint64(EROs.length - 1);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1754
Source: 
>       // seal last ORB for next request epoch
>       ORBs[ORBs.length.sub(1)].submitted = true;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1716
Source: 
>       } else if (firstFilledORENumber[currentFork] == 0) {
>         nextRequestEpoch.RE.requestStart = epoch.RE.requestEnd;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         nextRequestEpoch.RE.firstRequestBlockId = epoch.RE.firstRequestBlockId;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1717
Source: 
>         nextRequestEpoch.RE.requestStart = epoch.RE.requestEnd;
>         nextRequestEpoch.RE.firstRequestBlockId = epoch.RE.firstRequestBlockId;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       } else if (!epoch.isEmpty) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1719
Source: 
>       } else if (!epoch.isEmpty) {
>         nextRequestEpoch.RE.requestStart = epoch.RE.requestEnd + 1;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         nextRequestEpoch.RE.firstRequestBlockId = epoch.RE.firstRequestBlockId + numBlocks;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1720
Source: 
>         nextRequestEpoch.RE.requestStart = epoch.RE.requestEnd + 1;
>         nextRequestEpoch.RE.firstRequestBlockId = epoch.RE.firstRequestBlockId + numBlocks;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       } else {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1722
Source: 
>       } else {
>         nextRequestEpoch.RE.requestStart = epoch.RE.requestEnd + 1;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         nextRequestEpoch.RE.firstRequestBlockId = epoch.RE.firstRequestBlockId + 1;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1723
Source: 
>         nextRequestEpoch.RE.requestStart = epoch.RE.requestEnd + 1;
>         nextRequestEpoch.RE.firstRequestBlockId = epoch.RE.firstRequestBlockId + 1;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1726
Source: 
>     } else {
>       nextRequestEpoch.RE.requestStart = epoch.RE.requestEnd;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1729
Source: 
>       if (!epoch.isEmpty) {
>         nextRequestEpoch.RE.firstRequestBlockId = epoch.RE.firstRequestBlockId + numBlocks - 1;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       } else {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1731
Source: 
>       } else {
>         nextRequestEpoch.RE.firstRequestBlockId = epoch.RE.firstRequestBlockId;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1701
Source: 
>     } else {
>       epoch.startBlockNumber = fork.epochs[epochNumber - 1].endBlockNumber.add64(1);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       epoch.endBlockNumber = uint64(epoch.startBlockNumber + numBlocks - 1);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1702
Source: 
>       epoch.startBlockNumber = fork.epochs[epochNumber - 1].endBlockNumber.add64(1);
>       epoch.endBlockNumber = uint64(epoch.startBlockNumber + numBlocks - 1);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1682
Source: 
>       } else {
>         fork.epochs[fork.lastEnterEpoch].RE.nextEnterEpoch = epochNumber;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1816
Source: 
>     if (!isOREEmpty) {
>       firstFilledORENumber[currentFork] = epochNumber;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1834
Source: 
>       // set end block number of ORE' because it is 0. see EpochPrepared event.
>       _f.epochs[epochNumber].endBlockNumber = _f.lastBlock;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       _f.lastEpoch = epochNumber;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1835
Source: 
>       _f.epochs[epochNumber].endBlockNumber = _f.lastBlock;
>       _f.lastEpoch = epochNumber;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1924
Source: 
>       // set end block number of NRE' because it is 0. see EpochPrepared event.
>       _f.epochs[epochNumber].endBlockNumber = _f.lastBlock;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       _f.lastEpoch = epochNumber;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1925
Source: 
>       _f.epochs[epochNumber].endBlockNumber = _f.lastBlock;
>       _f.lastEpoch = epochNumber;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^
>       _f.rebased = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1926
Source: 
>       _f.lastEpoch = epochNumber;
>       _f.rebased = true;
>        ^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        2032
Source: 
>     // set end block number of ORE' because it is 0. see EpochPrepared event.
>     _cur.epochs[_cur.lastEpoch].endBlockNumber = _cur.lastBlock;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        2041
Source: 
> 
>     epoch.initialized = true;
>      ^^^^^^^^^^^^^^^^^^^^^^^^
>     epoch.rebase = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        2042
Source: 
>     epoch.initialized = true;
>     epoch.rebase = true;
>      ^^^^^^^^^^^^^^^^^^^
>     epoch.timestamp = uint64(block.timestamp);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        2043
Source: 
>     epoch.rebase = true;
>     epoch.timestamp = uint64(block.timestamp);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        2051
Source: 
>     if (!_pre.epochs[previousNRENumber].initialized) {
>       epoch.startBlockNumber = _cur.lastBlock;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       epoch.endBlockNumber = _cur.lastBlock;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        2052
Source: 
>       epoch.startBlockNumber = _cur.lastBlock;
>       epoch.endBlockNumber = _cur.lastBlock;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       epoch.isEmpty = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        2053
Source: 
>       epoch.endBlockNumber = _cur.lastBlock;
>       epoch.isEmpty = true;
>        ^^^^^^^^^^^^^^^^^^^^
>       _cur.rebased = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        2054
Source: 
>       epoch.isEmpty = true;
>       _cur.rebased = true;
>        ^^^^^^^^^^^^^^^^^^^
>       return true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        2060
Source: 
> 
>     epoch.startBlockNumber = _cur.lastBlock.add64(1);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _cur.nextBlockToRebase = previousNRENumber == forkedEpochNumber ?

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        2061
Source: 
>     epoch.startBlockNumber = _cur.lastBlock.add64(1);
>     _cur.nextBlockToRebase = previousNRENumber == forkedEpochNumber ?
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       _pre.forkedBlock :

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1965
Source: 
> 
>     epoch.initialized = true;
>      ^^^^^^^^^^^^^^^^^^^^^^^^
>     epoch.isRequest = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1966
Source: 
>     epoch.initialized = true;
>     epoch.isRequest = true;
>      ^^^^^^^^^^^^^^^^^^^^^^
>     epoch.rebase = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1967
Source: 
>     epoch.isRequest = true;
>     epoch.rebase = true;
>      ^^^^^^^^^^^^^^^^^^^
>     epoch.timestamp = uint64(block.timestamp);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1968
Source: 
>     epoch.rebase = true;
>     epoch.timestamp = uint64(block.timestamp);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1975
Source: 
>     // find requestBlockId, start, end
>     (epoch.RE.firstRequestBlockId, epoch.RE.requestStart, epoch.RE.requestEnd) = _getLatestRequestInfo();
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1979
Source: 
>     if (!_pre.epochs[firstEpochNumber].initialized) {
>       epoch.isEmpty = true;
>        ^^^^^^^^^^^^^^^^^^^^
>       epoch.startBlockNumber = _cur.lastBlock;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1980
Source: 
>       epoch.isEmpty = true;
>       epoch.startBlockNumber = _cur.lastBlock;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       epoch.endBlockNumber = _cur.lastBlock;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1981
Source: 
>       epoch.startBlockNumber = _cur.lastBlock;
>       epoch.endBlockNumber = _cur.lastBlock;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1987
Source: 
> 
>     epoch.isEmpty = forkedEpochNumber > _pre.lastEnterEpoch;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1992
Source: 
>       // get ready to prepare NRE'
>       epoch.startBlockNumber = _cur.lastBlock;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       epoch.endBlockNumber = _cur.lastBlock;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        1993
Source: 
>       epoch.startBlockNumber = _cur.lastBlock;
>       epoch.endBlockNumber = _cur.lastBlock;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        2003
Source: 
> 
>     epoch.startBlockNumber = _cur.lastBlock.add64(1);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EpochHandler
Line:        2014
Source: 
> 
>     _cur.nextBlockToRebase = uint64(preBlockNumber);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        981
Source: 
>   function calcNumBlock(uint _rs, uint _re) internal pure returns (uint) {
>     return _re.sub(_rs).add(1).divCeil(MAX_REQUESTS());
>                                         ^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1051
Source: 
> 
>     return RequestableI(self.to).applyRequestInRootChain(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       self.isExit,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1268
Source: 
>   function toReceipt(bytes memory self) internal pure returns (Receipt memory r) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1279
Source: 
>   function toReceiptStatus(bytes memory self) internal pure returns (uint) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
>     return items[0].toUint();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        981
Source: 
>   function calcNumBlock(uint _rs, uint _re) internal pure returns (uint) {
>     return _re.sub(_rs).add(1).divCeil(MAX_REQUESTS());
>                                         ^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1051
Source: 
> 
>     return RequestableI(self.to).applyRequestInRootChain(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       self.isExit,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1268
Source: 
>   function toReceipt(bytes memory self) internal pure returns (Receipt memory r) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1279
Source: 
>   function toReceiptStatus(bytes memory self) internal pure returns (uint) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
>     return items[0].toUint();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1051
Source: 
> 
>     return RequestableI(self.to).applyRequestInRootChain(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       self.isExit,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1268
Source: 
>   function toReceipt(bytes memory self) internal pure returns (Receipt memory r) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1279
Source: 
>   function toReceiptStatus(bytes memory self) internal pure returns (uint) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
>     return items[0].toUint();

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1367
Source: 
>    */
>   bool public development; // dev mode
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public operator;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1368
Source: 
>   bool public development; // dev mode
>   address public operator;
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public epochHandler;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1369
Source: 
>   address public operator;
>   address public epochHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public submitHandler;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1370
Source: 
>   address public epochHandler;
>   address public submitHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public etherToken;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1371
Source: 
>   address public submitHandler;
>   address public etherToken;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public seigManager;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1372
Source: 
>   address public etherToken;
>   address public seigManager;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1378
Source: 
>   // N NRBs are submitted or when preparing URBs submission.
>   uint public NRELength;
>    ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1381
Source: 
>   // Increase for each URB
>   uint public currentFork;
>    ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1384
Source: 
>   // First not-empty request epochs of a fork
>   mapping (uint => uint) public firstFilledORENumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1386
Source: 
> 
>   mapping (uint => Data.Fork) public forks;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1389
Source: 
>   // Enter & Exit requests for ORB / URB
>   Data.Request[] public EROs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
>   Data.Request[] public ERUs;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1390
Source: 
>   Data.Request[] public EROs;
>   Data.Request[] public ERUs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1393
Source: 
>   // Consecutive request block. The fork where they are in is defined in Data.PlasmaBlock
>   Data.RequestBlock[] public ORBs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   Data.RequestBlock[] public URBs;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1394
Source: 
>   Data.RequestBlock[] public ORBs;
>   Data.RequestBlock[] public URBs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1397
Source: 
>   // count enter requests for epoch
>   uint public numEnterForORB;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1400
Source: 
>   // epoch number of last non-empty request epoch.
>   mapping(uint => uint) public lastNonEmptyRequestEpoch;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1403
Source: 
>   // epoch number of first non-empty request epoch.
>   mapping(uint => uint) public firstNonEmptyRequestEpoch;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1406
Source: 
>   // Last applied request
>   uint public lastAppliedForkNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedEpochNumber;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1407
Source: 
>   uint public lastAppliedForkNumber;
>   uint public lastAppliedEpochNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedBlockNumber;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1408
Source: 
>   uint public lastAppliedEpochNumber;
>   uint public lastAppliedBlockNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1411
Source: 
>   // solium-disable mixedcase
>   uint public EROIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public ERUIdToFinalize;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1412
Source: 
>   uint public EROIdToFinalize;
>   uint public ERUIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable mixedcase

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1419
Source: 
>   // Requestable contract address in child chain
>   mapping (address => address) public requestableContracts;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1424
Source: 
>    */
>   address constant public NULL_ADDRESS = 0x0000000000000000000000000000000000000000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1427
Source: 
>   // Cost parameters for development and test
>   uint public constant COST_ERO = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_ERU = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1428
Source: 
>   uint public constant COST_ERO = 0;
>   uint public constant COST_ERU = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_URB_PREPARE = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1429
Source: 
>   uint public constant COST_ERU = 0;
>   uint public constant COST_URB_PREPARE = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_URB = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1430
Source: 
>   uint public constant COST_URB_PREPARE = 0;
>   uint public constant COST_URB = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_ORB = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1431
Source: 
>   uint public constant COST_URB = 0;
>   uint public constant COST_ORB = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_NRB = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1432
Source: 
>   uint public constant COST_ORB = 0;
>   uint public constant COST_NRB = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant PREPARE_TIMEOUT = 60; // 60 sec for dev

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1433
Source: 
>   uint public constant COST_NRB = 0;
>   uint public constant PREPARE_TIMEOUT = 60; // 60 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1436
Source: 
>   // Challenge periods for computation and withholding
>   uint public constant CP_COMPUTATION = 15; // 15 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant CP_WITHHOLDING = 20; // 20 sec for dev

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1437
Source: 
>   uint public constant CP_COMPUTATION = 15; // 15 sec for dev
>   uint public constant CP_WITHHOLDING = 20; // 20 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant CP_EXIT = 10; // 10 sec for dev

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1438
Source: 
>   uint public constant CP_WITHHOLDING = 20; // 20 sec for dev
>   uint public constant CP_EXIT = 10; // 10 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1457
Source: 
>   // Gas limit for request trasaction
>   uint public constant REQUEST_GAS = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1459
Source: 
> 
>   bool public constant isLayer2 = true;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1367
Source: 
>    */
>   bool public development; // dev mode
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public operator;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1368
Source: 
>   bool public development; // dev mode
>   address public operator;
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public epochHandler;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1369
Source: 
>   address public operator;
>   address public epochHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public submitHandler;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1370
Source: 
>   address public epochHandler;
>   address public submitHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public etherToken;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1371
Source: 
>   address public submitHandler;
>   address public etherToken;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public seigManager;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1372
Source: 
>   address public etherToken;
>   address public seigManager;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1394
Source: 
>   Data.RequestBlock[] public ORBs;
>   Data.RequestBlock[] public URBs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1406
Source: 
>   // Last applied request
>   uint public lastAppliedForkNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedEpochNumber;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1407
Source: 
>   uint public lastAppliedForkNumber;
>   uint public lastAppliedEpochNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedBlockNumber;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1408
Source: 
>   uint public lastAppliedEpochNumber;
>   uint public lastAppliedBlockNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1411
Source: 
>   // solium-disable mixedcase
>   uint public EROIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public ERUIdToFinalize;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1412
Source: 
>   uint public EROIdToFinalize;
>   uint public ERUIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable mixedcase

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1419
Source: 
>   // Requestable contract address in child chain
>   mapping (address => address) public requestableContracts;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1424
Source: 
>    */
>   address constant public NULL_ADDRESS = 0x0000000000000000000000000000000000000000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1427
Source: 
>   // Cost parameters for development and test
>   uint public constant COST_ERO = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_ERU = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1428
Source: 
>   uint public constant COST_ERO = 0;
>   uint public constant COST_ERU = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_URB_PREPARE = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1429
Source: 
>   uint public constant COST_ERU = 0;
>   uint public constant COST_URB_PREPARE = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_URB = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1430
Source: 
>   uint public constant COST_URB_PREPARE = 0;
>   uint public constant COST_URB = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_ORB = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1431
Source: 
>   uint public constant COST_URB = 0;
>   uint public constant COST_ORB = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_NRB = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1432
Source: 
>   uint public constant COST_ORB = 0;
>   uint public constant COST_NRB = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant PREPARE_TIMEOUT = 60; // 60 sec for dev

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1433
Source: 
>   uint public constant COST_NRB = 0;
>   uint public constant PREPARE_TIMEOUT = 60; // 60 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1436
Source: 
>   // Challenge periods for computation and withholding
>   uint public constant CP_COMPUTATION = 15; // 15 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant CP_WITHHOLDING = 20; // 20 sec for dev

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1437
Source: 
>   uint public constant CP_COMPUTATION = 15; // 15 sec for dev
>   uint public constant CP_WITHHOLDING = 20; // 20 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant CP_EXIT = 10; // 10 sec for dev

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1438
Source: 
>   uint public constant CP_WITHHOLDING = 20; // 20 sec for dev
>   uint public constant CP_EXIT = 10; // 10 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1457
Source: 
>   // Gas limit for request trasaction
>   uint public constant REQUEST_GAS = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1459
Source: 
> 
>   bool public constant isLayer2 = true;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m

---------------------------------------------
For contract 0xf7c41056dabf08a82682f3a31fa04e427678ff55.sol
Tool Runtime = 36.236529576000066 seconds
#############################################