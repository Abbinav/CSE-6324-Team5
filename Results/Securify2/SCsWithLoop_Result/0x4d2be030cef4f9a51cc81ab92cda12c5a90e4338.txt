[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        160
Source: 
>     uint256 public totalBorrow;
>     uint256 public decimal = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public TOKEN_POOLS = "szUSDC";

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        161
Source: 
>     uint256 public decimal = 18;
>     string public TOKEN_POOLS = "szUSDC";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public startPools;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        172
Source: 
> 
>     uint256 oneYear = 365 days;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 hundred = 100 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        173
Source: 
>     uint256 oneYear = 365 days;
>     uint256 hundred = 100 ether;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        175
Source: 
> 
>     uint256 public version = 9;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public minimumTerm; // minimumDeposit Time;    

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        576
Source: 
> 
>   uint256 public SECPYEAR = 31536000;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Permissions
Line:        82
Source: 
>   function addPermit(address _addr) public onlyPermits{
>     require(permits[_addr] == false);
>             ^^^^^^^^^^^^^^^^^^^^^^^
>     permits[_addr] = true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        259
Source: 
>     
>         if(idxSize == 0){
>            ^^^^^^^^^^^^
>             DepositContract memory dep = DepositContract({

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        273
Source: 
>                 idx = depositIdxs[_from][i] - 1;
>                 if(deposits[idx].amount == 0){
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^
>                 deposits[idx].amount = amount;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        300
Source: 
>     function depositTokenTerm(address _from,uint256 amount,uint256 _term) public returns (bool){
>         require(msg.sender == _from || 
>                 ^^^^^^^^^^^^^^^^^^^
>         (permits[msg.sender] == true && stopAdminControl[_from] == false),"NO Permission to call this function");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        301
Source: 
>         require(msg.sender == _from || 
>         (permits[msg.sender] == true && stopAdminControl[_from] == false),"NO Permission to call this function");
>                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_term >= minimumTerm);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        327
Source: 
>     function depositSZTokenTerm(address _from,uint256 amount,uint256 _term) public returns (bool){
>         require(msg.sender == _from || 
>                 ^^^^^^^^^^^^^^^^^^^
>         (permits[msg.sender] == true && stopAdminControl[_from] == false),"NO Permission to call function");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        328
Source: 
>         require(msg.sender == _from || 
>         (permits[msg.sender] == true && stopAdminControl[_from] == false),"NO Permission to call function");
>                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_term >= minimumTerm,"TERM ERRIR");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        347
Source: 
>     function _withdraw(address _to,uint256 _amount) internal returns(uint256){
>         if(_amount == 0) return 0;
>            ^^^^^^^^^^^^
>       

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        404
Source: 
>     function withdrawPercent(address _to,uint256 percent) public returns(uint256){
>        require(msg.sender == _to || 
>                ^^^^^^^^^^^^^^^^^
>        (permits[msg.sender] == true && stopAdminControl[_to] == false),"No Permission to call");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        405
Source: 
>        require(msg.sender == _to || 
>        (permits[msg.sender] == true && stopAdminControl[_to] == false),"No Permission to call");
>                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        421
Source: 
>     function withdraw(address _to,uint256 amount) public returns(uint256){
>        require(msg.sender == _to || 
>                ^^^^^^^^^^^^^^^^^
>        (permits[msg.sender] == true && stopAdminControl[_to] == false),"No Permission to call");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        422
Source: 
>        require(msg.sender == _to || 
>        (permits[msg.sender] == true && stopAdminControl[_to] == false),"No Permission to call");
>                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        432
Source: 
>   function withdrawInterest(address _to) public returns(uint256){
>       require(msg.sender == _to || 
>               ^^^^^^^^^^^^^^^^^
>       (permits[msg.sender] == true && stopAdminControl[_to] == false),"No Permission to call");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        433
Source: 
>       require(msg.sender == _to || 
>       (permits[msg.sender] == true && stopAdminControl[_to] == false),"No Permission to call");
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(depositIdxs[_to].length > 0,"Not deposit");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        456
Source: 
>   function withdrawAll(address _to) public returns(uint256){
>       require(msg.sender == _to || 
>               ^^^^^^^^^^^^^^^^^
>       (permits[msg.sender] == true && stopAdminControl[_to] == false),"No Permission to call");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        457
Source: 
>       require(msg.sender == _to || 
>       (permits[msg.sender] == true && stopAdminControl[_to] == false),"No Permission to call");
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        469
Source: 
>   function withdrawStable(address _to,uint256 amount) public returns(bool){
>        require(msg.sender == _to || 
>                ^^^^^^^^^^^^^^^^^
>        (permits[msg.sender] == true && stopAdminControl[_to] == false),"NO Permission to call");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        470
Source: 
>        require(msg.sender == _to || 
>        (permits[msg.sender] == true && stopAdminControl[_to] == false),"NO Permission to call");
>                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        481
Source: 
>   function withdrawIntStable(address _to) public returns(bool){
>       require(msg.sender == _to || 
>               ^^^^^^^^^^^^^^^^^
>        (permits[msg.sender] == true && stopAdminControl[_to] == false));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        482
Source: 
>       require(msg.sender == _to || 
>        (permits[msg.sender] == true && stopAdminControl[_to] == false));
>                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        494
Source: 
>   function withdrawAllStable(address _to) public returns(bool){
>       require(msg.sender == _to || 
>               ^^^^^^^^^^^^^^^^^
>       (permits[msg.sender] == true && stopAdminControl[_to] == false),"NO Permission to call");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        495
Source: 
>       require(msg.sender == _to || 
>       (permits[msg.sender] == true && stopAdminControl[_to] == false),"NO Permission to call");
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       uint256 szGot =  withdrawAll(_to);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        506
Source: 
>    function withdrawPercentStable(address _to,uint256 percent) public returns(bool){
>        require(msg.sender == _to || 
>                ^^^^^^^^^^^^^^^^^
>        (permits[msg.sender] == true && stopAdminControl[_to] == false),"NO Permission to call");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        507
Source: 
>        require(msg.sender == _to || 
>        (permits[msg.sender] == true && stopAdminControl[_to] == false),"NO Permission to call");
>                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        12
Source: 
>   function mul(uint256 a, uint256 b,uint256 decimal) internal pure returns (uint256) {
>     if (a == 0) {
>         ^^^^^^
>       return 0;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        16
Source: 
>     uint256 c = a * b;
>     require(c / a == b,"MUL ERROR");
>             ^^^^^^^^^^
>     c = c / (10 ** decimal);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        595
Source: 
> 
>       if(borrows[idx].status == 0)
>          ^^^^^^^^^^^^^^^^^^^^^^^^
>       {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        623
Source: 
>       
>       if(totalSupplyNoDecimal == 0)
>          ^^^^^^^^^^^^^^^^^^^^^^^^^
>           return 0;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SpacePodsUSDC
Line:        698
Source: 
>         uint256 idx = conIdx - 1;
>         require(borrows[idx].status == 1);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Permissions
Line:        77
Source: 
> 
>   function isPermit(address _addr) public view returns(bool){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return permits[_addr];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Permissions
Line:        81
Source: 
> 
>   function addPermit(address _addr) public onlyPermits{
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(permits[_addr] == false);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Permissions
Line:        89
Source: 
> 
>   function removePermit(address _addr) public onlyPermits{
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(_addr != msg.sender);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Permissions
Line:        77
Source: 
> 
>   function isPermit(address _addr) public view returns(bool){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return permits[_addr];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Permissions
Line:        81
Source: 
> 
>   function addPermit(address _addr) public onlyPermits{
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(permits[_addr] == false);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Permissions
Line:        89
Source: 
> 
>   function removePermit(address _addr) public onlyPermits{
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(_addr != msg.sender);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        192
Source: 
>     
>     function setPoolHardcap(uint256 amount) public onlyPermits{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(amount > totalSupply,"CAN'T SET BELOW TOTALSUPPLY");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        196
Source: 
>     }
>     function getMaxInterestData() public view returns(uint256){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          return interests.length;    

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        202
Source: 
>     // normmaly this contract not recieve dai
>     function withdrawStupidUser(uint256 amount,address _contract,address _to) public onlyPermits{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(_contract != address(token),"Can't Withdraw SZUSDC"); 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        208
Source: 
>   
>     function setMinimumDeposit(uint256 _min) public onlyPermits{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         minimumTerm = _min;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        213
Source: 
> 
>     function setProfitCal(address _addr) public onlyPermits{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         profitCal = ProfitCal(_addr);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        225
Source: 
> 
>     function setCatToken(address _addr) public onlyPermits{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         catToken = ERC20(_addr);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        242
Source: 
> 
>     function getInterestProfit(address _addr) public view returns(uint256){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return profitCal.getInterest(address(this),_addr);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        246
Source: 
>   
>     function setAdminControl(bool _set) public{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         stopAdminControl[msg.sender] = _set;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        294
Source: 
> 
>     function depositToken(address _from,uint256 amount) public returns (bool){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return depositTokenTerm(_from,amount,minimumTerm);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        322
Source: 
>   
>     function depositSZToken(address _from,uint256 amount) public returns (bool){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return depositSZTokenTerm(_from,amount,minimumTerm);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        468
Source: 
>   
>   function withdrawStable(address _to,uint256 amount) public returns(bool){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        require(msg.sender == _to || 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        480
Source: 
> 
>   function withdrawIntStable(address _to) public returns(bool){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(msg.sender == _to || 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        493
Source: 
> 
>   function withdrawAllStable(address _to) public returns(bool){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(msg.sender == _to || 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        505
Source: 
>     }
>    function withdrawPercentStable(address _to,uint256 percent) public returns(bool){
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        require(msg.sender == _to || 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        521
Source: 
> //============ All About contract ==============
>   function maxContracBorrow() public view returns(uint256){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return contracts[msg.sender].length;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        525
Source: 
> 
>   function getContractBorrow() public view returns(uint256[] memory cons){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 leng = contracts[msg.sender].length;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        532
Source: 
>   
>   function getMaxDeposit() public view returns(uint256){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return deposits.length;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        536
Source: 
>   
>   function getDepositDataIdx(uint256 idx) public view returns(uint256[] memory _data){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(idx >=0 && idx < deposits.length);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        545
Source: 
>   
>   function getMaxDepositContract(address _addr) public view returns(uint256 _max){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return depositIdxs[_addr].length;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        549
Source: 
>   
>   function getAllDepositIdx(address _addr) public view returns(uint256[] memory _idx){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        557
Source: 
>   
>   function getMaxBorrowContract() public view returns(uint256){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return borrows.length;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        561
Source: 
> 
>   function getBorrowData(uint256 condIdx) public view returns(uint256[] memory _data){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(condIdx <= borrows.length && condIdx > 0,"Error not have this idx");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        619
Source: 
> 
>   function supplyInterest() public view returns(uint256){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       uint256 supInt;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        664
Source: 
> 
>   function borrow(uint256 amount) public returns(uint256 contractID){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _borrow(amount,msg.sender);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        669
Source: 
> 
>   function borrowWithAddr(uint256 amount,address _addr)public onlyPermits returns(uint256 contractID){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _borrow(amount,_addr);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        766
Source: 
>  
>   function rePaymentWithWrap(uint256 amount,uint256 conIdx,address _addr) public onlyPermits returns(bool){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return _rePayment(amount,conIdx,_addr,true);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SpacePodsUSDC
Line:        770
Source: 
> 
>   function rePayment(uint256 amount,uint256 conIdx) public returns(bool){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return _rePayment(amount,conIdx,msg.sender,false);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        205
Source: 
>       ERC20  stupid = ERC20(_contract);
>       stupid.transfer(_to,amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        243
Source: 
>     function getInterestProfit(address _addr) public view returns(uint256){
>         return profitCal.getInterest(address(this),_addr);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        311
Source: 
>       
>         if(token.deposit(_from,amount) == false)
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             return false;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        314
Source: 
>       
>        if(token.intTransfer(_from,address(this),amount * (10 ** 12)) == true){
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _depositContract(_from,amount * (10 ** 12),_term);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        337
Source: 
>             
>        if(token.intTransfer(_from,address(this),amount) == true){
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _depositContract(_from,amount,_term);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        349
Source: 
>       
>         uint256 interest =  profitCal.getWithdrawInterest(address(this),_to);
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 idxSize = depositIdxs[_to].length;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        365
Source: 
>             require(interest <= loanBalance(),"ERROR01 Insuffician Fund to withdraw");
>             token.transfer(_to,interest);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             token.transfer(_to,0);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        366
Source: 
>             token.transfer(_to,interest);
>             token.transfer(_to,0);
>             ^^^^^^^^^^^^^^^^^^^^^
>             totalSupply -= interest;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        398
Source: 
>                 token.transfer(_to,interest);
>                 token.transfer(_to,principle);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                  return interest + principle;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        410
Source: 
>        uint256 amount = balance[_to];
>        uint256 interest =  profitCal.getInterest(address(this),_to);
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        437
Source: 
>       
>       uint256 amount =  profitCal.getWithdrawInterest(address(this),_to);
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       uint256 idxSize = depositIdxs[_to].length;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        461
Source: 
> 
>       uint256 interest =  profitCal.getWithdrawInterest(address(this),_to);
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(balance[_to] + interest <= loanBalance());

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        474
Source: 
>        if(szGot > 0){
>          token.withdrawInternal(msg.sender,szGot);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          return true;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        486
Source: 
>       if(szGot > 0){
>         token.withdrawInternal(_to,szGot);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        499
Source: 
>       if(szGot > 0){
>          token.withdrawInternal(_to,szGot);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          return true;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        512
Source: 
>         if(szGot > 0){
>            token.withdrawInternal(_to,szGot);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>            return true;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        639
Source: 
>       amount  = (amount / (10 ** 18)) * (10 ** 18);
>       require(amount <= catToken.balanceOf(_addr),"not enought CAT Token");
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^
>       uint256 amountStable = (amount / (10 ** 18)) * (10 ** decimal);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        655
Source: 
>       contracts[_addr].push(idx);
>       catToken.intTransfer(_addr,address(this),amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       token.transfer(_addr,amountStable);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        656
Source: 
>       catToken.intTransfer(_addr,address(this),amount);
>       token.transfer(_addr,amountStable);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       totalBorrow += amountStable;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        709
Source: 
>             if(wrap == true)
>               token.intTransfer(_addr,address(this),amount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             else

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        725
Source: 
> 
>             catToken.transfer(_addr,catReturn);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           //  _shareInterest(interest);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        711
Source: 
>             else
>               token.transferFrom(_addr,address(this),amount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        732
Source: 
>        //    if(wrap == true)
>             token.intTransfer(_addr,address(this),amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //       else

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        749
Source: 
> 
>               catToken.transfer(_addr,catReturn);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          //     _shareInterest(interest);

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        397
Source: 
>                 balance[_to] -= principle;
>                 token.transfer(_to,interest);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 token.transfer(_to,principle);

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        450
Source: 
>       totalClaimInterest += amount;
>       token.transfer(_to,amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return amount;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        202
Source: 
>     // normmaly this contract not recieve dai
>     function withdrawStupidUser(uint256 amount,address _contract,address _to) public onlyPermits{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(_contract != address(token),"Can't Withdraw SZUSDC"); 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        208
Source: 
>   
>     function setMinimumDeposit(uint256 _min) public onlyPermits{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         minimumTerm = _min;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        242
Source: 
> 
>     function getInterestProfit(address _addr) public view returns(uint256){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return profitCal.getInterest(address(this),_addr);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        294
Source: 
> 
>     function depositToken(address _from,uint256 amount) public returns (bool){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return depositTokenTerm(_from,amount,minimumTerm);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        322
Source: 
>   
>     function depositSZToken(address _from,uint256 amount) public returns (bool){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return depositSZTokenTerm(_from,amount,minimumTerm);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        468
Source: 
>   
>   function withdrawStable(address _to,uint256 amount) public returns(bool){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        require(msg.sender == _to || 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        505
Source: 
>     }
>    function withdrawPercentStable(address _to,uint256 percent) public returns(bool){
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        require(msg.sender == _to || 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        664
Source: 
> 
>   function borrow(uint256 amount) public returns(uint256 contractID){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _borrow(amount,msg.sender);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        669
Source: 
> 
>   function borrowWithAddr(uint256 amount,address _addr)public onlyPermits returns(uint256 contractID){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _borrow(amount,_addr);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        766
Source: 
>  
>   function rePaymentWithWrap(uint256 amount,uint256 conIdx,address _addr) public onlyPermits returns(bool){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return _rePayment(amount,conIdx,_addr,true);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        770
Source: 
> 
>   function rePayment(uint256 amount,uint256 conIdx) public returns(bool){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return _rePayment(amount,conIdx,msg.sender,false);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Permissions
Line:        77
Source: 
> 
>   function isPermit(address _addr) public view returns(bool){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return permits[_addr];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        213
Source: 
> 
>     function setProfitCal(address _addr) public onlyPermits{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         profitCal = ProfitCal(_addr);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        225
Source: 
> 
>     function setCatToken(address _addr) public onlyPermits{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         catToken = ERC20(_addr);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        229
Source: 
> 
>     function setBorrowInterest(uint256 _newInterst) public onlyPermits{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>      

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        246
Source: 
>   
>     function setAdminControl(bool _set) public{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         stopAdminControl[msg.sender] = _set;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        536
Source: 
>   
>   function getDepositDataIdx(uint256 idx) public view returns(uint256[] memory _data){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(idx >=0 && idx < deposits.length);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        545
Source: 
>   
>   function getMaxDepositContract(address _addr) public view returns(uint256 _max){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return depositIdxs[_addr].length;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        549
Source: 
>   
>   function getAllDepositIdx(address _addr) public view returns(uint256[] memory _idx){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        561
Source: 
> 
>   function getBorrowData(uint256 condIdx) public view returns(uint256[] memory _data){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(condIdx <= borrows.length && condIdx > 0,"Error not have this idx");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SpacePodsUSDC
Line:        314
Source: 
>       
>        if(token.intTransfer(_from,address(this),amount * (10 ** 12)) == true){
>                                                 ^^^^^^^^^^^^^^^^^^^
>             _depositContract(_from,amount * (10 ** 12),_term);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SpacePodsUSDC
Line:        315
Source: 
>        if(token.intTransfer(_from,address(this),amount * (10 ** 12)) == true){
>             _depositContract(_from,amount * (10 ** 12),_term);
>                                    ^^^^^^^^^^^^^^^^^^^
>             return true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SpacePodsUSDC
Line:        413
Source: 
>        amount += interest;
>        amount = amount * percent / 100;
>                 ^^^^^^^^^^^^^^^^
>        require(loanBalance() >= amount,"Not enouth FUND to withdraw");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SpacePodsUSDC
Line:        583
Source: 
>       fullInt = _intPY / SECPYEAR / 100;
>       fullInt = (fullInt * _time); //fullInt.mul(_amount,decimal);
>                  ^^^^^^^^^^^^^^^
>       fullInt = fullInt.mul(_amount,decimal);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SafeMath
Line:        15
Source: 
>     }
>     uint256 c = a * b;
>                 ^^^^^
>     require(c / a == b,"MUL ERROR");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SpacePodsUSDC
Line:        627
Source: 
>       {
>           supInt =  (totalInterest * 100) / totalSupplyNoDecimal;
>                      ^^^^^^^^^^^^^^^^^^^
>       

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SpacePodsUSDC
Line:        638
Source: 
>   function _borrow(uint256 amount,address _addr) internal returns(uint256 contractID){
>       amount  = (amount / (10 ** 18)) * (10 ** 18);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(amount <= catToken.balanceOf(_addr),"not enought CAT Token");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SpacePodsUSDC
Line:        640
Source: 
>       require(amount <= catToken.balanceOf(_addr),"not enought CAT Token");
>       uint256 amountStable = (amount / (10 ** 18)) * (10 ** decimal);
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(amountStable <= totalSupply - totalBorrow,"Not have fund to borrw");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SpacePodsUSDC
Line:        744
Source: 
>               if(decimal < 18)
>                 catReturn = principle * (10 ** (18 - decimal));
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>               else

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SpacePodsUSDC
Line:        349
Source: 
>       
>         uint256 interest =  profitCal.getWithdrawInterest(address(this),_to);
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 idxSize = depositIdxs[_to].length;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SpacePodsUSDC
Line:        365
Source: 
>             require(interest <= loanBalance(),"ERROR01 Insuffician Fund to withdraw");
>             token.transfer(_to,interest);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             token.transfer(_to,0);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SpacePodsUSDC
Line:        366
Source: 
>             token.transfer(_to,interest);
>             token.transfer(_to,0);
>             ^^^^^^^^^^^^^^^^^^^^^
>             totalSupply -= interest;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SpacePodsUSDC
Line:        397
Source: 
>                 balance[_to] -= principle;
>                 token.transfer(_to,interest);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 token.transfer(_to,principle);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SpacePodsUSDC
Line:        398
Source: 
>                 token.transfer(_to,interest);
>                 token.transfer(_to,principle);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                  return interest + principle;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SpacePodsUSDC
Line:        639
Source: 
>       amount  = (amount / (10 ** 18)) * (10 ** 18);
>       require(amount <= catToken.balanceOf(_addr),"not enought CAT Token");
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^
>       uint256 amountStable = (amount / (10 ** 18)) * (10 ** decimal);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SpacePodsUSDC
Line:        655
Source: 
>       contracts[_addr].push(idx);
>       catToken.intTransfer(_addr,address(this),amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       token.transfer(_addr,amountStable);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SpacePodsUSDC
Line:        656
Source: 
>       catToken.intTransfer(_addr,address(this),amount);
>       token.transfer(_addr,amountStable);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       totalBorrow += amountStable;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SpacePodsUSDC
Line:        709
Source: 
>             if(wrap == true)
>               token.intTransfer(_addr,address(this),amount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             else

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SpacePodsUSDC
Line:        725
Source: 
> 
>             catToken.transfer(_addr,catReturn);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           //  _shareInterest(interest);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SpacePodsUSDC
Line:        711
Source: 
>             else
>               token.transferFrom(_addr,address(this),amount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SpacePodsUSDC
Line:        732
Source: 
>        //    if(wrap == true)
>             token.intTransfer(_addr,address(this),amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //       else

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SpacePodsUSDC
Line:        749
Source: 
> 
>               catToken.transfer(_addr,catReturn);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          //     _shareInterest(interest);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        231
Source: 
>      
>         InterestStruct memory _interest = InterestStruct({
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                         startTime:now,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        161
Source: 
>     uint256 public decimal = 18;
>     string public TOKEN_POOLS = "szUSDC";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public startPools;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        163
Source: 
>     uint256 public startPools;
>     uint256 public POOL_HARDCAP;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        231
Source: 
>      
>         InterestStruct memory _interest = InterestStruct({
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                         startTime:now,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        576
Source: 
> 
>   uint256 public SECPYEAR = 31536000;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity ^0.5.17;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Permissions
Line:        60
Source: 
>   mapping (address=>bool) public permits;
>   bool allPermit;
>   ^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpacePodsUSDC
Line:        145
Source: 
> 
>     BorrowContract[] borrows;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     DepositContract[]  deposits;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpacePodsUSDC
Line:        146
Source: 
>     BorrowContract[] borrows;
>     DepositContract[]  deposits;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     InterestStruct[] public interests;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpacePodsUSDC
Line:        149
Source: 
> 
>     mapping (address=>uint256[]) contracts;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping (address=>uint256[]) depositIdxs; // all index

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpacePodsUSDC
Line:        150
Source: 
>     mapping (address=>uint256[]) contracts;
>     mapping (address=>uint256[]) depositIdxs; // all index
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping (address=>bool) stopAdminControl; // default false;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpacePodsUSDC
Line:        151
Source: 
>     mapping (address=>uint256[]) depositIdxs; // all index
>     mapping (address=>bool) stopAdminControl; // default false;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpacePodsUSDC
Line:        172
Source: 
> 
>     uint256 oneYear = 365 days;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 hundred = 100 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpacePodsUSDC
Line:        173
Source: 
>     uint256 oneYear = 365 days;
>     uint256 hundred = 100 ether;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        188
Source: 
>         minimumTerm = 30 days;
>         POOL_HARDCAP = 1000000 ether;
>                        ^^^^^^^^^^^^^
>         setBorrowInterest(10 ether);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        311
Source: 
>       
>         if(token.deposit(_from,amount) == false)
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             return false;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        314
Source: 
>       
>        if(token.intTransfer(_from,address(this),amount * (10 ** 12)) == true){
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _depositContract(_from,amount * (10 ** 12),_term);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        337
Source: 
>             
>        if(token.intTransfer(_from,address(this),amount) == true){
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _depositContract(_from,amount,_term);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        349
Source: 
>       
>         uint256 interest =  profitCal.getWithdrawInterest(address(this),_to);
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 idxSize = depositIdxs[_to].length;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        410
Source: 
>        uint256 amount = balance[_to];
>        uint256 interest =  profitCal.getInterest(address(this),_to);
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        437
Source: 
>       
>       uint256 amount =  profitCal.getWithdrawInterest(address(this),_to);
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       uint256 idxSize = depositIdxs[_to].length;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        461
Source: 
> 
>       uint256 interest =  profitCal.getWithdrawInterest(address(this),_to);
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(balance[_to] + interest <= loanBalance());

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        639
Source: 
>       amount  = (amount / (10 ** 18)) * (10 ** 18);
>       require(amount <= catToken.balanceOf(_addr),"not enought CAT Token");
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^
>       uint256 amountStable = (amount / (10 ** 18)) * (10 ** decimal);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        205
Source: 
>       ERC20  stupid = ERC20(_contract);
>       stupid.transfer(_to,amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        243
Source: 
>     function getInterestProfit(address _addr) public view returns(uint256){
>         return profitCal.getInterest(address(this),_addr);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        365
Source: 
>             require(interest <= loanBalance(),"ERROR01 Insuffician Fund to withdraw");
>             token.transfer(_to,interest);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             token.transfer(_to,0);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        366
Source: 
>             token.transfer(_to,interest);
>             token.transfer(_to,0);
>             ^^^^^^^^^^^^^^^^^^^^^
>             totalSupply -= interest;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        397
Source: 
>                 balance[_to] -= principle;
>                 token.transfer(_to,interest);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 token.transfer(_to,principle);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        398
Source: 
>                 token.transfer(_to,interest);
>                 token.transfer(_to,principle);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                  return interest + principle;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        450
Source: 
>       totalClaimInterest += amount;
>       token.transfer(_to,amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return amount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        474
Source: 
>        if(szGot > 0){
>          token.withdrawInternal(msg.sender,szGot);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          return true;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        486
Source: 
>       if(szGot > 0){
>         token.withdrawInternal(_to,szGot);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        499
Source: 
>       if(szGot > 0){
>          token.withdrawInternal(_to,szGot);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          return true;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        512
Source: 
>         if(szGot > 0){
>            token.withdrawInternal(_to,szGot);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>            return true;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        655
Source: 
>       contracts[_addr].push(idx);
>       catToken.intTransfer(_addr,address(this),amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       token.transfer(_addr,amountStable);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        656
Source: 
>       catToken.intTransfer(_addr,address(this),amount);
>       token.transfer(_addr,amountStable);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       totalBorrow += amountStable;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        709
Source: 
>             if(wrap == true)
>               token.intTransfer(_addr,address(this),amount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             else

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        725
Source: 
> 
>             catToken.transfer(_addr,catReturn);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           //  _shareInterest(interest);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        711
Source: 
>             else
>               token.transferFrom(_addr,address(this),amount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        732
Source: 
>        //    if(wrap == true)
>             token.intTransfer(_addr,address(this),amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //       else

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        749
Source: 
> 
>               catToken.transfer(_addr,catReturn);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          //     _shareInterest(interest);

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        155
Source: 
>     uint256 public borrowInterest;
>     uint256 public totalInterest;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public totalClaimInterest;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        156
Source: 
>     uint256 public totalInterest;
>     uint256 public totalClaimInterest;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // uint256 public supplyInterest;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        158
Source: 
>     // uint256 public supplyInterest;
>     uint256 public totalSupply;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public totalBorrow;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        159
Source: 
>     uint256 public totalSupply;
>     uint256 public totalBorrow;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public decimal = 18;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        252
Source: 
>         require(amount <= POOL_HARDCAP - totalSupply,"THIS POOL NOT ALLOW TO DEPOSIT THIS TIME");
>         balance[_from] += amount;
>         ^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Deposit(_from,amount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        254
Source: 
>         emit Deposit(_from,amount);
>         totalSupply += amount;
>         ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        265
Source: 
>             });
>             idx = deposits.push(dep);
>                   ^^^^^^^^^^^^^^^^^^
>             depositIdxs[_from].push(idx);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        266
Source: 
>             idx = deposits.push(dep);
>             depositIdxs[_from].push(idx);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        274
Source: 
>                 if(deposits[idx].amount == 0){
>                 deposits[idx].amount = amount;
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 deposits[idx].lastDeposit = now;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        275
Source: 
>                 deposits[idx].amount = amount;
>                 deposits[idx].lastDeposit = now;
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 return;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        287
Source: 
>         });
>         idx = deposits.push(dep);
>               ^^^^^^^^^^^^^^^^^^
>         depositIdxs[_from].push(idx);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        288
Source: 
>         idx = deposits.push(dep);
>         depositIdxs[_from].push(idx);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>      

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        358
Source: 
>             if(deposits[idx].amount > 0)
>                 deposits[idx].lastDeposit = now;
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        361
Source: 
>     
>         totalClaimInterest += interest;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        367
Source: 
>             token.transfer(_to,0);
>             totalSupply -= interest;
>             ^^^^^^^^^^^^^^^^^^^^^^^
>             return interest;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        386
Source: 
>                     tempPrinciple -=deposits[idx].amount;
>                     deposits[idx].amount = 0;
>                     ^^^^^^^^^^^^^^^^^^^^^^^^
>                 }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        390
Source: 
>                 {
>                     deposits[idx].amount -= tempPrinciple;
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                     tempPrinciple = 0;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        395
Source: 
>             }
>                 totalSupply -= principle + interest;
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 balance[_to] -= principle;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        396
Source: 
>                 totalSupply -= principle + interest;
>                 balance[_to] -= principle;
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^
>                 token.transfer(_to,interest);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        653
Source: 
> 
>       uint256 idx = borrows.push(br);
>                     ^^^^^^^^^^^^^^^^
>       contracts[_addr].push(idx);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        654
Source: 
>       uint256 idx = borrows.push(br);
>       contracts[_addr].push(idx);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^
>       catToken.intTransfer(_addr,address(this),amount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        657
Source: 
>       token.transfer(_addr,amountStable);
>       totalBorrow += amountStable;
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        715
Source: 
> 
>             borrows[idx].interestPay += interest;
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             borrows[idx].repayAmount += principle;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        716
Source: 
>             borrows[idx].interestPay += interest;
>             borrows[idx].repayAmount += principle;
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             totalInterest += interest;  

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        717
Source: 
>             borrows[idx].repayAmount += principle;
>             totalInterest += interest;  
>             ^^^^^^^^^^^^^^^^^^^^^^^^^
>             totalBorrow -= principle;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        718
Source: 
>             totalInterest += interest;  
>             totalBorrow -= principle;
>             ^^^^^^^^^^^^^^^^^^^^^^^^
>             // if(decimal < 18)

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        727
Source: 
>           //  _shareInterest(interest);
>             borrows[idx].time = now;
>             ^^^^^^^^^^^^^^^^^^^^^^^
>             return true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        739
Source: 
>               principle = amount - interest;
>               borrows[idx].interestPay += interest;
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>               borrows[idx].repayAmount += principle;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        740
Source: 
>               borrows[idx].interestPay += interest;
>               borrows[idx].repayAmount += principle;
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>               totalInterest += interest;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        741
Source: 
>               borrows[idx].repayAmount += principle;
>               totalInterest += interest;
>               ^^^^^^^^^^^^^^^^^^^^^^^^^
>               totalBorrow -= principle;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        742
Source: 
>               totalInterest += interest;
>               totalBorrow -= principle;
>               ^^^^^^^^^^^^^^^^^^^^^^^^
>               if(decimal < 18)

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        751
Source: 
>          //     _shareInterest(interest);
>                borrows[idx].time = now;
>                ^^^^^^^^^^^^^^^^^^^^^^^
>               return true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        756
Source: 
>            {
>               borrows[idx].interestPay += amount;
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>               totalInterest += amount;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        757
Source: 
>               borrows[idx].interestPay += amount;
>               totalInterest += amount;
>               ^^^^^^^^^^^^^^^^^^^^^^^
>           //    _shareInterest(amount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SpacePodsUSDC
Line:        759
Source: 
>           //    _shareInterest(amount);
>                borrows[idx].time = now;
>                ^^^^^^^^^^^^^^^^^^^^^^^
>               return true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        205
Source: 
>       ERC20  stupid = ERC20(_contract);
>       stupid.transfer(_to,amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        365
Source: 
>             require(interest <= loanBalance(),"ERROR01 Insuffician Fund to withdraw");
>             token.transfer(_to,interest);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             token.transfer(_to,0);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        366
Source: 
>             token.transfer(_to,interest);
>             token.transfer(_to,0);
>             ^^^^^^^^^^^^^^^^^^^^^
>             totalSupply -= interest;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        397
Source: 
>                 balance[_to] -= principle;
>                 token.transfer(_to,interest);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 token.transfer(_to,principle);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        398
Source: 
>                 token.transfer(_to,interest);
>                 token.transfer(_to,principle);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                  return interest + principle;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        450
Source: 
>       totalClaimInterest += amount;
>       token.transfer(_to,amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return amount;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        474
Source: 
>        if(szGot > 0){
>          token.withdrawInternal(msg.sender,szGot);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          return true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        486
Source: 
>       if(szGot > 0){
>         token.withdrawInternal(_to,szGot);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        499
Source: 
>       if(szGot > 0){
>          token.withdrawInternal(_to,szGot);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          return true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        512
Source: 
>         if(szGot > 0){
>            token.withdrawInternal(_to,szGot);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>            return true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        655
Source: 
>       contracts[_addr].push(idx);
>       catToken.intTransfer(_addr,address(this),amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       token.transfer(_addr,amountStable);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        656
Source: 
>       catToken.intTransfer(_addr,address(this),amount);
>       token.transfer(_addr,amountStable);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       totalBorrow += amountStable;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        709
Source: 
>             if(wrap == true)
>               token.intTransfer(_addr,address(this),amount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             else

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        725
Source: 
> 
>             catToken.transfer(_addr,catReturn);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           //  _shareInterest(interest);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        711
Source: 
>             else
>               token.transferFrom(_addr,address(this),amount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        732
Source: 
>        //    if(wrap == true)
>             token.intTransfer(_addr,address(this),amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //       else

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpacePodsUSDC
Line:        749
Source: 
> 
>               catToken.transfer(_addr,catReturn);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          //     _shareInterest(interest);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Permissions
Line:        60
Source: 
>   mapping (address=>bool) public permits;
>   bool allPermit;
>   ^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        161
Source: 
>     uint256 public decimal = 18;
>     string public TOKEN_POOLS = "szUSDC";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public startPools;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        162
Source: 
>     string public TOKEN_POOLS = "szUSDC";
>     uint256 public startPools;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public POOL_HARDCAP;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        172
Source: 
> 
>     uint256 oneYear = 365 days;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 hundred = 100 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        173
Source: 
>     uint256 oneYear = 365 days;
>     uint256 hundred = 100 ether;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpacePodsUSDC
Line:        175
Source: 
> 
>     uint256 public version = 9;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public minimumTerm; // minimumDeposit Time;    

[0m

---------------------------------------------
For contract 0x4d2be030cef4f9a51cc81ab92cda12c5a90e4338.sol
Tool Runtime = 5163.655789085002 seconds
#############################################