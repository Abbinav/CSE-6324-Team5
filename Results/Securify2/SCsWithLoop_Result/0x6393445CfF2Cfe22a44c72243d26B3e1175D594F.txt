[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    CsmClaim
Line:        348
Source: 
>   IERC20 public _cruToken;
>   uint256 rewardAmount = 1000 * 10**18;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 minCruAmount = 1 * 10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    CsmClaim
Line:        349
Source: 
>   uint256 rewardAmount = 1000 * 10**18;
>   uint256 minCruAmount = 1 * 10**18;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bool public _inited = false;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        61
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        87
Source: 
>      */
>     function renounceOwnership() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        96
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        61
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        87
Source: 
>      */
>     function renounceOwnership() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        96
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CsmClaim
Line:        358
Source: 
> 
>   function withDrawAll(IERC20 token) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 balance = token.balanceOf(address(this));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CsmClaim
Line:        364
Source: 
>   // amount: number of tokens without decimals
>   function claim() public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
>     address from = msg.sender;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CsmClaim
Line:        384
Source: 
> 
>   function setInited() public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _inited = true;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CsmClaim
Line:        388
Source: 
> 
>   function addOnePendingClaim(address addr) public onlyOwner onlyInit {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       _pendingClaimAddress[addr] = true;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CsmClaim
Line:        392
Source: 
> 
>   function addPendingClaims(address[] memory addresses) public onlyOwner onlyInit {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     for (uint i = 0; i < addresses.length; i++) {

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    CsmClaim
Line:        359
Source: 
>   function withDrawAll(IERC20 token) public onlyOwner {
>     uint256 balance = token.balanceOf(address(this));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     token.transfer(msg.sender, balance);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    CsmClaim
Line:        360
Source: 
>     uint256 balance = token.balanceOf(address(this));
>     token.transfer(msg.sender, balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    CsmClaim
Line:        368
Source: 
>     require(!_claimedAddresses[from], "address already claimed");
>     require(_cruToken.balanceOf(from) >= minCruAmount, "1 CRU is required in address to do the claim");
>             ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    CsmClaim
Line:        370
Source: 
> 
>     _token.transfer(from, rewardAmount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     delete _pendingClaimAddress[from];

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Ownable
Line:        96
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    CsmClaim
Line:        358
Source: 
> 
>   function withDrawAll(IERC20 token) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 balance = token.balanceOf(address(this));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    CsmClaim
Line:        388
Source: 
> 
>   function addOnePendingClaim(address addr) public onlyOwner onlyInit {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       _pendingClaimAddress[addr] = true;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    CsmClaim
Line:        368
Source: 
>     require(!_claimedAddresses[from], "address already claimed");
>     require(_cruToken.balanceOf(from) >= minCruAmount, "1 CRU is required in address to do the claim");
>             ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    CsmClaim
Line:        370
Source: 
> 
>     _token.transfer(from, rewardAmount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     delete _pendingClaimAddress[from];

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CsmClaim
Line:        343
Source: 
> 
>   mapping (address => bool) public _pendingClaimAddress;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   mapping (address => bool) public _claimedAddresses;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CsmClaim
Line:        344
Source: 
>   mapping (address => bool) public _pendingClaimAddress;
>   mapping (address => bool) public _claimedAddresses;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CsmClaim
Line:        346
Source: 
> 
>   IERC20 public _token;
>   ^^^^^^^^^^^^^^^^^^^^
>   IERC20 public _cruToken;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CsmClaim
Line:        347
Source: 
>   IERC20 public _token;
>   IERC20 public _cruToken;
>   ^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 rewardAmount = 1000 * 10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    CsmClaim
Line:        350
Source: 
>   uint256 minCruAmount = 1 * 10**18;
>   bool public _inited = false;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity >=0.5.0 <0.7.0;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    CsmClaim
Line:        348
Source: 
>   IERC20 public _cruToken;
>   uint256 rewardAmount = 1000 * 10**18;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 minCruAmount = 1 * 10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    CsmClaim
Line:        349
Source: 
>   uint256 rewardAmount = 1000 * 10**18;
>   uint256 minCruAmount = 1 * 10**18;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bool public _inited = false;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    CsmClaim
Line:        368
Source: 
>     require(!_claimedAddresses[from], "address already claimed");
>     require(_cruToken.balanceOf(from) >= minCruAmount, "1 CRU is required in address to do the claim");
>             ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    CsmClaim
Line:        359
Source: 
>   function withDrawAll(IERC20 token) public onlyOwner {
>     uint256 balance = token.balanceOf(address(this));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     token.transfer(msg.sender, balance);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    CsmClaim
Line:        360
Source: 
>     uint256 balance = token.balanceOf(address(this));
>     token.transfer(msg.sender, balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    CsmClaim
Line:        370
Source: 
> 
>     _token.transfer(from, rewardAmount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     delete _pendingClaimAddress[from];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    CsmClaim
Line:        360
Source: 
>     uint256 balance = token.balanceOf(address(this));
>     token.transfer(msg.sender, balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    CsmClaim
Line:        370
Source: 
> 
>     _token.transfer(from, rewardAmount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     delete _pendingClaimAddress[from];

[0m

---------------------------------------------
For contract 0x6393445CfF2Cfe22a44c72243d26B3e1175D594F.sol
Tool Runtime = 4.278086996999264 seconds
#############################################