[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    KYFToken
Line:        115
Source: 
> 
>     function transferOwnership(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _owner

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    KYFToken
Line:        124
Source: 
> 
>     function setApprovedKYFInstance(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _kyfContract,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    KYFToken
Line:        160
Source: 
>      */
>     function name()
>     ^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    KYFToken
Line:        172
Source: 
>      */
>     function symbol()
>     ^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    KYFToken
Line:        193
Source: 
>      */
>     function decimals()
>     ^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    KYFToken
Line:        204
Source: 
>      */
>     function totalSupply()
>     ^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    KYFToken
Line:        215
Source: 
>      */
>     function balanceOf(
>     ^^^^^^^^^^^^^^^^^^^
>         address account

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    KYFToken
Line:        236
Source: 
>      */
>     function approve(
>     ^^^^^^^^^^^^^^^^^
>         address spender,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    KYFToken
Line:        254
Source: 
>      */
>     function transfer(
>     ^^^^^^^^^^^^^^^^^^
>         address recipient,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    KYFToken
Line:        267
Source: 
>      */
>     function allowance(
>     ^^^^^^^^^^^^^^^^^^^
>         address owner,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    KYFToken
Line:        290
Source: 
>      */
>     function transferFrom(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         address sender,

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    KYFToken
Line:        105
Source: 
>             IKYFV2 kyfContract = IKYFV2(kyfInstancesArray[i]);
>             if (kyfContract.checkVerified(_user) == true) {
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 return true;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    KYFToken
Line:        96
Source: 
> 
>     function isVerified(
>     ^^^^^^^^^^^^^^^^^^^^
>         address _user

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    KYFToken
Line:        115
Source: 
> 
>     function transferOwnership(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _owner

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    KYFToken
Line:        215
Source: 
>      */
>     function balanceOf(
>     ^^^^^^^^^^^^^^^^^^^
>         address account

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    KYFToken
Line:        236
Source: 
>      */
>     function approve(
>     ^^^^^^^^^^^^^^^^^
>         address spender,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    KYFToken
Line:        254
Source: 
>      */
>     function transfer(
>     ^^^^^^^^^^^^^^^^^^
>         address recipient,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    KYFToken
Line:        267
Source: 
>      */
>     function allowance(
>     ^^^^^^^^^^^^^^^^^^^
>         address owner,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    KYFToken
Line:        290
Source: 
>      */
>     function transferFrom(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         address sender,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    KYFToken
Line:        268
Source: 
>     function allowance(
>         address owner,
>         ^^^^^^^^^^^^^
>         address spender

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        54
Source: 
> //pragma solidity ^0.5.16;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    KYFToken
Line:        105
Source: 
>             IKYFV2 kyfContract = IKYFV2(kyfInstancesArray[i]);
>             if (kyfContract.checkVerified(_user) == true) {
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 return true;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    KYFToken
Line:        74
Source: 
> 
>     address public owner;
>     ^^^^^^^^^^^^^^^^^^^^
> 

[0m

---------------------------------------------
For contract 0xBA940b56CF4D6fd48DB5C574145618F1116470392.sol
Tool Runtime = 2.559068828999898 seconds
#############################################