[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        201
Source: 
>         uint memPtr;
>         assembly {
>          ^^^^^^^^^
>             memPtr := add(self, 0x20)

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        227
Source: 
>         (uint rStartPos, uint len) = _decode(self);
>         assembly {
>          ^^^^^^^^^
>             data := div(mload(rStartPos), exp(256, sub(32, len)))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        242
Source: 
>         (uint rStartPos,) = _decode(self);
>         assembly {
>          ^^^^^^^^^
>             data := div(mload(rStartPos), exp(256, 12))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        278
Source: 
>         uint memPtr = self._unsafeMemPtr;
>         assembly {
>          ^^^^^^^^^
>             b0 := byte(0, mload(memPtr))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        297
Source: 
>         uint b0;
>         assembly {
>          ^^^^^^^^^
>             b0 := byte(0, mload(memPtr))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        314
Source: 
>         uint start = self._unsafeMemPtr;
>         assembly {
>          ^^^^^^^^^
>             b0 := byte(0, mload(start))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        327
Source: 
>             uint bLen;
>             assembly {
>              ^^^^^^^^^
>                 bLen := sub(b0, 0xB7) // DATA_LONG_OFFSET

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLP
Line:        358
Source: 
>         // we can write entire words, and just overwrite any excess.
>         assembly {
>          ^^^^^^^^^
>             {

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLPEncode
Line:        413
Source: 
>         bytes memory b;
>         assembly {
>          ^^^^^^^^^
>             let m := mload(0x40)

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RLPEncode
Line:        516
Source: 
>         bytes memory b = new bytes(32);
>         assembly {
>          ^^^^^^^^^
>             mstore(add(b, 32), x)

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    BMT
Line:        582
Source: 
>     for (uint256 i = 32; i <= 32 * numElements; i += 32) {
>       assembly {
>        ^^^^^^^^^
>         proofElement := mload(add(proof, i))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Data
Line:        663
Source: 
>   function decodePos(uint _pos) internal pure returns (uint v1, uint v2) {
>     assembly {
>      ^^^^^^^^^
>       v1 := div(_pos, exp(2, 128))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Data
Line:        1078
Source: 
> 
>       assembly {
>        ^^^^^^^^^
>         v := mload(add(b, 0x20))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Address
Line:        1350
Source: 
>     // solium-disable-next-line security/no-inline-assembly
>     assembly { size := extcodesize(account) }
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return size > 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    MapperRole
Line:        1410
Source: 
> 
>   Roles.Role private _mappers;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SubmitterRole
Line:        1457
Source: 
> 
>   Roles.Role private _submitters;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Layer2Storage
Line:        1516
Source: 
>   // Increase for each URB
>   uint public currentFork;
>    ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    MapperRole
Line:        1425
Source: 
> 
>   function addMapper(address account) public onlyMapper {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _addMapper(account);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    MapperRole
Line:        1429
Source: 
> 
>   function renounceMapper() public {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _removeMapper(msg.sender);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SubmitterRole
Line:        1472
Source: 
> 
>   function addSubmitter(address account) public onlySubmitter {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _addSubmitter(account);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SubmitterRole
Line:        1476
Source: 
> 
>   function renounceSubmitter() public {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _removeSubmitter(msg.sender);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    MapperRole
Line:        1425
Source: 
> 
>   function addMapper(address account) public onlyMapper {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _addMapper(account);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    MapperRole
Line:        1429
Source: 
> 
>   function renounceMapper() public {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _removeMapper(msg.sender);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SubmitterRole
Line:        1472
Source: 
> 
>   function addSubmitter(address account) public onlySubmitter {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _addSubmitter(account);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SubmitterRole
Line:        1476
Source: 
> 
>   function renounceSubmitter() public {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _removeSubmitter(msg.sender);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        1955
Source: 
> 
>   function addSubmitter(address account) public onlyOperator {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _addSubmitter(account);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        1959
Source: 
> 
>   function addMapper(address account) public onlyOperator {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _addMapper(account);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        1963
Source: 
> 
>   function setSeigManager(address account) public onlyOperatorOrSeigManager {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     seigManager = account;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        1993
Source: 
> 
>   function getEROBytes(uint _requestId) public view returns (bytes memory out) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     Data.Request storage ERO = EROs[_requestId];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        2004
Source: 
>    */
>   function prepareToSubmitURB()
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        2197
Source: 
>    */
>   function startExit(
>    ^^^^^^^^^^^^^^^^^^
>     address _to,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        2214
Source: 
> 
>   function startEnter(
>    ^^^^^^^^^^^^^^^^^^^
>     address _to,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        2235
Source: 
> 
>   function makeERU(
>    ^^^^^^^^^^^^^^^^
>     address _to,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        2390
Source: 
> 
>   function lastBlock(uint forkNumber) public view returns (uint lastBlock) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return forks[forkNumber].lastBlock;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        2394
Source: 
> 
>   function lastEpoch(uint forkNumber) public view returns (uint lastBlock) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return forks[forkNumber].lastEpoch;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        2407
Source: 
> 
>   function getLastEpoch() public view returns (Data.Epoch memory) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return forks[currentFork].epochs[forks[currentFork].lastEpoch];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        2411
Source: 
> 
>   function getBlock(
>    ^^^^^^^^^^^^^^^^^
>     uint forkNumber,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        2418
Source: 
> 
>   function getBlockFinalizedAt(
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint forkNumber,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        2425
Source: 
> 
>   function getLastFinalizedBlock(uint forkNumber) public view returns (uint) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return forks[forkNumber].lastFinalizedBlock;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        2429
Source: 
> 
>   function getLastFinalizedEpoch(uint forkNumber) public view returns (uint) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return forks[forkNumber].lastFinalizedEpoch;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        2436
Source: 
>    */
>   function forked(uint _forkNumber) public view returns (bool result) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _forkNumber != currentFork;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Layer2
Line:        2443
Source: 
>    */
>   function getRequestFinalized(uint _requestId, bool _userActivated) public view returns (bool finalized) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (_userActivated) {

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Layer2Base
Line:        1741
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG));

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Layer2Base
Line:        1780
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       SUBMIT_NRE_SIG,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Layer2Base
Line:        1803
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       SUBMIT_ORB_SIG,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Layer2
Line:        2117
Source: 
>       // TODO: dynamic cost for ERU
>       msg.sender.transfer(COST_ERU);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } else {

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Layer2
Line:        2120
Source: 
>       requestId = _doChallengeExit(pb, ORBs[pb.requestBlockId], EROs,_index, _receiptData, _proof);
>       msg.sender.transfer(COST_ERO);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Data
Line:        1051
Source: 
> 
>     return RequestableI(self.to).applyRequestInRootChain(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       self.isExit,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Layer2
Line:        2333
Source: 
>         // TODO: dynamic cost and bond release period
>         ERU.requestor.transfer(COST_ERU);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit RequestApplied(requestId, true);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Layer2
Line:        2367
Source: 
>       ERO.applyRequestInRootChain(requestId);
>       ERO.requestor.transfer(COST_ERO);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       emit RequestApplied(requestId, false);

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1734
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_ORB_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(success);

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1741
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG));

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1749
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_URB_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG));

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1757
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_ORE_AFTER_URE_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(success);

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1764
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_NRE_AFTER_URE_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(success);

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1780
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       SUBMIT_NRE_SIG,

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1803
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       SUBMIT_ORB_SIG,

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1825
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       SUBMIT_URB_SIG,

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1734
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_ORB_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(success);

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1741
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG));

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1749
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_URB_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG));

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1757
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_ORE_AFTER_URE_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(success);

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1764
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_NRE_AFTER_URE_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(success);

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1780
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       SUBMIT_NRE_SIG,

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1803
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       SUBMIT_ORB_SIG,

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Layer2Base
Line:        1825
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       SUBMIT_URB_SIG,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    MapperRole
Line:        1421
Source: 
> 
>   function isMapper(address account) public view returns (bool) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _mappers.has(account);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    MapperRole
Line:        1425
Source: 
> 
>   function addMapper(address account) public onlyMapper {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _addMapper(account);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SubmitterRole
Line:        1468
Source: 
> 
>   function isSubmitter(address account) public view returns (bool) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _submitters.has(account);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SubmitterRole
Line:        1472
Source: 
> 
>   function addSubmitter(address account) public onlySubmitter {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _addSubmitter(account);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    MapperRole
Line:        1421
Source: 
> 
>   function isMapper(address account) public view returns (bool) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _mappers.has(account);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    MapperRole
Line:        1425
Source: 
> 
>   function addMapper(address account) public onlyMapper {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _addMapper(account);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SubmitterRole
Line:        1468
Source: 
> 
>   function isSubmitter(address account) public view returns (bool) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _submitters.has(account);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SubmitterRole
Line:        1472
Source: 
> 
>   function addSubmitter(address account) public onlySubmitter {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _addSubmitter(account);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Layer2
Line:        1950
Source: 
> 
>   function changeOperator(address _operator) external onlyOperatorOrSeigManager {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     operator = _operator;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Layer2
Line:        1955
Source: 
> 
>   function addSubmitter(address account) public onlyOperator {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _addSubmitter(account);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Layer2
Line:        1959
Source: 
> 
>   function addMapper(address account) public onlyOperator {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _addMapper(account);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Layer2
Line:        1963
Source: 
> 
>   function setSeigManager(address account) public onlyOperatorOrSeigManager {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     seigManager = account;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Layer2
Line:        2017
Source: 
> 
>   function submitNRE(
>    ^^^^^^^^^^^^^^^^^^
>     uint _pos1, // forknumber + epochNumber

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Layer2
Line:        2040
Source: 
> 
>   function submitORB(
>    ^^^^^^^^^^^^^^^^^^
>     uint _pos,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Layer2
Line:        2098
Source: 
> 
>   function challengeExit(
>    ^^^^^^^^^^^^^^^^^^^^^^
>     uint _forkNumber,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        1971
Source: 
>    */
>   function mapRequestableContractByOperator(address _layer2, address _childchain)
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     external

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        1993
Source: 
> 
>   function getEROBytes(uint _requestId) public view returns (bytes memory out) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     Data.Request storage ERO = EROs[_requestId];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2061
Source: 
> 
>   function submitURB(
>    ^^^^^^^^^^^^^^^^^^
>     uint _pos,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2162
Source: 
>    */
>   function challengeNullAddress(
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint _blockNumber,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2197
Source: 
>    */
>   function startExit(
>    ^^^^^^^^^^^^^^^^^^
>     address _to,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2214
Source: 
> 
>   function startEnter(
>    ^^^^^^^^^^^^^^^^^^^
>     address _to,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2235
Source: 
> 
>   function makeERU(
>    ^^^^^^^^^^^^^^^^
>     address _to,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2375
Source: 
> 
>   function finalizeRequests(uint n) external returns (bool success) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     for (uint i = 0; i < n; i++) {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2390
Source: 
> 
>   function lastBlock(uint forkNumber) public view returns (uint lastBlock) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return forks[forkNumber].lastBlock;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2394
Source: 
> 
>   function lastEpoch(uint forkNumber) public view returns (uint lastBlock) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return forks[forkNumber].lastEpoch;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2398
Source: 
> 
>   function getEpoch(
>    ^^^^^^^^^^^^^^^^^
>     uint forkNumber,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2411
Source: 
> 
>   function getBlock(
>    ^^^^^^^^^^^^^^^^^
>     uint forkNumber,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2418
Source: 
> 
>   function getBlockFinalizedAt(
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint forkNumber,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2425
Source: 
> 
>   function getLastFinalizedBlock(uint forkNumber) public view returns (uint) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return forks[forkNumber].lastFinalizedBlock;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2429
Source: 
> 
>   function getLastFinalizedEpoch(uint forkNumber) public view returns (uint) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return forks[forkNumber].lastFinalizedEpoch;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2436
Source: 
>    */
>   function forked(uint _forkNumber) public view returns (bool result) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _forkNumber != currentFork;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Layer2
Line:        2443
Source: 
>    */
>   function getRequestFinalized(uint _requestId, bool _userActivated) public view returns (bool finalized) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (_userActivated) {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    BMT
Line:        581
Source: 
> 
>     for (uint256 i = 32; i <= 32 * numElements; i += 32) {
>                                ^^^^^^^^^^^^^^^^
>       assembly {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    Layer2
Line:        2333
Source: 
>         // TODO: dynamic cost and bond release period
>         ERU.requestor.transfer(COST_ERU);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit RequestApplied(requestId, true);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    Layer2
Line:        2367
Source: 
>       ERO.applyRequestInRootChain(requestId);
>       ERO.requestor.transfer(COST_ERO);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       emit RequestApplied(requestId, false);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    Layer2Base
Line:        1780
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>       ^^^^^^^^^^^^
>       SUBMIT_NRE_SIG,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    Layer2Base
Line:        1803
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>       ^^^^^^^^^^^^
>       SUBMIT_ORB_SIG,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    Layer2Base
Line:        1825
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>       ^^^^^^^^^^^^
>       SUBMIT_URB_SIG,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    Layer2
Line:        2390
Source: 
> 
>   function lastBlock(uint forkNumber) public view returns (uint lastBlock) {
>                                                             ^^^^^^^^^^^^^^
>     return forks[forkNumber].lastBlock;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    Layer2
Line:        2394
Source: 
> 
>   function lastEpoch(uint forkNumber) public view returns (uint lastBlock) {
>                                                             ^^^^^^^^^^^^^^
>     return forks[forkNumber].lastEpoch;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    RLP
Line:        241
Source: 
>     {
>         (uint rStartPos,) = _decode(self);
>           ^^^^^^^^^^^^^^
>         assembly {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Data
Line:        651
Source: 
>   // How many requests can be included in a single request block
>   function MAX_REQUESTS() internal pure returns (uint) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // TODO: use 100 in production mode

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Data
Line:        658
Source: 
>   // Timeout for URB submission
>   function URE_TIMEOUT() internal pure returns (uint) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return 1 hours;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1513
Source: 
>   // N NRBs are submitted or when preparing URBs submission.
>   uint public NRELength;
>    ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1524
Source: 
>   // Enter & Exit requests for ORB / URB
>   Data.Request[] public EROs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
>   Data.Request[] public ERUs;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1525
Source: 
>   Data.Request[] public EROs;
>   Data.Request[] public ERUs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1528
Source: 
>   // Consecutive request block. The fork where they are in is defined in Data.PlasmaBlock
>   Data.RequestBlock[] public ORBs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   Data.RequestBlock[] public URBs;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1529
Source: 
>   Data.RequestBlock[] public ORBs;
>   Data.RequestBlock[] public URBs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1546
Source: 
>   // solium-disable mixedcase
>   uint public EROIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public ERUIdToFinalize;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1547
Source: 
>   uint public EROIdToFinalize;
>   uint public ERUIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable mixedcase

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2Storage
Line:        1594
Source: 
> 
>   bool public constant isLayer2 = true;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2
Line:        1994
Source: 
>   function getEROBytes(uint _requestId) public view returns (bytes memory out) {
>     Data.Request storage ERO = EROs[_requestId];
>      ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2
Line:        2313
Source: 
> 
>       Data.Request storage ERU = ERUs[requestId];
>        ^^^^^^^^^^^^^^^^^^^^^^^^
>       Data.RequestBlock storage URB = URBs[pb.requestBlockId];

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2
Line:        2314
Source: 
>       Data.Request storage ERU = ERUs[requestId];
>       Data.RequestBlock storage URB = URBs[pb.requestBlockId];
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2
Line:        2347
Source: 
> 
>     Data.RequestBlock storage ORB = ORBs[pb.requestBlockId];
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2
Line:        2361
Source: 
> 
>     Data.Request storage ERO = EROs[requestId];
>      ^^^^^^^^^^^^^^^^^^^^^^^^
>     EROIdToFinalize = requestId + 1;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Layer2
Line:        2386
Source: 
>    */
>   function MAX_REQUESTS() external pure returns (uint maxRequests) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return Data.MAX_REQUESTS();

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        8
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        134
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        163
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        383
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        535
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        599
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        622
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1327
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1360
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1400
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1447
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1494
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1600
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1701
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1840
Source: 
> //pragma solidity ^0.5.12;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> pragma experimental ABIEncoderV2;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Layer2Base
Line:        1716
Source: 
>   // EpochHandler functions
>   bytes4 constant PREPARE_TO_SUTMIBT_ORB_SIG = bytes4(keccak256("prepareORE()"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant PREPARE_TO_SUTMIBT_NRB_SIG = bytes4(keccak256("prepareNRE()"));

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Layer2Base
Line:        1717
Source: 
>   bytes4 constant PREPARE_TO_SUTMIBT_ORB_SIG = bytes4(keccak256("prepareORE()"));
>   bytes4 constant PREPARE_TO_SUTMIBT_NRB_SIG = bytes4(keccak256("prepareNRE()"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant PREPARE_TO_SUTMIBT_URB_SIG = bytes4(keccak256("prepareToSubmitURB()"));

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Layer2Base
Line:        1718
Source: 
>   bytes4 constant PREPARE_TO_SUTMIBT_NRB_SIG = bytes4(keccak256("prepareNRE()"));
>   bytes4 constant PREPARE_TO_SUTMIBT_URB_SIG = bytes4(keccak256("prepareToSubmitURB()"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant PREPARE_ORE_AFTER_URE_SIG = bytes4(keccak256("prepareOREAfterURE()"));

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Layer2Base
Line:        1719
Source: 
>   bytes4 constant PREPARE_TO_SUTMIBT_URB_SIG = bytes4(keccak256("prepareToSubmitURB()"));
>   bytes4 constant PREPARE_ORE_AFTER_URE_SIG = bytes4(keccak256("prepareOREAfterURE()"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant PREPARE_NRE_AFTER_URE_SIG = bytes4(keccak256("prepareNREAfterURE()"));

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Layer2Base
Line:        1720
Source: 
>   bytes4 constant PREPARE_ORE_AFTER_URE_SIG = bytes4(keccak256("prepareOREAfterURE()"));
>   bytes4 constant PREPARE_NRE_AFTER_URE_SIG = bytes4(keccak256("prepareNREAfterURE()"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Layer2Base
Line:        1723
Source: 
>   // SubmitHandler functions
>   bytes4 constant SUBMIT_NRE_SIG = bytes4(keccak256("submitNRE(uint256,uint256,bytes32,bytes32,bytes32)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant SUBMIT_ORB_SIG = bytes4(keccak256("submitORB(uint256,bytes32,bytes32,bytes32)"));

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Layer2Base
Line:        1724
Source: 
>   bytes4 constant SUBMIT_NRE_SIG = bytes4(keccak256("submitNRE(uint256,uint256,bytes32,bytes32,bytes32)"));
>   bytes4 constant SUBMIT_ORB_SIG = bytes4(keccak256("submitORB(uint256,bytes32,bytes32,bytes32)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant SUBMIT_URB_SIG = bytes4(keccak256("submitURB(uint256,bytes32,bytes32,bytes32)"));

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Layer2Base
Line:        1725
Source: 
>   bytes4 constant SUBMIT_ORB_SIG = bytes4(keccak256("submitORB(uint256,bytes32,bytes32,bytes32)"));
>   bytes4 constant SUBMIT_URB_SIG = bytes4(keccak256("submitURB(uint256,bytes32,bytes32,bytes32)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-endable mixedcase

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Layer2
Line:        1871
Source: 
> 
>   modifier onlyValidCost(uint _expected) {
>                           ^^^^^^^^^^^^^^
>     require(msg.value >= _expected);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Layer2
Line:        1884
Source: 
>   modifier checkURBSubmission () {
>     Data.Fork storage fork = forks[currentFork];
>      ^^^^^^^^^^^^^^^^^^^^^^
>     if (fork.timestamp + Data.URE_TIMEOUT() < block.timestamp) {

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>                                           ^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Layer2Storage
Line:        1592
Source: 
>   // Gas limit for request trasaction
>   uint public constant REQUEST_GAS = 100000;
>                                       ^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    Layer2
Line:        2117
Source: 
>       // TODO: dynamic cost for ERU
>       msg.sender.transfer(COST_ERU);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } else {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    Layer2
Line:        2120
Source: 
>       requestId = _doChallengeExit(pb, ORBs[pb.requestBlockId], EROs,_index, _receiptData, _proof);
>       msg.sender.transfer(COST_ERO);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    Layer2
Line:        2333
Source: 
>         // TODO: dynamic cost and bond release period
>         ERU.requestor.transfer(COST_ERU);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit RequestApplied(requestId, true);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    Layer2
Line:        2367
Source: 
>       ERO.applyRequestInRootChain(requestId);
>       ERO.requestor.transfer(COST_ERO);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       emit RequestApplied(requestId, false);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Layer2
Line:        2333
Source: 
>         // TODO: dynamic cost and bond release period
>         ERU.requestor.transfer(COST_ERU);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit RequestApplied(requestId, true);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Layer2
Line:        2367
Source: 
>       ERO.applyRequestInRootChain(requestId);
>       ERO.requestor.transfer(COST_ERO);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       emit RequestApplied(requestId, false);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Layer2
Line:        2117
Source: 
>       // TODO: dynamic cost for ERU
>       msg.sender.transfer(COST_ERU);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } else {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Layer2
Line:        2120
Source: 
>       requestId = _doChallengeExit(pb, ORBs[pb.requestBlockId], EROs,_index, _receiptData, _proof);
>       msg.sender.transfer(COST_ERO);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Layer2
Line:        2333
Source: 
>         // TODO: dynamic cost and bond release period
>         ERU.requestor.transfer(COST_ERU);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit RequestApplied(requestId, true);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Layer2
Line:        2367
Source: 
>       ERO.applyRequestInRootChain(requestId);
>       ERO.requestor.transfer(COST_ERO);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       emit RequestApplied(requestId, false);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Data
Line:        1051
Source: 
> 
>     return RequestableI(self.to).applyRequestInRootChain(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       self.isExit,

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLP
Line:        204
Source: 
>         }
>         return RLPItem(memPtr, len);
>                         ^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLP
Line:        215
Source: 
>         uint idx;
>         while (idx < numItems) {
>                 ^^^
>             list[idx] = next(it);

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLP
Line:        252
Source: 
>         uint ptr = self._unsafeMemPtr + _payloadOffset(self);
>         it._unsafeItem = self;
>          ^^
>         it._unsafeNextPtr = ptr;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLP
Line:        260
Source: 
>         uint itemLength = _itemLength(ptr);
>         subItem._unsafeMemPtr = ptr;
>          ^^^^^^^
>         subItem._unsafeLength = itemLength;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLP
Line:        281
Source: 
>         }
>         if (b0 < DATA_SHORT_START)
>              ^^
>             return 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLP
Line:        300
Source: 
>         }
>         if (b0 < DATA_SHORT_START)
>              ^^
>             len = 1;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLP
Line:        317
Source: 
>         }
>         if (b0 < DATA_SHORT_START) {
>              ^^
>             memPtr = start;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    RLPEncode
Line:        419
Source: 
>         }
>         return encodeBytes(b);
>                             ^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    BMT
Line:        550
Source: 
> 
>     for (; i + 1 < level.length; i += 2) {
>             ^
>       nextLevel[i/2] = keccak256(abi.encodePacked(level[i], level[i+1]));

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    BMT
Line:        586
Source: 
>       if (index % 2 == 0) {
>         computedHash = keccak256(abi.encodePacked(computedHash, proofElement));
>                                                                  ^^^^^^^^^^^^
>       } else {

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Data
Line:        1068
Source: 
>   {
>     out.isExit = self.isExit;
>      ^^^
>     out.isTransfer = self.isTransfer;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Data
Line:        1136
Source: 
>   {
>     out.gasPrice = NA_TX_GAS_PRICE;
>      ^^^
>     out.gasLimit = uint64(NA_TX_GAS_LIMIT);

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Data
Line:        1270
Source: 
> 
>     r.status = uint64(items[0].toUint());
>      ^
>     r.cumulativeGasUsed = uint64(items[1].toUint());

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Address
Line:        1351
Source: 
>     assembly { size := extcodesize(account) }
>     return size > 0;
>             ^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Layer2Storage
Line:        1502
Source: 
>    */
>   bool public development; // dev mode
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public operator;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Layer2Storage
Line:        1503
Source: 
>   bool public development; // dev mode
>   address public operator;
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public epochHandler;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Layer2Storage
Line:        1504
Source: 
>   address public operator;
>   address public epochHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public submitHandler;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Layer2Storage
Line:        1505
Source: 
>   address public epochHandler;
>   address public submitHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public etherToken;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Layer2Storage
Line:        1506
Source: 
>   address public submitHandler;
>   address public etherToken;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public seigManager;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Layer2Storage
Line:        1507
Source: 
>   address public etherToken;
>   address public seigManager;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Layer2Storage
Line:        1513
Source: 
>   // N NRBs are submitted or when preparing URBs submission.
>   uint public NRELength;
>    ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Layer2Storage
Line:        1532
Source: 
>   // count enter requests for epoch
>   uint public numEnterForORB;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Layer2Storage
Line:        1541
Source: 
>   // Last applied request
>   uint public lastAppliedForkNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedEpochNumber;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Layer2Storage
Line:        1542
Source: 
>   uint public lastAppliedForkNumber;
>   uint public lastAppliedEpochNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedBlockNumber;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Layer2Storage
Line:        1543
Source: 
>   uint public lastAppliedEpochNumber;
>   uint public lastAppliedBlockNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Layer2Storage
Line:        1546
Source: 
>   // solium-disable mixedcase
>   uint public EROIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public ERUIdToFinalize;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Layer2Storage
Line:        1547
Source: 
>   uint public EROIdToFinalize;
>   uint public ERUIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable mixedcase

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    MapperRole
Line:        1410
Source: 
> 
>   Roles.Role private _mappers;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    SubmitterRole
Line:        1457
Source: 
> 
>   Roles.Role private _submitters;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1502
Source: 
>    */
>   bool public development; // dev mode
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public operator;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1503
Source: 
>   bool public development; // dev mode
>   address public operator;
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public epochHandler;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1504
Source: 
>   address public operator;
>   address public epochHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public submitHandler;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1505
Source: 
>   address public epochHandler;
>   address public submitHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public etherToken;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1506
Source: 
>   address public submitHandler;
>   address public etherToken;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public seigManager;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1507
Source: 
>   address public etherToken;
>   address public seigManager;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1513
Source: 
>   // N NRBs are submitted or when preparing URBs submission.
>   uint public NRELength;
>    ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1516
Source: 
>   // Increase for each URB
>   uint public currentFork;
>    ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1532
Source: 
>   // count enter requests for epoch
>   uint public numEnterForORB;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1541
Source: 
>   // Last applied request
>   uint public lastAppliedForkNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedEpochNumber;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1542
Source: 
>   uint public lastAppliedForkNumber;
>   uint public lastAppliedEpochNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedBlockNumber;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1543
Source: 
>   uint public lastAppliedEpochNumber;
>   uint public lastAppliedBlockNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1546
Source: 
>   // solium-disable mixedcase
>   uint public EROIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public ERUIdToFinalize;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1547
Source: 
>   uint public EROIdToFinalize;
>   uint public ERUIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable mixedcase

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1502
Source: 
>    */
>   bool public development; // dev mode
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public operator;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1503
Source: 
>   bool public development; // dev mode
>   address public operator;
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public epochHandler;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1504
Source: 
>   address public operator;
>   address public epochHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public submitHandler;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1505
Source: 
>   address public epochHandler;
>   address public submitHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public etherToken;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1506
Source: 
>   address public submitHandler;
>   address public etherToken;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public seigManager;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1507
Source: 
>   address public etherToken;
>   address public seigManager;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1513
Source: 
>   // N NRBs are submitted or when preparing URBs submission.
>   uint public NRELength;
>    ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1516
Source: 
>   // Increase for each URB
>   uint public currentFork;
>    ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1532
Source: 
>   // count enter requests for epoch
>   uint public numEnterForORB;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1541
Source: 
>   // Last applied request
>   uint public lastAppliedForkNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedEpochNumber;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1542
Source: 
>   uint public lastAppliedForkNumber;
>   uint public lastAppliedEpochNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedBlockNumber;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1543
Source: 
>   uint public lastAppliedEpochNumber;
>   uint public lastAppliedBlockNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1546
Source: 
>   // solium-disable mixedcase
>   uint public EROIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public ERUIdToFinalize;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1547
Source: 
>   uint public EROIdToFinalize;
>   uint public ERUIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable mixedcase

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    MapperRole
Line:        1410
Source: 
> 
>   Roles.Role private _mappers;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    SubmitterRole
Line:        1457
Source: 
> 
>   Roles.Role private _submitters;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Layer2Storage
Line:        1516
Source: 
>   // Increase for each URB
>   uint public currentFork;
>    ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    Layer2Base
Line:        1741
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG));

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    Layer2Base
Line:        1780
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       SUBMIT_NRE_SIG,

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    Layer2Base
Line:        1803
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       SUBMIT_ORB_SIG,

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    Layer2
Line:        2117
Source: 
>       // TODO: dynamic cost for ERU
>       msg.sender.transfer(COST_ERU);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } else {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    Layer2
Line:        2120
Source: 
>       requestId = _doChallengeExit(pb, ORBs[pb.requestBlockId], EROs,_index, _receiptData, _proof);
>       msg.sender.transfer(COST_ERO);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    Layer2
Line:        2333
Source: 
>         // TODO: dynamic cost and bond release period
>         ERU.requestor.transfer(COST_ERU);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit RequestApplied(requestId, true);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    Layer2
Line:        2367
Source: 
>       ERO.applyRequestInRootChain(requestId);
>       ERO.requestor.transfer(COST_ERO);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       emit RequestApplied(requestId, false);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Roles
Line:        1376
Source: 
>     require(!has(role, account));
>     role.bearer[account] = true;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Roles
Line:        1384
Source: 
>     require(has(role, account));
>     role.bearer[account] = false;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Roles
Line:        1376
Source: 
>     require(!has(role, account));
>     role.bearer[account] = true;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Roles
Line:        1384
Source: 
>     require(has(role, account));
>     role.bearer[account] = false;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Roles
Line:        1376
Source: 
>     require(!has(role, account));
>     role.bearer[account] = true;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Roles
Line:        1384
Source: 
>     require(has(role, account));
>     role.bearer[account] = false;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Layer2
Line:        1979
Source: 
> 
>     requestableContracts[_layer2] = _childchain;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2627
Source: 
> 
>     epoch.NRE.finalized = true;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     epoch.NRE.finalizedAt = uint64(block.timestamp);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2628
Source: 
>     epoch.NRE.finalized = true;
>     epoch.NRE.finalizedAt = uint64(block.timestamp);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2630
Source: 
> 
>     _f.lastFinalizedBlock = uint64(epoch.endBlockNumber);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _f.lastFinalizedEpoch = uint64(_epochNumber);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2631
Source: 
>     _f.lastFinalizedBlock = uint64(epoch.endBlockNumber);
>     _f.lastFinalizedEpoch = uint64(_epochNumber);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2609
Source: 
>   ) internal {
>     _pb.finalized = true;
>      ^^^^^^^^^^^^^^^^^^^^
>     _pb.finalizedAt = uint64(block.timestamp);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2610
Source: 
>     _pb.finalized = true;
>     _pb.finalizedAt = uint64(block.timestamp);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2612
Source: 
> 
>     _f.lastFinalizedBlock = uint64(_blockNumber);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _f.lastFinalizedEpoch = uint64(_pb.epochNumber);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2613
Source: 
>     _f.lastFinalizedBlock = uint64(_blockNumber);
>     _f.lastFinalizedEpoch = uint64(_pb.epochNumber);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2154
Source: 
> 
>     r.challenged = true;
>      ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2475
Source: 
> 
>     requestId = _requests.length++;
>                  ^^^^^^^^^^^^^^^^^^
>     Data.Request storage r = _requests[requestId];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2478
Source: 
> 
>     r.requestor = msg.sender;
>      ^^^^^^^^^^^^^^^^^^^^^^^^
>     r.to = _to;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2479
Source: 
>     r.requestor = msg.sender;
>     r.to = _to;
>      ^^^^^^^^^^
>     r.timestamp = uint64(block.timestamp);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2480
Source: 
>     r.to = _to;
>     r.timestamp = uint64(block.timestamp);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     r.isExit = _isExit;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2481
Source: 
>     r.timestamp = uint64(block.timestamp);
>     r.isExit = _isExit;
>      ^^^^^^^^^^^^^^^^^^
>     r.isTransfer = isTransfer;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2482
Source: 
>     r.isExit = _isExit;
>     r.isTransfer = isTransfer;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^
>     r.value = uint128(_weiAmount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2483
Source: 
>     r.isTransfer = isTransfer;
>     r.value = uint128(_weiAmount);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     r.trieKey = _trieKey;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2484
Source: 
>     r.value = uint128(_weiAmount);
>     r.trieKey = _trieKey;
>      ^^^^^^^^^^^^^^^^^^^^
>     r.trieValue = _trieValue;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2485
Source: 
>     r.trieKey = _trieKey;
>     r.trieValue = _trieValue;
>      ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2492
Source: 
> 
>     uint requestBlockId = _rbs.length == 0 ? _rbs.length++ : _rbs.length - 1;
>                                               ^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2498
Source: 
>     if (rb.submitted || rb.requestEnd - rb.requestStart + 1 == Data.MAX_REQUESTS()) {
>       rb.submitted = true;
>        ^^^^^^^^^^^^^^^^^^^
>       rb = _rbs[_rbs.length++];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2499
Source: 
>       rb.submitted = true;
>       rb = _rbs[_rbs.length++];
>                  ^^^^^^^^^^^^^
>       rb.requestStart = uint64(requestId);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2500
Source: 
>       rb = _rbs[_rbs.length++];
>       rb.requestStart = uint64(requestId);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Data
Line:        1178
Source: 
>   ) internal {
>     _rootchainRequest.hash = hash(toTX(_childchainRequest, _requestId, false));
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2226
Source: 
>     requestId = _storeRequest(EROs, ORBs, _to, weiAmount, _trieKey, _trieValue, false, false);
>     numEnterForORB += 1;
>      ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2270
Source: 
>     if (fork.forkedBlock != 0 && lastAppliedBlockNumber >= fork.forkedBlock) {
>       lastAppliedForkNumber += 1;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^
>       fork = forks[lastAppliedForkNumber];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2276
Source: 
> 
>       lastAppliedBlockNumber = fork.firstBlock;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       lastAppliedEpochNumber = epochNumber;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2277
Source: 
>       lastAppliedBlockNumber = fork.firstBlock;
>       lastAppliedEpochNumber = epochNumber;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2292
Source: 
>       epoch = fork.epochs[epochNumber];
>       lastAppliedBlockNumber = epoch.startBlockNumber;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       pb = fork.blocks[lastAppliedBlockNumber];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2299
Source: 
> 
>     lastAppliedEpochNumber = epochNumber;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2321
Source: 
>         if (fork.forkedBlock > 0 && lastAppliedBlockNumber == fork.forkedBlock - 1) {
>           lastAppliedForkNumber += 1;
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2324
Source: 
> 
>         lastAppliedBlockNumber += 1;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2327
Source: 
> 
>       ERUIdToFinalize = requestId + 1;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2336
Source: 
>       }
>       ERU.finalized = true;
>        ^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2355
Source: 
>       if (fork.forkedBlock > 0 && lastAppliedBlockNumber == fork.forkedBlock - 1) {
>         lastAppliedForkNumber += 1;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2358
Source: 
> 
>       lastAppliedBlockNumber += 1;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2362
Source: 
>     Data.Request storage ERO = EROs[requestId];
>     EROIdToFinalize = requestId + 1;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     ERO.finalized = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Layer2
Line:        2363
Source: 
>     EROIdToFinalize = requestId + 1;
>     ERO.finalized = true;
>      ^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        981
Source: 
>   function calcNumBlock(uint _rs, uint _re) internal pure returns (uint) {
>     return _re.sub(_rs).add(1).divCeil(MAX_REQUESTS());
>                                         ^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1051
Source: 
> 
>     return RequestableI(self.to).applyRequestInRootChain(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       self.isExit,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1268
Source: 
>   function toReceipt(bytes memory self) internal pure returns (Receipt memory r) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1279
Source: 
>   function toReceiptStatus(bytes memory self) internal pure returns (uint) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
>     return items[0].toUint();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        981
Source: 
>   function calcNumBlock(uint _rs, uint _re) internal pure returns (uint) {
>     return _re.sub(_rs).add(1).divCeil(MAX_REQUESTS());
>                                         ^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1051
Source: 
> 
>     return RequestableI(self.to).applyRequestInRootChain(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       self.isExit,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1268
Source: 
>   function toReceipt(bytes memory self) internal pure returns (Receipt memory r) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1279
Source: 
>   function toReceiptStatus(bytes memory self) internal pure returns (uint) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
>     return items[0].toUint();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        981
Source: 
>   function calcNumBlock(uint _rs, uint _re) internal pure returns (uint) {
>     return _re.sub(_rs).add(1).divCeil(MAX_REQUESTS());
>                                         ^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1051
Source: 
> 
>     return RequestableI(self.to).applyRequestInRootChain(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       self.isExit,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1268
Source: 
>   function toReceipt(bytes memory self) internal pure returns (Receipt memory r) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1279
Source: 
>   function toReceiptStatus(bytes memory self) internal pure returns (uint) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
>     return items[0].toUint();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        981
Source: 
>   function calcNumBlock(uint _rs, uint _re) internal pure returns (uint) {
>     return _re.sub(_rs).add(1).divCeil(MAX_REQUESTS());
>                                         ^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1051
Source: 
> 
>     return RequestableI(self.to).applyRequestInRootChain(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       self.isExit,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1268
Source: 
>   function toReceipt(bytes memory self) internal pure returns (Receipt memory r) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1279
Source: 
>   function toReceiptStatus(bytes memory self) internal pure returns (uint) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
>     return items[0].toUint();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Layer2Base
Line:        1734
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_ORB_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(success);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Layer2Base
Line:        1741
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Layer2Base
Line:        1749
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_URB_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Layer2Base
Line:        1757
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_ORE_AFTER_URE_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(success);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Layer2Base
Line:        1764
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_NRE_AFTER_URE_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(success);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Layer2Base
Line:        1780
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       SUBMIT_NRE_SIG,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Layer2Base
Line:        1803
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       SUBMIT_ORB_SIG,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Layer2Base
Line:        1825
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       SUBMIT_URB_SIG,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        981
Source: 
>   function calcNumBlock(uint _rs, uint _re) internal pure returns (uint) {
>     return _re.sub(_rs).add(1).divCeil(MAX_REQUESTS());
>                                         ^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1051
Source: 
> 
>     return RequestableI(self.to).applyRequestInRootChain(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       self.isExit,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1268
Source: 
>   function toReceipt(bytes memory self) internal pure returns (Receipt memory r) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1279
Source: 
>   function toReceiptStatus(bytes memory self) internal pure returns (uint) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
>     return items[0].toUint();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Layer2Base
Line:        1734
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_ORB_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(success);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Layer2Base
Line:        1749
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_URB_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_TO_SUTMIBT_NRB_SIG));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Layer2Base
Line:        1757
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_ORE_AFTER_URE_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(success);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Layer2Base
Line:        1764
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = epochHandler.delegatecall(abi.encodeWithSelector(PREPARE_NRE_AFTER_URE_SIG));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(success);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Layer2Base
Line:        1825
Source: 
>     // solium-disable-next-line security/no-low-level-calls, max-len, no-unused-vars
>     (bool success, bytes memory returnData) = submitHandler.delegatecall(abi.encodeWithSelector(
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       SUBMIT_URB_SIG,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Data
Line:        1268
Source: 
>   function toReceipt(bytes memory self) internal pure returns (Receipt memory r) {
>     RLP.RLPItem[] memory items = self.toRLPItem().toList(4);
>                                   ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1502
Source: 
>    */
>   bool public development; // dev mode
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public operator;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1503
Source: 
>   bool public development; // dev mode
>   address public operator;
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public epochHandler;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1504
Source: 
>   address public operator;
>   address public epochHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public submitHandler;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1505
Source: 
>   address public epochHandler;
>   address public submitHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public etherToken;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1506
Source: 
>   address public submitHandler;
>   address public etherToken;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public seigManager;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1507
Source: 
>   address public etherToken;
>   address public seigManager;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1513
Source: 
>   // N NRBs are submitted or when preparing URBs submission.
>   uint public NRELength;
>    ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1516
Source: 
>   // Increase for each URB
>   uint public currentFork;
>    ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1519
Source: 
>   // First not-empty request epochs of a fork
>   mapping (uint => uint) public firstFilledORENumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1521
Source: 
> 
>   mapping (uint => Data.Fork) public forks;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1524
Source: 
>   // Enter & Exit requests for ORB / URB
>   Data.Request[] public EROs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
>   Data.Request[] public ERUs;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1525
Source: 
>   Data.Request[] public EROs;
>   Data.Request[] public ERUs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1528
Source: 
>   // Consecutive request block. The fork where they are in is defined in Data.PlasmaBlock
>   Data.RequestBlock[] public ORBs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   Data.RequestBlock[] public URBs;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1529
Source: 
>   Data.RequestBlock[] public ORBs;
>   Data.RequestBlock[] public URBs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1532
Source: 
>   // count enter requests for epoch
>   uint public numEnterForORB;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1535
Source: 
>   // epoch number of last non-empty request epoch.
>   mapping(uint => uint) public lastNonEmptyRequestEpoch;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1538
Source: 
>   // epoch number of first non-empty request epoch.
>   mapping(uint => uint) public firstNonEmptyRequestEpoch;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1541
Source: 
>   // Last applied request
>   uint public lastAppliedForkNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedEpochNumber;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1542
Source: 
>   uint public lastAppliedForkNumber;
>   uint public lastAppliedEpochNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedBlockNumber;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1543
Source: 
>   uint public lastAppliedEpochNumber;
>   uint public lastAppliedBlockNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1546
Source: 
>   // solium-disable mixedcase
>   uint public EROIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public ERUIdToFinalize;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1547
Source: 
>   uint public EROIdToFinalize;
>   uint public ERUIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable mixedcase

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1554
Source: 
>   // Requestable contract address in child chain
>   mapping (address => address) public requestableContracts;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1559
Source: 
>    */
>   address constant public NULL_ADDRESS = 0x0000000000000000000000000000000000000000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1562
Source: 
>   // Cost parameters for development and test
>   uint public constant COST_ERO = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_ERU = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1563
Source: 
>   uint public constant COST_ERO = 0;
>   uint public constant COST_ERU = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_URB_PREPARE = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1564
Source: 
>   uint public constant COST_ERU = 0;
>   uint public constant COST_URB_PREPARE = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_URB = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1565
Source: 
>   uint public constant COST_URB_PREPARE = 0;
>   uint public constant COST_URB = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_ORB = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1566
Source: 
>   uint public constant COST_URB = 0;
>   uint public constant COST_ORB = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_NRB = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1567
Source: 
>   uint public constant COST_ORB = 0;
>   uint public constant COST_NRB = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant PREPARE_TIMEOUT = 60; // 60 sec for dev

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1568
Source: 
>   uint public constant COST_NRB = 0;
>   uint public constant PREPARE_TIMEOUT = 60; // 60 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1571
Source: 
>   // Challenge periods for computation and withholding
>   uint public constant CP_COMPUTATION = 15; // 15 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant CP_WITHHOLDING = 20; // 20 sec for dev

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1572
Source: 
>   uint public constant CP_COMPUTATION = 15; // 15 sec for dev
>   uint public constant CP_WITHHOLDING = 20; // 20 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant CP_EXIT = 10; // 10 sec for dev

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1573
Source: 
>   uint public constant CP_WITHHOLDING = 20; // 20 sec for dev
>   uint public constant CP_EXIT = 10; // 10 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1592
Source: 
>   // Gas limit for request trasaction
>   uint public constant REQUEST_GAS = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1594
Source: 
> 
>   bool public constant isLayer2 = true;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1502
Source: 
>    */
>   bool public development; // dev mode
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public operator;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1503
Source: 
>   bool public development; // dev mode
>   address public operator;
>    ^^^^^^^^^^^^^^^^^^^^^^^
>   address public epochHandler;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1504
Source: 
>   address public operator;
>   address public epochHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public submitHandler;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1505
Source: 
>   address public epochHandler;
>   address public submitHandler;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public etherToken;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1506
Source: 
>   address public submitHandler;
>   address public etherToken;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public seigManager;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1507
Source: 
>   address public etherToken;
>   address public seigManager;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1513
Source: 
>   // N NRBs are submitted or when preparing URBs submission.
>   uint public NRELength;
>    ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1516
Source: 
>   // Increase for each URB
>   uint public currentFork;
>    ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1519
Source: 
>   // First not-empty request epochs of a fork
>   mapping (uint => uint) public firstFilledORENumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1521
Source: 
> 
>   mapping (uint => Data.Fork) public forks;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1524
Source: 
>   // Enter & Exit requests for ORB / URB
>   Data.Request[] public EROs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
>   Data.Request[] public ERUs;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1525
Source: 
>   Data.Request[] public EROs;
>   Data.Request[] public ERUs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1528
Source: 
>   // Consecutive request block. The fork where they are in is defined in Data.PlasmaBlock
>   Data.RequestBlock[] public ORBs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   Data.RequestBlock[] public URBs;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1529
Source: 
>   Data.RequestBlock[] public ORBs;
>   Data.RequestBlock[] public URBs;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1532
Source: 
>   // count enter requests for epoch
>   uint public numEnterForORB;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1535
Source: 
>   // epoch number of last non-empty request epoch.
>   mapping(uint => uint) public lastNonEmptyRequestEpoch;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1538
Source: 
>   // epoch number of first non-empty request epoch.
>   mapping(uint => uint) public firstNonEmptyRequestEpoch;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1541
Source: 
>   // Last applied request
>   uint public lastAppliedForkNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedEpochNumber;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1542
Source: 
>   uint public lastAppliedForkNumber;
>   uint public lastAppliedEpochNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public lastAppliedBlockNumber;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1543
Source: 
>   uint public lastAppliedEpochNumber;
>   uint public lastAppliedBlockNumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1546
Source: 
>   // solium-disable mixedcase
>   uint public EROIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public ERUIdToFinalize;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1547
Source: 
>   uint public EROIdToFinalize;
>   uint public ERUIdToFinalize;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable mixedcase

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1554
Source: 
>   // Requestable contract address in child chain
>   mapping (address => address) public requestableContracts;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1559
Source: 
>    */
>   address constant public NULL_ADDRESS = 0x0000000000000000000000000000000000000000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1562
Source: 
>   // Cost parameters for development and test
>   uint public constant COST_ERO = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_ERU = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1563
Source: 
>   uint public constant COST_ERO = 0;
>   uint public constant COST_ERU = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_URB_PREPARE = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1564
Source: 
>   uint public constant COST_ERU = 0;
>   uint public constant COST_URB_PREPARE = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_URB = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1565
Source: 
>   uint public constant COST_URB_PREPARE = 0;
>   uint public constant COST_URB = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_ORB = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1566
Source: 
>   uint public constant COST_URB = 0;
>   uint public constant COST_ORB = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_NRB = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1567
Source: 
>   uint public constant COST_ORB = 0;
>   uint public constant COST_NRB = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant PREPARE_TIMEOUT = 60; // 60 sec for dev

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1568
Source: 
>   uint public constant COST_NRB = 0;
>   uint public constant PREPARE_TIMEOUT = 60; // 60 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1571
Source: 
>   // Challenge periods for computation and withholding
>   uint public constant CP_COMPUTATION = 15; // 15 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant CP_WITHHOLDING = 20; // 20 sec for dev

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1572
Source: 
>   uint public constant CP_COMPUTATION = 15; // 15 sec for dev
>   uint public constant CP_WITHHOLDING = 20; // 20 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant CP_EXIT = 10; // 10 sec for dev

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1573
Source: 
>   uint public constant CP_WITHHOLDING = 20; // 20 sec for dev
>   uint public constant CP_EXIT = 10; // 10 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1592
Source: 
>   // Gas limit for request trasaction
>   uint public constant REQUEST_GAS = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1594
Source: 
> 
>   bool public constant isLayer2 = true;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Base
Line:        1716
Source: 
>   // EpochHandler functions
>   bytes4 constant PREPARE_TO_SUTMIBT_ORB_SIG = bytes4(keccak256("prepareORE()"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant PREPARE_TO_SUTMIBT_NRB_SIG = bytes4(keccak256("prepareNRE()"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Base
Line:        1717
Source: 
>   bytes4 constant PREPARE_TO_SUTMIBT_ORB_SIG = bytes4(keccak256("prepareORE()"));
>   bytes4 constant PREPARE_TO_SUTMIBT_NRB_SIG = bytes4(keccak256("prepareNRE()"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant PREPARE_TO_SUTMIBT_URB_SIG = bytes4(keccak256("prepareToSubmitURB()"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Base
Line:        1718
Source: 
>   bytes4 constant PREPARE_TO_SUTMIBT_NRB_SIG = bytes4(keccak256("prepareNRE()"));
>   bytes4 constant PREPARE_TO_SUTMIBT_URB_SIG = bytes4(keccak256("prepareToSubmitURB()"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant PREPARE_ORE_AFTER_URE_SIG = bytes4(keccak256("prepareOREAfterURE()"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Base
Line:        1719
Source: 
>   bytes4 constant PREPARE_TO_SUTMIBT_URB_SIG = bytes4(keccak256("prepareToSubmitURB()"));
>   bytes4 constant PREPARE_ORE_AFTER_URE_SIG = bytes4(keccak256("prepareOREAfterURE()"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant PREPARE_NRE_AFTER_URE_SIG = bytes4(keccak256("prepareNREAfterURE()"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Base
Line:        1720
Source: 
>   bytes4 constant PREPARE_ORE_AFTER_URE_SIG = bytes4(keccak256("prepareOREAfterURE()"));
>   bytes4 constant PREPARE_NRE_AFTER_URE_SIG = bytes4(keccak256("prepareNREAfterURE()"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Base
Line:        1723
Source: 
>   // SubmitHandler functions
>   bytes4 constant SUBMIT_NRE_SIG = bytes4(keccak256("submitNRE(uint256,uint256,bytes32,bytes32,bytes32)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant SUBMIT_ORB_SIG = bytes4(keccak256("submitORB(uint256,bytes32,bytes32,bytes32)"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Base
Line:        1724
Source: 
>   bytes4 constant SUBMIT_NRE_SIG = bytes4(keccak256("submitNRE(uint256,uint256,bytes32,bytes32,bytes32)"));
>   bytes4 constant SUBMIT_ORB_SIG = bytes4(keccak256("submitORB(uint256,bytes32,bytes32,bytes32)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant SUBMIT_URB_SIG = bytes4(keccak256("submitURB(uint256,bytes32,bytes32,bytes32)"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Base
Line:        1725
Source: 
>   bytes4 constant SUBMIT_ORB_SIG = bytes4(keccak256("submitORB(uint256,bytes32,bytes32,bytes32)"));
>   bytes4 constant SUBMIT_URB_SIG = bytes4(keccak256("submitURB(uint256,bytes32,bytes32,bytes32)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-endable mixedcase

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        173
Source: 
> library RLP {
>     uint constant DATA_SHORT_START = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant DATA_LONG_START = 0xB8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        174
Source: 
>     uint constant DATA_SHORT_START = 0x80;
>     uint constant DATA_LONG_START = 0xB8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_SHORT_START = 0xC0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        175
Source: 
>     uint constant DATA_LONG_START = 0xB8;
>     uint constant LIST_SHORT_START = 0xC0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_START = 0xF8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        176
Source: 
>     uint constant LIST_SHORT_START = 0xC0;
>     uint constant LIST_LONG_START = 0xF8;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        178
Source: 
> 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant LIST_LONG_OFFSET = 0xF7;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLP
Line:        179
Source: 
>     uint constant DATA_LONG_OFFSET = 0xB7;
>     uint constant LIST_LONG_OFFSET = 0xF7;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        391
Source: 
> 
>     uint8 constant STRING_OFFSET = 0x80;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant LIST_OFFSET = 0xc0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RLPEncode
Line:        392
Source: 
>     uint8 constant STRING_OFFSET = 0x80;
>     uint8 constant LIST_OFFSET = 0xc0;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        642
Source: 
>   // solium-disable max-len
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        643
Source: 
>   bytes4 public constant APPLY_IN_CHILDCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInChildChain(bool,uint256,address,bytes32,bytes)"));
>   bytes4 public constant APPLY_IN_ROOTCHAIN_SIGNATURE = bytes4(keccak256("applyRequestInRootChain(bool,uint256,address,bytes32,bytes)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-enable max-len

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        647
Source: 
>   address public constant NA = address(0);
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_LIMIT = 100000;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        648
Source: 
>   uint public constant NA_TX_GAS_PRICE = 1e9;
>   uint public constant NA_TX_GAS_LIMIT = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1513
Source: 
>   // N NRBs are submitted or when preparing URBs submission.
>   uint public NRELength;
>    ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1519
Source: 
>   // First not-empty request epochs of a fork
>   mapping (uint => uint) public firstFilledORENumber;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1535
Source: 
>   // epoch number of last non-empty request epoch.
>   mapping(uint => uint) public lastNonEmptyRequestEpoch;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1559
Source: 
>    */
>   address constant public NULL_ADDRESS = 0x0000000000000000000000000000000000000000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1566
Source: 
>   uint public constant COST_URB = 0;
>   uint public constant COST_ORB = 0;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant COST_NRB = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1568
Source: 
>   uint public constant COST_NRB = 0;
>   uint public constant PREPARE_TIMEOUT = 60; // 60 sec for dev
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1592
Source: 
>   // Gas limit for request trasaction
>   uint public constant REQUEST_GAS = 100000;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Storage
Line:        1594
Source: 
> 
>   bool public constant isLayer2 = true;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Base
Line:        1716
Source: 
>   // EpochHandler functions
>   bytes4 constant PREPARE_TO_SUTMIBT_ORB_SIG = bytes4(keccak256("prepareORE()"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant PREPARE_TO_SUTMIBT_NRB_SIG = bytes4(keccak256("prepareNRE()"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Base
Line:        1718
Source: 
>   bytes4 constant PREPARE_TO_SUTMIBT_NRB_SIG = bytes4(keccak256("prepareNRE()"));
>   bytes4 constant PREPARE_TO_SUTMIBT_URB_SIG = bytes4(keccak256("prepareToSubmitURB()"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant PREPARE_ORE_AFTER_URE_SIG = bytes4(keccak256("prepareOREAfterURE()"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Base
Line:        1719
Source: 
>   bytes4 constant PREPARE_TO_SUTMIBT_URB_SIG = bytes4(keccak256("prepareToSubmitURB()"));
>   bytes4 constant PREPARE_ORE_AFTER_URE_SIG = bytes4(keccak256("prepareOREAfterURE()"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bytes4 constant PREPARE_NRE_AFTER_URE_SIG = bytes4(keccak256("prepareNREAfterURE()"));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Base
Line:        1720
Source: 
>   bytes4 constant PREPARE_ORE_AFTER_URE_SIG = bytes4(keccak256("prepareOREAfterURE()"));
>   bytes4 constant PREPARE_NRE_AFTER_URE_SIG = bytes4(keccak256("prepareNREAfterURE()"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Layer2Base
Line:        1725
Source: 
>   bytes4 constant SUBMIT_ORB_SIG = bytes4(keccak256("submitORB(uint256,bytes32,bytes32,bytes32)"));
>   bytes4 constant SUBMIT_URB_SIG = bytes4(keccak256("submitURB(uint256,bytes32,bytes32,bytes32)"));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // solium-endable mixedcase

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Data
Line:        646
Source: 
> 
>   address public constant NA = address(0);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public constant NA_TX_GAS_PRICE = 1e9;

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    Layer2
Line:        2545
Source: 
>       // short circuit if challenge period doesn't end
>       if (pb.timestamp + CP_COMPUTATION > block.timestamp) {
>                                            ^^^^^^^^^^^^^^^
>         return false;

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    Layer2
Line:        2597
Source: 
>     // return if challenge period end
>     return epoch.NRE.submittedAt + CP_WITHHOLDING <= block.timestamp;
>                                                       ^^^^^^^^^^^^^^^
>     // return true;

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    Layer2
Line:        2142
Source: 
> 
>     require(_pb.finalizedAt + CP_EXIT > block.timestamp);
>                                          ^^^^^^^^^^^^^^^
>     require(_pb.finalized);

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    Layer2
Line:        2176
Source: 
>     // check if challenge period does not end yet
>     require(pb.timestamp + CP_COMPUTATION > block.timestamp);
>                                              ^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    Layer2
Line:        2305
Source: 
>     require(pb.finalized);
>     require(pb.finalizedAt + CP_EXIT <= block.timestamp);
>                                          ^^^^^^^^^^^^^^^
> 

[0m

---------------------------------------------
For contract 0x4d982203992f75289b9e323117b2b81a27bbfbb6.sol
Tool Runtime = 261.2972712779956 seconds
#############################################