pragma directive defines a prior version to 0.5.12. Changing pragma version to 0.5.12....
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        252
Source: 
>     // Skt
>     ISkt public SKT = ISkt(0x2fB74C37Fb2C8DC76beA1910737aa9E3e2b53535);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        261
Source: 
>     // Referral rewards, 35% for 15 levels
>     uint16 private WHITELIST_REF_REWARDS_PCT_SUM = 35; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        263
Source: 
> 	
>     uint16[3] private WHITELIST_REF_REWARDS_PCT = [
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         15,  // 15% for Level.1

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        271
Source: 
>     // Wei & Gas
>     uint72 private WEI_MIN = 0.1 ether;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint72 private WEI_MAX = 100 ether;     

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        272
Source: 
>     uint72 private WEI_MIN = 0.1 ether;     
>     uint72 private WEI_MAX = 100 ether;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint72 private WEI_BONUS = 10 ether;    

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        273
Source: 
>     uint72 private WEI_MAX = 100 ether;     
>     uint72 private WEI_BONUS = 10 ether;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint24 private GAS_MIN = 3000000;       

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        274
Source: 
>     uint72 private WEI_BONUS = 10 ether;    
>     uint24 private GAS_MIN = 3000000;       
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint24 private GAS_EX  = 1500000;        

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        275
Source: 
>     uint24 private GAS_MIN = 3000000;       
>     uint24 private GAS_EX  = 1500000;        
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        278
Source: 
>     // Price
>     uint256 private SKT_USD_PRICE_START = 100000;       
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private SKT_USD_PRICE_STEP = 10000;         

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        279
Source: 
>     uint256 private SKT_USD_PRICE_START = 100000;       
>     uint256 private SKT_USD_PRICE_STEP = 10000;         
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        281
Source: 
>    
>     uint256 private STAGE_USD_CAP_START = 9000000000000;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private STAGE_USD_CAP_STEP = 900000000000;       

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        282
Source: 
>     uint256 private STAGE_USD_CAP_START = 9000000000000;    
>     uint256 private STAGE_USD_CAP_STEP = 900000000000;       
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private STAGE_USD_CAP_MAX = 90000000000000;   

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        283
Source: 
>     uint256 private STAGE_USD_CAP_STEP = 900000000000;       
>     uint256 private STAGE_USD_CAP_MAX = 90000000000000;   
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        285
Source: 
>     
>     uint256 private STAGE_SKT_CAP_START = 900000000000;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private STAGE_SKT_CAP_STEP  = 900000000000;       

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        286
Source: 
>     uint256 private STAGE_SKT_CAP_START = 900000000000;    
>     uint256 private STAGE_SKT_CAP_STEP  = 900000000000;       
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private STAGE_SKT_CAP_MAX   = 90000000000000;    

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        287
Source: 
>     uint256 private STAGE_SKT_CAP_STEP  = 900000000000;       
>     uint256 private STAGE_SKT_CAP_MAX   = 90000000000000;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SktPublicSale
Line:        291
Source: 
>     
>     uint16 private STAGE_MAX = 100;  
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        151
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Pausable
Line:        195
Source: 
>      */
>     function paused() public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _paused;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        151
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SktPublicSale
Line:        354
Source: 
>      */
>     function startTimestamp() public view returns (uint32) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _startTimestamp;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SktPublicSale
Line:        421
Source: 
>      */
>     function usd2SKTByStage(uint256 usdAmount, uint16 stageIndex) public view returns (uint256) {
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SktPublicSale
Line:        433
Source: 
>      */
>     function status() public view returns (uint256 auditEtherPrice,
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                                            uint16 stage,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SktPublicSale
Line:        527
Source: 
>      */
>     function stageStatus(uint16 stageIndex) public view returns (uint256 SKTUsdPrice,
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                                                                  uint256 SKTCap,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SktPublicSale
Line:        561
Source: 
>      */
>     function accountQuery(address account) public view returns (uint256 SKTIssued,
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                                                                 uint256 SKTWhitelisted,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SktPublicSale
Line:        640
Source: 
>             // Refund wei back
>             msg.sender.transfer(__weiRemain);
>                             ^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SktPublicSale
Line:        660
Source: 
>          
>         _receiver.transfer(__weiTeam);
>                         ^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SktPublicSale
Line:        807
Source: 
>         
>         assert(SKT.transfer(msg.sender, amount));
>                                ^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SktPublicSale
Line:        764
Source: 
> 
>         assert(SKT.transfer(msg.sender, amount));
>                                ^^^^^^^^^^^^^^^^^^
>         emit SKTIssuedTransfered(_stage, msg.sender, amount, _etherPrice, usdAmount);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SktPublicSale
Line:        673
Source: 
> 		
>         _inWhitelist_ = SKT.inWhitelist(msg.sender);
>                                         ^^^^^^^^^^^^
> 		

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    SktPublicSale
Line:        849
Source: 
>             if(__receiverRefer!=address(this)){
>                 __receiverRefer.transfer(__weiReward);
>                                 ^^^^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    SktPublicSale
Line:        681
Source: 
> 			
>             address __refAccount = SKT.referrer(__cursor);
>                                                    ^^^^^^^
>             

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SktPublicSale
Line:        361
Source: 
>      */
>     function setStartTimestamp(uint32 timestamp) external onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _startTimestamp = timestamp;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SktPublicSale
Line:        370
Source: 
>      */
>     function setEtherPrice(uint256 value) external onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _etherPrice = value;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SktPublicSale
Line:        421
Source: 
>      */
>     function usd2SKTByStage(uint256 usdAmount, uint16 stageIndex) public view returns (uint256) {
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SktPublicSale
Line:        561
Source: 
>      */
>     function accountQuery(address account) public view returns (uint256 SKTIssued,
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                                                                 uint256 SKTWhitelisted,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SafeMath256
Line:        47
Source: 
>         }
>         c = a * b;
>             ^^^^^
>         assert(c / a == b);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SafeMath256
Line:        59
Source: 
>         uint256 c = a / b;
>         assert(a == b * c + a % b);
>                     ^^^^^
>         return a / b;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SktPublicSale
Line:        807
Source: 
>         
>         assert(SKT.transfer(msg.sender, amount));
>                                ^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SktPublicSale
Line:        764
Source: 
> 
>         assert(SKT.transfer(msg.sender, amount));
>                                ^^^^^^^^^^^^^^^^^^
>         emit SKTIssuedTransfered(_stage, msg.sender, amount, _etherPrice, usdAmount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SktPublicSale
Line:        681
Source: 
> 			
>             address __refAccount = SKT.referrer(__cursor);
>                                                    ^^^^^^^
>             

[0m
[0;31mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Violation
Contract:    SktPublicSale
Line:        673
Source: 
> 		
>         _inWhitelist_ = SKT.inWhitelist(msg.sender);
>                                         ^^^^^^^^^^^^
> 		

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    SktPublicSale
Line:        640
Source: 
>             // Refund wei back
>             msg.sender.transfer(__weiRemain);
>                             ^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    SktPublicSale
Line:        660
Source: 
>          
>         _receiver.transfer(__weiTeam);
>                         ^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    SktPublicSale
Line:        849
Source: 
>             if(__receiverRefer!=address(this)){
>                 __receiverRefer.transfer(__weiReward);
>                                 ^^^^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Ownable
Line:        169
Source: 
>         require(newOwner != _owner);
>         address __previousOwner = _owner;
>         ^^^^^^^^^^^^^^^^^^^^^^^
>         _owner = newOwner;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        252
Source: 
>     // Skt
>     ISkt public SKT = ISkt(0x2fB74C37Fb2C8DC76beA1910737aa9E3e2b53535);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        261
Source: 
>     // Referral rewards, 35% for 15 levels
>     uint16 private WHITELIST_REF_REWARDS_PCT_SUM = 35; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        263
Source: 
> 	
>     uint16[3] private WHITELIST_REF_REWARDS_PCT = [
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         15,  // 15% for Level.1

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        271
Source: 
>     // Wei & Gas
>     uint72 private WEI_MIN = 0.1 ether;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint72 private WEI_MAX = 100 ether;     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        272
Source: 
>     uint72 private WEI_MIN = 0.1 ether;     
>     uint72 private WEI_MAX = 100 ether;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint72 private WEI_BONUS = 10 ether;    

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        273
Source: 
>     uint72 private WEI_MAX = 100 ether;     
>     uint72 private WEI_BONUS = 10 ether;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint24 private GAS_MIN = 3000000;       

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        274
Source: 
>     uint72 private WEI_BONUS = 10 ether;    
>     uint24 private GAS_MIN = 3000000;       
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint24 private GAS_EX  = 1500000;        

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        275
Source: 
>     uint24 private GAS_MIN = 3000000;       
>     uint24 private GAS_EX  = 1500000;        
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        278
Source: 
>     // Price
>     uint256 private SKT_USD_PRICE_START = 100000;       
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private SKT_USD_PRICE_STEP = 10000;         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        279
Source: 
>     uint256 private SKT_USD_PRICE_START = 100000;       
>     uint256 private SKT_USD_PRICE_STEP = 10000;         
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        281
Source: 
>    
>     uint256 private STAGE_USD_CAP_START = 9000000000000;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private STAGE_USD_CAP_STEP = 900000000000;       

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        282
Source: 
>     uint256 private STAGE_USD_CAP_START = 9000000000000;    
>     uint256 private STAGE_USD_CAP_STEP = 900000000000;       
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private STAGE_USD_CAP_MAX = 90000000000000;   

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        283
Source: 
>     uint256 private STAGE_USD_CAP_STEP = 900000000000;       
>     uint256 private STAGE_USD_CAP_MAX = 90000000000000;   
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        285
Source: 
>     
>     uint256 private STAGE_SKT_CAP_START = 900000000000;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private STAGE_SKT_CAP_STEP  = 900000000000;       

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        286
Source: 
>     uint256 private STAGE_SKT_CAP_START = 900000000000;    
>     uint256 private STAGE_SKT_CAP_STEP  = 900000000000;       
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private STAGE_SKT_CAP_MAX   = 90000000000000;    

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        287
Source: 
>     uint256 private STAGE_SKT_CAP_STEP  = 900000000000;       
>     uint256 private STAGE_SKT_CAP_MAX   = 90000000000000;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        289
Source: 
>     
>     uint256 private _SKTUsdPrice = SKT_USD_PRICE_START; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        291
Source: 
>     
>     uint16 private STAGE_MAX = 100;  
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        299
Source: 
>     uint256 private _txs; 
>     uint256 private _SKTTxs;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _SKTBonusTxs;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        300
Source: 
>     uint256 private _SKTTxs;
>     uint256 private _SKTBonusTxs;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _SKTWhitelistTxs;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        301
Source: 
>     uint256 private _SKTBonusTxs;
>     uint256 private _SKTWhitelistTxs;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _SKTIssued;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        302
Source: 
>     uint256 private _SKTWhitelistTxs;
>     uint256 private _SKTIssued;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _SKTBonus;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        303
Source: 
>     uint256 private _SKTIssued;
>     uint256 private _SKTBonus;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _SKTWhitelist;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        304
Source: 
>     uint256 private _SKTBonus;
>     uint256 private _SKTWhitelist;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _usdSold;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        413
Source: 
>      */
>     function SKT2usd(uint256 usdAmount) private view returns (uint256) {
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        495
Source: 
>     function stageUsdCap(uint16 stageIndex) private view returns (uint256) {
>         uint256 __usdCap = STAGE_USD_CAP_START.add(STAGE_USD_CAP_STEP.mul(stageIndex));
>                         ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        506
Source: 
>     function stageSKTCapGet(uint16 stageIndex) private view returns (uint256) {
>         uint256 __sktCap = STAGE_SKT_CAP_START.add(STAGE_SKT_CAP_STEP.mul(stageIndex));
>                         ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        594
Source: 
> 		
>         uint256 __usdAmount = wei2usd(msg.value);
>                         ^^^^^^^^^^^^^^^^^^^
>         uint256 __usdRemain = __usdAmount;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        595
Source: 
>         uint256 __usdAmount = wei2usd(msg.value);
>         uint256 __usdRemain = __usdAmount;
>                         ^^^^^^^^^^^^^^^^^^
>         uint256 __sktRemain = usd2SKT(__usdAmount);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        596
Source: 
>         uint256 __usdRemain = __usdAmount;
>         uint256 __sktRemain = usd2SKT(__usdAmount);
>                         ^^^^^^^^^^^^^^^^^^^
>         uint256 __SKTIssued; 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        597
Source: 
>         uint256 __sktRemain = usd2SKT(__usdAmount);
>         uint256 __SKTIssued; 
>                         ^^^^^
>         uint256 __usdUsed;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        598
Source: 
>         uint256 __SKTIssued; 
>         uint256 __usdUsed;
>                         ^^
>         uint256 __weiUsed;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        599
Source: 
>         uint256 __usdUsed;
>         uint256 __weiUsed;
>                         ^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        610
Source: 
> 			
>             uint256 __txSKTIssued;
>                             ^^^^^^
> 			

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        635
Source: 
>         if (__usdRemain > 0) {
>             uint256 __weiRemain = usd2wei(__usdRemain);
>                             ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        654
Source: 
>         // Wei team
>         uint256 __weiTeam;
>                         ^^
>        

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        677
Source: 
> 		
>         address __cursor = msg.sender;
>                         ^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        681
Source: 
> 			
>             address __refAccount = SKT.referrer(__cursor);
>                             ^^^^^^^^^^^^^^^^^^^^
>             

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        701
Source: 
> 		
> 		uint256 __stageSktCap = STAGE_SKT_CAP_STEP;
>                   ^^^^^^^^^^^^^^^^^^^^^
> 		uint256 __SKTsued;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        702
Source: 
> 		uint256 __stageSktCap = STAGE_SKT_CAP_STEP;
> 		uint256 __SKTsued;
>                   ^^
>         uint256 __SKTIssued;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        703
Source: 
> 		uint256 __SKTsued;
>         uint256 __SKTIssued;
>                         ^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        726
Source: 
>         
>         uint256 __usdUsed = SKT2usd(__SKTIssued);
>                         ^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        731
Source: 
>         
>         uint256 __sktRemain = __SKTsued.sub(__SKTIssued);
>                         ^^^^^^^^^^^^^^^^^^^
>         uint256 __usdRemain = usdAmount.sub(__usdUsed);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        732
Source: 
>         uint256 __sktRemain = __SKTsued.sub(__SKTIssued);
>         uint256 __usdRemain = usdAmount.sub(__usdUsed);
>                         ^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        781
Source: 
> 		
> 		uint256 __stageSktCap = STAGE_SKT_CAP_STEP;//stageSKTCapGet(_stage);
>                   ^^^^^^^^^^^^^^^^^^^^^
> 	    

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        783
Source: 
> 	    
> 	    uint256 __remainSKT = amount; 
>                      ^^^^^^^^^^^^^^
>       

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        787
Source: 
>             
>             uint256 __transferSKT = __stageSktCap.sub(_stageSKTIssued[_stage]);
>                             ^^^^^^^^^^^^^^^^^^^^^
>             

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        835
Source: 
>     function sendWhitelistReferralRewards(uint256 weiAmount) private {
>         uint256 __weiRemain = weiAmount;
>                         ^^^^^^^^^^^^^^^^
>          

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        839
Source: 
> 			
>             uint256 __weiReward = weiAmount.mul(_rewards_[i]).div(100);
>                             ^^^^^^^^^^^^^^^^^^^
>             

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SktPublicSale
Line:        841
Source: 
>             
>             address payable __receiverRefer = address(uint160(_referrers_[i]));
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 		

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        14
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SktPublicSale
Line:        255
Source: 
>     // Start timestamp
>     uint32 _startTimestamp;
>     ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SktPublicSale
Line:        274
Source: 
>     uint72 private WEI_BONUS = 10 ether;    
>     uint24 private GAS_MIN = 3000000;       
>                              ^^^^^^^
>     uint24 private GAS_EX  = 1500000;        

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SktPublicSale
Line:        275
Source: 
>     uint24 private GAS_MIN = 3000000;       
>     uint24 private GAS_EX  = 1500000;        
>                              ^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SktPublicSale
Line:        278
Source: 
>     // Price
>     uint256 private SKT_USD_PRICE_START = 100000;       
>                                           ^^^^^^
>     uint256 private SKT_USD_PRICE_STEP = 10000;         

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SktPublicSale
Line:        281
Source: 
>    
>     uint256 private STAGE_USD_CAP_START = 9000000000000;    
>                                           ^^^^^^^^^^^^^
>     uint256 private STAGE_USD_CAP_STEP = 900000000000;       

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SktPublicSale
Line:        282
Source: 
>     uint256 private STAGE_USD_CAP_START = 9000000000000;    
>     uint256 private STAGE_USD_CAP_STEP = 900000000000;       
>                                          ^^^^^^^^^^^^
>     uint256 private STAGE_USD_CAP_MAX = 90000000000000;   

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SktPublicSale
Line:        283
Source: 
>     uint256 private STAGE_USD_CAP_STEP = 900000000000;       
>     uint256 private STAGE_USD_CAP_MAX = 90000000000000;   
>                                         ^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SktPublicSale
Line:        285
Source: 
>     
>     uint256 private STAGE_SKT_CAP_START = 900000000000;    
>                                           ^^^^^^^^^^^^
>     uint256 private STAGE_SKT_CAP_STEP  = 900000000000;       

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SktPublicSale
Line:        286
Source: 
>     uint256 private STAGE_SKT_CAP_START = 900000000000;    
>     uint256 private STAGE_SKT_CAP_STEP  = 900000000000;       
>                                           ^^^^^^^^^^^^
>     uint256 private STAGE_SKT_CAP_MAX   = 90000000000000;    

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SktPublicSale
Line:        287
Source: 
>     uint256 private STAGE_SKT_CAP_STEP  = 900000000000;       
>     uint256 private STAGE_SKT_CAP_MAX   = 90000000000000;    
>                                           ^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SktPublicSale
Line:        407
Source: 
>       
> 		return usdAmount.mul(1000000).div(_SKTUsdPrice);
>                                        ^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SktPublicSale
Line:        417
Source: 
>     }
> 
> 
>     /**

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SktPublicSale
Line:        426
Source: 
>         }
>         return usdAmount.mul(1000000).div(stageSKTUsdPrice(stageIndex));
>                                              ^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    SktPublicSale
Line:        640
Source: 
>             // Refund wei back
>             msg.sender.transfer(__weiRemain);
>                             ^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    SktPublicSale
Line:        660
Source: 
>          
>         _receiver.transfer(__weiTeam);
>                         ^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    SktPublicSale
Line:        849
Source: 
>             if(__receiverRefer!=address(this)){
>                 __receiverRefer.transfer(__weiReward);
>                                 ^^^^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SktPublicSale
Line:        640
Source: 
>             // Refund wei back
>             msg.sender.transfer(__weiRemain);
>                             ^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SktPublicSale
Line:        660
Source: 
>          
>         _receiver.transfer(__weiTeam);
>                         ^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SktPublicSale
Line:        849
Source: 
>             if(__receiverRefer!=address(this)){
>                 __receiverRefer.transfer(__weiReward);
>                                 ^^^^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SktPublicSale
Line:        640
Source: 
>             // Refund wei back
>             msg.sender.transfer(__weiRemain);
>                             ^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SktPublicSale
Line:        660
Source: 
>          
>         _receiver.transfer(__weiTeam);
>                         ^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SktPublicSale
Line:        849
Source: 
>             if(__receiverRefer!=address(this)){
>                 __receiverRefer.transfer(__weiReward);
>                                 ^^^^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SktPublicSale
Line:        807
Source: 
>         
>         assert(SKT.transfer(msg.sender, amount));
>                                ^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SktPublicSale
Line:        764
Source: 
> 
>         assert(SKT.transfer(msg.sender, amount));
>                                ^^^^^^^^^^^^^^^^^^
>         emit SKTIssuedTransfered(_stage, msg.sender, amount, _etherPrice, usdAmount);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SktPublicSale
Line:        673
Source: 
> 		
>         _inWhitelist_ = SKT.inWhitelist(msg.sender);
>                                         ^^^^^^^^^^^^
> 		

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SktPublicSale
Line:        681
Source: 
> 			
>             address __refAccount = SKT.referrer(__cursor);
>                                                    ^^^^^^^
>             

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SktPublicSale
Line:        255
Source: 
>     // Start timestamp
>     uint32 _startTimestamp;
>     ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SktPublicSale
Line:        258
Source: 
>     // Audit ether price
>     uint256 private _etherPrice;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SktPublicSale
Line:        298
Source: 
>     // Sum
>     uint256 private _txs; 
>     ^^^^^^^^^^^^^^^^^^^^
>     uint256 private _SKTTxs;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SktPublicSale
Line:        299
Source: 
>     uint256 private _txs; 
>     uint256 private _SKTTxs;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _SKTBonusTxs;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SktPublicSale
Line:        300
Source: 
>     uint256 private _SKTTxs;
>     uint256 private _SKTBonusTxs;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _SKTWhitelistTxs;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SktPublicSale
Line:        301
Source: 
>     uint256 private _SKTBonusTxs;
>     uint256 private _SKTWhitelistTxs;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _SKTIssued;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SktPublicSale
Line:        302
Source: 
>     uint256 private _SKTWhitelistTxs;
>     uint256 private _SKTIssued;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _SKTBonus;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SktPublicSale
Line:        303
Source: 
>     uint256 private _SKTIssued;
>     uint256 private _SKTBonus;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _SKTWhitelist;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SktPublicSale
Line:        304
Source: 
>     uint256 private _SKTBonus;
>     uint256 private _SKTWhitelist;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _usdSold;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SktPublicSale
Line:        305
Source: 
>     uint256 private _SKTWhitelist;
>     uint256 private _usdSold;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _weiSold;  

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SktPublicSale
Line:        306
Source: 
>     uint256 private _usdSold;
>     uint256 private _weiSold;  
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _weiRefRewarded;  

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SktPublicSale
Line:        307
Source: 
>     uint256 private _weiSold;  
>     uint256 private _weiRefRewarded;  
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _weiTeam; 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SktPublicSale
Line:        308
Source: 
>     uint256 private _weiRefRewarded;  
>     uint256 private _weiTeam; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SktPublicSale
Line:        313
Source: 
>     // During tx
>     bool private _inWhitelist_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>    

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    SktPublicSale
Line:        640
Source: 
>             // Refund wei back
>             msg.sender.transfer(__weiRemain);
>                             ^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    SktPublicSale
Line:        660
Source: 
>          
>         _receiver.transfer(__weiTeam);
>                         ^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    SktPublicSale
Line:        849
Source: 
>             if(__receiverRefer!=address(this)){
>                 __receiverRefer.transfer(__weiReward);
>                                 ^^^^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        646
Source: 
> 		
>             _txs = _txs.add(1);
>                             ^^^
> 		

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        648
Source: 
> 		
>             _weiSold = _weiSold.add(__weiUsed);
>                             ^^^^^^^^^^^^^^^^^^^
> 		

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        658
Source: 
> 
>         _weiTeam = _weiTeam.add(__weiTeam);
>                         ^^^^^^^^^^^^^^^^^^^
>          

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        843
Source: 
> 		
>             _weiRefRewarded = _weiRefRewarded.add(__weiReward);
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 		

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        845
Source: 
> 		
>             _accountWeiRefRewarded[__receiverRefer] = _accountWeiRefRewarded[__receiverRefer].add(__weiReward);
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             __weiRemain = __weiRemain.sub(__weiReward);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        776
Source: 
>        
> 		_SKTWhitelistTxs = _SKTWhitelistTxs.add(1);
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 		_SKTBonusTxs = _SKTBonusTxs.add(1) ;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        777
Source: 
> 		_SKTWhitelistTxs = _SKTWhitelistTxs.add(1);
> 		_SKTBonusTxs = _SKTBonusTxs.add(1) ;
>                   ^^^^^^^^^^^^^^^^^^^^
> 		

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        790
Source: 
>                 
>             _stageSKTIssued[_stage] = _stageSKTIssued[_stage].add(__transferSKT);
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             __remainSKT = __remainSKT.sub(__transferSKT);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        819
Source: 
>         emit StageClosed(_stage, msg.sender);
>         _stage = _stage.add(1);
>                         ^^^^^^^
>         _SKTUsdPrice = stageSKTUsdPrice(_stage);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        820
Source: 
>         _stage = _stage.add(1);
>         _SKTUsdPrice = stageSKTUsdPrice(_stage);
>                         ^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        824
Source: 
>         {
>             _stage = STAGE_MAX.sub(1);
>                             ^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        797
Source: 
>         
>         _stageSKTIssued[_stage] = _stageSKTIssued[_stage].add(__remainSKT);
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        799
Source: 
>         
>         _SKTWhitelist = _SKTWhitelist.add(amount);
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 		

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        803
Source: 
>         
> 		_SKTIssued = _SKTIssued.add(amount);
>                   ^^^^^^^^^^^^^^^^^^^^
> 		_SKTBonus =  _SKTBonus.add(amount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        804
Source: 
> 		_SKTIssued = _SKTIssued.add(amount);
> 		_SKTBonus =  _SKTBonus.add(amount);
>                   ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        756
Source: 
>         
> 		_SKTTxs = _SKTTxs.add(1);
>                   ^^^^^^^^^
> 	

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        758
Source: 
> 	
>         _SKTIssued = _SKTIssued.add(amount);
>                         ^^^^^^^^^^^^^^^^^^^^
> 		

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        760
Source: 
> 		
>         _stageSKTIssued[_stage] = _stageSKTIssued[_stage].add(amount);
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        747
Source: 
>        
>         _stageUsdSold[_stage] = _stageUsdSold[_stage].add(usdAmount);                   // stage sold, in USD
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _usdSold = _usdSold.add(usdAmount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        748
Source: 
>         _stageUsdSold[_stage] = _stageUsdSold[_stage].add(usdAmount);                   // stage sold, in USD
>         _usdSold = _usdSold.add(usdAmount);
>                         ^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        670
Source: 
>     function setTemporaryVariables() private {
>         delete _referrers_;
>                         ^^^
>         delete _rewards_;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        671
Source: 
>         delete _referrers_;
>         delete _rewards_;
>                         ^
> 		

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SktPublicSale
Line:        673
Source: 
> 		
>         _inWhitelist_ = SKT.inWhitelist(msg.sender);
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 		

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Ownable
Line:        134
Source: 
>     address private _owner;
>     address payable internal _receiver;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SktPublicSale
Line:        261
Source: 
>     // Referral rewards, 35% for 15 levels
>     uint16 private WHITELIST_REF_REWARDS_PCT_SUM = 35; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SktPublicSale
Line:        273
Source: 
>     uint72 private WEI_MAX = 100 ether;     
>     uint72 private WEI_BONUS = 10 ether;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint24 private GAS_MIN = 3000000;       

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SktPublicSale
Line:        281
Source: 
>    
>     uint256 private STAGE_USD_CAP_START = 9000000000000;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private STAGE_USD_CAP_STEP = 900000000000;       

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SktPublicSale
Line:        282
Source: 
>     uint256 private STAGE_USD_CAP_START = 9000000000000;    
>     uint256 private STAGE_USD_CAP_STEP = 900000000000;       
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private STAGE_USD_CAP_MAX = 90000000000000;   

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SktPublicSale
Line:        283
Source: 
>     uint256 private STAGE_USD_CAP_STEP = 900000000000;       
>     uint256 private STAGE_USD_CAP_MAX = 90000000000000;   
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SktPublicSale
Line:        285
Source: 
>     
>     uint256 private STAGE_SKT_CAP_START = 900000000000;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private STAGE_SKT_CAP_STEP  = 900000000000;       

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SktPublicSale
Line:        287
Source: 
>     uint256 private STAGE_SKT_CAP_STEP  = 900000000000;       
>     uint256 private STAGE_SKT_CAP_MAX   = 90000000000000;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SktPublicSale
Line:        329
Source: 
>     mapping (address => uint256) private _accountSKTIssued;
>     mapping (address => uint256) private _accountSKTBonus;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping (address => uint256) private _accountSKTWhitelisted;

[0m

---------------------------------------------
For contract 0x547b2fd42c797b532f837b9c99a5f7ffe517edb2.sol
Tool Runtime = 375.01813674998994 seconds
#############################################