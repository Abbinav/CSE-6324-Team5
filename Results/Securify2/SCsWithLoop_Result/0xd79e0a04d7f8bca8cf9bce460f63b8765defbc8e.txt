[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Pairs
Line:        29
Source: 
>         IUniswapV2Factory uniswapv2factory = IUniswapV2Factory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);
>         uint count                         = uniswapv2factory.allPairsLength();
>                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pairs                              = new address[](count);

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    Pairs
Line:        38
Source: 
>         for (uint i = 0; i < count; i++) {
>             IUniswapV2Pair pair                 = IUniswapV2Pair(uniswapv2factory.allPairs(i));
>                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             pairs[i]                            = address(pair);

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    Pairs
Line:        40
Source: 
>             pairs[i]                            = address(pair);
>             tokens0[i]                          = pair.token0();
>                                                   ^^^^^^^^^^^^^
>             tokens1[i]                          = pair.token1();

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    Pairs
Line:        41
Source: 
>             tokens0[i]                          = pair.token0();
>             tokens1[i]                          = pair.token1();
>                                                   ^^^^^^^^^^^^^
>             (reserves0[i], reserves1[i], dummy) = pair.getReserves();

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    Pairs
Line:        42
Source: 
>             tokens1[i]                          = pair.token1();
>             (reserves0[i], reserves1[i], dummy) = pair.getReserves();
>                                                   ^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity^0.7.0;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Pairs
Line:        38
Source: 
>         for (uint i = 0; i < count; i++) {
>             IUniswapV2Pair pair                 = IUniswapV2Pair(uniswapv2factory.allPairs(i));
>                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             pairs[i]                            = address(pair);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Pairs
Line:        40
Source: 
>             pairs[i]                            = address(pair);
>             tokens0[i]                          = pair.token0();
>                                                   ^^^^^^^^^^^^^
>             tokens1[i]                          = pair.token1();

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Pairs
Line:        41
Source: 
>             tokens0[i]                          = pair.token0();
>             tokens1[i]                          = pair.token1();
>                                                   ^^^^^^^^^^^^^
>             (reserves0[i], reserves1[i], dummy) = pair.getReserves();

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Pairs
Line:        42
Source: 
>             tokens1[i]                          = pair.token1();
>             (reserves0[i], reserves1[i], dummy) = pair.getReserves();
>                                                   ^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Pairs
Line:        40
Source: 
>             pairs[i]                            = address(pair);
>             tokens0[i]                          = pair.token0();
>                                                   ^^^^^^^^^^^^^
>             tokens1[i]                          = pair.token1();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Pairs
Line:        41
Source: 
>             tokens0[i]                          = pair.token0();
>             tokens1[i]                          = pair.token1();
>                                                   ^^^^^^^^^^^^^
>             (reserves0[i], reserves1[i], dummy) = pair.getReserves();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Pairs
Line:        42
Source: 
>             tokens1[i]                          = pair.token1();
>             (reserves0[i], reserves1[i], dummy) = pair.getReserves();
>                                                   ^^^^^^^^^^^^^^^^^^
>         }

[0m

---------------------------------------------
For contract 0xd79e0a04d7f8bca8cf9bce460f63b8765defbc8e.sol
Tool Runtime = 1.9038466110000627 seconds
#############################################