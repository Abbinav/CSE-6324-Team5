pragma directive defines a prior version to 0.5.12. Changing pragma version to 0.5.12....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BaseMigration
Line:        41
Source: 
> 
>     function convertPurity(uint16 purity)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BaseMigration
Line:        49
Source: 
> 
>     function convertProto(uint16 proto)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SplitV1Migration
Line:        289
Source: 
> 
>     function migrateAll(
>     ^^^^^^^^^^^^^^^^^^^^
>         IPackFour pack,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SplitV1Migration
Line:        322
Source: 
>             uint256 randomness,
>         ) = pack.purchases(id);
>             ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SplitV1Migration
Line:        360
Source: 
>         // Batch Mint cards (details passed as function args)
>         uint startID = cards.mintCards(user, sdl.protos, sdl.qualities);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    SplitV1Migration
Line:        353
Source: 
>                 uint index = (i * size) + j;
>                 (sdl.proto, sdl.purity) = pack.getCardDetails(i + packStart, j, randomness);
>                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 sdl.protos[index] = convertProto(sdl.proto);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SplitV1Migration
Line:        289
Source: 
> 
>     function migrateAll(
>     ^^^^^^^^^^^^^^^^^^^^
>         IPackFour pack,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SplitV1Migration
Line:        305
Source: 
> 
>     function migrate(
>     ^^^^^^^^^^^^^^^^^
>         IPackFour pack,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BaseMigration
Line:        41
Source: 
> 
>     function convertPurity(uint16 purity)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SplitV1Migration
Line:        257
Source: 
>     uint16 public newLimit;
>     uint16 public constant size = 5;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SplitV1Migration
Line:        318
Source: 
>         (
>             uint16 current,
>             ^^^^^^^^^^^^^^
>             uint16 count,

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SplitV1Migration
Line:        254
Source: 
> 
>     ICards cards;
>     ^^^^^^^^^^^^
>     uint public oldLimit;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SplitV1Migration
Line:        322
Source: 
>             uint256 randomness,
>         ) = pack.purchases(id);
>             ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SplitV1Migration
Line:        353
Source: 
>                 uint index = (i * size) + j;
>                 (sdl.proto, sdl.purity) = pack.getCardDetails(i + packStart, j, randomness);
>                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 sdl.protos[index] = convertProto(sdl.proto);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SplitV1Migration
Line:        360
Source: 
>         // Batch Mint cards (details passed as function args)
>         uint startID = cards.mintCards(user, sdl.protos, sdl.qualities);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    SplitV1Migration
Line:        345
Source: 
> 
>         sdl.protos = new uint16[](len);
>         ^^^
>         sdl.qualities = new uint8[](len);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    SplitV1Migration
Line:        362
Source: 
> 
>         v1Migrated[address(pack)][id] += len;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SplitV1Migration
Line:        353
Source: 
>                 uint index = (i * size) + j;
>                 (sdl.proto, sdl.purity) = pack.getCardDetails(i + packStart, j, randomness);
>                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 sdl.protos[index] = convertProto(sdl.proto);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SplitV1Migration
Line:        355
Source: 
>                 sdl.protos[index] = convertProto(sdl.proto);
>                 sdl.qualities[index] = convertPurity(sdl.purity);
>                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
>             }

[0m

---------------------------------------------
For contract 0x1d4f16c44d3385832caff0cd43032eefbb485143.sol
Tool Runtime = 5.564494226000079 seconds
#############################################