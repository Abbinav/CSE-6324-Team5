[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UniswapV2
Line:        178
Source: 
> 
>   function getPairReserves(address token0, address token1) public view returns (uint r0, uint r1, uint r2, uint r3, uint r4, uint r5) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    UniswapV2
Line:        154
Source: 
>   function allPairsLength() external view returns (uint) {
>     return factory.allPairsLength();
>            ^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    UniswapV2
Line:        180
Source: 
> 
>     address exchange = factory.getPair(token0, token1);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    UniswapV2
Line:        183
Source: 
>     if (exchange != address(0)) {
>       r0 = IERC20(token0).balanceOf(exchange);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       r1 = IERC20(token1).balanceOf(exchange);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    UniswapV2
Line:        184
Source: 
>       r0 = IERC20(token0).balanceOf(exchange);
>       r1 = IERC20(token1).balanceOf(exchange);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    UniswapV2
Line:        188
Source: 
>     if (address(token0) != address(weth) && address(token1) != address(weth)) {
>       exchange = factory.getPair(token0, weth);
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    UniswapV2
Line:        191
Source: 
>       if (exchange != address(0)) {
>         r2 = IERC20(token0).balanceOf(exchange);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         r3 = IERC20(weth).balanceOf(exchange);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    UniswapV2
Line:        192
Source: 
>         r2 = IERC20(token0).balanceOf(exchange);
>         r3 = IERC20(weth).balanceOf(exchange);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    UniswapV2
Line:        195
Source: 
> 
>       exchange = factory.getPair(weth, token1);
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    UniswapV2
Line:        198
Source: 
>       if (exchange != address(0)) {
>         r4 = IERC20(weth).balanceOf(exchange);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         r5 = IERC20(token1).balanceOf(exchange);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    UniswapV2
Line:        199
Source: 
>         r4 = IERC20(weth).balanceOf(exchange);
>         r5 = IERC20(token1).balanceOf(exchange);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    UniswapV2
Line:        163
Source: 
>     for (uint i = fromIndex; i < toIndex; i++) {
>       address pairAddr = factory.allPairs(i);
>                          ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    UniswapV2
Line:        169
Source: 
> 
>       pair.token0 = uniswapPair.token0();
>                     ^^^^^^^^^^^^^^^^^^^^
>       pair.token1 = uniswapPair.token1();

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    UniswapV2
Line:        170
Source: 
>       pair.token0 = uniswapPair.token0();
>       pair.token1 = uniswapPair.token1();
>                     ^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    UniswapV2
Line:        183
Source: 
>     if (exchange != address(0)) {
>       r0 = IERC20(token0).balanceOf(exchange);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       r1 = IERC20(token1).balanceOf(exchange);

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    UniswapV2
Line:        184
Source: 
>       r0 = IERC20(token0).balanceOf(exchange);
>       r1 = IERC20(token1).balanceOf(exchange);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    UniswapV2
Line:        191
Source: 
>       if (exchange != address(0)) {
>         r2 = IERC20(token0).balanceOf(exchange);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         r3 = IERC20(weth).balanceOf(exchange);

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    UniswapV2
Line:        199
Source: 
>         r4 = IERC20(weth).balanceOf(exchange);
>         r5 = IERC20(token1).balanceOf(exchange);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        8
Source: 
> //pragma solidity 0.5.15;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        102
Source: 
> //pragma solidity 0.5.15;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        117
Source: 
> //pragma solidity 0.5.15;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        131
Source: 
> //pragma solidity 0.5.15;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> pragma experimental ABIEncoderV2;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UniswapV2
Line:        140
Source: 
>   //0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f
>   IUniswapV2Factory factory;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
>   address weth;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UniswapV2
Line:        141
Source: 
>   IUniswapV2Factory factory;
>   address weth;
>   ^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    UniswapV2
Line:        180
Source: 
> 
>     address exchange = factory.getPair(token0, token1);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    UniswapV2
Line:        188
Source: 
>     if (address(token0) != address(weth) && address(token1) != address(weth)) {
>       exchange = factory.getPair(token0, weth);
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    UniswapV2
Line:        195
Source: 
> 
>       exchange = factory.getPair(weth, token1);
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UniswapV2
Line:        154
Source: 
>   function allPairsLength() external view returns (uint) {
>     return factory.allPairsLength();
>            ^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UniswapV2
Line:        163
Source: 
>     for (uint i = fromIndex; i < toIndex; i++) {
>       address pairAddr = factory.allPairs(i);
>                          ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UniswapV2
Line:        169
Source: 
> 
>       pair.token0 = uniswapPair.token0();
>                     ^^^^^^^^^^^^^^^^^^^^
>       pair.token1 = uniswapPair.token1();

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UniswapV2
Line:        170
Source: 
>       pair.token0 = uniswapPair.token0();
>       pair.token1 = uniswapPair.token1();
>                     ^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UniswapV2
Line:        183
Source: 
>     if (exchange != address(0)) {
>       r0 = IERC20(token0).balanceOf(exchange);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       r1 = IERC20(token1).balanceOf(exchange);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UniswapV2
Line:        184
Source: 
>       r0 = IERC20(token0).balanceOf(exchange);
>       r1 = IERC20(token1).balanceOf(exchange);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UniswapV2
Line:        191
Source: 
>       if (exchange != address(0)) {
>         r2 = IERC20(token0).balanceOf(exchange);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         r3 = IERC20(weth).balanceOf(exchange);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UniswapV2
Line:        192
Source: 
>         r2 = IERC20(token0).balanceOf(exchange);
>         r3 = IERC20(weth).balanceOf(exchange);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UniswapV2
Line:        198
Source: 
>       if (exchange != address(0)) {
>         r4 = IERC20(weth).balanceOf(exchange);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         r5 = IERC20(token1).balanceOf(exchange);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UniswapV2
Line:        199
Source: 
>         r4 = IERC20(weth).balanceOf(exchange);
>         r5 = IERC20(token1).balanceOf(exchange);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    UniswapV2
Line:        169
Source: 
> 
>       pair.token0 = uniswapPair.token0();
>       ^^^^
>       pair.token1 = uniswapPair.token1();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    UniswapV2
Line:        169
Source: 
> 
>       pair.token0 = uniswapPair.token0();
>                     ^^^^^^^^^^^^^^^^^^^^
>       pair.token1 = uniswapPair.token1();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    UniswapV2
Line:        170
Source: 
>       pair.token0 = uniswapPair.token0();
>       pair.token1 = uniswapPair.token1();
>                     ^^^^^^^^^^^^^^^^^^^^
> 

[0m

---------------------------------------------
For contract 0x642bF34F2aeC4c28a8273C8f032c1b0a21EceDcf2.sol
Tool Runtime = 3.0431967979993715 seconds
#############################################