[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    CloneFactory
Line:        222
Source: 
>         bytes20 targetBytes = bytes20(target);
>         assembly {
>         ^^^^^^^^^^
>             let clone := mload(0x40)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    LexTokenLiteFactory
Line:        243
Source: 
>     
>     function LaunchLexTokenLite(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         string memory _name, 

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    LexTokenLiteFactory
Line:        267
Source: 
>         
>         (bool success, ) = lexDAO.call.value(msg.value)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "!transfer");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    LexTokenLite
Line:        108
Source: 
>     
>     function balanceResolution(address sender, address recipient, uint256 amount) external returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == resolver, "!resolver"); 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    LexTokenLite
Line:        116
Source: 
>     
>     function burn(uint256 amount) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balances[msg.sender] = balances[msg.sender].sub(amount); 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    LexTokenLite
Line:        130
Source: 
>     
>     function transfer(address recipient, uint256 amount) external returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(transferable, "!transferable"); 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    LexTokenLite
Line:        149
Source: 
>     
>     function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(transferable, "!transferable");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    LexTokenLite
Line:        161
Source: 
>     **************/
>     function mint(address recipient, uint256 amount) external onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(totalSupply.add(amount) <= totalSupplyCap, "capped"); 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    LexTokenLite
Line:        186
Source: 
>     
>     function updateOwner(address payable _owner) external onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _owner;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    LexTokenLite
Line:        194
Source: 
>     
>     function updateTransferability(bool _transferable) external onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         transferable = _transferable;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    LexTokenLiteFactory
Line:        273
Source: 
>     
>     function updateLexDAO(address payable _lexDAO) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == lexDAO, "!lexDAO");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    LexTokenLite
Line:        65
Source: 
>     
>     function init(
>     ^^^^^^^^^^^^^^
>         string calldata _name, 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    LexTokenLite
Line:        104
Source: 
>     
>     function balanceOf(address account) external view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return balances[account];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    LexTokenLite
Line:        182
Source: 
> 
>     function updateMessage(bytes32 _message) external onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         message = _message;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    LexTokenLite
Line:        190
Source: 
>     
>     function updateResolver(address _resolver) external onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         resolver = _resolver;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    LexTokenLiteFactory
Line:        243
Source: 
>     
>     function LaunchLexTokenLite(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         string memory _name, 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    LexTokenLiteFactory
Line:        279
Source: 
>     
>     function updateMessage(bytes32 _message) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == lexDAO, "!lexDAO");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    LexTokenLiteFactory
Line:        243
Source: 
>     
>     function LaunchLexTokenLite(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         string memory _name, 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    LexTokenLiteFactory
Line:        267
Source: 
>         
>         (bool success, ) = lexDAO.call.value(msg.value)("");
>          ^^^^^^^^^^^^
>         require(success, "!transfer");

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity 0.5.17;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    LexTokenLiteFactory
Line:        267
Source: 
>         
>         (bool success, ) = lexDAO.call.value(msg.value)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "!transfer");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LexTokenLiteFactory
Line:        256
Source: 
>         
>         lexLite.init(
>         ^^^^^^^^^^^^^
>             _name, 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ReentrancyGuard
Line:        33
Source: 
> contract ReentrancyGuard { 
>     bool private _notEntered; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    LexTokenLite
Line:        43
Source: 
>     
>     address payable public owner;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public resolver;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    LexTokenLite
Line:        44
Source: 
>     address payable public owner;
>     address public resolver;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     string public name;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    LexTokenLite
Line:        45
Source: 
>     address public resolver;
>     string public name;
>     ^^^^^^^^^^^^^^^^^^
>     string public symbol;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    LexTokenLite
Line:        46
Source: 
>     string public name;
>     string public symbol;
>     ^^^^^^^^^^^^^^^^^^^^
>     uint8 public decimals;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    LexTokenLite
Line:        47
Source: 
>     string public symbol;
>     uint8 public decimals;
>     ^^^^^^^^^^^^^^^^^^^^^
>     uint256 public totalSupply;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    LexTokenLite
Line:        48
Source: 
>     uint8 public decimals;
>     uint256 public totalSupply;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public totalSupplyCap;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    LexTokenLite
Line:        49
Source: 
>     uint256 public totalSupply;
>     uint256 public totalSupplyCap;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public message;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    LexTokenLite
Line:        50
Source: 
>     uint256 public totalSupplyCap;
>     bytes32 public message;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     bool private initialized;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    LexTokenLite
Line:        51
Source: 
>     bytes32 public message;
>     bool private initialized;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     bool public transferable; 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    LexTokenLite
Line:        52
Source: 
>     bool private initialized;
>     bool public transferable; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    ReentrancyGuard
Line:        33
Source: 
> contract ReentrancyGuard { 
>     bool private _notEntered; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    LexTokenLiteFactory
Line:        267
Source: 
>         
>         (bool success, ) = lexDAO.call.value(msg.value)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "!transfer");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    LexTokenLite
Line:        124
Source: 
>     function _transfer(address sender, address recipient, uint256 amount) internal {
>         balances[sender] = balances[sender].sub(amount); 
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balances[recipient] = balances[recipient].add(amount); 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    LexTokenLite
Line:        125
Source: 
>         balances[sender] = balances[sender].sub(amount); 
>         balances[recipient] = balances[recipient].add(amount); 
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    LexTokenLite
Line:        118
Source: 
>         balances[msg.sender] = balances[msg.sender].sub(amount); 
>         totalSupply = totalSupply.sub(amount); 
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ReentrancyGuard
Line:        36
Source: 
>     function _initReentrancyGuard() internal {
>         _notEntered = true;
>         ^^^^^^^^^^^^^^^^^^
>     } 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    LexTokenLite
Line:        79
Source: 
>         
>         name = _name; 
>         ^^^^^^^^^^^^
>         symbol = _symbol; 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    LexTokenLite
Line:        80
Source: 
>         name = _name; 
>         symbol = _symbol; 
>         ^^^^^^^^^^^^^^^^
>         decimals = _decimals; 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    LexTokenLite
Line:        81
Source: 
>         symbol = _symbol; 
>         decimals = _decimals; 
>         ^^^^^^^^^^^^^^^^^^^^
>         owner = _owner; 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    LexTokenLite
Line:        82
Source: 
>         decimals = _decimals; 
>         owner = _owner; 
>         ^^^^^^^^^^^^^^
>         resolver = _resolver;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    LexTokenLite
Line:        83
Source: 
>         owner = _owner; 
>         resolver = _resolver;
>         ^^^^^^^^^^^^^^^^^^^^
>         totalSupplyCap = _totalSupplyCap; 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    LexTokenLite
Line:        84
Source: 
>         resolver = _resolver;
>         totalSupplyCap = _totalSupplyCap; 
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         message = _message; 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    LexTokenLite
Line:        85
Source: 
>         totalSupplyCap = _totalSupplyCap; 
>         message = _message; 
>         ^^^^^^^^^^^^^^^^^^
>         initialized = true; 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    LexTokenLite
Line:        86
Source: 
>         message = _message; 
>         initialized = true; 
>         ^^^^^^^^^^^^^^^^^^
>         transferable = _transferable; 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    LexTokenLite
Line:        87
Source: 
>         initialized = true; 
>         transferable = _transferable; 
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balances[owner] = balances[owner].add(ownerSupply);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    LexTokenLite
Line:        88
Source: 
>         transferable = _transferable; 
>         balances[owner] = balances[owner].add(ownerSupply);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         totalSupply = ownerSupply;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    LexTokenLite
Line:        89
Source: 
>         balances[owner] = balances[owner].add(ownerSupply);
>         totalSupply = ownerSupply;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ReentrancyGuard
Line:        33
Source: 
> contract ReentrancyGuard { 
>     bool private _notEntered; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    LexTokenLite
Line:        45
Source: 
>     address public resolver;
>     string public name;
>     ^^^^^^^^^^^^^^^^^^
>     string public symbol;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    LexTokenLite
Line:        46
Source: 
>     string public name;
>     string public symbol;
>     ^^^^^^^^^^^^^^^^^^^^
>     uint8 public decimals;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    LexTokenLite
Line:        47
Source: 
>     string public symbol;
>     uint8 public decimals;
>     ^^^^^^^^^^^^^^^^^^^^^
>     uint256 public totalSupply;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    LexTokenLite
Line:        50
Source: 
>     uint256 public totalSupplyCap;
>     bytes32 public message;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     bool private initialized;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    LexTokenLiteFactory
Line:        235
Source: 
>     address payable public template;
>     bytes32 public message;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     

[0m

---------------------------------------------
For contract 0xdb171f41af8df36c1dbdddf076ed3b2e1ef4667a.sol
Tool Runtime = 5.075288829999863 seconds
#############################################