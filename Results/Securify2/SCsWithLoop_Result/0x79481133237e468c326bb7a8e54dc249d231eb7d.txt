[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    MultiSigWallet
Line:        500
Source: 
> 
>         assembly {
>         ^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    MultiSigWallet
Line:        250
Source: 
> 
>     function addOwner(address owner)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    MultiSigWallet
Line:        278
Source: 
> 
>     function removeOwner(address owner)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    MultiSigWallet
Line:        319
Source: 
> 
>     function replaceOwner(address owner, address newOwner)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    MultiSigWallet
Line:        386
Source: 
> 
>     function submitTransaction(address destination, uint value, bytes memory data)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    MultiSigWallet
Line:        432
Source: 
> 
>     function revokeConfirmation(uint transactionId)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    MultiSigWallet
Line:        630
Source: 
> 
>     function getConfirmationCount(uint transactionId)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    MultiSigWallet
Line:        659
Source: 
> 
>     function getTransactionCount(bool pending, bool executed)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    MultiSigWallet
Line:        683
Source: 
> 
>     function getOwners()
>     ^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    MultiSigWallet
Line:        705
Source: 
> 
>     function getConfirmations(uint transactionId)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    MultiSigWallet
Line:        755
Source: 
> 
>     function getTransactionIds(uint from, uint to, bool pending, bool executed)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Locked Ether
Description: Contracts that may receive ether must also allow users to
             extract the deposited ether from the contract.
Type:        Violation
Contract:    MultiSigWallet
Line:        20
Source: 
> 
> contract MultiSigWallet {
> ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    MultiSigWallet
Line:        630
Source: 
> 
>     function getConfirmationCount(uint transactionId)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    MultiSigWallet
Line:        659
Source: 
> 
>     function getTransactionCount(bool pending, bool executed)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    MultiSigWallet
Line:        386
Source: 
> 
>     function submitTransaction(address destination, uint value, bytes memory data)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    MultiSigWallet
Line:        542
Source: 
> 
>     function isConfirmed(uint transactionId)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    MultiSigWallet
Line:        705
Source: 
> 
>     function getConfirmations(uint transactionId)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    MultiSigWallet
Line:        755
Source: 
> 
>     function getTransactionIds(uint from, uint to, bool pending, bool executed)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    MultiSigWallet
Line:        496
Source: 
> 
>     function external_call(address destination, uint value, uint dataLength, bytes memory data) private returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        10
Source: 
> //pragma solidity >=0.4.0 <0.6.0;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MultiSigWallet
Line:        110
Source: 
> 
>     modifier ownerDoesNotExist(address owner) {
>                                ^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MultiSigWallet
Line:        120
Source: 
> 
>     modifier ownerExists(address owner) {
>                          ^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MultiSigWallet
Line:        130
Source: 
> 
>     modifier transactionExists(uint transactionId) {
>                                ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MultiSigWallet
Line:        140
Source: 
> 
>     modifier confirmed(uint transactionId, address owner) {
>                        ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MultiSigWallet
Line:        140
Source: 
> 
>     modifier confirmed(uint transactionId, address owner) {
>                                            ^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MultiSigWallet
Line:        150
Source: 
> 
>     modifier notConfirmed(uint transactionId, address owner) {
>                           ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MultiSigWallet
Line:        150
Source: 
> 
>     modifier notConfirmed(uint transactionId, address owner) {
>                                               ^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MultiSigWallet
Line:        160
Source: 
> 
>     modifier notExecuted(uint transactionId) {
>                          ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MultiSigWallet
Line:        170
Source: 
> 
>     modifier notNull(address _address) {
>                      ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MultiSigWallet
Line:        180
Source: 
> 
>     modifier validRequirement(uint ownerCount, uint _required) {
>                               ^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MultiSigWallet
Line:        180
Source: 
> 
>     modifier validRequirement(uint ownerCount, uint _required) {
>                                                ^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    MultiSigWallet
Line:        76
Source: 
> 
>     uint public transactionCount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    MultiSigWallet
Line:        598
Source: 
> 
>         transactions[transactionId] = Transaction({
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    MultiSigWallet
Line:        610
Source: 
> 
>         transactionCount += 1;
>         ^^^^^^^^^^^^^^^^^^^^^
> 

[0m

---------------------------------------------
For contract 0x79481133237e468c326bb7a8e54dc249d231eb7d.sol
Tool Runtime = 6.689994806999948 seconds
#############################################