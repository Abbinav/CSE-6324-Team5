pragma directive defines a prior version to 0.5.12. Changing pragma version to 0.5.12....
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    StakeLevel
Line:        147
Source: 
>     // High level: 1.2 ~ 3.0  ( 60 % )
>     uint8[3] public _ruler = [3, 1, 6];
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8[3] public _weight_factor = [3, 5, 1];

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    StakeLevel
Line:        148
Source: 
>     uint8[3] public _ruler = [3, 1, 6];
>     uint8[3] public _weight_factor = [3, 5, 1];
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    StakeLevel
Line:        150
Source: 
> 
>     uint8 public _low = 1;
>     ^^^^^^^^^^^^^^^^^^^^^
>     uint8 public _mid = 2;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    StakeLevel
Line:        151
Source: 
>     uint8 public _low = 1;
>     uint8 public _mid = 2;
>     ^^^^^^^^^^^^^^^^^^^^^
>     uint8 public _high = 3;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    StakeLevel
Line:        152
Source: 
>     uint8 public _mid = 2;
>     uint8 public _high = 3;
>     ^^^^^^^^^^^^^^^^^^^^^^
>    

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    StakeLevel
Line:        156
Source: 
>     uint32 constant public _midMax = 50;    
>     uint32 public _base = 100;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint32 public _anchor = _base;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    StakeLevel
Line:        158
Source: 
>     uint32 public _anchor = _base;
>     uint32 public _grouthCondition = 100;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint32 public _grouthStep = 10;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    StakeLevel
Line:        159
Source: 
>     uint32 public _grouthCondition = 100;
>     uint32 public _grouthStep = 10;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Governance
Line:        116
Source: 
> 
>     function setGovernance(address governance)  public  onlyGovernance
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StakeLevel
Line:        246
Source: 
> 
>     function setCaller( address caller ) public  onlyGovernance{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _contractCaller = caller;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    StakeLevel
Line:        190
Source: 
>     
>     function supplyLP(address sender, uint256 amount) 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     isInvalidPool()

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    StakeLevel
Line:        246
Source: 
> 
>     function setCaller( address caller ) public  onlyGovernance{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _contractCaller = caller;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    StakeLevel
Line:        216
Source: 
> 
>     function withdrawLP(address sender, uint256 amount) 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     isInvalidPool()

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Governance
Line:        103
Source: 
> 
>     address public _governance;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        127
Source: 
>     
>     struct stakeArea {
>     ^^^^^^^^^^^^^^^^^^
>         uint256 min;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        131
Source: 
>     }
>     struct joincountSeg {
>     ^^^^^^^^^^^^^^^^^^^^^
>         uint32 length;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        135
Source: 
>     }
>     struct playerInfo {
>     ^^^^^^^^^^^^^^^^^^^
>         uint256 amount;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        143
Source: 
>     // for APWR-ETH pair
>     uint256 constant public  _stakeamountMaxValue = 3 * (10**18);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // Low level : 0.0 ~ 0.9  ( 30 % )

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        147
Source: 
>     // High level: 1.2 ~ 3.0  ( 60 % )
>     uint8[3] public _ruler = [3, 1, 6];
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8[3] public _weight_factor = [3, 5, 1];

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        148
Source: 
>     uint8[3] public _ruler = [3, 1, 6];
>     uint8[3] public _weight_factor = [3, 5, 1];
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        150
Source: 
> 
>     uint8 public _low = 1;
>     ^^^^^^^^^^^^^^^^^^^^^
>     uint8 public _mid = 2;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        151
Source: 
>     uint8 public _low = 1;
>     uint8 public _mid = 2;
>     ^^^^^^^^^^^^^^^^^^^^^
>     uint8 public _high = 3;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        152
Source: 
>     uint8 public _mid = 2;
>     uint8 public _high = 3;
>     ^^^^^^^^^^^^^^^^^^^^^^
>    

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        154
Source: 
>    
>     uint32 constant public _highMax = 50;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint32 constant public _midMax = 50;    

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        155
Source: 
>     uint32 constant public _highMax = 50;
>     uint32 constant public _midMax = 50;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint32 public _base = 100;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        156
Source: 
>     uint32 constant public _midMax = 50;    
>     uint32 public _base = 100;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint32 public _anchor = _base;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        157
Source: 
>     uint32 public _base = 100;
>     uint32 public _anchor = _base;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint32 public _grouthCondition = 100;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        158
Source: 
>     uint32 public _anchor = _base;
>     uint32 public _grouthCondition = 100;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint32 public _grouthStep = 10;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        159
Source: 
>     uint32 public _grouthCondition = 100;
>     uint32 public _grouthStep = 10;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        161
Source: 
>     
>     uint32 public _playerId = 0;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        163
Source: 
> 
>     address public _contractCaller = address(0x0);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => uint32) public _addressXId;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        164
Source: 
>     address public _contractCaller = address(0x0);
>     mapping(address => uint32) public _addressXId;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(uint8 => stakeArea) public _stakeArea;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        165
Source: 
>     mapping(address => uint32) public _addressXId;
>     mapping(uint8 => stakeArea) public _stakeArea;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(uint8 => joincountSeg) public _joincountSeg;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        166
Source: 
>     mapping(uint8 => stakeArea) public _stakeArea;
>     mapping(uint8 => joincountSeg) public _joincountSeg;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(uint8 => mapping(uint32 => uint32)) public _playerIds;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        167
Source: 
>     mapping(uint8 => joincountSeg) public _joincountSeg;
>     mapping(uint8 => mapping(uint32 => uint32)) public _playerIds;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(uint32 => playerInfo) public _playerMap;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        168
Source: 
>     mapping(uint8 => mapping(uint32 => uint32)) public _playerIds;
>     mapping(uint32 => playerInfo) public _playerMap;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        250
Source: 
> 
>     function update_stakeArea_min_max_Ruler( uint256 maxCount ) internal{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        270
Source: 
> 
>     function init_JoinCount_Seg() internal {    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        281
Source: 
> 
>     function update_joincount_Segment( ) internal {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        337
Source: 
> 
>     function JoinsegmentSwap(uint32 playerId, uint8 segIndex) internal {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StakeLevel
Line:        368
Source: 
>     // find the tail id of player, for swap to another area 
>     function tail_findID_Seg( uint8 segIndex) internal returns (uint32){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StakeLevel
Line:        344
Source: 
> 
>         _playerMap[playerId].segIndex = segIndex;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _playerMap[playerId].offset = tail;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StakeLevel
Line:        345
Source: 
>         _playerMap[playerId].segIndex = segIndex;
>         _playerMap[playerId].offset = tail;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StakeLevel
Line:        347
Source: 
> 
>         _joincountSeg[segIndex].curCount = _joincountSeg[segIndex].curCount+1;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _playerIds[segIndex][tail] = playerId;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StakeLevel
Line:        348
Source: 
>         _joincountSeg[segIndex].curCount = _joincountSeg[segIndex].curCount+1;
>         _playerIds[segIndex][tail] = playerId;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StakeLevel
Line:        357
Source: 
> 
>                 _playerMap[originTailPlayer].segIndex = oldSegIndex;
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 _playerMap[originTailPlayer].offset = oldOffset;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StakeLevel
Line:        358
Source: 
>                 _playerMap[originTailPlayer].segIndex = oldSegIndex;
>                 _playerMap[originTailPlayer].offset = oldOffset;
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 _playerIds[oldSegIndex][oldOffset] = originTailPlayer;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StakeLevel
Line:        359
Source: 
>                 _playerMap[originTailPlayer].offset = oldOffset;
>                 _playerIds[oldSegIndex][oldOffset] = originTailPlayer;
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StakeLevel
Line:        362
Source: 
> 
>             _playerIds[oldSegIndex][originTail] = 0;
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _joincountSeg[oldSegIndex].curCount = _joincountSeg[oldSegIndex].curCount-1;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StakeLevel
Line:        363
Source: 
>             _playerIds[oldSegIndex][originTail] = 0;
>             _joincountSeg[oldSegIndex].curCount = _joincountSeg[oldSegIndex].curCount-1;
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StakeLevel
Line:        415
Source: 
>         JoinsegmentSwap(playerId, segIndex);
>         _stakeArea[segIndex].max = _stakeArea[segIndex + 1].min;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         //_low segment length update

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StakeLevel
Line:        418
Source: 
>         if( _joincountSeg[segIndex].curCount > _joincountSeg[segIndex].length){
>             _joincountSeg[segIndex].length = _joincountSeg[segIndex].curCount;
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StakeLevel
Line:        373
Source: 
>         (minPlayerOffset,secondMinAmount) = findSegmentMinPlayer(segIndex);
>         _stakeArea[segIndex].min = secondMinAmount;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StakeLevel
Line:        380
Source: 
>         uint32 tailPlayerId = _playerIds[segIndex][tail];
>         _playerIds[segIndex][minPlayerOffset] = tailPlayerId;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StakeLevel
Line:        382
Source: 
> 
>         _playerMap[tailPlayerId].offset = minPlayerOffset;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m

---------------------------------------------
For contract 0x29630bddc51da9212f718a710b9e85fe8f3b2879.sol
Tool Runtime = 8.634888937999676 seconds
#############################################