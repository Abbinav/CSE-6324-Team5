pragma directive defines a prior version to 0.5.12. Changing pragma version to 0.5.12....
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SafeMath
Line:        335
Source: 
>         uint256 result;
>         assembly {
>         ^^^^^^^^^^
>             result := exp(a, b)

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Proxy
Line:        445
Source: 
> 
>         assembly {
>         ^^^^^^^^^^
>             let ptr := mload(0x40)

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    UpgradeabilityStorage
Line:        480
Source: 
>     // Versions registry
>     IRegistry public registry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    UpgradeabilityStorage
Line:        483
Source: 
>     // Address of the current implementation
>     address internal _implementation;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ProxyOwnable
Line:        234
Source: 
>      */
>     function changePrimaryOwner()
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ProxyOwnable
Line:        248
Source: 
>      */
>     function changeSystemAddress(address _which)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ProxyOwnable
Line:        270
Source: 
>      */
>     function changeAuthorityAddress(address _which)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ProxyOwnable
Line:        285
Source: 
> 
>     function acceptAuthorityAddress() public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == newAuthorityAddress, ERR_AUTHORIZED_ADDRESS_ONLY);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Upgradeable
Line:        511
Source: 
>      */
>     function initialize() public view {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == address(registry),"ERR_ONLY_REGISTRERY_CAN_CALL");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ProxyOwnable
Line:        234
Source: 
>      */
>     function changePrimaryOwner()
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ProxyOwnable
Line:        248
Source: 
>      */
>     function changeSystemAddress(address _which)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ProxyOwnable
Line:        270
Source: 
>      */
>     function changeAuthorityAddress(address _which)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ProxyOwnable
Line:        285
Source: 
> 
>     function acceptAuthorityAddress() public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == newAuthorityAddress, ERR_AUTHORIZED_ADDRESS_ONLY);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ProxyOwnable
Line:        234
Source: 
>      */
>     function changePrimaryOwner()
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ProxyOwnable
Line:        248
Source: 
>      */
>     function changeSystemAddress(address _which)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ProxyOwnable
Line:        270
Source: 
>      */
>     function changeAuthorityAddress(address _which)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ProxyOwnable
Line:        285
Source: 
> 
>     function acceptAuthorityAddress() public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == newAuthorityAddress, ERR_AUTHORIZED_ADDRESS_ONLY);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        631
Source: 
>     /**@dev since its a proxy contract this is what will work as a constructor*/
>     function initialize(
>     ^^^^^^^^^^^^^^^^^^^^
>         address _primaryOwner,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        735
Source: 
>     /**@dev whitelists an address*/
>     function addNewWallet(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         address _which,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        746
Source: 
>     /**@dev whitelists an address*/
>     function isExchangeAddress(address _which) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address primaryAddress = address_belongs[_which];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        754
Source: 
>     /**@dev updates the maximum wallets allowed for a primary whitelisted address*/
>     function updateMaxWallet(address _which, uint256 _maxWallets)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        793
Source: 
>     
>     function addMoreWallets(address _which)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        803
Source: 
>     
>     function addWalletBehalfExchange(address _mainWallet,address _subWallet)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        814
Source: 
>     /**@dev allows system to chage flags associated with an address*/
>     function changeFlags(address _which, uint256 _flags)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        973
Source: 
>     /**@dev adds ReceivingRule for main token*/
>     function addMainRecivingRule(uint256 mask, uint256 condition)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        981
Source: 
>     /**@dev removes a specific rule from transferringRules for main token*/
>     function removeMainTransferingRules(uint256 _index) public onlyOwner() {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _removeTransferingRule(_index, 0);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        986
Source: 
>     /**@dev add transferringRule for main token*/
>     function addMainTransferringRule(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 from_mask,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1002
Source: 
>     /**@dev checks if address is allowed to recieve main token*/
>     function main_isReceiveAllowed(address user) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _isReceiveAllowed(user, 0);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1007
Source: 
>     /**@dev check if transferring is allowed for main*/
>     function main_isTransferAllowed(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _msgSender,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1016
Source: 
>     /**@dev check if transferring is allowed for etn*/
>     function etn_isTransferAllowed(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _msgSender,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1025
Source: 
>     /**@dev checks if address is allowed to recieve etn token*/
>     function etn_isReceiveAllowed(address user) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _isReceiveAllowed(user, 1);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1030
Source: 
>     /**@dev adds ReceivingRule for etn token*/
>     function addEtnTransferringRule(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 from_mask,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1046
Source: 
>     /**@dev removes a specific rule from transferringRules for etn token*/
>     function removeEtnTransferingRules(uint256 _index) public onlyOwner() {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _removeTransferingRule(_index, 1);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1051
Source: 
>     /**@dev adds ReceivingRule for etn token*/
>     function addEtnRecivingRule(uint256 mask, uint256 condition)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1059
Source: 
>     /**@dev check if transferring is allowed for stock*/
>     function stock_isTransferAllowed(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _msgSender,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1068
Source: 
>     /**@dev checks if address is allowed to recieve stock token*/
>     function stock_isReceiveAllowed(address user) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _isReceiveAllowed(user, 2);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1073
Source: 
>     /**@dev add transferringRule for stock token*/
>     function addStockTransferringRule(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 from_mask,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1089
Source: 
>     //@dev removes a specific rule from transferringRules for stock token*/
>     function removeStockTransferingRules(uint256 _index) public onlyOwner() {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _removeTransferingRule(_index, 2);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1094
Source: 
>     /**@dev adds ReceivingRule for stock token*/
>     function addStockRecivingRule(uint256 mask, uint256 condition)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1102
Source: 
>     /**@dev returns wallets associated with _whom */
>     function getUserWallets(address _which)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1112
Source: 
> 
>     function updateHoldBackDays(uint8 _token, uint256 _holdBackDay)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WhiteList
Line:        1123
Source: 
> 
>     function updateMaturityDays(uint8 _token, uint256 _maturityDays)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Locked Ether
Description: Contracts that may receive ether must also allow users to
             extract the deposited ether from the contract.
Type:        Violation
Contract:    UpgradeabilityStorage
Line:        478
Source: 
>  */
> contract UpgradeabilityStorage is Proxy {
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // Versions registry

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Locked Ether
Description: Contracts that may receive ether must also allow users to
             extract the deposited ether from the contract.
Type:        Violation
Contract:    Upgradeable
Line:        506
Source: 
>  */
> contract Upgradeable is UpgradeabilityStorage {
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     /**

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Locked Ether
Description: Contracts that may receive ether must also allow users to
             extract the deposited ether from the contract.
Type:        Violation
Contract:    WhiteList
Line:        610
Source: 
> 
> contract WhiteList is
> ^^^^^^^^^^^^^^^^^^^^^
>     Upgradeable,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        699
Source: 
>     /**@dev checks if address is bypassed*/
>     function isAddressByPassed(address _which) external view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _isAddressByPassed(_which);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        710
Source: 
>     /**@dev returns if address is whitelisted*/
>     function isWhiteListed(address _which) external view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _isWhiteListed(_which);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        715
Source: 
>     /**@dev checks if address is allowed in auction or not */
>     function isAllowedInAuction(address _which) external view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address primaryAddress = address_belongs[_which];

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        724
Source: 
>     /**@dev checks if address is allowed in auction or not */
>     function checkRule(address _which, uint256 _condition)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         external

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        746
Source: 
>     /**@dev whitelists an address*/
>     function isExchangeAddress(address _which) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address primaryAddress = address_belongs[_which];

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        803
Source: 
>     
>     function addWalletBehalfExchange(address _mainWallet,address _subWallet)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        981
Source: 
>     /**@dev removes a specific rule from transferringRules for main token*/
>     function removeMainTransferingRules(uint256 _index) public onlyOwner() {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _removeTransferingRule(_index, 0);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        1002
Source: 
>     /**@dev checks if address is allowed to recieve main token*/
>     function main_isReceiveAllowed(address user) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _isReceiveAllowed(user, 0);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        1007
Source: 
>     /**@dev check if transferring is allowed for main*/
>     function main_isTransferAllowed(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _msgSender,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        1016
Source: 
>     /**@dev check if transferring is allowed for etn*/
>     function etn_isTransferAllowed(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _msgSender,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        1025
Source: 
>     /**@dev checks if address is allowed to recieve etn token*/
>     function etn_isReceiveAllowed(address user) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _isReceiveAllowed(user, 1);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        1046
Source: 
>     /**@dev removes a specific rule from transferringRules for etn token*/
>     function removeEtnTransferingRules(uint256 _index) public onlyOwner() {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _removeTransferingRule(_index, 1);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        1059
Source: 
>     /**@dev check if transferring is allowed for stock*/
>     function stock_isTransferAllowed(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _msgSender,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        1068
Source: 
>     /**@dev checks if address is allowed to recieve stock token*/
>     function stock_isReceiveAllowed(address user) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _isReceiveAllowed(user, 2);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WhiteList
Line:        1089
Source: 
>     //@dev removes a specific rule from transferringRules for stock token*/
>     function removeStockTransferingRules(uint256 _index) public onlyOwner() {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _removeTransferingRule(_index, 2);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WhiteList
Line:        631
Source: 
>     /**@dev since its a proxy contract this is what will work as a constructor*/
>     function initialize(
>     ^^^^^^^^^^^^^^^^^^^^
>         address _primaryOwner,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WhiteList
Line:        735
Source: 
>     /**@dev whitelists an address*/
>     function addNewWallet(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         address _which,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WhiteList
Line:        754
Source: 
>     /**@dev updates the maximum wallets allowed for a primary whitelisted address*/
>     function updateMaxWallet(address _which, uint256 _maxWallets)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WhiteList
Line:        814
Source: 
>     /**@dev allows system to chage flags associated with an address*/
>     function changeFlags(address _which, uint256 _flags)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WhiteList
Line:        973
Source: 
>     /**@dev adds ReceivingRule for main token*/
>     function addMainRecivingRule(uint256 mask, uint256 condition)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WhiteList
Line:        986
Source: 
>     /**@dev add transferringRule for main token*/
>     function addMainTransferringRule(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 from_mask,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WhiteList
Line:        1030
Source: 
>     /**@dev adds ReceivingRule for etn token*/
>     function addEtnTransferringRule(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 from_mask,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WhiteList
Line:        1051
Source: 
>     /**@dev adds ReceivingRule for etn token*/
>     function addEtnRecivingRule(uint256 mask, uint256 condition)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WhiteList
Line:        1073
Source: 
>     /**@dev add transferringRule for stock token*/
>     function addStockTransferringRule(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 from_mask,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WhiteList
Line:        1094
Source: 
>     /**@dev adds ReceivingRule for stock token*/
>     function addStockRecivingRule(uint256 mask, uint256 condition)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WhiteList
Line:        1102
Source: 
>     /**@dev returns wallets associated with _whom */
>     function getUserWallets(address _which)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WhiteList
Line:        1112
Source: 
> 
>     function updateHoldBackDays(uint8 _token, uint256 _holdBackDay)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WhiteList
Line:        1123
Source: 
> 
>     function updateMaturityDays(uint8 _token, uint256 _maturityDays)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    WhiteListStorage
Line:        70
Source: 
> 
>     mapping(address => address) public address_belongs;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => UserDetails) public user_details;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    WhiteListStorage
Line:        71
Source: 
>     mapping(address => address) public address_belongs;
>     mapping(address => UserDetails) public user_details;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Proxy
Line:        442
Source: 
>     function() external payable {
>         address _impl = implementation();
>         ^^^^^^^^^^^^^
>         require(_impl != address(0),"ERR_IMPLEMENTEION_ZERO");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    WhiteList
Line:        933
Source: 
>         require(from != address(0), "ERR_TRANSFER_CHECK_WHITELIST");
>         uint256 from_flags = user_details[from].flags;
>         ^^^^^^^^^^^^^^^^^^
>         uint256 to_flags = user_details[to].flags;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    WhiteList
Line:        934
Source: 
>         uint256 from_flags = user_details[from].flags;
>         uint256 to_flags = user_details[to].flags;
>         ^^^^^^^^^^^^^^^^
>         //makes sure that token is not mature

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    WhiteList
Line:        1002
Source: 
>     /**@dev checks if address is allowed to recieve main token*/
>     function main_isReceiveAllowed(address user) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _isReceiveAllowed(user, 0);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    WhiteList
Line:        1007
Source: 
>     /**@dev check if transferring is allowed for main*/
>     function main_isTransferAllowed(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _msgSender,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    WhiteList
Line:        1016
Source: 
>     /**@dev check if transferring is allowed for etn*/
>     function etn_isTransferAllowed(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _msgSender,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    WhiteList
Line:        1025
Source: 
>     /**@dev checks if address is allowed to recieve etn token*/
>     function etn_isReceiveAllowed(address user) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _isReceiveAllowed(user, 1);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    WhiteList
Line:        1059
Source: 
>     /**@dev check if transferring is allowed for stock*/
>     function stock_isTransferAllowed(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _msgSender,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    WhiteList
Line:        1068
Source: 
>     /**@dev checks if address is allowed to recieve stock token*/
>     function stock_isReceiveAllowed(address user) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _isReceiveAllowed(user, 2);

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        8
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        37
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        115
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        156
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        301
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        381
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        423
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        470
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        497
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        519
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        552
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Constant
Line:        118
Source: 
> contract Constant {
>     string constant ERR_CONTRACT_SELF_ADDRESS = "ERR_CONTRACT_SELF_ADDRESS";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Constant
Line:        120
Source: 
> 
>     string constant ERR_ZERO_ADDRESS = "ERR_ZERO_ADDRESS";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Constant
Line:        122
Source: 
> 
>     string constant ERR_NOT_OWN_ADDRESS = "ERR_NOT_OWN_ADDRESS";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Constant
Line:        124
Source: 
> 
>     string constant ERR_VALUE_IS_ZERO = "ERR_VALUE_IS_ZERO";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Constant
Line:        126
Source: 
> 
>     string constant ERR_SAME_ADDRESS = "ERR_SAME_ADDRESS";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Constant
Line:        128
Source: 
> 
>     string constant ERR_AUTHORIZED_ADDRESS_ONLY = "ERR_AUTHORIZED_ADDRESS_ONLY";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Constant
Line:        130
Source: 
> 
>     modifier notOwnAddress(address _which) {
>                            ^^^^^^^^^^^^^^
>         require(msg.sender != _which, ERR_NOT_OWN_ADDRESS);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Constant
Line:        136
Source: 
>     // validates an address is not zero
>     modifier notZeroAddress(address _which) {
>                             ^^^^^^^^^^^^^^
>         require(_which != address(0), ERR_ZERO_ADDRESS);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Constant
Line:        142
Source: 
>     // verifies that the address is different than this contract address
>     modifier notThisAddress(address _which) {
>                             ^^^^^^^^^^^^^^
>         require(_which != address(this), ERR_CONTRACT_SELF_ADDRESS);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Constant
Line:        147
Source: 
> 
>     modifier notZeroValue(uint256 _value) {
>                           ^^^^^^^^^^^^^^
>         require(_value > 0, ERR_VALUE_IS_ZERO);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    RegisteryWhiteList
Line:        593
Source: 
>     {
>         return contractsRegistry.getAddressOf(_contractName);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    SafeMath
Line:        362
Source: 
>         uint256 iter = 0;
>         while (xNew != x && iter < _maxIts) {
>                        ^
>             x = xNew;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ProxyOwnable
Line:        162
Source: 
>     
>     address public primaryOwner;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ProxyOwnable
Line:        164
Source: 
> 
>     address public authorityAddress;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ProxyOwnable
Line:        166
Source: 
> 
>     address public newAuthorityAddress;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ProxyOwnable
Line:        168
Source: 
> 
>     address public systemAddress;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    WhiteListStorage
Line:        42
Source: 
>     
>     IAuctionRegistery public contractsRegistry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    WhiteListStorage
Line:        44
Source: 
>     
>     address payable public auctionAddress; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ProxyOwnable
Line:        162
Source: 
>     
>     address public primaryOwner;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ProxyOwnable
Line:        164
Source: 
> 
>     address public authorityAddress;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ProxyOwnable
Line:        166
Source: 
> 
>     address public newAuthorityAddress;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ProxyOwnable
Line:        168
Source: 
> 
>     address public systemAddress;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    WhiteListStorage
Line:        42
Source: 
>     
>     IAuctionRegistery public contractsRegistry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    WhiteListStorage
Line:        44
Source: 
>     
>     address payable public auctionAddress; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ProxyOwnable
Line:        162
Source: 
>     
>     address public primaryOwner;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ProxyOwnable
Line:        164
Source: 
> 
>     address public authorityAddress;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ProxyOwnable
Line:        166
Source: 
> 
>     address public newAuthorityAddress;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ProxyOwnable
Line:        168
Source: 
> 
>     address public systemAddress;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    WhiteListStorage
Line:        42
Source: 
>     
>     IAuctionRegistery public contractsRegistry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    WhiteListStorage
Line:        44
Source: 
>     
>     address payable public auctionAddress; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    UpgradeabilityStorage
Line:        480
Source: 
>     // Versions registry
>     IRegistry public registry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    UpgradeabilityStorage
Line:        483
Source: 
>     // Address of the current implementation
>     address internal _implementation;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    UpgradeabilityStorage
Line:        480
Source: 
>     // Versions registry
>     IRegistry public registry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    UpgradeabilityStorage
Line:        483
Source: 
>     // Address of the current implementation
>     address internal _implementation;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    UpgradeabilityStorage
Line:        480
Source: 
>     // Versions registry
>     IRegistry public registry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    UpgradeabilityStorage
Line:        483
Source: 
>     // Address of the current implementation
>     address internal _implementation;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    WhiteList
Line:        784
Source: 
> 
>         address_belongs[_which] = primaryAddress;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         details.wallets.push(_which);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    WhiteList
Line:        785
Source: 
>         address_belongs[_which] = primaryAddress;
>         details.wallets.push(_which);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit WalletAdded(primaryAddress, _which);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    WhiteList
Line:        848
Source: 
>     ) internal {
>         tokenToReceivingRule[_token] = ReceivingRule(_mask, _condition);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    WhiteList
Line:        860
Source: 
>     ) internal {
>         tokenToTransferringRuleArray[token].push(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             TransferringRule(from_mask, from_condition, to_mask, to_condition)

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    WhiteList
Line:        872
Source: 
> 
>         transferringRules[_index] = transferringRules[safeSub(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             transferringRules.length,

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    WhiteList
Line:        876
Source: 
>         )]; //replace with last element
>         delete (transferringRules[safeSub(transferringRules.length, 1)]); //delete the last element
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         transferringRules.length = safeSub(transferringRules.length, 1);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    WhiteList
Line:        877
Source: 
>         delete (transferringRules[safeSub(transferringRules.length, 1)]); //delete the last element
>         transferringRules.length = safeSub(transferringRules.length, 1);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    RegisteryWhiteList
Line:        600
Source: 
>     function _updateAddresses() internal {
>         auctionAddress = getAddressOf(AUCTION);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ProxyOwnable
Line:        202
Source: 
>         
>         primaryOwner = _primaryOwner;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         systemAddress = _systemAddress;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ProxyOwnable
Line:        203
Source: 
>         primaryOwner = _primaryOwner;
>         systemAddress = _systemAddress;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         authorityAddress = _authorityAddress;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ProxyOwnable
Line:        204
Source: 
>         systemAddress = _systemAddress;
>         authorityAddress = _authorityAddress;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         isOwnerInitialize = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ProxyOwnable
Line:        205
Source: 
>         authorityAddress = _authorityAddress;
>         isOwnerInitialize = true;
>         ^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    RegisteryWhiteList
Line:        600
Source: 
>     function _updateAddresses() internal {
>         auctionAddress = getAddressOf(AUCTION);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    WhiteList
Line:        646
Source: 
>         initializeOwner(_primaryOwner, _systemAddress, _authorityAddress);
>         contractsRegistry = IAuctionRegistery(_registryaddress);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    WhiteList
Line:        648
Source: 
>         
>         tokenToMaturityDaysTimeStamp[0] = convertDaysToTimeStamp(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _mainMaturityDays

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    WhiteList
Line:        651
Source: 
>         );
>         tokenToMaturityDaysTimeStamp[1] = convertDaysToTimeStamp(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _etnMaturityDays

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    WhiteList
Line:        654
Source: 
>         );
>         tokenToMaturityDaysTimeStamp[2] = convertDaysToTimeStamp(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _stockMaturityDays

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    WhiteList
Line:        658
Source: 
> 
>         tokenToHoldBackDaysTimeStamp[0] = convertDaysToTimeStamp(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _mainHoldBackDays

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    WhiteList
Line:        661
Source: 
>         );
>         tokenToHoldBackDaysTimeStamp[1] = convertDaysToTimeStamp(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _etnHoldBackDays

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    WhiteList
Line:        664
Source: 
>         );
>         tokenToHoldBackDaysTimeStamp[2] = convertDaysToTimeStamp(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _stockHoldBackDays

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        11
Source: 
> contract AuctionRegisteryContracts {
>     bytes32 internal constant MAIN_TOKEN = "MAIN_TOKEN";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant ETN_TOKEN = "ETN_TOKEN";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        12
Source: 
>     bytes32 internal constant MAIN_TOKEN = "MAIN_TOKEN";
>     bytes32 internal constant ETN_TOKEN = "ETN_TOKEN";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant STOCK_TOKEN = "STOCK_TOKEN";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        13
Source: 
>     bytes32 internal constant ETN_TOKEN = "ETN_TOKEN";
>     bytes32 internal constant STOCK_TOKEN = "STOCK_TOKEN";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant WHITE_LIST = "WHITE_LIST";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        14
Source: 
>     bytes32 internal constant STOCK_TOKEN = "STOCK_TOKEN";
>     bytes32 internal constant WHITE_LIST = "WHITE_LIST";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant AUCTION = "AUCTION";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        15
Source: 
>     bytes32 internal constant WHITE_LIST = "WHITE_LIST";
>     bytes32 internal constant AUCTION = "AUCTION";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant AUCTION_PROTECTION = "AUCTION_PROTECTION";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        16
Source: 
>     bytes32 internal constant AUCTION = "AUCTION";
>     bytes32 internal constant AUCTION_PROTECTION = "AUCTION_PROTECTION";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant LIQUIDITY = "LIQUIDITY";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        17
Source: 
>     bytes32 internal constant AUCTION_PROTECTION = "AUCTION_PROTECTION";
>     bytes32 internal constant LIQUIDITY = "LIQUIDITY";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant CURRENCY = "CURRENCY";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        18
Source: 
>     bytes32 internal constant LIQUIDITY = "LIQUIDITY";
>     bytes32 internal constant CURRENCY = "CURRENCY";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant VAULT = "VAULT";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        19
Source: 
>     bytes32 internal constant CURRENCY = "CURRENCY";
>     bytes32 internal constant VAULT = "VAULT";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant CONTRIBUTION_TRIGGER = "CONTRIBUTION_TRIGGER";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        20
Source: 
>     bytes32 internal constant VAULT = "VAULT";
>     bytes32 internal constant CONTRIBUTION_TRIGGER = "CONTRIBUTION_TRIGGER";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant COMPANY_FUND_WALLET = "COMPANY_FUND_WALLET";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        21
Source: 
>     bytes32 internal constant CONTRIBUTION_TRIGGER = "CONTRIBUTION_TRIGGER";
>     bytes32 internal constant COMPANY_FUND_WALLET = "COMPANY_FUND_WALLET";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant SMART_SWAP = "SMART_SWAP";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        22
Source: 
>     bytes32 internal constant COMPANY_FUND_WALLET = "COMPANY_FUND_WALLET";
>     bytes32 internal constant SMART_SWAP = "SMART_SWAP";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant SMART_SWAP_P2P = "SMART_SWAP_P2P";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        23
Source: 
>     bytes32 internal constant SMART_SWAP = "SMART_SWAP";
>     bytes32 internal constant SMART_SWAP_P2P = "SMART_SWAP_P2P";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant ESCROW = "ESCROW";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        24
Source: 
>     bytes32 internal constant SMART_SWAP_P2P = "SMART_SWAP_P2P";
>     bytes32 internal constant ESCROW = "ESCROW";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        42
Source: 
>     
>     IAuctionRegistery public contractsRegistry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        44
Source: 
>     
>     address payable public auctionAddress; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        70
Source: 
> 
>     mapping(address => address) public address_belongs;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => UserDetails) public user_details;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        71
Source: 
>     mapping(address => address) public address_belongs;
>     mapping(address => UserDetails) public user_details;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        78
Source: 
>     //2:stock
>     mapping(uint8 => ReceivingRule) public tokenToReceivingRule;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(uint8 => TransferringRule[]) public tokenToTransferringRuleArray;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        79
Source: 
>     mapping(uint8 => ReceivingRule) public tokenToReceivingRule;
>     mapping(uint8 => TransferringRule[]) public tokenToTransferringRuleArray;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        82
Source: 
>     //timestamp when hold back days are over
>     mapping(uint8 => uint256) public tokenToHoldBackDaysTimeStamp;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //timestamp when token matures

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        84
Source: 
>     //timestamp when token matures
>     mapping(uint8 => uint256) public tokenToMaturityDaysTimeStamp;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        87
Source: 
>     
>     uint256 public constant KYC = 1 << 0; //0x01
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant AML = 1 << 1; //0x02

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        88
Source: 
>     uint256 public constant KYC = 1 << 0; //0x01
>     uint256 public constant AML = 1 << 1; //0x02
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant ACCREDIATED_INVESTOR = 1 << 2;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        89
Source: 
>     uint256 public constant AML = 1 << 1; //0x02
>     uint256 public constant ACCREDIATED_INVESTOR = 1 << 2;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant QUALIFIED_INVESTOR = 1 << 3;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        90
Source: 
>     uint256 public constant ACCREDIATED_INVESTOR = 1 << 2;
>     uint256 public constant QUALIFIED_INVESTOR = 1 << 3;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant RETAIL_INVESTOR = 1 << 4;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        91
Source: 
>     uint256 public constant QUALIFIED_INVESTOR = 1 << 3;
>     uint256 public constant RETAIL_INVESTOR = 1 << 4;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant DECENTRALIZE_EXCHANGE = 1 << 5; // wallet of decentralize exchanges

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        92
Source: 
>     uint256 public constant RETAIL_INVESTOR = 1 << 4;
>     uint256 public constant DECENTRALIZE_EXCHANGE = 1 << 5; // wallet of decentralize exchanges
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant CENTRALIZE_EXCHANGE = 1 << 6; // wallet of centralize exchanges

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        93
Source: 
>     uint256 public constant DECENTRALIZE_EXCHANGE = 1 << 5; // wallet of decentralize exchanges
>     uint256 public constant CENTRALIZE_EXCHANGE = 1 << 6; // wallet of centralize exchanges
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant IS_ALLOWED_ETN = 1 << 7;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        94
Source: 
>     uint256 public constant CENTRALIZE_EXCHANGE = 1 << 6; // wallet of centralize exchanges
>     uint256 public constant IS_ALLOWED_ETN = 1 << 7;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant IS_ALLOWED_STOCK = 1 << 8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        95
Source: 
>     uint256 public constant IS_ALLOWED_ETN = 1 << 7;
>     uint256 public constant IS_ALLOWED_STOCK = 1 << 8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant FROM_USA = 1 << 9;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        96
Source: 
>     uint256 public constant IS_ALLOWED_STOCK = 1 << 8;
>     uint256 public constant FROM_USA = 1 << 9;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant FROM_CHINA = 1 << 10;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        97
Source: 
>     uint256 public constant FROM_USA = 1 << 9;
>     uint256 public constant FROM_CHINA = 1 << 10;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant FROM_EU = 1 << 11;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        98
Source: 
>     uint256 public constant FROM_CHINA = 1 << 10;
>     uint256 public constant FROM_EU = 1 << 11;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant IS_BYPASSED = 1 << 12;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        99
Source: 
>     uint256 public constant FROM_EU = 1 << 11;
>     uint256 public constant IS_BYPASSED = 1 << 12;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant BANCOR_ADDRESS = 1 << 13;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        100
Source: 
>     uint256 public constant IS_BYPASSED = 1 << 12;
>     uint256 public constant BANCOR_ADDRESS = 1 << 13;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant IS_ALLOWED_AUCTION = 1 << 14;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        101
Source: 
>     uint256 public constant BANCOR_ADDRESS = 1 << 13;
>     uint256 public constant IS_ALLOWED_AUCTION = 1 << 14;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constant
Line:        118
Source: 
> contract Constant {
>     string constant ERR_CONTRACT_SELF_ADDRESS = "ERR_CONTRACT_SELF_ADDRESS";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constant
Line:        120
Source: 
> 
>     string constant ERR_ZERO_ADDRESS = "ERR_ZERO_ADDRESS";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constant
Line:        122
Source: 
> 
>     string constant ERR_NOT_OWN_ADDRESS = "ERR_NOT_OWN_ADDRESS";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constant
Line:        124
Source: 
> 
>     string constant ERR_VALUE_IS_ZERO = "ERR_VALUE_IS_ZERO";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constant
Line:        126
Source: 
> 
>     string constant ERR_SAME_ADDRESS = "ERR_SAME_ADDRESS";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constant
Line:        128
Source: 
> 
>     string constant ERR_AUTHORIZED_ADDRESS_ONLY = "ERR_AUTHORIZED_ADDRESS_ONLY";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constant
Line:        122
Source: 
> 
>     string constant ERR_NOT_OWN_ADDRESS = "ERR_NOT_OWN_ADDRESS";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constant
Line:        124
Source: 
> 
>     string constant ERR_VALUE_IS_ZERO = "ERR_VALUE_IS_ZERO";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ProxyOwnable
Line:        170
Source: 
>     
>     bool public isOwnerInitialize = false;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    UpgradeabilityStorage
Line:        480
Source: 
>     // Versions registry
>     IRegistry public registry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        11
Source: 
> contract AuctionRegisteryContracts {
>     bytes32 internal constant MAIN_TOKEN = "MAIN_TOKEN";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant ETN_TOKEN = "ETN_TOKEN";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        12
Source: 
>     bytes32 internal constant MAIN_TOKEN = "MAIN_TOKEN";
>     bytes32 internal constant ETN_TOKEN = "ETN_TOKEN";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant STOCK_TOKEN = "STOCK_TOKEN";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        13
Source: 
>     bytes32 internal constant ETN_TOKEN = "ETN_TOKEN";
>     bytes32 internal constant STOCK_TOKEN = "STOCK_TOKEN";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant WHITE_LIST = "WHITE_LIST";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        14
Source: 
>     bytes32 internal constant STOCK_TOKEN = "STOCK_TOKEN";
>     bytes32 internal constant WHITE_LIST = "WHITE_LIST";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant AUCTION = "AUCTION";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        16
Source: 
>     bytes32 internal constant AUCTION = "AUCTION";
>     bytes32 internal constant AUCTION_PROTECTION = "AUCTION_PROTECTION";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant LIQUIDITY = "LIQUIDITY";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        17
Source: 
>     bytes32 internal constant AUCTION_PROTECTION = "AUCTION_PROTECTION";
>     bytes32 internal constant LIQUIDITY = "LIQUIDITY";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant CURRENCY = "CURRENCY";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        18
Source: 
>     bytes32 internal constant LIQUIDITY = "LIQUIDITY";
>     bytes32 internal constant CURRENCY = "CURRENCY";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant VAULT = "VAULT";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        19
Source: 
>     bytes32 internal constant CURRENCY = "CURRENCY";
>     bytes32 internal constant VAULT = "VAULT";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant CONTRIBUTION_TRIGGER = "CONTRIBUTION_TRIGGER";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        20
Source: 
>     bytes32 internal constant VAULT = "VAULT";
>     bytes32 internal constant CONTRIBUTION_TRIGGER = "CONTRIBUTION_TRIGGER";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant COMPANY_FUND_WALLET = "COMPANY_FUND_WALLET";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        21
Source: 
>     bytes32 internal constant CONTRIBUTION_TRIGGER = "CONTRIBUTION_TRIGGER";
>     bytes32 internal constant COMPANY_FUND_WALLET = "COMPANY_FUND_WALLET";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant SMART_SWAP = "SMART_SWAP";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        22
Source: 
>     bytes32 internal constant COMPANY_FUND_WALLET = "COMPANY_FUND_WALLET";
>     bytes32 internal constant SMART_SWAP = "SMART_SWAP";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant SMART_SWAP_P2P = "SMART_SWAP_P2P";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        23
Source: 
>     bytes32 internal constant SMART_SWAP = "SMART_SWAP";
>     bytes32 internal constant SMART_SWAP_P2P = "SMART_SWAP_P2P";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant ESCROW = "ESCROW";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        24
Source: 
>     bytes32 internal constant SMART_SWAP_P2P = "SMART_SWAP_P2P";
>     bytes32 internal constant ESCROW = "ESCROW";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        44
Source: 
>     
>     address payable public auctionAddress; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        70
Source: 
> 
>     mapping(address => address) public address_belongs;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => UserDetails) public user_details;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        71
Source: 
>     mapping(address => address) public address_belongs;
>     mapping(address => UserDetails) public user_details;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        78
Source: 
>     //2:stock
>     mapping(uint8 => ReceivingRule) public tokenToReceivingRule;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(uint8 => TransferringRule[]) public tokenToTransferringRuleArray;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        79
Source: 
>     mapping(uint8 => ReceivingRule) public tokenToReceivingRule;
>     mapping(uint8 => TransferringRule[]) public tokenToTransferringRuleArray;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        82
Source: 
>     //timestamp when hold back days are over
>     mapping(uint8 => uint256) public tokenToHoldBackDaysTimeStamp;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //timestamp when token matures

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        84
Source: 
>     //timestamp when token matures
>     mapping(uint8 => uint256) public tokenToMaturityDaysTimeStamp;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        87
Source: 
>     
>     uint256 public constant KYC = 1 << 0; //0x01
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant AML = 1 << 1; //0x02

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        88
Source: 
>     uint256 public constant KYC = 1 << 0; //0x01
>     uint256 public constant AML = 1 << 1; //0x02
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant ACCREDIATED_INVESTOR = 1 << 2;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        89
Source: 
>     uint256 public constant AML = 1 << 1; //0x02
>     uint256 public constant ACCREDIATED_INVESTOR = 1 << 2;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant QUALIFIED_INVESTOR = 1 << 3;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        90
Source: 
>     uint256 public constant ACCREDIATED_INVESTOR = 1 << 2;
>     uint256 public constant QUALIFIED_INVESTOR = 1 << 3;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant RETAIL_INVESTOR = 1 << 4;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        91
Source: 
>     uint256 public constant QUALIFIED_INVESTOR = 1 << 3;
>     uint256 public constant RETAIL_INVESTOR = 1 << 4;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant DECENTRALIZE_EXCHANGE = 1 << 5; // wallet of decentralize exchanges

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        92
Source: 
>     uint256 public constant RETAIL_INVESTOR = 1 << 4;
>     uint256 public constant DECENTRALIZE_EXCHANGE = 1 << 5; // wallet of decentralize exchanges
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant CENTRALIZE_EXCHANGE = 1 << 6; // wallet of centralize exchanges

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        93
Source: 
>     uint256 public constant DECENTRALIZE_EXCHANGE = 1 << 5; // wallet of decentralize exchanges
>     uint256 public constant CENTRALIZE_EXCHANGE = 1 << 6; // wallet of centralize exchanges
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant IS_ALLOWED_ETN = 1 << 7;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        94
Source: 
>     uint256 public constant CENTRALIZE_EXCHANGE = 1 << 6; // wallet of centralize exchanges
>     uint256 public constant IS_ALLOWED_ETN = 1 << 7;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant IS_ALLOWED_STOCK = 1 << 8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        95
Source: 
>     uint256 public constant IS_ALLOWED_ETN = 1 << 7;
>     uint256 public constant IS_ALLOWED_STOCK = 1 << 8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant FROM_USA = 1 << 9;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        96
Source: 
>     uint256 public constant IS_ALLOWED_STOCK = 1 << 8;
>     uint256 public constant FROM_USA = 1 << 9;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant FROM_CHINA = 1 << 10;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        97
Source: 
>     uint256 public constant FROM_USA = 1 << 9;
>     uint256 public constant FROM_CHINA = 1 << 10;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant FROM_EU = 1 << 11;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        98
Source: 
>     uint256 public constant FROM_CHINA = 1 << 10;
>     uint256 public constant FROM_EU = 1 << 11;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant IS_BYPASSED = 1 << 12;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        99
Source: 
>     uint256 public constant FROM_EU = 1 << 11;
>     uint256 public constant IS_BYPASSED = 1 << 12;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant BANCOR_ADDRESS = 1 << 13;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        100
Source: 
>     uint256 public constant IS_BYPASSED = 1 << 12;
>     uint256 public constant BANCOR_ADDRESS = 1 << 13;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant IS_ALLOWED_AUCTION = 1 << 14;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        101
Source: 
>     uint256 public constant BANCOR_ADDRESS = 1 << 13;
>     uint256 public constant IS_ALLOWED_AUCTION = 1 << 14;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constant
Line:        122
Source: 
> 
>     string constant ERR_NOT_OWN_ADDRESS = "ERR_NOT_OWN_ADDRESS";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constant
Line:        124
Source: 
> 
>     string constant ERR_VALUE_IS_ZERO = "ERR_VALUE_IS_ZERO";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ProxyOwnable
Line:        170
Source: 
>     
>     bool public isOwnerInitialize = false;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        11
Source: 
> contract AuctionRegisteryContracts {
>     bytes32 internal constant MAIN_TOKEN = "MAIN_TOKEN";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant ETN_TOKEN = "ETN_TOKEN";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        12
Source: 
>     bytes32 internal constant MAIN_TOKEN = "MAIN_TOKEN";
>     bytes32 internal constant ETN_TOKEN = "ETN_TOKEN";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant STOCK_TOKEN = "STOCK_TOKEN";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        13
Source: 
>     bytes32 internal constant ETN_TOKEN = "ETN_TOKEN";
>     bytes32 internal constant STOCK_TOKEN = "STOCK_TOKEN";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant WHITE_LIST = "WHITE_LIST";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        14
Source: 
>     bytes32 internal constant STOCK_TOKEN = "STOCK_TOKEN";
>     bytes32 internal constant WHITE_LIST = "WHITE_LIST";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant AUCTION = "AUCTION";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        16
Source: 
>     bytes32 internal constant AUCTION = "AUCTION";
>     bytes32 internal constant AUCTION_PROTECTION = "AUCTION_PROTECTION";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant LIQUIDITY = "LIQUIDITY";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        17
Source: 
>     bytes32 internal constant AUCTION_PROTECTION = "AUCTION_PROTECTION";
>     bytes32 internal constant LIQUIDITY = "LIQUIDITY";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant CURRENCY = "CURRENCY";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        18
Source: 
>     bytes32 internal constant LIQUIDITY = "LIQUIDITY";
>     bytes32 internal constant CURRENCY = "CURRENCY";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant VAULT = "VAULT";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        19
Source: 
>     bytes32 internal constant CURRENCY = "CURRENCY";
>     bytes32 internal constant VAULT = "VAULT";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant CONTRIBUTION_TRIGGER = "CONTRIBUTION_TRIGGER";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        20
Source: 
>     bytes32 internal constant VAULT = "VAULT";
>     bytes32 internal constant CONTRIBUTION_TRIGGER = "CONTRIBUTION_TRIGGER";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant COMPANY_FUND_WALLET = "COMPANY_FUND_WALLET";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        21
Source: 
>     bytes32 internal constant CONTRIBUTION_TRIGGER = "CONTRIBUTION_TRIGGER";
>     bytes32 internal constant COMPANY_FUND_WALLET = "COMPANY_FUND_WALLET";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant SMART_SWAP = "SMART_SWAP";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        22
Source: 
>     bytes32 internal constant COMPANY_FUND_WALLET = "COMPANY_FUND_WALLET";
>     bytes32 internal constant SMART_SWAP = "SMART_SWAP";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant SMART_SWAP_P2P = "SMART_SWAP_P2P";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        23
Source: 
>     bytes32 internal constant SMART_SWAP = "SMART_SWAP";
>     bytes32 internal constant SMART_SWAP_P2P = "SMART_SWAP_P2P";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal constant ESCROW = "ESCROW";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AuctionRegisteryContracts
Line:        24
Source: 
>     bytes32 internal constant SMART_SWAP_P2P = "SMART_SWAP_P2P";
>     bytes32 internal constant ESCROW = "ESCROW";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        87
Source: 
>     
>     uint256 public constant KYC = 1 << 0; //0x01
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant AML = 1 << 1; //0x02

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        88
Source: 
>     uint256 public constant KYC = 1 << 0; //0x01
>     uint256 public constant AML = 1 << 1; //0x02
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant ACCREDIATED_INVESTOR = 1 << 2;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        89
Source: 
>     uint256 public constant AML = 1 << 1; //0x02
>     uint256 public constant ACCREDIATED_INVESTOR = 1 << 2;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant QUALIFIED_INVESTOR = 1 << 3;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        90
Source: 
>     uint256 public constant ACCREDIATED_INVESTOR = 1 << 2;
>     uint256 public constant QUALIFIED_INVESTOR = 1 << 3;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant RETAIL_INVESTOR = 1 << 4;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        91
Source: 
>     uint256 public constant QUALIFIED_INVESTOR = 1 << 3;
>     uint256 public constant RETAIL_INVESTOR = 1 << 4;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant DECENTRALIZE_EXCHANGE = 1 << 5; // wallet of decentralize exchanges

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        92
Source: 
>     uint256 public constant RETAIL_INVESTOR = 1 << 4;
>     uint256 public constant DECENTRALIZE_EXCHANGE = 1 << 5; // wallet of decentralize exchanges
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant CENTRALIZE_EXCHANGE = 1 << 6; // wallet of centralize exchanges

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        94
Source: 
>     uint256 public constant CENTRALIZE_EXCHANGE = 1 << 6; // wallet of centralize exchanges
>     uint256 public constant IS_ALLOWED_ETN = 1 << 7;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant IS_ALLOWED_STOCK = 1 << 8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        95
Source: 
>     uint256 public constant IS_ALLOWED_ETN = 1 << 7;
>     uint256 public constant IS_ALLOWED_STOCK = 1 << 8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant FROM_USA = 1 << 9;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        96
Source: 
>     uint256 public constant IS_ALLOWED_STOCK = 1 << 8;
>     uint256 public constant FROM_USA = 1 << 9;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant FROM_CHINA = 1 << 10;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        97
Source: 
>     uint256 public constant FROM_USA = 1 << 9;
>     uint256 public constant FROM_CHINA = 1 << 10;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant FROM_EU = 1 << 11;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WhiteListStorage
Line:        98
Source: 
>     uint256 public constant FROM_CHINA = 1 << 10;
>     uint256 public constant FROM_EU = 1 << 11;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant IS_BYPASSED = 1 << 12;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constant
Line:        122
Source: 
> 
>     string constant ERR_NOT_OWN_ADDRESS = "ERR_NOT_OWN_ADDRESS";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constant
Line:        124
Source: 
> 
>     string constant ERR_VALUE_IS_ZERO = "ERR_VALUE_IS_ZERO";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m

---------------------------------------------
For contract 0x055225ac7a4c2a91fbba70fa219a7f254d17cd8f.sol
Tool Runtime = 24.822514351999416 seconds
#############################################