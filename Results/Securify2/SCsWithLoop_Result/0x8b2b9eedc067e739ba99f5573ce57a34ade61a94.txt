[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TellorTransfer
Line:        197
Source: 
> 
>     bytes32 public constant stakeAmount = 0x7be108969d31a3f0b261465c71f2b0ba9301cd914d55d9091c3b36a49d4d41b2; //keccak256("stakeAmount")
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TellorDispute
Line:        378
Source: 
>     function beginDispute(TellorStorage.TellorStorageStruct storage self, uint256 _requestId, uint256 _timestamp, uint256 _minerIndex) public {
>         TellorStorage.Request storage _request = self.requestDetails[_requestId];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_request.minedBlockNum[_timestamp] != 0, "Mined block is 0");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TellorDispute
Line:        384
Source: 
>         //provided by the party initiating the dispute
>         address _miner = _request.minersByValue[_timestamp][_minerIndex];
>         ^^^^^^^^^^^^^^
>         bytes32 _hash = keccak256(abi.encodePacked(_miner, _requestId, _timestamp));

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TellorDispute
Line:        385
Source: 
>         address _miner = _request.minersByValue[_timestamp][_minerIndex];
>         bytes32 _hash = keccak256(abi.encodePacked(_miner, _requestId, _timestamp));
>         ^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TellorDispute
Line:        416
Source: 
>         }
>         uint256 _fee;
>         ^^^^^^^^^^^^
>         if (_minerIndex == 2) {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TellorDispute
Line:        512
Source: 
>         require(disp.reportingParty != address(0), "reporting Party is address 0");
>         int256  _tally = disp.tally;
>         ^^^^^^^^^^^^^^
>         if (_tally > 0) {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TellorDispute
Line:        539
Source: 
>     function proposeFork(TellorStorage.TellorStorageStruct storage self, address _propNewTellorAddress) public {
>         bytes32 _hash = keccak256(abi.encode(_propNewTellorAddress));
>         ^^^^^^^^^^^^^
>         TellorTransfer.doTransfer(self, msg.sender, address(this), 100e18); //This is the fork fee (just 100 tokens flat, no refunds)

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TellorDispute
Line:        581
Source: 
>     function updateTellor(TellorStorage.TellorStorageStruct storage self, uint _disputeId) public {
>         bytes32 _hash = self.disputesById[_disputeId].hash;
>         ^^^^^^^^^^^^^
>         uint256 origID = self.disputeIdByDisputeHash[_hash];

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TellorDispute
Line:        607
Source: 
>         }
>         uint256 _id;
>         ^^^^^^^^^^^
>         require(disp.disputeUintVars[keccak256("paid")] == 0,"already paid out");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TellorDispute
Line:        639
Source: 
>                 stakes.currentStatus = 1;
>                 TellorStorage.Request storage _request = self.requestDetails[disp.disputeUintVars[keccak256("requestId")]];
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 if(disp.disputeUintVars[keccak256("minerSlot")] == 2) {

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity ^0.5.16;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        62
Source: 
> //pragma solidity ^0.5.0;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        183
Source: 
> //pragma solidity ^0.5.16;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        346
Source: 
> //pragma solidity ^0.5.16;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m

---------------------------------------------
For contract 0x8b2b9eedc067e739ba99f5573ce57a34ade61a94.sol
Tool Runtime = 10.42652766900028 seconds
#############################################