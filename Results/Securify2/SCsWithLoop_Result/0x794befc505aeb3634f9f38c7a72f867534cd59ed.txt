[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Address
Line:        381
Source: 
>         // solhint-disable-next-line no-inline-assembly
>         assembly { codehash := extcodehash(account) }
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return (codehash != accountHash && codehash != 0x0);

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Tx2UNI
Line:        655
Source: 
> 
>     address payable public _teamWallet = 0x3B333A64f0bbc6875176356D0Ded07FE8ae3e0aF;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     IUniswapV2Router01 public _unirouter = IUniswapV2Router01(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Tx2UNI
Line:        656
Source: 
>     address payable public _teamWallet = 0x3B333A64f0bbc6875176356D0Ded07FE8ae3e0aF;
>     IUniswapV2Router01 public _unirouter = IUniswapV2Router01(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     IUniswapV2Factory public _unifactory = IUniswapV2Factory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Tx2UNI
Line:        657
Source: 
>     IUniswapV2Router01 public _unirouter = IUniswapV2Router01(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);
>     IUniswapV2Factory public _unifactory = IUniswapV2Factory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        229
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        255
Source: 
>      */
>     function renounceOwnership() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        264
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Governance
Line:        508
Source: 
> 
>     function setGovernance(address governance)  public  onlyGovernance
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        679
Source: 
>        address[] memory _pair_weth_TOKEN = new address[](2);
>        _pair_weth_TOKEN[0] = _unirouter.WETH();
>                              ^^^^^^^^^^^^^^^^^
>        _pair_weth_TOKEN[1] = tokenaddr;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        681
Source: 
>        _pair_weth_TOKEN[1] = tokenaddr;
>        _unirouter.swapExactETHForTokens.value(eth_amount)(0, _pair_weth_TOKEN, my_address, deadline);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        789
Source: 
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         _token.approve( address(_unirouter), 0xfffffffffffffffffffffff );
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        693
Source: 
>            address[] memory _pair_weth_TOKEN = new address[](2);
>            _pair_weth_TOKEN[0] = _unirouter.WETH();
>                                  ^^^^^^^^^^^^^^^^^
>            _pair_weth_TOKEN[1] = tokenaddr;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        695
Source: 
>            _pair_weth_TOKEN[1] = tokenaddr;
>            _unirouter.swapExactETHForTokens.value(eth_amount)(0, _pair_weth_TOKEN, my_address, deadline);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        700
Source: 
>     {
>         address pair_addr = _unifactory.getPair( _unirouter.WETH(), tokenaddr );
>                                                  ^^^^^^^^^^^^^^^^^
>         IUniswapV2Pair _unipair = IUniswapV2Pair( pair_addr );

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        700
Source: 
>     {
>         address pair_addr = _unifactory.getPair( _unirouter.WETH(), tokenaddr );
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IUniswapV2Pair _unipair = IUniswapV2Pair( pair_addr );

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        703
Source: 
>         
>         (uint reserve0, uint reserve1,) = _unipair.getReserves();
>                                           ^^^^^^^^^^^^^^^^^^^^^^
>         // let _reserve0 is TOKEN , _reserve1 is WETH

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        705
Source: 
>         // let _reserve0 is TOKEN , _reserve1 is WETH
>         (uint _reserve0, uint _reserve1) = _unirouter.WETH() > tokenaddr ? (reserve0, reserve1) : (reserve1, reserve0);
>                                            ^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        708
Source: 
>         address[] memory _pair_weth_TOKEN = new address[](2);
>         _pair_weth_TOKEN[0] = _unirouter.WETH();
>                               ^^^^^^^^^^^^^^^^^
>         _pair_weth_TOKEN[1] = tokenaddr;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        712
Source: 
>         //address [] memory  _pair_weth_TOKEN_x = [ _weth , tokenaddr ];
>         uint[] memory amounts = _unirouter.getAmountsOut( my_eth, _pair_weth_TOKEN);
>                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // amounts[0] is WETH , amounts[1] is TOKEN

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        719
Source: 
>         
>         uint token_willOut = _unirouter.getAmountOut(player_eth, x_res1, x_res0);
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        728
Source: 
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         uint256 _tokentBalance = _token.balanceOf(address(this));
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if ( _tokentBalance > 0 )

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        736
Source: 
>             _pair_TOKEN_weth[0] = tokenaddr;
>             _pair_TOKEN_weth[1] = _unirouter.WETH();
>                                   ^^^^^^^^^^^^^^^^^
>             uint256 amountOutMin = 0;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        738
Source: 
>             uint256 amountOutMin = 0;
>             _unirouter.swapExactTokensForETH( _tokentBalance, amountOutMin, _pair_TOKEN_weth, contract_addr, deadline);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        750
Source: 
>         _pair_TOKEN_weth[0] = tokenaddr;
>         _pair_TOKEN_weth[1] = _unirouter.WETH();
>                               ^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        753
Source: 
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         uint256 _tokentBalance = _token.balanceOf(address(this));
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 amountOutMin = 0;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        756
Source: 
>         
>         _unirouter.swapExactTokensForETHSupportingFeeOnTransferTokens( _tokentBalance, amountOutMin, _pair_TOKEN_weth, contract_addr, deadline);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        801
Source: 
>         uint256 _currentBalance =  address(this).balance;
>         _teamWallet.transfer(_currentBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        807
Source: 
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         uint256 _currentBalance = _token.balanceOf(address(this));
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _token.transfer(_teamWallet, _currentBalance);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Tx2UNI
Line:        808
Source: 
>         uint256 _currentBalance = _token.balanceOf(address(this));
>         _token.transfer(_teamWallet, _currentBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }    

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Address
Line:        417
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    SafeERC20
Line:        482
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Address
Line:        417
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    SafeERC20
Line:        482
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Address
Line:        417
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    SafeERC20
Line:        482
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Address
Line:        417
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    SafeERC20
Line:        482
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Ownable
Line:        264
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Tx2UNI
Line:        672
Source: 
>     // To drive Contract : spent ETH ( in contract-side ) to UNISWAP, swap to TOKEN
>     function SWAP_ETH_for_TOKEN( address tokenaddr, uint256 eth_amount )  external 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Tx2UNI
Line:        684
Source: 
> 
>     function SWAP_ETH_for_TOKEN_PLAYER( address tokenaddr, uint256 eth_amount, uint256 player_eth, uint player_minimum )  external 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Tx2UNI
Line:        725
Source: 
>     // To drive Contract : send TOKEN ( in contract-side ) to UNISWAP , swap to ETH
>     function SWAP_TOKEN_for_ETH( address tokenaddr )  external
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Tx2UNI
Line:        743
Source: 
> 
>     function SWAP_TOKEN_for_ETHSupportingFeeOn( address tokenaddr )  external
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Tx2UNI
Line:        765
Source: 
>     
>     function removeBot( address bot_addr ) external onlyGovernance
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Tx2UNI
Line:        776
Source: 
>     
>     function isValidBot( address run_addr ) public view returns (bool) 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Tx2UNI
Line:        805
Source: 
>     // get TOKEN to team wallet
>     function seizeTOKEN( address tokenaddr ) external onlyGovernance {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Erc20Token _token =  Erc20Token(tokenaddr);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Address
Line:        417
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>          ^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Governance
Line:        495
Source: 
> 
>     address public _governance;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IUniswapV2Router01
Line:        519
Source: 
>     function factory() external pure returns (address);
>     function WETH() external pure returns (address);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IUniswapV2Pair
Line:        631
Source: 
> interface IUniswapV2Pair {
>     function MINIMUM_LIQUIDITY() external pure returns (uint);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function factory() external view returns (address);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        655
Source: 
> 
>     address payable public _teamWallet = 0x3B333A64f0bbc6875176356D0Ded07FE8ae3e0aF;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     IUniswapV2Router01 public _unirouter = IUniswapV2Router01(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        656
Source: 
>     address payable public _teamWallet = 0x3B333A64f0bbc6875176356D0Ded07FE8ae3e0aF;
>     IUniswapV2Router01 public _unirouter = IUniswapV2Router01(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     IUniswapV2Factory public _unifactory = IUniswapV2Factory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        657
Source: 
>     IUniswapV2Router01 public _unirouter = IUniswapV2Router01(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);
>     IUniswapV2Factory public _unifactory = IUniswapV2Factory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        659
Source: 
> 
>     address[] public _validbots;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        672
Source: 
>     // To drive Contract : spent ETH ( in contract-side ) to UNISWAP, swap to TOKEN
>     function SWAP_ETH_for_TOKEN( address tokenaddr, uint256 eth_amount )  external 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        676
Source: 
>        uint256 deadline = now+1 hours;
>        address my_address = address(this);
>        ^^^^^^^^^^^^^^^^^^
>        ApproveTOKEN( tokenaddr );

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        678
Source: 
>        ApproveTOKEN( tokenaddr );
>        address[] memory _pair_weth_TOKEN = new address[](2);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        _pair_weth_TOKEN[0] = _unirouter.WETH();

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        684
Source: 
> 
>     function SWAP_ETH_for_TOKEN_PLAYER( address tokenaddr, uint256 eth_amount, uint256 player_eth, uint player_minimum )  external 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        690
Source: 
>            uint256 deadline = now+1 hours;
>            address my_address = address(this);
>            ^^^^^^^^^^^^^^^^^^
>            ApproveTOKEN( tokenaddr );

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        692
Source: 
>            ApproveTOKEN( tokenaddr );
>            address[] memory _pair_weth_TOKEN = new address[](2);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>            _pair_weth_TOKEN[0] = _unirouter.WETH();

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        698
Source: 
> 
>     function calc_Buy_Amounts( address tokenaddr, uint256 my_eth, uint256 player_eth, uint player_minimum ) internal
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        700
Source: 
>     {
>         address pair_addr = _unifactory.getPair( _unirouter.WETH(), tokenaddr );
>         ^^^^^^^^^^^^^^^^^
>         IUniswapV2Pair _unipair = IUniswapV2Pair( pair_addr );

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        701
Source: 
>         address pair_addr = _unifactory.getPair( _unirouter.WETH(), tokenaddr );
>         IUniswapV2Pair _unipair = IUniswapV2Pair( pair_addr );
>         ^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        703
Source: 
>         
>         (uint reserve0, uint reserve1,) = _unipair.getReserves();
>          ^^^^^^^^^^^^^
>         // let _reserve0 is TOKEN , _reserve1 is WETH

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        705
Source: 
>         // let _reserve0 is TOKEN , _reserve1 is WETH
>         (uint _reserve0, uint _reserve1) = _unirouter.WETH() > tokenaddr ? (reserve0, reserve1) : (reserve1, reserve0);
>          ^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        705
Source: 
>         // let _reserve0 is TOKEN , _reserve1 is WETH
>         (uint _reserve0, uint _reserve1) = _unirouter.WETH() > tokenaddr ? (reserve0, reserve1) : (reserve1, reserve0);
>                          ^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        707
Source: 
>         
>         address[] memory _pair_weth_TOKEN = new address[](2);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _pair_weth_TOKEN[0] = _unirouter.WETH();

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        716
Source: 
>         // After Bot buying...  , to calculate reserve0 pool 
>         uint x_res0 = _reserve0 - amounts[1];   // TOKEN process
>         ^^^^^^^^^^^
>         uint x_res1 = _reserve1 + amounts[0];   // WETH process

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        717
Source: 
>         uint x_res0 = _reserve0 - amounts[1];   // TOKEN process
>         uint x_res1 = _reserve1 + amounts[0];   // WETH process
>         ^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        719
Source: 
>         
>         uint token_willOut = _unirouter.getAmountOut(player_eth, x_res1, x_res0);
>         ^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        725
Source: 
>     // To drive Contract : send TOKEN ( in contract-side ) to UNISWAP , swap to ETH
>     function SWAP_TOKEN_for_ETH( address tokenaddr )  external
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        727
Source: 
>     {
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         ^^^^^^^^^^^^^^^^^
>         uint256 _tokentBalance = _token.balanceOf(address(this));

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        728
Source: 
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         uint256 _tokentBalance = _token.balanceOf(address(this));
>         ^^^^^^^^^^^^^^^^^^^^^^
>         if ( _tokentBalance > 0 )

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        733
Source: 
>             uint256 deadline = now+1 hours;
>             address contract_addr = address(this);
>             ^^^^^^^^^^^^^^^^^^^^^
>             address[] memory _pair_TOKEN_weth = new address[](2);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        734
Source: 
>             address contract_addr = address(this);
>             address[] memory _pair_TOKEN_weth = new address[](2);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _pair_TOKEN_weth[0] = tokenaddr;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        743
Source: 
> 
>     function SWAP_TOKEN_for_ETHSupportingFeeOn( address tokenaddr )  external
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        747
Source: 
>         uint256 deadline = now+1 hours;
>         address contract_addr = address(this);
>         ^^^^^^^^^^^^^^^^^^^^^
>         address[] memory _pair_TOKEN_weth = new address[](2);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        748
Source: 
>         address contract_addr = address(this);
>         address[] memory _pair_TOKEN_weth = new address[](2);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _pair_TOKEN_weth[0] = tokenaddr;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        752
Source: 
>         
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         ^^^^^^^^^^^^^^^^^
>         uint256 _tokentBalance = _token.balanceOf(address(this));

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        753
Source: 
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         uint256 _tokentBalance = _token.balanceOf(address(this));
>         ^^^^^^^^^^^^^^^^^^^^^^
>         uint256 amountOutMin = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        787
Source: 
>     
>     function ApproveTOKEN( address tokenaddr ) internal  {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Erc20Token _token =  Erc20Token(tokenaddr);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        788
Source: 
>     function ApproveTOKEN( address tokenaddr ) internal  {
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         ^^^^^^^^^^^^^^^^^
>         _token.approve( address(_unirouter), 0xfffffffffffffffffffffff );

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        800
Source: 
>     function seizeEth() external onlyGovernance {
>         uint256 _currentBalance =  address(this).balance;
>         ^^^^^^^^^^^^^^^^^^^^^^^
>         _teamWallet.transfer(_currentBalance);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        806
Source: 
>     function seizeTOKEN( address tokenaddr ) external onlyGovernance {
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         ^^^^^^^^^^^^^^^^^
>         uint256 _currentBalance = _token.balanceOf(address(this));

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Tx2UNI
Line:        807
Source: 
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         uint256 _currentBalance = _token.balanceOf(address(this));
>         ^^^^^^^^^^^^^^^^^^^^^^^
>         _token.transfer(_teamWallet, _currentBalance);

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity ^0.5.16;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    Tx2UNI
Line:        681
Source: 
>        _pair_weth_TOKEN[1] = tokenaddr;
>        _unirouter.swapExactETHForTokens.value(eth_amount)(0, _pair_weth_TOKEN, my_address, deadline);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    Tx2UNI
Line:        695
Source: 
>            _pair_weth_TOKEN[1] = tokenaddr;
>            _unirouter.swapExactETHForTokens.value(eth_amount)(0, _pair_weth_TOKEN, my_address, deadline);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    Tx2UNI
Line:        801
Source: 
>         uint256 _currentBalance =  address(this).balance;
>         _teamWallet.transfer(_currentBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Tx2UNI
Line:        681
Source: 
>        _pair_weth_TOKEN[1] = tokenaddr;
>        _unirouter.swapExactETHForTokens.value(eth_amount)(0, _pair_weth_TOKEN, my_address, deadline);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Tx2UNI
Line:        695
Source: 
>            _pair_weth_TOKEN[1] = tokenaddr;
>            _unirouter.swapExactETHForTokens.value(eth_amount)(0, _pair_weth_TOKEN, my_address, deadline);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Tx2UNI
Line:        801
Source: 
>         uint256 _currentBalance =  address(this).balance;
>         _teamWallet.transfer(_currentBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Tx2UNI
Line:        681
Source: 
>        _pair_weth_TOKEN[1] = tokenaddr;
>        _unirouter.swapExactETHForTokens.value(eth_amount)(0, _pair_weth_TOKEN, my_address, deadline);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Tx2UNI
Line:        695
Source: 
>            _pair_weth_TOKEN[1] = tokenaddr;
>            _unirouter.swapExactETHForTokens.value(eth_amount)(0, _pair_weth_TOKEN, my_address, deadline);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Tx2UNI
Line:        801
Source: 
>         uint256 _currentBalance =  address(this).balance;
>         _teamWallet.transfer(_currentBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Tx2UNI
Line:        700
Source: 
>     {
>         address pair_addr = _unifactory.getPair( _unirouter.WETH(), tokenaddr );
>                                                  ^^^^^^^^^^^^^^^^^
>         IUniswapV2Pair _unipair = IUniswapV2Pair( pair_addr );

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Tx2UNI
Line:        703
Source: 
>         
>         (uint reserve0, uint reserve1,) = _unipair.getReserves();
>                                           ^^^^^^^^^^^^^^^^^^^^^^
>         // let _reserve0 is TOKEN , _reserve1 is WETH

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Tx2UNI
Line:        705
Source: 
>         // let _reserve0 is TOKEN , _reserve1 is WETH
>         (uint _reserve0, uint _reserve1) = _unirouter.WETH() > tokenaddr ? (reserve0, reserve1) : (reserve1, reserve0);
>                                            ^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Tx2UNI
Line:        712
Source: 
>         //address [] memory  _pair_weth_TOKEN_x = [ _weth , tokenaddr ];
>         uint[] memory amounts = _unirouter.getAmountsOut( my_eth, _pair_weth_TOKEN);
>                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // amounts[0] is WETH , amounts[1] is TOKEN

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Tx2UNI
Line:        719
Source: 
>         
>         uint token_willOut = _unirouter.getAmountOut(player_eth, x_res1, x_res0);
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Tx2UNI
Line:        728
Source: 
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         uint256 _tokentBalance = _token.balanceOf(address(this));
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if ( _tokentBalance > 0 )

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Tx2UNI
Line:        753
Source: 
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         uint256 _tokentBalance = _token.balanceOf(address(this));
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 amountOutMin = 0;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Tx2UNI
Line:        807
Source: 
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         uint256 _currentBalance = _token.balanceOf(address(this));
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _token.transfer(_teamWallet, _currentBalance);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Tx2UNI
Line:        679
Source: 
>        address[] memory _pair_weth_TOKEN = new address[](2);
>        _pair_weth_TOKEN[0] = _unirouter.WETH();
>                              ^^^^^^^^^^^^^^^^^
>        _pair_weth_TOKEN[1] = tokenaddr;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Tx2UNI
Line:        681
Source: 
>        _pair_weth_TOKEN[1] = tokenaddr;
>        _unirouter.swapExactETHForTokens.value(eth_amount)(0, _pair_weth_TOKEN, my_address, deadline);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Tx2UNI
Line:        789
Source: 
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         _token.approve( address(_unirouter), 0xfffffffffffffffffffffff );
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Tx2UNI
Line:        693
Source: 
>            address[] memory _pair_weth_TOKEN = new address[](2);
>            _pair_weth_TOKEN[0] = _unirouter.WETH();
>                                  ^^^^^^^^^^^^^^^^^
>            _pair_weth_TOKEN[1] = tokenaddr;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Tx2UNI
Line:        695
Source: 
>            _pair_weth_TOKEN[1] = tokenaddr;
>            _unirouter.swapExactETHForTokens.value(eth_amount)(0, _pair_weth_TOKEN, my_address, deadline);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Tx2UNI
Line:        700
Source: 
>     {
>         address pair_addr = _unifactory.getPair( _unirouter.WETH(), tokenaddr );
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IUniswapV2Pair _unipair = IUniswapV2Pair( pair_addr );

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Tx2UNI
Line:        708
Source: 
>         address[] memory _pair_weth_TOKEN = new address[](2);
>         _pair_weth_TOKEN[0] = _unirouter.WETH();
>                               ^^^^^^^^^^^^^^^^^
>         _pair_weth_TOKEN[1] = tokenaddr;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Tx2UNI
Line:        736
Source: 
>             _pair_TOKEN_weth[0] = tokenaddr;
>             _pair_TOKEN_weth[1] = _unirouter.WETH();
>                                   ^^^^^^^^^^^^^^^^^
>             uint256 amountOutMin = 0;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Tx2UNI
Line:        738
Source: 
>             uint256 amountOutMin = 0;
>             _unirouter.swapExactTokensForETH( _tokentBalance, amountOutMin, _pair_TOKEN_weth, contract_addr, deadline);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Tx2UNI
Line:        750
Source: 
>         _pair_TOKEN_weth[0] = tokenaddr;
>         _pair_TOKEN_weth[1] = _unirouter.WETH();
>                               ^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Tx2UNI
Line:        756
Source: 
>         
>         _unirouter.swapExactTokensForETHSupportingFeeOnTransferTokens( _tokentBalance, amountOutMin, _pair_TOKEN_weth, contract_addr, deadline);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Tx2UNI
Line:        808
Source: 
>         uint256 _currentBalance = _token.balanceOf(address(this));
>         _token.transfer(_teamWallet, _currentBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }    

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Address
Line:        382
Source: 
>         assembly { codehash := extcodehash(account) }
>         return (codehash != accountHash && codehash != 0x0);
>                 ^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    Tx2UNI
Line:        681
Source: 
>        _pair_weth_TOKEN[1] = tokenaddr;
>        _unirouter.swapExactETHForTokens.value(eth_amount)(0, _pair_weth_TOKEN, my_address, deadline);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    Tx2UNI
Line:        695
Source: 
>            _pair_weth_TOKEN[1] = tokenaddr;
>            _unirouter.swapExactETHForTokens.value(eth_amount)(0, _pair_weth_TOKEN, my_address, deadline);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Address
Line:        417
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        479
Source: 
>         // solhint-disable-next-line max-line-length
>         require(address(token).isContract(), "SafeERC20: call to non-contract");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        482
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        448
Source: 
>         // solhint-disable-next-line max-line-length
>         require((value == 0) || (token.allowance(address(this), spender) == 0),
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SafeERC20: approve from non-zero to non-zero allowance"

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        455
Source: 
>     function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).add(value);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        460
Source: 
>     function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).sub(value, "SafeERC20: decreased allowance below zero");
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Address
Line:        417
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        479
Source: 
>         // solhint-disable-next-line max-line-length
>         require(address(token).isContract(), "SafeERC20: call to non-contract");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        482
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        448
Source: 
>         // solhint-disable-next-line max-line-length
>         require((value == 0) || (token.allowance(address(this), spender) == 0),
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SafeERC20: approve from non-zero to non-zero allowance"

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        455
Source: 
>     function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).add(value);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        460
Source: 
>     function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).sub(value, "SafeERC20: decreased allowance below zero");
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Address
Line:        417
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        479
Source: 
>         // solhint-disable-next-line max-line-length
>         require(address(token).isContract(), "SafeERC20: call to non-contract");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        482
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        448
Source: 
>         // solhint-disable-next-line max-line-length
>         require((value == 0) || (token.allowance(address(this), spender) == 0),
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SafeERC20: approve from non-zero to non-zero allowance"

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        455
Source: 
>     function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).add(value);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        460
Source: 
>     function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).sub(value, "SafeERC20: decreased allowance below zero");
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Tx2UNI
Line:        679
Source: 
>        address[] memory _pair_weth_TOKEN = new address[](2);
>        _pair_weth_TOKEN[0] = _unirouter.WETH();
>                              ^^^^^^^^^^^^^^^^^
>        _pair_weth_TOKEN[1] = tokenaddr;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Tx2UNI
Line:        681
Source: 
>        _pair_weth_TOKEN[1] = tokenaddr;
>        _unirouter.swapExactETHForTokens.value(eth_amount)(0, _pair_weth_TOKEN, my_address, deadline);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Tx2UNI
Line:        789
Source: 
>         Erc20Token _token =  Erc20Token(tokenaddr);
>         _token.approve( address(_unirouter), 0xfffffffffffffffffffffff );
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Tx2UNI
Line:        693
Source: 
>            address[] memory _pair_weth_TOKEN = new address[](2);
>            _pair_weth_TOKEN[0] = _unirouter.WETH();
>                                  ^^^^^^^^^^^^^^^^^
>            _pair_weth_TOKEN[1] = tokenaddr;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Tx2UNI
Line:        695
Source: 
>            _pair_weth_TOKEN[1] = tokenaddr;
>            _unirouter.swapExactETHForTokens.value(eth_amount)(0, _pair_weth_TOKEN, my_address, deadline);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Tx2UNI
Line:        708
Source: 
>         address[] memory _pair_weth_TOKEN = new address[](2);
>         _pair_weth_TOKEN[0] = _unirouter.WETH();
>                               ^^^^^^^^^^^^^^^^^
>         _pair_weth_TOKEN[1] = tokenaddr;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Tx2UNI
Line:        736
Source: 
>             _pair_TOKEN_weth[0] = tokenaddr;
>             _pair_TOKEN_weth[1] = _unirouter.WETH();
>                                   ^^^^^^^^^^^^^^^^^
>             uint256 amountOutMin = 0;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Tx2UNI
Line:        738
Source: 
>             uint256 amountOutMin = 0;
>             _unirouter.swapExactTokensForETH( _tokentBalance, amountOutMin, _pair_TOKEN_weth, contract_addr, deadline);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Tx2UNI
Line:        750
Source: 
>         _pair_TOKEN_weth[0] = tokenaddr;
>         _pair_TOKEN_weth[1] = _unirouter.WETH();
>                               ^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Tx2UNI
Line:        808
Source: 
>         uint256 _currentBalance = _token.balanceOf(address(this));
>         _token.transfer(_teamWallet, _currentBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }    

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Address
Line:        417
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        479
Source: 
>         // solhint-disable-next-line max-line-length
>         require(address(token).isContract(), "SafeERC20: call to non-contract");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        482
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        448
Source: 
>         // solhint-disable-next-line max-line-length
>         require((value == 0) || (token.allowance(address(this), spender) == 0),
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SafeERC20: approve from non-zero to non-zero allowance"

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        455
Source: 
>     function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).add(value);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        460
Source: 
>     function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).sub(value, "SafeERC20: decreased allowance below zero");
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m

---------------------------------------------
For contract 0x794befc505aeb3634f9f38c7a72f867534cd59ed.sol
Tool Runtime = 14.543107893005072 seconds
#############################################