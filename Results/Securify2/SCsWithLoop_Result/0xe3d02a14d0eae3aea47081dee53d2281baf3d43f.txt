pragma directive defines a prior version to 0.5.12. Changing pragma version to 0.5.12....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SmartLotto
Line:        501
Source: 
> 	// Contract address balance
>     function getBalance() public view returns(uint) {
>                              ^^^^^^^^^^^^^^^^^^^^^^^^
>         uint balance = address(this).balance;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SmartLotto
Line:        515
Source: 
> 	// i - Game number
> 	function getGameInfo(uint i) public view returns (uint, uint, uint8, uint8, uint8, uint8, uint8, uint8, uint, uint, uint, uint) {
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	    Game memory game = games[i];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SmartLotto
Line:        521
Source: 
> 	// i - Game number, j - Ticket number
> 	function getMemberInfo(uint i, uint j) public view returns (address, uint, uint8, uint8, uint8, uint8, uint8, uint, uint8) {
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	    Member memory mbr = games[i].members[j];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SmartLotto
Line:        515
Source: 
> 	// i - Game number
> 	function getGameInfo(uint i) public view returns (uint, uint, uint8, uint8, uint8, uint8, uint8, uint8, uint, uint, uint, uint) {
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	    Game memory game = games[i];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SmartLotto
Line:        521
Source: 
> 	// i - Game number, j - Ticket number
> 	function getMemberInfo(uint i, uint j) public view returns (address, uint, uint8, uint8, uint8, uint8, uint8, uint, uint8) {
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	    Member memory mbr = games[i].members[j];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    SmartLotto
Line:        124
Source: 
> 			if(JACKPOT > start_jackpot_amount) {
> 				ADDRESS_START_JACKPOT.transfer(start_jackpot_amount);
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 				JACKPOT = JACKPOT - start_jackpot_amount;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    SmartLotto
Line:        128
Source: 
> 			} else {
> 				ADDRESS_START_JACKPOT.transfer(JACKPOT);
>                              ^^^^^^^^^^^^^^^
> 				start_jackpot_amount = 0;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    SmartLotto
Line:        278
Source: 
> 			// Transfer PR 
> 			ADDRESS_PR.transfer(FUND_PR);
>                             ^^^^
> 			FUND_PR = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SmartLotto
Line:        42
Source: 
> 	
> 	uint private CONTRACT_STARTED_DATE = 0;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	uint private constant TICKET_PRICE = 0.01 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SmartLotto
Line:        52
Source: 
> 	uint public JACKPOT = 0;
> 	
> ^
> 	// Init params

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SmartLotto
Line:        54
Source: 
> 	// Init params
> 	uint public GAME_NUM = 0;
>                           
> 	uint private constant return_jackpot_period = 25 weeks;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SmartLotto
Line:        55
Source: 
> 	uint public GAME_NUM = 0;
> 	uint private constant return_jackpot_period = 25 weeks;
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	uint private start_jackpot_amount = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SmartLotto
Line:        56
Source: 
> 	uint private constant return_jackpot_period = 25 weeks;
> 	uint private start_jackpot_amount = 0;
>                           ^^^^^^^^^^^^^
> 	

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SmartLotto
Line:        59
Source: 
> 	uint private constant PERCENT_FUND_PR = 15;                             // (%) PR & ADV
> 	uint private FUND_PR = 0;                                               // Fund PR & ADV
>                           ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SmartLotto
Line:        76
Source: 
> 	uint private constant POOL_SIZE = 30;										// MAX processing tickets by transaction
> 	uint private POOL_COUNTER = 0;
>                           ^^^^^
> 	

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SmartLotto
Line:        163
Source: 
> 	    
> 		uint8[5] memory win_numbers;
>                            ^^^
> 		uint8 mn = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SmartLotto
Line:        208
Source: 
> 		uint _w2 = 0;
> 		uint _w3 = 0;
>            ^^^^
> 		uint _w4 = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SmartLotto
Line:        209
Source: 
> 		uint _w3 = 0;
> 		uint _w4 = 0;
>            ^^^^
> 		uint _w5 = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SmartLotto
Line:        210
Source: 
> 		uint _w4 = 0;
> 		uint _w5 = 0;
>            ^^^^
> 		

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SmartLotto
Line:        212
Source: 
> 		
> 	    for(uint i = start; i <= end; i++) {
>         ^^^^^^^^
> 	       

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SmartLotto
Line:        236
Source: 
> 			uint fund4 = totalFund * PERCENT_FUND_4 / 100;
> 			uint _jackpot = JACKPOT + totalFund * PERCENT_FUND_JACKPOT / 100;
>                             ^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SmartLotto
Line:        436
Source: 
> 	// Parse and check msg.DATA function
> 	function ParseCheckData() private view returns (bool, uint8[5] memory) {
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	    

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SmartLotto
Line:        46
Source: 
> 	
> 	uint private constant PERCENT_FUND_JACKPOT = 15;                        // (%) Increase Jackpot
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	uint private constant PERCENT_FUND_4 = 35;                              // (%) Fund 4 of 5

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SmartLotto
Line:        47
Source: 
> 	uint private constant PERCENT_FUND_JACKPOT = 15;                        // (%) Increase Jackpot
> 	uint private constant PERCENT_FUND_4 = 35;                              // (%) Fund 4 of 5
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	uint private constant PERCENT_FUND_3 = 30;                              // (%) Fund 3 of 5

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SmartLotto
Line:        48
Source: 
> 	uint private constant PERCENT_FUND_4 = 35;                              // (%) Fund 4 of 5
> 	uint private constant PERCENT_FUND_3 = 30;                              // (%) Fund 3 of 5
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint private constant PERCENT_FUND_2 = 20;                              // (%) Fund 2 of 5

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SmartLotto
Line:        49
Source: 
> 	uint private constant PERCENT_FUND_3 = 30;                              // (%) Fund 3 of 5
>     uint private constant PERCENT_FUND_2 = 20;                              // (%) Fund 2 of 5
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SmartLotto
Line:        52
Source: 
> 	uint public JACKPOT = 0;
> 	
> ^
> 	// Init params

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SmartLotto
Line:        58
Source: 
> 	
> 	uint private constant PERCENT_FUND_PR = 15;                             // (%) PR & ADV
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	uint private FUND_PR = 0;                                               // Fund PR & ADV

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SmartLotto
Line:        59
Source: 
> 	uint private constant PERCENT_FUND_PR = 15;                             // (%) PR & ADV
> 	uint private FUND_PR = 0;                                               // Fund PR & ADV
>                           ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SmartLotto
Line:        62
Source: 
> 	// Addresses
> 	address private constant ADDRESS_SERVICE = 0x203bF6B46508eD917c085F50F194F36b0a62EB02;
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	address payable private constant ADDRESS_START_JACKPOT = 0x531d3Bd0400Ae601f26B335EfbD787415Aa5CB81;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SmartLotto
Line:        63
Source: 
> 	address private constant ADDRESS_SERVICE = 0x203bF6B46508eD917c085F50F194F36b0a62EB02;
> 	address payable private constant ADDRESS_START_JACKPOT = 0x531d3Bd0400Ae601f26B335EfbD787415Aa5CB81;
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	address payable private constant ADDRESS_PR = 0xCD66911b6f38FaAF5BFeE427b3Ceb7D18Dd09F78;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SmartLotto
Line:        64
Source: 
> 	address payable private constant ADDRESS_START_JACKPOT = 0x531d3Bd0400Ae601f26B335EfbD787415Aa5CB81;
> 	address payable private constant ADDRESS_PR = 0xCD66911b6f38FaAF5BFeE427b3Ceb7D18Dd09F78;
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SmartLotto
Line:        75
Source: 
> 	// For many processing transactions
> 	uint private constant POOL_SIZE = 30;										// MAX processing tickets by transaction
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	uint private POOL_COUNTER = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SmartLotto
Line:        83
Source: 
> 	
> 	// Entry point
>   ^^^^^^^^^^^^^
> 	function() external payable {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    SmartLotto
Line:        373
Source: 
> 			    } else {
> 				    msg.sender.transfer(msg.value.sub(TICKET_PRICE));
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^
> 				    createTicket();

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    SmartLotto
Line:        124
Source: 
> 			if(JACKPOT > start_jackpot_amount) {
> 				ADDRESS_START_JACKPOT.transfer(start_jackpot_amount);
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 				JACKPOT = JACKPOT - start_jackpot_amount;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    SmartLotto
Line:        128
Source: 
> 			} else {
> 				ADDRESS_START_JACKPOT.transfer(JACKPOT);
>                              ^^^^^^^^^^^^^^^
> 				start_jackpot_amount = 0;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    SmartLotto
Line:        278
Source: 
> 			// Transfer PR 
> 			ADDRESS_PR.transfer(FUND_PR);
>                             ^^^^
> 			FUND_PR = 0;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    SmartLotto
Line:        357
Source: 
> 			
> 			if(payoutAmount != 0) msg.sender.transfer(payoutAmount);
>                                                   ^^^^^^^^^
> 			

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SmartLotto
Line:        124
Source: 
> 			if(JACKPOT > start_jackpot_amount) {
> 				ADDRESS_START_JACKPOT.transfer(start_jackpot_amount);
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 				JACKPOT = JACKPOT - start_jackpot_amount;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SmartLotto
Line:        128
Source: 
> 			} else {
> 				ADDRESS_START_JACKPOT.transfer(JACKPOT);
>                              ^^^^^^^^^^^^^^^
> 				start_jackpot_amount = 0;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SmartLotto
Line:        278
Source: 
> 			// Transfer PR 
> 			ADDRESS_PR.transfer(FUND_PR);
>                             ^^^^
> 			FUND_PR = 0;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SmartLotto
Line:        124
Source: 
> 			if(JACKPOT > start_jackpot_amount) {
> 				ADDRESS_START_JACKPOT.transfer(start_jackpot_amount);
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 				JACKPOT = JACKPOT - start_jackpot_amount;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SmartLotto
Line:        128
Source: 
> 			} else {
> 				ADDRESS_START_JACKPOT.transfer(JACKPOT);
>                              ^^^^^^^^^^^^^^^
> 				start_jackpot_amount = 0;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SmartLotto
Line:        278
Source: 
> 			// Transfer PR 
> 			ADDRESS_PR.transfer(FUND_PR);
>                             ^^^^
> 			FUND_PR = 0;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SmartLotto
Line:        357
Source: 
> 			
> 			if(payoutAmount != 0) msg.sender.transfer(payoutAmount);
>                                                   ^^^^^^^^^
> 			

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SmartLotto
Line:        373
Source: 
> 			    } else {
> 				    msg.sender.transfer(msg.value.sub(TICKET_PRICE));
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^
> 				    createTicket();

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SmartLotto
Line:        379
Source: 
> 		} else {
> 		     msg.sender.transfer(msg.value);
>                                 ^^^^^^
> 		}

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    SmartLotto
Line:        176
Source: 
> 			for(uint8 i = 0; i < 5; i++) {
> 				win_numbers[i] = random(i);
>                              ^^
> 			}

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    SmartLotto
Line:        446
Source: 
> 		    for(uint8 i = 0; i < msg.data.length; i++) {
> 		        numbers[i] = uint8(msg.data[i]);
>                                    ^^^^^^^
> 		    }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SmartLotto
Line:        391
Source: 
> 		FUND_PR = FUND_PR + TICKET_PRICE.mul(PERCENT_FUND_PR).div(100);
> 		games[GAME_NUM].totalFund = games[GAME_NUM].totalFund + TICKET_PRICE.mul(100 - PERCENT_FUND_PR).div(100);
>                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
> 		emit UpdateFund(games[GAME_NUM].totalFund);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SmartLotto
Line:        370
Source: 
> 				    FUND_PR = FUND_PR + msg.value.mul(PERCENT_FUND_PR).div(100);
> 				    games[GAME_NUM].totalFund = games[GAME_NUM].totalFund + msg.value.mul(100 - PERCENT_FUND_PR).div(100);
>                                                                                          ^^^^^^^^^^^^^^^^^^^^^
> 				    emit UpdateFund(games[GAME_NUM].totalFund);

[0m

---------------------------------------------
For contract 0xe3d02a14d0eae3aea47081dee53d2281baf3d43f.sol
Tool Runtime = 12.305125083000348 seconds
#############################################