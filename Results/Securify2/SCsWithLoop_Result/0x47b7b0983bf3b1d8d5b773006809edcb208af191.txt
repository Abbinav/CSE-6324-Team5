[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    PickleVoteProxy
Line:        78
Source: 
> 
>     function balanceOf(address _voter) external view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         (uint256 _votes, ) = chef.userInfo(pool, _voter);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    PickleVoteProxy
Line:        49
Source: 
>     // ETH/PICKLE token
>     IERC20 public constant votes = IERC20(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         0xdc98556Ce24f007A5eF6dC1CE96322d65832A819

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    PickleVoteProxy
Line:        54
Source: 
>     // Pickle's masterchef contract
>     MasterChef public constant chef = MasterChef(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         0xbD17B1ce622d73bD438b9E658acA5996dc394b0d

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    PickleVoteProxy
Line:        59
Source: 
>     // Pool 0 is the ETH/PICKLE pool
>     uint256 public constant pool = uint256(0);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    PickleVoteProxy
Line:        79
Source: 
>     function balanceOf(address _voter) external view returns (uint256) {
>         (uint256 _votes, ) = chef.userInfo(pool, _voter);
>          ^^^^^^^^^^^^^^
>         return sqrt(_votes);

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        8
Source: 
> //pragma solidity ^0.6.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    PickleVoteProxy
Line:        75
Source: 
>     function totalSupply() external view returns (uint256) {
>         return sqrt(votes.totalSupply());
>                     ^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    PickleVoteProxy
Line:        79
Source: 
>     function balanceOf(address _voter) external view returns (uint256) {
>         (uint256 _votes, ) = chef.userInfo(pool, _voter);
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return sqrt(_votes);

[0m

---------------------------------------------
For contract 0x47b7b0983bf3b1d8d5b773006809edcb208af191.sol
Tool Runtime = 2.0927132030001303 seconds
#############################################