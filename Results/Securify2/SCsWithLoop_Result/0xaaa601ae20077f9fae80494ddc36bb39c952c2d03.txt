[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        66
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        89
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        66
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        89
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PriceFeeds
Line:        362
Source: 
> 
>     function queryPrecision(
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         address sourceToken,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PriceFeeds
Line:        375
Source: 
>     //// NOTE: This function returns 0 during a pause, rather than a revert. Ensure calling contracts handle correctly. ///
>     function queryReturn(
>     ^^^^^^^^^^^^^^^^^^^^^
>         address sourceToken,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PriceFeeds
Line:        396
Source: 
> 
>     function checkPriceDisagreement(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address sourceToken,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PriceFeeds
Line:        452
Source: 
> 
>     function getMaxDrawdown(
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         address loanToken,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PriceFeeds
Line:        487
Source: 
> 
>     function getCurrentMarginAndCollateralSize(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address loanToken,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PriceFeeds
Line:        546
Source: 
> 
>     function shouldLiquidate(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>         address loanToken,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    PriceFeeds
Line:        681
Source: 
>             if (sourceTokenDecimals == 0)
>                 sourceTokenDecimals = IERC20(sourceToken).decimals();
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    PriceFeeds
Line:        685
Source: 
>             if (destTokenDecimals == 0)
>                 destTokenDecimals = IERC20(destToken).decimals();
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    PriceFeeds
Line:        662
Source: 
>             require(address(_Feed) != address(0), "unsupported price feed");
>             rate = uint256(_Feed.latestAnswer());
>                            ^^^^^^^^^^^^^^^^^^^^
>             require(rate != 0 && (rate >> 128) == 0, "price error");

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    PriceFeeds
Line:        699
Source: 
>     {
>         gasPrice = uint256(pricesFeeds[FASTGAS_PRICEFEED_ADDRESS].latestAnswer())
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .mul(GWEI_PRECISION);

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    PriceFeeds
Line:        610
Source: 
>         for (uint256 i = 0; i < tokens.length; i++) {
>             decimals[address(tokens[i])] = tokens[i].decimals();
>                                            ^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Ownable
Line:        89
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    PriceFeeds
Line:        348
Source: 
> 
>     function queryRate(
>     ^^^^^^^^^^^^^^^^^^^
>         address sourceToken,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    PriceFeeds
Line:        487
Source: 
> 
>     function getCurrentMarginAndCollateralSize(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address loanToken,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    PriceFeeds
Line:        509
Source: 
> 
>     function getCurrentMargin(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address loanToken,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    PriceFeeds
Line:        614
Source: 
> 
>     function setGlobalPricingPaused(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         bool isPaused)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    PriceFeeds
Line:        375
Source: 
>     //// NOTE: This function returns 0 during a pause, rather than a revert. Ensure calling contracts handle correctly. ///
>     function queryReturn(
>     ^^^^^^^^^^^^^^^^^^^^^
>         address sourceToken,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    PriceFeeds
Line:        396
Source: 
> 
>     function checkPriceDisagreement(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address sourceToken,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    PriceFeeds
Line:        432
Source: 
> 
>     function amountInEth(
>     ^^^^^^^^^^^^^^^^^^^^^
>         address tokenAddress,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    PriceFeeds
Line:        452
Source: 
> 
>     function getMaxDrawdown(
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         address loanToken,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    PriceFeeds
Line:        546
Source: 
> 
>     function shouldLiquidate(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>         address loanToken,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    PriceFeeds
Line:        610
Source: 
>         for (uint256 i = 0; i < tokens.length; i++) {
>             decimals[address(tokens[i])] = tokens[i].decimals();
>                                            ^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Constants
Line:        313
Source: 
> 
>     IWethERC20 public constant wethToken = IWethERC20(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public constant bzrxTokenAddress = 0x56d811088235F11C8920698a204A5010a788f4b3;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Constants
Line:        314
Source: 
>     IWethERC20 public constant wethToken = IWethERC20(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);
>     address public constant bzrxTokenAddress = 0x56d811088235F11C8920698a204A5010a788f4b3;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public constant vbzrxTokenAddress = 0xB72B31907C1C95F3650b64b2469e08EdACeE5e8F;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Constants
Line:        315
Source: 
>     address public constant bzrxTokenAddress = 0x56d811088235F11C8920698a204A5010a788f4b3;
>     address public constant vbzrxTokenAddress = 0xB72B31907C1C95F3650b64b2469e08EdACeE5e8F;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    PriceFeeds
Line:        556
Source: 
>     {
>         (uint256 currentMargin,) = getCurrentMargin(
>          ^^^^^^^^^^^^^^^^^^^^^
>             loanToken,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    PriceFeeds
Line:        660
Source: 
>         if (token != address(wethToken)) {
>             IPriceFeedsExt _Feed = pricesFeeds[token];
>             ^^^^^^^^^^^^^^^^^^^^
>             require(address(_Feed) != address(0), "unsupported price feed");

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        11
Source: 
> //pragma solidity 0.5.17;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    PriceFeeds
Line:        681
Source: 
>             if (sourceTokenDecimals == 0)
>                 sourceTokenDecimals = IERC20(sourceToken).decimals();
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    PriceFeeds
Line:        685
Source: 
>             if (destTokenDecimals == 0)
>                 destTokenDecimals = IERC20(destToken).decimals();
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    PriceFeeds
Line:        662
Source: 
>             require(address(_Feed) != address(0), "unsupported price feed");
>             rate = uint256(_Feed.latestAnswer());
>                            ^^^^^^^^^^^^^^^^^^^^
>             require(rate != 0 && (rate >> 128) == 0, "price error");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    PriceFeeds
Line:        699
Source: 
>     {
>         gasPrice = uint256(pricesFeeds[FASTGAS_PRICEFEED_ADDRESS].latestAnswer())
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .mul(GWEI_PRECISION);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PriceFeeds
Line:        610
Source: 
>         for (uint256 i = 0; i < tokens.length; i++) {
>             decimals[address(tokens[i])] = tokens[i].decimals();
>                                            ^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    PriceFeeds
Line:        610
Source: 
>         for (uint256 i = 0; i < tokens.length; i++) {
>             decimals[address(tokens[i])] = tokens[i].decimals();
>                                            ^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constants
Line:        307
Source: 
> 
>     uint256 internal constant WEI_PRECISION = 10**18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 internal constant WEI_PERCENT_PRECISION = 10**20;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constants
Line:        308
Source: 
>     uint256 internal constant WEI_PRECISION = 10**18;
>     uint256 internal constant WEI_PERCENT_PRECISION = 10**20;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constants
Line:        310
Source: 
> 
>     uint256 internal constant DAYS_IN_A_YEAR = 365;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 internal constant ONE_MONTH = 2628000; // approx. seconds in a month

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constants
Line:        311
Source: 
>     uint256 internal constant DAYS_IN_A_YEAR = 365;
>     uint256 internal constant ONE_MONTH = 2628000; // approx. seconds in a month
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constants
Line:        313
Source: 
> 
>     IWethERC20 public constant wethToken = IWethERC20(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public constant bzrxTokenAddress = 0x56d811088235F11C8920698a204A5010a788f4b3;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constants
Line:        314
Source: 
>     IWethERC20 public constant wethToken = IWethERC20(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);
>     address public constant bzrxTokenAddress = 0x56d811088235F11C8920698a204A5010a788f4b3;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public constant vbzrxTokenAddress = 0xB72B31907C1C95F3650b64b2469e08EdACeE5e8F;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constants
Line:        315
Source: 
>     address public constant bzrxTokenAddress = 0x56d811088235F11C8920698a204A5010a788f4b3;
>     address public constant vbzrxTokenAddress = 0xB72B31907C1C95F3650b64b2469e08EdACeE5e8F;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constants
Line:        310
Source: 
> 
>     uint256 internal constant DAYS_IN_A_YEAR = 365;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 internal constant ONE_MONTH = 2628000; // approx. seconds in a month

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constants
Line:        311
Source: 
>     uint256 internal constant DAYS_IN_A_YEAR = 365;
>     uint256 internal constant ONE_MONTH = 2628000; // approx. seconds in a month
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constants
Line:        314
Source: 
>     IWethERC20 public constant wethToken = IWethERC20(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);
>     address public constant bzrxTokenAddress = 0x56d811088235F11C8920698a204A5010a788f4b3;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public constant vbzrxTokenAddress = 0xB72B31907C1C95F3650b64b2469e08EdACeE5e8F;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Constants
Line:        315
Source: 
>     address public constant bzrxTokenAddress = 0x56d811088235F11C8920698a204A5010a788f4b3;
>     address public constant vbzrxTokenAddress = 0xB72B31907C1C95F3650b64b2469e08EdACeE5e8F;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m

---------------------------------------------
For contract 0xaaa601ae20077f9fae80494ddc36bb39c952c2d03.sol
Tool Runtime = 11.494886935004615 seconds
#############################################