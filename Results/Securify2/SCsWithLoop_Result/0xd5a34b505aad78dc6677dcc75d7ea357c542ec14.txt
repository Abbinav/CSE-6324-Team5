pragma directive defines a prior version to 0.5.12. Changing pragma version to 0.5.12....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Airdrop
Line:        62
Source: 
>     */
>   function airdropTokens(address _tokenContractAdd, address[] memory _recipient, uint256[] memory _tokens) public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     token = Token(_tokenContractAdd);

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    Airdrop
Line:        66
Source: 
>     {
>           require(token.transferFrom(msg.sender, _recipient[i], _tokens[i]));
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           emit Airdropped(_tokenContractAdd, _recipient[i], _tokens[i]);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Airdrop
Line:        62
Source: 
>     */
>   function airdropTokens(address _tokenContractAdd, address[] memory _recipient, uint256[] memory _tokens) public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     token = Token(_tokenContractAdd);

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity 0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Airdrop
Line:        66
Source: 
>     {
>           require(token.transferFrom(msg.sender, _recipient[i], _tokens[i]));
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           emit Airdropped(_tokenContractAdd, _recipient[i], _tokens[i]);

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Airdrop
Line:        53
Source: 
>   using SafeMath for uint256;
>   Token public token;
>   ^^^^^^^^^^^^^^^^^^
>   

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Airdrop
Line:        63
Source: 
>   function airdropTokens(address _tokenContractAdd, address[] memory _recipient, uint256[] memory _tokens) public {
>     token = Token(_tokenContractAdd);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     for(uint256 i = 0; i< _recipient.length; i++)

[0m

---------------------------------------------
For contract 0xd5a34b505aad78dc6677dcc75d7ea357c542ec14.sol
Tool Runtime = 2.06636951100063 seconds
#############################################