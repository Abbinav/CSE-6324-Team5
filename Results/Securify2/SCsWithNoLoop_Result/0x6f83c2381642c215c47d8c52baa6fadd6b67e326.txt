[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    TokenTimelock
Line:        48
Source: 
>     address private _beneficiary = address(0x8875c123547bc477ec76F1FF09b4E1e787E11D35);
>     Batch[5] private _batches;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TokenTimelock
Line:        63
Source: 
> 
>     function updateBeneficiary(address newBeneficiary) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _beneficiary);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenTimelock
Line:        46
Source: 
> 
>     IERC20 constant _token = IERC20(address(0x3A1c1d1c06bE03cDDC4d3332F7C20e1B37c97CE9));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address private _beneficiary = address(0x8875c123547bc477ec76F1FF09b4E1e787E11D35);

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        31
Source: 
> 
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    TokenTimelock
Line:        38
Source: 
> contract TokenTimelock {
>     uint256 constant COIN = 10 ** 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    TokenTimelock
Line:        46
Source: 
> 
>     IERC20 constant _token = IERC20(address(0x3A1c1d1c06bE03cDDC4d3332F7C20e1B37c97CE9));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address private _beneficiary = address(0x8875c123547bc477ec76F1FF09b4E1e787E11D35);

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    TokenTimelock
Line:        52
Source: 
>         // October, 2020
>         _batches[0] = Batch(200000 * COIN, 1601510400, false);
>                             ^^^^^^
>         // November, 2020

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    TokenTimelock
Line:        54
Source: 
>         // November, 2020
>         _batches[1] = Batch(300000 * COIN, 1604188800, false);
>                             ^^^^^^
>         // December, 2020

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    TokenTimelock
Line:        60
Source: 
>         // June, 2021
>         _batches[4] = Batch(300000 * COIN, 1622505600, false);
>                             ^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenTimelock
Line:        71
Source: 
>         require(block.timestamp >= _batches[b].time);
>         require(_token.transfer(_beneficiary, _batches[b].amount));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _batches[b].spent = true;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    TokenTimelock
Line:        48
Source: 
>     address private _beneficiary = address(0x8875c123547bc477ec76F1FF09b4E1e787E11D35);
>     Batch[5] private _batches;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenTimelock
Line:        72
Source: 
>         require(_token.transfer(_beneficiary, _batches[b].amount));
>         _batches[b].spent = true;
>         ^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    TokenTimelock
Line:        70
Source: 
>         require(!_batches[b].spent);
>         require(block.timestamp >= _batches[b].time);
>                 ^^^^^^^^^^^^^^^
>         require(_token.transfer(_beneficiary, _batches[b].amount));

[0m

---------------------------------------------
For contract 0x6f83c2381642c215c47d8c52baa6fadd6b67e326.sol
Tool Runtime = 2.0091065369997523 seconds
#############################################