[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Address
Line:        332
Source: 
>      *
>      * IMPORTANT: because control is transferred to `recipient`, care must be
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>      * taken to not create reentrancy vulnerabilities. Consider using

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Address
Line:        444
Source: 
>  * TIP: For a detailed writeup see our guide
>  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  * to implement supply mechanisms].

[0m
[0;31mSeverity:    LOW
Pattern:     ERC20 Indexed Pattern
Description: Events defined by ERC20 specification should use the
             'indexed' keyword.
Type:        Violation
Contract:    IERC20
Line:        134
Source: 
>  * in bugs, because programmers usually assume that an overflow raises an
>  * error, which is the standard behavior in high level programming languages.
>                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  * `SafeMath` restores this intuition by reverting the transaction when an

[0m
[0;31mSeverity:    LOW
Pattern:     ERC20 Indexed Pattern
Description: Events defined by ERC20 specification should use the
             'indexed' keyword.
Type:        Violation
Contract:    IERC20
Line:        139
Source: 
>  * Using this library instead of the unchecked operations eliminates an entire
>  * class of bugs, so it's recommended to use it always.
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  */

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        511
Source: 
>      * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is
>      * called.
>            ^^^
>      *

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        515
Source: 
>      * no way affects any of the arithmetic of the contract, including
>      * {IERC20-balanceOf} and {IERC20-transfer}.
>                                        ^^^^^^^^^
>      */

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        544
Source: 
>     function transfer(address recipient, uint256 amount) public   returns (bool) {
>         _transfer(_msgSender(), recipient, amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        551
Source: 
>      */
>     function allowance(address owner, address spender) public view   returns (uint256) {
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _allowances[owner][spender];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        556
Source: 
>     /**
>      * @dev See {IERC20-approve}.
>                ^^^^^^^^^^^^^^^^^^
>      *

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        568
Source: 
>     /**
>      * @dev See {IERC20-transferFrom}.
>                                       
>      *

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        574
Source: 
>      * Requirements:
>      * - `sender` and `recipient` cannot be the zero address.
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>      * - `sender` must have a balance of at least `amount`.

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        579
Source: 
>      */
>     function transferFrom(address sender, address recipient, uint256 amount) public   returns (bool) {
>                                                                                ^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(sender, recipient, amount);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        596
Source: 
>      * - `spender` cannot be the zero address.
>      */
>  ^^^^^^
>     function increaseAllowance(address spender, uint256 addedValue) public  returns (bool) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        615
Source: 
>      * `subtractedValue`.
>      */
>    ^^^^
>     function decreaseAllowance(address spender, uint256 subtractedValue) public  returns (bool) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        633
Source: 
>      * - `recipient` cannot be the zero address.
>      * - `sender` must have a balance of at least `amount`.
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>      */

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        789
Source: 
>     function renounceOwnership() public  onlyOwner {
>         emit OwnershipTransferred(_owner, address(0));
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _owner = address(0);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        811
Source: 
> contract PadThaiToken is ERC20("padthai.finance", "PADTHAI"), Ownable {
>     /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (PadThaiChef).
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function mint(address _to, uint256 _amount) public onlyOwner {

[0m
Traceback (most recent call last):
  File "securify/__main__.py", line 286, in <module>
    main()
  File "securify/__main__.py", line 282, in main
    exclude_contracts=args.exclude_contracts)
  File "/sec/securify/analyses/analysis.py", line 148, in print_pattern_matches
    msg = format_match(analysis_context, pattern, match, include_contracts=include_contracts, exclude_contracts=exclude_contracts)
  File "/sec/securify/analyses/analysis.py", line 211, in format_match
    "^" * min(location.length, len(src_lines[line]) - indicator_offset - 2)
IndexError: list index out of range

---------------------------------------------
For contract 0x6f450f117114075d1d1c91dd64a61c0ba72ca68f.sol
Tool Runtime = 7.41109696499916 seconds
#############################################