[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    DegoToken
Line:        427
Source: 
> 
>     constructor () public ERC20Detailed("dego.finance", "DEGO", 18) {
>                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          _maxSupply = 21000000 * (10**18);

[0m
[0;31mSeverity:    LOW
Pattern:     ERC20 Indexed Pattern
Description: Events defined by ERC20 specification should use the
             'indexed' keyword.
Type:        Violation
Contract:    IERC20
Line:        275
Source: 
> 
> // File: @openzeppelin/contracts/token/ERC20/ERC20Detailed.sol
>                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     ERC20 Indexed Pattern
Description: Events defined by ERC20 specification should use the
             'indexed' keyword.
Type:        Violation
Contract:    IERC20
Line:        286
Source: 
>     string private _symbol;
>     uint8 private _decimals;
>                     ^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     ERC20 Indexed Pattern
Description: Events defined by ERC20 specification should use the
             'indexed' keyword.
Type:        Violation
Contract:    DegoToken
Line:        385
Source: 
>     //token base data
>     uint256 internal _totalSupply;
>                              ^^^^^
>     mapping(address => uint256) public _balances;

[0m
[0;31mSeverity:    LOW
Pattern:     ERC20 Indexed Pattern
Description: Events defined by ERC20 specification should use the
             'indexed' keyword.
Type:        Violation
Contract:    DegoToken
Line:        389
Source: 
> 
>     /// Constant token specific fields
>                    ^^^^^^^^^^^^^^^^^^^
>     uint256 public  _maxSupply = 0;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Governance
Line:        368
Source: 
> 
> /// @title DegoToken Contract
>              ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20Detailed
Line:        315
Source: 
>     /**
>      * @dev Returns the number of decimals used to get its user representation.
>                                                            ^^^^^^^^^^^^^^^^^^^^
>      * For example, if `decimals` equals `2`, a balance of `505` tokens should

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20Detailed
Line:        319
Source: 
>      *
>      * Tokens usually opt for a value of 18, imitating the relationship between
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>      * Ether and Wei.

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20Detailed
Line:        343
Source: 
> 
>     event GovernanceTransferred(address indexed previousOwner, address indexed newOwner);
>                                                                    ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Governance
Line:        368
Source: 
> 
> /// @title DegoToken Contract
>              ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DegoToken
Line:        434
Source: 
>     /**
>     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.
>                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     * @param spender The address which will spend the funds.

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DegoToken
Line:        519
Source: 
>     */
>     function setRate(uint256 burn_rate, uint256 reward_rate) public 
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         onlyGovernance 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DegoToken
Line:        523
Source: 
>         
>         require(_maxGovernValueRate >= burn_rate && burn_rate >= _minGovernValueRate,"invalid burn rate");
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_maxGovernValueRate >= reward_rate && reward_rate >= _minGovernValueRate,"invalid reward rate");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DegoToken
Line:        526
Source: 
> 
>         _burnRate = burn_rate;
>                        ^^^^^^^
>         _rewardRate = reward_rate;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DegoToken
Line:        548
Source: 
>     * @param to The address to transfer to.
>     * @param value The amount to be transferred.
>                                      ^^^^^^^^^^^
>     */

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Locked Ether
Description: Contracts that may receive ether must also allow users to
             extract the deposited ether from the contract.
Type:        Violation
Contract:    DegoToken
Line:        378
Source: 
>     event Transfer(address indexed from, address indexed to, uint256 value);
>     event Mint(address indexed from, address indexed to, uint256 value);
>                                                                     ^^^^
>     event Approval(address indexed owner, address indexed spender, uint256 value);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DegoToken
Line:        492
Source: 
>         uint256 newMintSupply = curMintSupply.add(amount);
>         require( newMintSupply <= _maxSupply,"supply is max!");
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DegoToken
Line:        560
Source: 
>     * @param to address The address which you want to transfer to
>     * @param value uint256 the amount of tokens to be transferred
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     */

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DegoToken
Line:        575
Source: 
>     * @dev Transfer tokens with fee
>     * @param from address The address which you want to send tokens from
>                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     * @param to address The address which you want to transfer to

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DegoToken
Line:        445
Source: 
>         _allowances[msg.sender][spender] = amount;
>         emit Approval(msg.sender, spender, amount);
>                                                  ^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DegoToken
Line:        466
Source: 
>     * @return An uint256 representing the amount owned by the passed address.
>     */
>   ^^^^
>     function balanceOf(address owner) external  view 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DegoToken
Line:        485
Source: 
>     */
>     function mint(address account, uint256 amount) external 
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DegoToken
Line:        519
Source: 
>     */
>     function setRate(uint256 burn_rate, uint256 reward_rate) public 
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         onlyGovernance 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DegoToken
Line:        523
Source: 
>         
>         require(_maxGovernValueRate >= burn_rate && burn_rate >= _minGovernValueRate,"invalid burn rate");
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_maxGovernValueRate >= reward_rate && reward_rate >= _minGovernValueRate,"invalid reward rate");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ERC20Detailed
Line:        307
Source: 
>     /**
>      * @dev Returns the symbol of the token, usually a shorter version of the
>                                           ^^^^^^^^^^^^^^^^^^
>      * name.

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ERC20Detailed
Line:        307
Source: 
>     /**
>      * @dev Returns the symbol of the token, usually a shorter version of the
>                                                               ^^^^^^^^^^^^^^^
>      * name.

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ERC20Detailed
Line:        308
Source: 
>      * @dev Returns the symbol of the token, usually a shorter version of the
>      * name.
>       ^^^^^^
>      */

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        381
Source: 
> 
>     // for minters
>            ^^^^^^^
>     mapping (address => bool) public _minters;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        384
Source: 
> 
>     //token base data
>       ^^^^^^^^^^^^^^^
>     uint256 internal _totalSupply;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        393
Source: 
>     ///
>     bool public _openTransfer = false;
>                                       
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        397
Source: 
>     uint256 public constant _maxGovernValueRate = 2000;//2000/10000
>     uint256 public constant _minGovernValueRate = 10;  //10/10000
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant _rateBase = 10000; 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        397
Source: 
>     uint256 public constant _maxGovernValueRate = 2000;//2000/10000
>     uint256 public constant _minGovernValueRate = 10;  //10/10000
>                                                           ^^^^^^^
>     uint256 public constant _rateBase = 10000; 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        400
Source: 
> 
>     // additional variables for use if transaction fees ever became necessary
>                                                          ^^^^^^^^^^^^^^^^^^^^
>     uint256 public  _burnRate = 250;       

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        401
Source: 
>     // additional variables for use if transaction fees ever became necessary
>     uint256 public  _burnRate = 250;       
>                         ^^^^^^^^^^^^^^^^^^^
>     uint256 public  _rewardRate = 250;   

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        404
Source: 
> 
>     uint256 public _totalBurnToken = 0;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public _totalRewardToken = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        405
Source: 
>     uint256 public _totalBurnToken = 0;
>     uint256 public _totalRewardToken = 0;
>                                 ^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        408
Source: 
>     //todo reward pool!
>     address public _rewardPool = 0xEA6dEc98e137a87F78495a8386f7A137408f7722;
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //todo burn pool!

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        410
Source: 
>     //todo burn pool!
>     address public _burnPool = 0x6666666666666666666666666666666666666666;
>                                                            ^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        413
Source: 
>     /**
>     * @dev set the token transfer switch
>                    ^^^^^^^^^^^^^^^^^^^^^
>     */

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        415
Source: 
>     */
>     function enableOpenTransfer() public onlyGovernance  
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        415
Source: 
>     */
>     function enableOpenTransfer() public onlyGovernance  
>                                                       ^^^
>     {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        422
Source: 
>     /**
>      * CONSTRUCTOR
>            ^^^^^^^
>      *

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DegoToken
Line:        427
Source: 
> 
>     constructor () public ERC20Detailed("dego.finance", "DEGO", 18) {
>                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          _maxSupply = 21000000 * (10**18);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ERC20Detailed
Line:        294
Source: 
>     constructor (string memory name, string memory symbol, uint8 decimals) public {
>         _name = name;
> ^^^^^^^^^^^^^^^^^^^^
>         _symbol = symbol;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ERC20Detailed
Line:        295
Source: 
>         _name = name;
>         _symbol = symbol;
>     ^^^^^^^^^^^^^^^^^^^^^
>         _decimals = decimals;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ERC20Detailed
Line:        296
Source: 
>         _symbol = symbol;
>         _decimals = decimals;
>       ^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Governance
Line:        350
Source: 
> 
>     function setGovernance(address _governance)  public  onlyGovernance
>                                                       ^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DegoToken
Line:        393
Source: 
>     ///
>     bool public _openTransfer = false;
>                                       
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DegoToken
Line:        396
Source: 
>     // hardcode limit rate
>     uint256 public constant _maxGovernValueRate = 2000;//2000/10000
>                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant _minGovernValueRate = 10;  //10/10000

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DegoToken
Line:        400
Source: 
> 
>     // additional variables for use if transaction fees ever became necessary
>                                                          ^^^^^^^^^^^^^^^^^^^^
>     uint256 public  _burnRate = 250;       

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DegoToken
Line:        401
Source: 
>     // additional variables for use if transaction fees ever became necessary
>     uint256 public  _burnRate = 250;       
>                         ^^^^^^^^^^^^^^^^^^^
>     uint256 public  _rewardRate = 250;   

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DegoToken
Line:        405
Source: 
>     uint256 public _totalBurnToken = 0;
>     uint256 public _totalRewardToken = 0;
>                                 ^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DegoToken
Line:        408
Source: 
>     //todo reward pool!
>     address public _rewardPool = 0xEA6dEc98e137a87F78495a8386f7A137408f7722;
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //todo burn pool!

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DegoToken
Line:        410
Source: 
>     //todo burn pool!
>     address public _burnPool = 0x6666666666666666666666666666666666666666;
>                                                            ^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DegoToken
Line:        413
Source: 
>     /**
>     * @dev set the token transfer switch
>                    ^^^^^^^^^^^^^^^^^^^^^
>     */

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DegoToken
Line:        415
Source: 
>     */
>     function enableOpenTransfer() public onlyGovernance  
>                                                       ^^^
>     {

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DegoToken
Line:        422
Source: 
>     /**
>      * CONSTRUCTOR
>            ^^^^^^^
>      *

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DegoToken
Line:        427
Source: 
> 
>     constructor () public ERC20Detailed("dego.finance", "DEGO", 18) {
>                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          _maxSupply = 21000000 * (10**18);

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    DegoToken
Line:        439
Source: 
>     function approve(address spender, uint256 amount) external 
>     returns (bool) 
>                  ^^
>     {

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DegoToken
Line:        396
Source: 
>     // hardcode limit rate
>     uint256 public constant _maxGovernValueRate = 2000;//2000/10000
>                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public constant _minGovernValueRate = 10;  //10/10000

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DegoToken
Line:        601
Source: 
> 
>         uint256 rewardFee = (value.mul(_rewardRate)).div(_rateBase);
>                                                             ^^^^^^^^
>         if (rewardFee > 0) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DegoToken
Line:        604
Source: 
>            //to reward
>             _balances[_rewardPool] = _balances[_rewardPool].add(rewardFee);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             sendAmount = sendAmount.sub(rewardFee);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DegoToken
Line:        605
Source: 
>             _balances[_rewardPool] = _balances[_rewardPool].add(rewardFee);
>             sendAmount = sendAmount.sub(rewardFee);
>                                       ^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DegoToken
Line:        613
Source: 
>         _balances[from] = _balances[from].sub(value);
>         _balances[to] = _balances[to].add(sendAmount);
>                                           ^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DegoToken
Line:        620
Source: 
> 
> }
>                                          

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DegoToken
Line:        620
Source: 
> 
> }
>                                                                                                                                                                             

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DegoToken
Line:        620
Source: 
> 
> }
>                                                                                                                                                                                                                                   

[0m

---------------------------------------------
For contract 0x88EF27e69108B2633F8E1C184CC37940A075cC02.sol
Tool Runtime = 5.651698083998781 seconds
#############################################