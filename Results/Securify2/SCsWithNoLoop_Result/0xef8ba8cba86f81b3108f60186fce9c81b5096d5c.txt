[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        14
Source: 
>     address payable newOwner;
>     function changeOwner(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_newOwner!=address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        18
Source: 
>     }
>     function acceptOwnership() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (msg.sender==newOwner) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        14
Source: 
>     address payable newOwner;
>     function changeOwner(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_newOwner!=address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        18
Source: 
>     }
>     function acceptOwnership() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (msg.sender==newOwner) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        43
Source: 
>     
>     function balanceOf(address _owner) view public   returns (uint256 balance) {return balances[_owner];}
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        45
Source: 
>     
>     function transfer(address _to, uint256 _amount) public   returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require (balances[msg.sender]>=_amount&&_amount>0&&balances[_to]+_amount>balances[_to]);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        53
Source: 
>   
>     function transferFrom(address _from,address _to,uint256 _amount) public   returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require (balances[_from]>=_amount&&allowed[_from][msg.sender]>=_amount&&_amount>0&&balances[_to]+_amount>balances[_to]);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        62
Source: 
>   
>     function approve(address _spender, uint256 _amount) public   returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowed[msg.sender][_spender]=_amount;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        68
Source: 
>     
>     function allowance(address _owner, address _spender) view public   returns (uint256 remaining) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return allowed[_owner][_spender];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        14
Source: 
>     address payable newOwner;
>     function changeOwner(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_newOwner!=address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        18
Source: 
>     }
>     function acceptOwnership() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (msg.sender==newOwner) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        43
Source: 
>     
>     function balanceOf(address _owner) view public   returns (uint256 balance) {return balances[_owner];}
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        45
Source: 
>     
>     function transfer(address _to, uint256 _amount) public   returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require (balances[msg.sender]>=_amount&&_amount>0&&balances[_to]+_amount>balances[_to]);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        53
Source: 
>   
>     function transferFrom(address _from,address _to,uint256 _amount) public   returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require (balances[_from]>=_amount&&allowed[_from][msg.sender]>=_amount&&_amount>0&&balances[_to]+_amount>balances[_to]);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        62
Source: 
>   
>     function approve(address _spender, uint256 _amount) public   returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowed[msg.sender][_spender]=_amount;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        68
Source: 
>     
>     function allowance(address _owner, address _spender) view public   returns (uint256 remaining) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return allowed[_owner][_spender];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Token
Line:        43
Source: 
>     
>     function balanceOf(address _owner) view public   returns (uint256 balance) {return balances[_owner];}
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Token
Line:        62
Source: 
>   
>     function approve(address _spender, uint256 _amount) public   returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowed[msg.sender][_spender]=_amount;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Token
Line:        68
Source: 
>     
>     function allowance(address _owner, address _spender) view public   returns (uint256 remaining) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return allowed[_owner][_spender];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Token
Line:        43
Source: 
>     
>     function balanceOf(address _owner) view public   returns (uint256 balance) {return balances[_owner];}
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Token
Line:        62
Source: 
>   
>     function approve(address _spender, uint256 _amount) public   returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowed[msg.sender][_spender]=_amount;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Token
Line:        68
Source: 
>     
>     function allowance(address _owner, address _spender) view public   returns (uint256 remaining) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return allowed[_owner][_spender];

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    YFII_Gold
Line:        73
Source: 
> 
> contract YFII_Gold is Token{
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Owned
Line:        12
Source: 
>     }
>     address payable owner;
>     ^^^^^^^^^^^^^^^^^^^^^
>     address payable newOwner;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Owned
Line:        13
Source: 
>     address payable owner;
>     address payable newOwner;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     function changeOwner(address payable _newOwner) public onlyOwner {

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Token
Line:        40
Source: 
>     uint8 public decimals;
>     mapping (address=>uint256) balances;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping (address=>mapping (address=>uint256)) allowed;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Token
Line:        41
Source: 
>     mapping (address=>uint256) balances;
>     mapping (address=>mapping (address=>uint256)) allowed;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    YFII_Gold
Line:        79
Source: 
>         decimals = 18;
>         totalSupply = 50000000000000000000000;  
>                       ^^^^^^^^^^^^^^^^^^^^^^^
>         owner = msg.sender;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    YFII_Gold
Line:        86
Source: 
>         require(msg.value>0);
>         owner.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Owned
Line:        12
Source: 
>     }
>     address payable owner;
>     ^^^^^^^^^^^^^^^^^^^^^
>     address payable newOwner;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Owned
Line:        13
Source: 
>     address payable owner;
>     address payable newOwner;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     function changeOwner(address payable _newOwner) public onlyOwner {

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Owned
Line:        12
Source: 
>     }
>     address payable owner;
>     ^^^^^^^^^^^^^^^^^^^^^
>     address payable newOwner;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Owned
Line:        13
Source: 
>     address payable owner;
>     address payable newOwner;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     function changeOwner(address payable _newOwner) public onlyOwner {

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    ERC20
Line:        26
Source: 
>  contract ERC20 {
>     uint256 public totalSupply;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function balanceOf(address _owner) view public  returns (uint256 balance);

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Token
Line:        37
Source: 
> contract Token is Owned,  ERC20 {
>     string public symbol;
>     ^^^^^^^^^^^^^^^^^^^^
>     string public name;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Token
Line:        38
Source: 
>     string public symbol;
>     string public name;
>     ^^^^^^^^^^^^^^^^^^
>     uint8 public decimals;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Token
Line:        39
Source: 
>     string public name;
>     uint8 public decimals;
>     ^^^^^^^^^^^^^^^^^^^^^
>     mapping (address=>uint256) balances;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    YFII_Gold
Line:        86
Source: 
>         require(msg.value>0);
>         owner.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Token
Line:        63
Source: 
>     function approve(address _spender, uint256 _amount) public   returns (bool success) {
>         allowed[msg.sender][_spender]=_amount;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(msg.sender, _spender, _amount);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ERC20
Line:        26
Source: 
>  contract ERC20 {
>     uint256 public totalSupply;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function balanceOf(address _owner) view public  returns (uint256 balance);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Token
Line:        37
Source: 
> contract Token is Owned,  ERC20 {
>     string public symbol;
>     ^^^^^^^^^^^^^^^^^^^^
>     string public name;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Token
Line:        38
Source: 
>     string public symbol;
>     string public name;
>     ^^^^^^^^^^^^^^^^^^
>     uint8 public decimals;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Token
Line:        39
Source: 
>     string public name;
>     uint8 public decimals;
>     ^^^^^^^^^^^^^^^^^^^^^
>     mapping (address=>uint256) balances;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Token
Line:        37
Source: 
> contract Token is Owned,  ERC20 {
>     string public symbol;
>     ^^^^^^^^^^^^^^^^^^^^
>     string public name;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Token
Line:        38
Source: 
>     string public symbol;
>     string public name;
>     ^^^^^^^^^^^^^^^^^^
>     uint8 public decimals;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Token
Line:        39
Source: 
>     string public name;
>     uint8 public decimals;
>     ^^^^^^^^^^^^^^^^^^^^^
>     mapping (address=>uint256) balances;

[0m

---------------------------------------------
For contract 0xef8ba8cba86f81b3108f60186fce9c81b5096d5c.sol
Tool Runtime = 3.123571308999999 seconds
#############################################