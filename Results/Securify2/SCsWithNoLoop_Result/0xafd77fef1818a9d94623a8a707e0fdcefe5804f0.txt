[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    YFMSTokenLock
Line:        89
Source: 
>    // < 2,500 YFMS
>   function lockDevTokens (address _from, uint _amount) public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(_from == owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    YFMSTokenLock
Line:        98
Source: 
>   // < 20,500 YFMS
>   function lockRewardsTokens (address _from, uint256 _amount) public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(_from == owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    YFMSTokenLock
Line:        106
Source: 
> 
>   function withdrawDevTokens(address _to, uint256 _amount) public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(_to == owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    YFMSTokenLock
Line:        114
Source: 
> 
>   function withdrawRewardsTokens(address _to, uint256 _amount) public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(_to == owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    YFMSTokenLock
Line:        122
Source: 
> 
>   function balanceOf() public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return YFMSLockedDev.add(YFMSLockedRewards);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    YFMSTokenLock
Line:        91
Source: 
>     require(_from == owner);
>     require(YFMSToken.balanceOf(_from) >= _amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     YFMSLockedDev = _amount;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    YFMSTokenLock
Line:        94
Source: 
>     unlockDateDev = now;
>     YFMSToken.transferFrom(owner, address(this), _amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    YFMSTokenLock
Line:        100
Source: 
>     require(_from == owner);
>     require(YFMSToken.balanceOf(_from) >= _amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     YFMSLockedRewards = _amount;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    YFMSTokenLock
Line:        103
Source: 
>     unlockDateRewards = now;
>     YFMSToken.transferFrom(owner, address(this), _amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    YFMSTokenLock
Line:        111
Source: 
>     YFMSLockedDev = YFMSLockedDev.sub(_amount);
>     YFMSToken.transfer(_to, _amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    YFMSTokenLock
Line:        119
Source: 
>     YFMSLockedRewards = YFMSLockedRewards.sub(_amount);
>     YFMSToken.transfer(_to, _amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    YFMSTokenLock
Line:        78
Source: 
>   uint256 public unlockDateDev;
>   uint256 public YFMSLockedDev;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public YFMSLockedRewards;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    YFMSTokenLock
Line:        79
Source: 
>   uint256 public YFMSLockedDev;
>   uint256 public YFMSLockedRewards;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public owner;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    YFMSTokenLock
Line:        81
Source: 
>   address public owner;
>   ERC20 public YFMSToken;
>   ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    YFMSTokenLock
Line:        91
Source: 
>     require(_from == owner);
>     require(YFMSToken.balanceOf(_from) >= _amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     YFMSLockedDev = _amount;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    YFMSTokenLock
Line:        100
Source: 
>     require(_from == owner);
>     require(YFMSToken.balanceOf(_from) >= _amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     YFMSLockedRewards = _amount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    YFMSTokenLock
Line:        94
Source: 
>     unlockDateDev = now;
>     YFMSToken.transferFrom(owner, address(this), _amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    YFMSTokenLock
Line:        103
Source: 
>     unlockDateRewards = now;
>     YFMSToken.transferFrom(owner, address(this), _amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    YFMSTokenLock
Line:        111
Source: 
>     YFMSLockedDev = YFMSLockedDev.sub(_amount);
>     YFMSToken.transfer(_to, _amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    YFMSTokenLock
Line:        119
Source: 
>     YFMSLockedRewards = YFMSLockedRewards.sub(_amount);
>     YFMSToken.transfer(_to, _amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    YFMSTokenLock
Line:        76
Source: 
> 
>   uint256 public unlockDateRewards;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public unlockDateDev;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    YFMSTokenLock
Line:        77
Source: 
>   uint256 public unlockDateRewards;
>   uint256 public unlockDateDev;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public YFMSLockedDev;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    YFMSTokenLock
Line:        78
Source: 
>   uint256 public unlockDateDev;
>   uint256 public YFMSLockedDev;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public YFMSLockedRewards;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    YFMSTokenLock
Line:        79
Source: 
>   uint256 public YFMSLockedDev;
>   uint256 public YFMSLockedRewards;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public owner;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    YFMSTokenLock
Line:        94
Source: 
>     unlockDateDev = now;
>     YFMSToken.transferFrom(owner, address(this), _amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    YFMSTokenLock
Line:        103
Source: 
>     unlockDateRewards = now;
>     YFMSToken.transferFrom(owner, address(this), _amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    YFMSTokenLock
Line:        111
Source: 
>     YFMSLockedDev = YFMSLockedDev.sub(_amount);
>     YFMSToken.transfer(_to, _amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    YFMSTokenLock
Line:        119
Source: 
>     YFMSLockedRewards = YFMSLockedRewards.sub(_amount);
>     YFMSToken.transfer(_to, _amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m

---------------------------------------------
For contract 0xafd77fef1818a9d94623a8a707e0fdcefe5804f0.sol
Tool Runtime = 2.969382746999827 seconds
#############################################