[0;31mSeverity:    MEDIUM
Pattern:     Locked Ether
Description: Contracts that may receive ether must also allow users to
             extract the deposited ether from the contract.
Type:        Violation
Contract:    Minter
Line:        173
Source: 
> 
> contract Minter {
> ^^^^^^^^^^^^^^^^^
>     using SafeMath for uint256;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Minter
Line:        206
Source: 
>         require(s_started == false, "TokenMinter: already started");
>         require(s_token.getRoleMemberCount(s_token.MINTER_ADMIN_ROLE()) == 0, "TokenMinter: minter roles are not final");
>                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         minterRoleValidation();

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Minter
Line:        206
Source: 
>         require(s_started == false, "TokenMinter: already started");
>         require(s_token.getRoleMemberCount(s_token.MINTER_ADMIN_ROLE()) == 0, "TokenMinter: minter roles are not final");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         minterRoleValidation();

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Minter
Line:        209
Source: 
>         s_started = true;
>         s_initialSupply = s_token.totalSupply();
>                           ^^^^^^^^^^^^^^^^^^^^^
>         s_startTime = block.timestamp;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Minter
Line:        219
Source: 
>         require(s_minted <= mintLimit(), "TokenMinter: amount too high");
>         s_token.mint(s_beneficiary, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Minted(amount, block.timestamp);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    Minter
Line:        194
Source: 
> 
>     constructor (IToken token, address beneficiary) public {
>                  ^^^^^^^^^^^^
>         s_token = token;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    Minter
Line:        194
Source: 
> 
>     constructor (IToken token, address beneficiary) public {
>                                ^^^^^^^^^^^^^^^^^^^
>         s_token = token;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IToken
Line:        167
Source: 
>    function totalSupply() external view returns (uint256);
>    function MINTER_ROLE() external view returns (bytes32);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    function MINTER_ADMIN_ROLE() external view returns (bytes32);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IToken
Line:        168
Source: 
>    function MINTER_ROLE() external view returns (bytes32);
>    function MINTER_ADMIN_ROLE() external view returns (bytes32);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    function getRoleMemberCount(bytes32 role) external view returns (uint256);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Minter
Line:        178
Source: 
>     uint256 constant public DURATION = 155_520_000; // 1800 days in seconds
>     uint256 private s_initialSupply;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private s_startTime;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Minter
Line:        179
Source: 
>     uint256 private s_initialSupply;
>     uint256 private s_startTime;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private s_minted;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Minter
Line:        180
Source: 
>     uint256 private s_startTime;
>     uint256 private s_minted;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     address private s_beneficiary;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Minter
Line:        181
Source: 
>     uint256 private s_minted;
>     address private s_beneficiary;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     IToken private s_token;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Minter
Line:        182
Source: 
>     address private s_beneficiary;
>     IToken private s_token;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     bool private s_started;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Minter
Line:        183
Source: 
>     IToken private s_token;
>     bool private s_started;
>     ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> // SPDX-License-Identifier: MIT
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Minter
Line:        206
Source: 
>         require(s_started == false, "TokenMinter: already started");
>         require(s_token.getRoleMemberCount(s_token.MINTER_ADMIN_ROLE()) == 0, "TokenMinter: minter roles are not final");
>                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         minterRoleValidation();

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Minter
Line:        206
Source: 
>         require(s_started == false, "TokenMinter: already started");
>         require(s_token.getRoleMemberCount(s_token.MINTER_ADMIN_ROLE()) == 0, "TokenMinter: minter roles are not final");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         minterRoleValidation();

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Minter
Line:        228
Source: 
>     function minterRoleValidation() public view {
>         require(s_token.hasRole(s_token.MINTER_ROLE(), address(this)), "TokenMinter: do not have a minter role");
>                                 ^^^^^^^^^^^^^^^^^^^^^
>         require(s_token.getRoleMemberCount(s_token.MINTER_ROLE()) == 1, "TokenMinter: minter role is not exclusive");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Minter
Line:        228
Source: 
>     function minterRoleValidation() public view {
>         require(s_token.hasRole(s_token.MINTER_ROLE(), address(this)), "TokenMinter: do not have a minter role");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(s_token.getRoleMemberCount(s_token.MINTER_ROLE()) == 1, "TokenMinter: minter role is not exclusive");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Minter
Line:        229
Source: 
>         require(s_token.hasRole(s_token.MINTER_ROLE(), address(this)), "TokenMinter: do not have a minter role");
>         require(s_token.getRoleMemberCount(s_token.MINTER_ROLE()) == 1, "TokenMinter: minter role is not exclusive");
>                                            ^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Minter
Line:        229
Source: 
>         require(s_token.hasRole(s_token.MINTER_ROLE(), address(this)), "TokenMinter: do not have a minter role");
>         require(s_token.getRoleMemberCount(s_token.MINTER_ROLE()) == 1, "TokenMinter: minter role is not exclusive");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Minter
Line:        244
Source: 
>     function maxCap() external view returns (uint256) {
>         return s_token.totalSupply().add(left());
>                ^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Minter
Line:        209
Source: 
>         s_started = true;
>         s_initialSupply = s_token.totalSupply();
>                           ^^^^^^^^^^^^^^^^^^^^^
>         s_startTime = block.timestamp;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Minter
Line:        219
Source: 
>         require(s_minted <= mintLimit(), "TokenMinter: amount too high");
>         s_token.mint(s_beneficiary, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Minted(amount, block.timestamp);

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Minter
Line:        178
Source: 
>     uint256 constant public DURATION = 155_520_000; // 1800 days in seconds
>     uint256 private s_initialSupply;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private s_startTime;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Minter
Line:        179
Source: 
>     uint256 private s_initialSupply;
>     uint256 private s_startTime;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private s_minted;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Minter
Line:        180
Source: 
>     uint256 private s_startTime;
>     uint256 private s_minted;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     address private s_beneficiary;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Minter
Line:        183
Source: 
>     IToken private s_token;
>     bool private s_started;
>     ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    Minter
Line:        210
Source: 
>         s_initialSupply = s_token.totalSupply();
>         s_startTime = block.timestamp;
>                       ^^^^^^^^^^^^^^^
>         emit Started(s_initialSupply, block.timestamp);

[0m

---------------------------------------------
For contract 0x557AeD48fE5E604725Ee61A60421F2AFC28FcE6F.sol
Tool Runtime = 4.112467023000136 seconds
#############################################