[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    console
Line:        424
Source: 
> 		address consoleAddress = CONSOLE_ADDRESS;
> 		assembly {
>        ^^^^^
> 			let payloadStart := add(payload, 32)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        70
Source: 
>      */
>     function owner() public view returns (address) {
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        89
Source: 
>      */
>     function renounceOwnership() public  onlyOwner {
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        98
Source: 
>      */
>     function transferOwnership(address newOwner) public  onlyOwner {
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(newOwner != address(0), "Ownable: new owner is the zero address");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        70
Source: 
>      */
>     function owner() public view returns (address) {
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        89
Source: 
>      */
>     function renounceOwnership() public  onlyOwner {
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        98
Source: 
>      */
>     function transferOwnership(address newOwner) public  onlyOwner {
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(newOwner != address(0), "Ownable: new owner is the zero address");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Issuance
Line:        2013
Source: 
>     /// @param _issuanceAddress Issuance token deployed address
>     function setIssuanceToken(address _issuanceAddress) public onlyOwner {
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_issuanceAddress != address(0), "Issuance is 0x0 address");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Issuance
Line:        2026
Source: 
>     /// @param _timeEnd Event will close at this time (in epoch timestamp)
>     function setupEvent(
>          ^^^^^^^^^^^^^^^
>         bytes32 _event,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Issuance
Line:        2062
Source: 
>     /// @dev Stage must be SETUP or OPEN
>     function setEvent(bytes32 _event) public onlyOwner {
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Issuance
Line:        2072
Source: 
>     /// @dev Stage transits to OPEN
>     function startEvent() public onlyOwner {
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transition(OPEN_STAGE);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Issuance
Line:        2078
Source: 
>     /// @dev Stage transits to CLOSE
>     function closeEvent() public onlyOwner {
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transition(CLOSE_STAGE);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Issuance
Line:        2084
Source: 
>     /// @dev Stage transits to WITHDRAW
>     function withdrawEvent() public onlyOwner {
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transition(WITHDRAW_STAGE);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Issuance
Line:        2090
Source: 
>     /// @dev Stage transits to SETUP
>     function reSetupEvent() public onlyOwner {
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transition(SETUP_STAGE);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Issuance
Line:        2132
Source: 
>     /// @dev Must be called on stage CLOSE
>     function withdraw() public atStage(WITHDRAW_STAGE) {
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // get issuance amount received by sender address

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Issuance
Line:        2148
Source: 
>     /// @dev Must be called on stage CLOSE
>     function transferFund(address payable _wallet)
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Issuance
Line:        2154
Source: 
>         require(_wallet != address(0), "Transfer to 0x0 address");
>         (bool success, ) = _wallet.call.value(address(this).balance)("");
>                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer failed");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Issuance
Line:        2062
Source: 
>     /// @dev Stage must be SETUP or OPEN
>     function setEvent(bytes32 _event) public onlyOwner {
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Issuance
Line:        2026
Source: 
>     /// @param _timeEnd Event will close at this time (in epoch timestamp)
>     function setupEvent(
>          ^^^^^^^^^^^^^^^
>         bytes32 _event,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Issuance
Line:        2140
Source: 
>         // mint to sender
>         issuanceToken.mint(msg.sender, _receiveAmount);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    console
Line:        418
Source: 
> 
> library console {
>      ^^^^^^^^^^^^
> 	address constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Issuance
Line:        2100
Source: 
>         // get total issuance token amount this sender can receive
>         uint256 _investInWei = msg.value;
>              ^^^^^^^^^^^^^^^^^^^^
>         uint256 _receiveAmount = investments[msg.sender];

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Issuance
Line:        2101
Source: 
>         uint256 _investInWei = msg.value;
>         uint256 _receiveAmount = investments[msg.sender];
>              ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Issuance
Line:        2103
Source: 
> 
>         SaleEvent memory _saleEvent = saleEvents[currentEvent];
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Issuance
Line:        2134
Source: 
>         // get issuance amount received by sender address
>         uint256 _receiveAmount = investments[msg.sender];
>              ^^^^^^^^^^^^^^^^^^^^^^
>         require(_receiveAmount > 0, "Already withdrawn");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Issuance
Line:        2154
Source: 
>         require(_wallet != address(0), "Transfer to 0x0 address");
>         (bool success, ) = _wallet.call.value(address(this).balance)("");
>               ^^^^^^^^^^^^
>         require(success, "Transfer failed");

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        12
Source: 
> //pragma solidity >=0.6.0 <0.8.0;
> pragma solidity >=0.5 <0.7.17;
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        39
Source: 
> //pragma solidity >=0.6.0 <0.8.0;
> pragma solidity >=0.5 <0.7.17;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        109
Source: 
> //pragma solidity >=0.6.0 <0.8.0;
> pragma solidity >=0.5 <0.7.17;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        271
Source: 
> //pragma solidity >=0.6.0 <0.8.0;
> pragma solidity >=0.5 <0.7.17;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        336
Source: 
> //pragma solidity >=0.6.0 <0.8.0;
> pragma solidity >=0.5 <0.7.17;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        349
Source: 
> //pragma solidity >=0.6.0 <0.8.0;
> pragma solidity >=0.5 <0.7.17;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        416
Source: 
> //pragma solidity >= 0.4.22 <0.8.0;
> pragma solidity >=0.5 <0.7.17;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1956
Source: 
> //pragma solidity >=0.6.0 <0.8.0;
> pragma solidity >=0.5 <0.7.17;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    StateMachine
Line:        358
Source: 
>     bytes32 public constant SETUP_STAGE = "SETUP";
>     mapping(bytes32 => bytes32) _transitions;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    StateMachine
Line:        369
Source: 
>     /// @param _targetStage Target to check
>     modifier atStage(bytes32 _targetStage)
>                          ^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    console
Line:        419
Source: 
> library console {
> 	address constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    Issuance
Line:        2154
Source: 
>         require(_wallet != address(0), "Transfer to 0x0 address");
>         (bool success, ) = _wallet.call.value(address(this).balance)("");
>                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer failed");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    Issuance
Line:        2154
Source: 
>         require(_wallet != address(0), "Transfer to 0x0 address");
>         (bool success, ) = _wallet.call.value(address(this).balance)("");
>                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer failed");

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Issuance
Line:        2154
Source: 
>         require(_wallet != address(0), "Transfer to 0x0 address");
>         (bool success, ) = _wallet.call.value(address(this).balance)("");
>                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer failed");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Issuance
Line:        2140
Source: 
>         // mint to sender
>         issuanceToken.mint(msg.sender, _receiveAmount);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Issuance
Line:        1967
Source: 
>     using SafeMath for uint256;
>     bytes32 public currentEvent;
>          ^^^^^^^^^^^^^^^^^^^^^^^
>     IERC20Mintable private issuanceToken;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Issuance
Line:        1968
Source: 
>     bytes32 public currentEvent;
>     IERC20Mintable private issuanceToken;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Issuance
Line:        1983
Source: 
>     mapping(bytes32 => SaleEvent) public saleEvents;
>     uint256 public fundRaised;
>          ^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => uint256) public investments;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    console
Line:        419
Source: 
> library console {
> 	address constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    StateMachine
Line:        406
Source: 
>         require(_checkExistedTransition(currentStage, _targetStage), "Transition not found");
>         currentStage = _targetStage;
>             ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        322
Source: 
>         // Any calls to nonReentrant after this point will fail
>         _status = _ENTERED;
>             ^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Issuance
Line:        2121
Source: 
>         // add invested wei to total fund
>         fundRaised = fundRaised.add(_investInWei);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // sender received amount increases invest*issuancePrice

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        328
Source: 
>         // https://eips.ethereum.org/EIPS/eip-2200)
>         _status = _NOT_ENTERED;
>             ^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Issuance
Line:        2140
Source: 
>         // mint to sender
>         issuanceToken.mint(msg.sender, _receiveAmount);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    console
Line:        419
Source: 
> library console {
> 	address constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ReentrancyGuard
Line:        302
Source: 
>     uint256 private constant _NOT_ENTERED = 1;
>     uint256 private constant _ENTERED = 2;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ReentrancyGuard
Line:        304
Source: 
> 
>     uint256 private _status;
>         ^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    console
Line:        419
Source: 
> library console {
> 	address constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StateMachine
Line:        356
Source: 
> 
>     bytes32 public currentStage;
>         ^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant SETUP_STAGE = "SETUP";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StateMachine
Line:        357
Source: 
>     bytes32 public currentStage;
>     bytes32 public constant SETUP_STAGE = "SETUP";
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(bytes32 => bytes32) _transitions;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StateMachine
Line:        358
Source: 
>     bytes32 public constant SETUP_STAGE = "SETUP";
>     mapping(bytes32 => bytes32) _transitions;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    console
Line:        419
Source: 
> library console {
> 	address constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    Issuance
Line:        2038
Source: 
>         require(_fundGoal > 0, "Negative fund goal");
>         require(_timeEnd > block.timestamp, "Time end in the past");
>                                 ^^^^^^^^^^^^^^^
> 

[0m

---------------------------------------------
For contract 0x963afdcb993a328ec2ac36443c28fda5172de6eb.sol
Tool Runtime = 89.05602911300002 seconds
#############################################