[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    BombDisposal
Line:        114
Source: 
>         redWireCutters[tx.origin] = !blueWireCutters[tx.origin];
>         msg.sender.call("You stay in Wonderland and I show you how deep the rabbit-hole goes");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (!redBlueAttempted[tx.origin]) {

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BombDisposal
Line:        122
Source: 
>     // An additional disarm code will be provided by the SCPD after block 11511500
>     function provideDisarmCode(string calldata code) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == owner);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BombDisposal
Line:        41
Source: 
>     
>     function commitToCutPurpleWire(bytes32 _hash) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(block.number < INITIAL_COMMIT_PERIOD_END, "You're too late");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BombDisposal
Line:        46
Source: 
>     
>     function commitToCutBrownWire(bytes32 _hash) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(block.number < INITIAL_COMMIT_PERIOD_END, "You're too late");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BombDisposal
Line:        51
Source: 
>     
>     function commitToCutGreenWire(bytes32 _hash) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(block.number < INITIAL_COMMIT_PERIOD_END, "You're too late");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BombDisposal
Line:        127
Source: 
>     
>     function commitToDisarm(bytes32 _hash) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         disarmCommits[msg.sender] = _hash;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Violation
Contract:    BombDisposal
Line:        114
Source: 
>         redWireCutters[tx.origin] = !blueWireCutters[tx.origin];
>         msg.sender.call("You stay in Wonderland and I show you how deep the rabbit-hole goes");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (!redBlueAttempted[tx.origin]) {

[0m
[0;31mSeverity:    HIGH
Pattern:     Possibly unsafe usage of tx-origin
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BombDisposal
Line:        111
Source: 
>         require(block.number > INITIAL_COMMIT_PERIOD_END, "Easy does it");
>         require(!redBlueAttempted[tx.origin], "No turning back");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         blueWireCutters[tx.origin] = !blueWireCutters[tx.origin];

[0m
[0;31mSeverity:    HIGH
Pattern:     Possibly unsafe usage of tx-origin
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BombDisposal
Line:        115
Source: 
>         msg.sender.call("You stay in Wonderland and I show you how deep the rabbit-hole goes");
>         if (!redBlueAttempted[tx.origin]) {
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             redOrBlueWiresCut += 1;

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        7
Source: 
> //pragma solidity 0.6.10;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BombDisposal
Line:        10
Source: 
> contract BombDisposal {
>     address owner;
>     ^^^^^^^^^^^^^
>     address public theRealJohnMcClane;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BombDisposal
Line:        19
Source: 
>     bool public bombDetonated = false;
>     uint256 constant INITIAL_COMMIT_PERIOD_END = 11498000;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant BLOCKS_TO_WAIT = 15;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BombDisposal
Line:        20
Source: 
>     uint256 constant INITIAL_COMMIT_PERIOD_END = 11498000;
>     uint256 constant BLOCKS_TO_WAIT = 15;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant DETONATION_TIME = 11525000;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BombDisposal
Line:        21
Source: 
>     uint256 constant BLOCKS_TO_WAIT = 15;
>     uint256 constant DETONATION_TIME = 11525000;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => bool) public purpleWireCutters;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    BombDisposal
Line:        157
Source: 
>         require(msg.sender == theRealJohnMcClane, "Get outta here");
>         msg.sender.transfer(address(this).balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    BombDisposal
Line:        157
Source: 
>         require(msg.sender == theRealJohnMcClane, "Get outta here");
>         msg.sender.transfer(address(this).balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BombDisposal
Line:        11
Source: 
>     address owner;
>     address public theRealJohnMcClane;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint16 public purpleWiresCut;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BombDisposal
Line:        12
Source: 
>     address public theRealJohnMcClane;
>     uint16 public purpleWiresCut;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint16 public brownWiresCut;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BombDisposal
Line:        13
Source: 
>     uint16 public purpleWiresCut;
>     uint16 public brownWiresCut;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint16 public greenWiresCut;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BombDisposal
Line:        14
Source: 
>     uint16 public brownWiresCut;
>     uint16 public greenWiresCut;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint16 public orangeWiresCut;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BombDisposal
Line:        15
Source: 
>     uint16 public greenWiresCut;
>     uint16 public orangeWiresCut;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint16 public redOrBlueWiresCut;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BombDisposal
Line:        16
Source: 
>     uint16 public orangeWiresCut;
>     uint16 public redOrBlueWiresCut;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool public bombArmed = true;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BombDisposal
Line:        34
Source: 
>     mapping(address => uint256) public disarmCommitBlock;
>     string public disarmCode;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BombDisposal
Line:        164
Source: 
>         require(bombArmed, "Already disarmed");
>         bombDetonated = true;
>         ^^^^^^^^^^^^^^^^^^^^
>         bombArmed = false;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BombDisposal
Line:        165
Source: 
>         bombDetonated = true;
>         bombArmed = false;
>         ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    BombDisposal
Line:        112
Source: 
>         require(!redBlueAttempted[tx.origin], "No turning back");
>         blueWireCutters[tx.origin] = !blueWireCutters[tx.origin];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         redWireCutters[tx.origin] = !blueWireCutters[tx.origin];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    BombDisposal
Line:        113
Source: 
>         blueWireCutters[tx.origin] = !blueWireCutters[tx.origin];
>         redWireCutters[tx.origin] = !blueWireCutters[tx.origin];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         msg.sender.call("You stay in Wonderland and I show you how deep the rabbit-hole goes");

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    BombDisposal
Line:        116
Source: 
>         if (!redBlueAttempted[tx.origin]) {
>             redOrBlueWiresCut += 1;
>             ^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    BombDisposal
Line:        118
Source: 
>         }
>         redBlueAttempted[tx.origin] = true;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    BombDisposal
Line:        114
Source: 
>         redWireCutters[tx.origin] = !blueWireCutters[tx.origin];
>         msg.sender.call("You stay in Wonderland and I show you how deep the rabbit-hole goes");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (!redBlueAttempted[tx.origin]) {

[0m

---------------------------------------------
For contract 0x673fd2220c495d4fe5ef91d65f5689d95f7a72d1.sol
Tool Runtime = 4.7203211449998435 seconds
#############################################