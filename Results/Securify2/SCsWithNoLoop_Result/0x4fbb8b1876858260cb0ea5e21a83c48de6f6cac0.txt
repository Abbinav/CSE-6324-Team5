[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Voting
Line:        26
Source: 
> contract Voting {
>     IERC20 public kMPLContract = IERC20(0xe8D17542dfe79Ff4FBd4b850f2d39DC69c4489a2);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     IERC20 public AMPLContract = IERC20(0xD46bA6D942050d489DBd938a2C909A5d5039A161);

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Voting
Line:        27
Source: 
>     IERC20 public kMPLContract = IERC20(0xe8D17542dfe79Ff4FBd4b850f2d39DC69c4489a2);
>     IERC20 public AMPLContract = IERC20(0xD46bA6D942050d489DBd938a2C909A5d5039A161);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Voting
Line:        29
Source: 
>   
>     IGeyser public zeusContract = IGeyser(0x0EAdf5c82b50E3D028E0eB10CF76676432A7AD51);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     IGeyser public apolloContract = IGeyser(0x0Abfa8c10A4451Fef74Cf8DB2dEE33DDB048f79D);

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Voting
Line:        30
Source: 
>     IGeyser public zeusContract = IGeyser(0x0EAdf5c82b50E3D028E0eB10CF76676432A7AD51);
>     IGeyser public apolloContract = IGeyser(0x0Abfa8c10A4451Fef74Cf8DB2dEE33DDB048f79D);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Voting
Line:        32
Source: 
>     
>     function getScore(address account) external view returns (uint256, uint256, uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 totalKMPL = kMPLContract.balanceOf(account);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Voting
Line:        42
Source: 
>     
>     function getStaked(address account, IGeyser geyser) public view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 lp = geyser.totalStakedFor(account);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    Voting
Line:        47
Source: 
>         
>         (,uint112 reserve,) = lpContract.getReserves();
>           ^^^^^^^^^^^^^^^
>         return lp * reserve / lpContract.totalSupply();

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Voting
Line:        27
Source: 
>     IERC20 public kMPLContract = IERC20(0xe8D17542dfe79Ff4FBd4b850f2d39DC69c4489a2);
>     IERC20 public AMPLContract = IERC20(0xD46bA6D942050d489DBd938a2C909A5d5039A161);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Voting
Line:        47
Source: 
>         
>         (,uint112 reserve,) = lpContract.getReserves();
>           ^^^^^^^^^^^^^^^
>         return lp * reserve / lpContract.totalSupply();

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity >=0.4.24 <0.6.0;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Voting
Line:        33
Source: 
>     function getScore(address account) external view returns (uint256, uint256, uint256) {
>         uint256 totalKMPL = kMPLContract.balanceOf(account);
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 totalAMPL = AMPLContract.balanceOf(account);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Voting
Line:        34
Source: 
>         uint256 totalKMPL = kMPLContract.balanceOf(account);
>         uint256 totalAMPL = AMPLContract.balanceOf(account);
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Voting
Line:        43
Source: 
>     function getStaked(address account, IGeyser geyser) public view returns (uint256) {
>         uint256 lp = geyser.totalStakedFor(account);
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IUniswapV2 lpContract = IUniswapV2(geyser.token());

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Voting
Line:        44
Source: 
>         uint256 lp = geyser.totalStakedFor(account);
>         IUniswapV2 lpContract = IUniswapV2(geyser.token());
>                                            ^^^^^^^^^^^^^^
>         lp += lpContract.balanceOf(account);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Voting
Line:        45
Source: 
>         IUniswapV2 lpContract = IUniswapV2(geyser.token());
>         lp += lpContract.balanceOf(account);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Voting
Line:        47
Source: 
>         
>         (,uint112 reserve,) = lpContract.getReserves();
>                               ^^^^^^^^^^^^^^^^^^^^^^^^
>         return lp * reserve / lpContract.totalSupply();

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Voting
Line:        48
Source: 
>         (,uint112 reserve,) = lpContract.getReserves();
>         return lp * reserve / lpContract.totalSupply();
>                               ^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m

---------------------------------------------
For contract 0x4fbb8b1876858260cb0ea5e21a83c48de6f6cac0.sol
Tool Runtime = 1.9917464400004974 seconds
#############################################