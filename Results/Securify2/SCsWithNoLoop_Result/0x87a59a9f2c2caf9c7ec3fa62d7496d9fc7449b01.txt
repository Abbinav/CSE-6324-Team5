[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Initializable
Line:        79
Source: 
>     uint256 cs;
>     assembly { cs := extcodesize(self) }
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return cs == 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Address
Line:        781
Source: 
>         // solhint-disable-next-line no-inline-assembly
>         assembly { codehash := extcodehash(account) }
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return (codehash != accountHash && codehash != 0x0);

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Initializable
Line:        84
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Liquidator
Line:        1077
Source: 
>         uint256 len = _uniswapPath.length;
>         return _sellToken == _uniswapPath[0] && _bAsset == _uniswapPath[len-1];
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Liquidator
Line:        1077
Source: 
>         uint256 len = _uniswapPath.length;
>         return _sellToken == _uniswapPath[0] && _bAsset == _uniswapPath[len-1];
>                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Address
Line:        817
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    SafeERC20
Line:        873
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Address
Line:        817
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    SafeERC20
Line:        873
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Address
Line:        817
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    SafeERC20
Line:        873
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Address
Line:        817
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Liquidator
Line:        955
Source: 
> 
>     function initialize(
>     ^^^^^^^^^^^^^^^^^^^^
>         address _nexus,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Liquidator
Line:        990
Source: 
>     */
>     function createLiquidation(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _integration,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Liquidator
Line:        1036
Source: 
>     */
>     function updateBasset(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         address _integration,

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    Liquidator
Line:        1127
Source: 
>         //    Assumes infinite approval
>         uint256 integrationBal = IERC20(sellToken).balanceOf(_integration);
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (integrationBal > 0) {

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    Liquidator
Line:        1134
Source: 
>         //    Check contract balance
>         uint256 sellTokenBal = IERC20(sellToken).balanceOf(address(this));
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(sellTokenBal > 0, "No sell tokens to liquidate");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ICurveMetaPool
Line:        10
Source: 
> interface ICurveMetaPool {
>     function exchange_underlying(int128 i, int128 j, uint256 dx, uint256 min_dy) external returns (uint256);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Initializable
Line:        84
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        90
Source: 
>     // Governance                             // Phases
>     bytes32 internal KEY_GOVERNANCE;          // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_STAKING;             // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        91
Source: 
>     bytes32 internal KEY_GOVERNANCE;          // 2.x
>     bytes32 internal KEY_STAKING;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_PROXY_ADMIN;         // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        92
Source: 
>     bytes32 internal KEY_STAKING;             // 1.2
>     bytes32 internal KEY_PROXY_ADMIN;         // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        95
Source: 
>     // mStable
>     bytes32 internal KEY_ORACLE_HUB;          // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_MANAGER;             // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        96
Source: 
>     bytes32 internal KEY_ORACLE_HUB;          // 1.2
>     bytes32 internal KEY_MANAGER;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        97
Source: 
>     bytes32 internal KEY_MANAGER;             // 1.2
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_META_TOKEN;          // 1.1

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        98
Source: 
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x
>     bytes32 internal KEY_META_TOKEN;          // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_SAVINGS_MANAGER;     // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        99
Source: 
>     bytes32 internal KEY_META_TOKEN;          // 1.1
>     bytes32 internal KEY_SAVINGS_MANAGER;     // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Address
Line:        817
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>          ^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity 0.5.16;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Initializable
Line:        57
Source: 
> 
>     bool isTopLevelCall = !initializing;
>     ^^^^^^^^^^^^^^^^^^^
>     if (isTopLevelCall) {

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    InitializableModule
Line:        191
Source: 
>     function _governor() internal view returns (address) {
>         return nexus.governor();
>                ^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    InitializableModule
Line:        199
Source: 
>     function _governance() internal view returns (address) {
>         return nexus.getModule(KEY_GOVERNANCE);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    InitializableModule
Line:        247
Source: 
>     function _savingsManager() internal view returns (address) {
>         return nexus.getModule(KEY_SAVINGS_MANAGER);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Liquidator
Line:        1127
Source: 
>         //    Assumes infinite approval
>         uint256 integrationBal = IERC20(sellToken).balanceOf(_integration);
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (integrationBal > 0) {

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Liquidator
Line:        1134
Source: 
>         //    Check contract balance
>         uint256 sellTokenBal = IERC20(sellToken).balanceOf(address(this));
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(sellTokenBal > 0, "No sell tokens to liquidate");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Liquidator
Line:        1138
Source: 
>         //    Calc amounts for max tranche
>         uint[] memory amountsIn = uniswap.getAmountsIn(liquidation.trancheAmount, uniswapPath);
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 sellAmount = amountsIn[0];

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SafeERC20
Line:        839
Source: 
>         // solhint-disable-next-line max-line-length
>         require((value == 0) || (token.allowance(address(this), spender) == 0),
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SafeERC20: approve from non-zero to non-zero allowance"

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Liquidator
Line:        1179
Source: 
>     function _sellOnCrv(address _bAsset, int128 _curvePosition) internal returns (uint256 purchased) {
>         uint256 bAssetBal = IERC20(_bAsset).balanceOf(address(this));
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Liquidator
Line:        1186
Source: 
>         uint256 minOutCrv = bAssetBal.mul(95e16).div(10 ** bAssetDec);
>         purchased = curve.exchange_underlying(_curvePosition, 0, bAssetBal, minOutCrv);
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Liquidator
Line:        1155
Source: 
>         // e.g. 30e18 * 100e18 / 1e18 = 3000e18
>         uint256 sellTokenDec = IBasicToken(sellToken).decimals();
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 minOut = sellAmount.mul(minReturn[_integration]).div(10 ** sellTokenDec);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Liquidator
Line:        1158
Source: 
>         require(minOut > 0, "Must have some price floor");
>         uniswap.swapExactTokensForTokens(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             sellAmount,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Liquidator
Line:        1173
Source: 
>         IERC20(mUSD).safeApprove(savings, purchased);
>         ISavingsManager(savings).depositLiquidation(mUSD, purchased);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Liquidator
Line:        1183
Source: 
>         IERC20(_bAsset).safeApprove(address(curve), bAssetBal);
>         uint256 bAssetDec = IBasicToken(_bAsset).decimals();
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // e.g. 100e6 * 95e16 / 1e6 = 100e18

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Initializable
Line:        80
Source: 
>     assembly { cs := extcodesize(self) }
>     return cs == 0;
>            ^^
>   }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Address
Line:        782
Source: 
>         assembly { codehash := extcodehash(account) }
>         return (codehash != accountHash && codehash != 0x0);
>                 ^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Initializable
Line:        44
Source: 
>    */
>   bool private initialized;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Initializable
Line:        49
Source: 
>    */
>   bool private initializing;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        90
Source: 
>     // Governance                             // Phases
>     bytes32 internal KEY_GOVERNANCE;          // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_STAKING;             // 1.2

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        91
Source: 
>     bytes32 internal KEY_GOVERNANCE;          // 2.x
>     bytes32 internal KEY_STAKING;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_PROXY_ADMIN;         // 1.0

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        92
Source: 
>     bytes32 internal KEY_STAKING;             // 1.2
>     bytes32 internal KEY_PROXY_ADMIN;         // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        95
Source: 
>     // mStable
>     bytes32 internal KEY_ORACLE_HUB;          // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_MANAGER;             // 1.2

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        96
Source: 
>     bytes32 internal KEY_ORACLE_HUB;          // 1.2
>     bytes32 internal KEY_MANAGER;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        97
Source: 
>     bytes32 internal KEY_MANAGER;             // 1.2
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_META_TOKEN;          // 1.1

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        98
Source: 
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x
>     bytes32 internal KEY_META_TOKEN;          // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_SAVINGS_MANAGER;     // 1.0

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        99
Source: 
>     bytes32 internal KEY_META_TOKEN;          // 1.1
>     bytes32 internal KEY_SAVINGS_MANAGER;     // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Liquidator
Line:        937
Source: 
> 
>     address public mUSD;
>     ^^^^^^^^^^^^^^^^^^^
>     ICurveMetaPool public curve;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Liquidator
Line:        938
Source: 
>     address public mUSD;
>     ICurveMetaPool public curve;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     IUniswapV2Router02 public uniswap;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Liquidator
Line:        939
Source: 
>     ICurveMetaPool public curve;
>     IUniswapV2Router02 public uniswap;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        44
Source: 
>    */
>   bool private initialized;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        49
Source: 
>    */
>   bool private initializing;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        84
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        90
Source: 
>     // Governance                             // Phases
>     bytes32 internal KEY_GOVERNANCE;          // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_STAKING;             // 1.2

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        91
Source: 
>     bytes32 internal KEY_GOVERNANCE;          // 2.x
>     bytes32 internal KEY_STAKING;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_PROXY_ADMIN;         // 1.0

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        92
Source: 
>     bytes32 internal KEY_STAKING;             // 1.2
>     bytes32 internal KEY_PROXY_ADMIN;         // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        95
Source: 
>     // mStable
>     bytes32 internal KEY_ORACLE_HUB;          // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_MANAGER;             // 1.2

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        96
Source: 
>     bytes32 internal KEY_ORACLE_HUB;          // 1.2
>     bytes32 internal KEY_MANAGER;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        97
Source: 
>     bytes32 internal KEY_MANAGER;             // 1.2
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_META_TOKEN;          // 1.1

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        98
Source: 
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x
>     bytes32 internal KEY_META_TOKEN;          // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_SAVINGS_MANAGER;     // 1.0

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        99
Source: 
>     bytes32 internal KEY_META_TOKEN;          // 1.1
>     bytes32 internal KEY_SAVINGS_MANAGER;     // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        90
Source: 
>     // Governance                             // Phases
>     bytes32 internal KEY_GOVERNANCE;          // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_STAKING;             // 1.2

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        91
Source: 
>     bytes32 internal KEY_GOVERNANCE;          // 2.x
>     bytes32 internal KEY_STAKING;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_PROXY_ADMIN;         // 1.0

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        92
Source: 
>     bytes32 internal KEY_STAKING;             // 1.2
>     bytes32 internal KEY_PROXY_ADMIN;         // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        95
Source: 
>     // mStable
>     bytes32 internal KEY_ORACLE_HUB;          // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_MANAGER;             // 1.2

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        96
Source: 
>     bytes32 internal KEY_ORACLE_HUB;          // 1.2
>     bytes32 internal KEY_MANAGER;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        97
Source: 
>     bytes32 internal KEY_MANAGER;             // 1.2
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_META_TOKEN;          // 1.1

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        98
Source: 
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x
>     bytes32 internal KEY_META_TOKEN;          // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_SAVINGS_MANAGER;     // 1.0

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        99
Source: 
>     bytes32 internal KEY_META_TOKEN;          // 1.1
>     bytes32 internal KEY_SAVINGS_MANAGER;     // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModule
Line:        136
Source: 
> 
>     INexus public nexus;
>     ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        84
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModule
Line:        136
Source: 
> 
>     INexus public nexus;
>     ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        437
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        445
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        437
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        445
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        437
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        445
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        437
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        445
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        108
Source: 
>         // Hence, no need to assign hard-coded values to these variables.
>         KEY_GOVERNANCE = keccak256("Governance");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         KEY_STAKING = keccak256("Staking");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        109
Source: 
>         KEY_GOVERNANCE = keccak256("Governance");
>         KEY_STAKING = keccak256("Staking");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         KEY_PROXY_ADMIN = keccak256("ProxyAdmin");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        110
Source: 
>         KEY_STAKING = keccak256("Staking");
>         KEY_PROXY_ADMIN = keccak256("ProxyAdmin");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        112
Source: 
> 
>         KEY_ORACLE_HUB = keccak256("OracleHub");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         KEY_MANAGER = keccak256("Manager");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        113
Source: 
>         KEY_ORACLE_HUB = keccak256("OracleHub");
>         KEY_MANAGER = keccak256("Manager");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         KEY_RECOLLATERALISER = keccak256("Recollateraliser");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        114
Source: 
>         KEY_MANAGER = keccak256("Manager");
>         KEY_RECOLLATERALISER = keccak256("Recollateraliser");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         KEY_META_TOKEN = keccak256("MetaToken");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        115
Source: 
>         KEY_RECOLLATERALISER = keccak256("Recollateraliser");
>         KEY_META_TOKEN = keccak256("MetaToken");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         KEY_SAVINGS_MANAGER = keccak256("SavingsManager");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    InitializableModuleKeys
Line:        116
Source: 
>         KEY_META_TOKEN = keccak256("MetaToken");
>         KEY_SAVINGS_MANAGER = keccak256("SavingsManager");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Initializable
Line:        59
Source: 
>     if (isTopLevelCall) {
>       initializing = true;
>       ^^^^^^^^^^^^^^^^^^^
>       initialized = true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Initializable
Line:        60
Source: 
>       initializing = true;
>       initialized = true;
>       ^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Liquidator
Line:        967
Source: 
>         require(_uniswap != address(0), "Invalid uniswap address");
>         uniswap = IUniswapV2Router02(_uniswap);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Liquidator
Line:        970
Source: 
>         require(_curve != address(0), "Invalid curve address");
>         curve = ICurveMetaPool(_curve);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Liquidator
Line:        973
Source: 
>         require(_mUSD != address(0), "Invalid mUSD address");
>         mUSD = _mUSD;
>         ^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Initializable
Line:        66
Source: 
>     if (isTopLevelCall) {
>       initializing = false;
>       ^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Address
Line:        817
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        870
Source: 
>         // solhint-disable-next-line max-line-length
>         require(address(token).isContract(), "SafeERC20: call to non-contract");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        873
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        839
Source: 
>         // solhint-disable-next-line max-line-length
>         require((value == 0) || (token.allowance(address(this), spender) == 0),
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SafeERC20: approve from non-zero to non-zero allowance"

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        846
Source: 
>     function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).add(value);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        851
Source: 
>     function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).sub(value, "SafeERC20: decreased allowance below zero");
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        899
Source: 
>     {
>         uint256 balBefore = IERC20(_basset).balanceOf(_recipient);
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        901
Source: 
>         IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);
>         recipientBalance = IERC20(_basset).balanceOf(_recipient);
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         receivedQty = StableMath.min(_qty, recipientBalance.sub(balBefore));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Address
Line:        817
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        870
Source: 
>         // solhint-disable-next-line max-line-length
>         require(address(token).isContract(), "SafeERC20: call to non-contract");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        873
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        839
Source: 
>         // solhint-disable-next-line max-line-length
>         require((value == 0) || (token.allowance(address(this), spender) == 0),
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SafeERC20: approve from non-zero to non-zero allowance"

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        846
Source: 
>     function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).add(value);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        851
Source: 
>     function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).sub(value, "SafeERC20: decreased allowance below zero");
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        899
Source: 
>     {
>         uint256 balBefore = IERC20(_basset).balanceOf(_recipient);
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        901
Source: 
>         IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);
>         recipientBalance = IERC20(_basset).balanceOf(_recipient);
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         receivedQty = StableMath.min(_qty, recipientBalance.sub(balBefore));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        191
Source: 
>     function _governor() internal view returns (address) {
>         return nexus.governor();
>                ^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        199
Source: 
>     function _governance() internal view returns (address) {
>         return nexus.getModule(KEY_GOVERNANCE);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        207
Source: 
>     function _staking() internal view returns (address) {
>         return nexus.getModule(KEY_STAKING);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        215
Source: 
>     function _proxyAdmin() internal view returns (address) {
>         return nexus.getModule(KEY_PROXY_ADMIN);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        223
Source: 
>     function _metaToken() internal view returns (address) {
>         return nexus.getModule(KEY_META_TOKEN);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        231
Source: 
>     function _oracleHub() internal view returns (address) {
>         return nexus.getModule(KEY_ORACLE_HUB);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        239
Source: 
>     function _manager() internal view returns (address) {
>         return nexus.getModule(KEY_MANAGER);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        247
Source: 
>     function _savingsManager() internal view returns (address) {
>         return nexus.getModule(KEY_SAVINGS_MANAGER);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        255
Source: 
>     function _recollateraliser() internal view returns (address) {
>         return nexus.getModule(KEY_RECOLLATERALISER);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Address
Line:        817
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        870
Source: 
>         // solhint-disable-next-line max-line-length
>         require(address(token).isContract(), "SafeERC20: call to non-contract");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        873
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        839
Source: 
>         // solhint-disable-next-line max-line-length
>         require((value == 0) || (token.allowance(address(this), spender) == 0),
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SafeERC20: approve from non-zero to non-zero allowance"

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        846
Source: 
>     function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).add(value);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        851
Source: 
>     function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).sub(value, "SafeERC20: decreased allowance below zero");
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        899
Source: 
>     {
>         uint256 balBefore = IERC20(_basset).balanceOf(_recipient);
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        901
Source: 
>         IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);
>         recipientBalance = IERC20(_basset).balanceOf(_recipient);
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         receivedQty = StableMath.min(_qty, recipientBalance.sub(balBefore));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        207
Source: 
>     function _staking() internal view returns (address) {
>         return nexus.getModule(KEY_STAKING);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        215
Source: 
>     function _proxyAdmin() internal view returns (address) {
>         return nexus.getModule(KEY_PROXY_ADMIN);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        223
Source: 
>     function _metaToken() internal view returns (address) {
>         return nexus.getModule(KEY_META_TOKEN);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        231
Source: 
>     function _oracleHub() internal view returns (address) {
>         return nexus.getModule(KEY_ORACLE_HUB);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        239
Source: 
>     function _manager() internal view returns (address) {
>         return nexus.getModule(KEY_MANAGER);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        255
Source: 
>     function _recollateraliser() internal view returns (address) {
>         return nexus.getModule(KEY_RECOLLATERALISER);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Liquidator
Line:        1158
Source: 
>         require(minOut > 0, "Must have some price floor");
>         uniswap.swapExactTokensForTokens(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             sellAmount,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Address
Line:        817
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        846
Source: 
>     function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).add(value);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        851
Source: 
>     function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).sub(value, "SafeERC20: decreased allowance below zero");
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        899
Source: 
>     {
>         uint256 balBefore = IERC20(_basset).balanceOf(_recipient);
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        901
Source: 
>         IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);
>         recipientBalance = IERC20(_basset).balanceOf(_recipient);
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         receivedQty = StableMath.min(_qty, recipientBalance.sub(balBefore));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        44
Source: 
>    */
>   bool private initialized;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        49
Source: 
>    */
>   bool private initializing;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        84
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        437
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        445
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        90
Source: 
>     // Governance                             // Phases
>     bytes32 internal KEY_GOVERNANCE;          // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_STAKING;             // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        91
Source: 
>     bytes32 internal KEY_GOVERNANCE;          // 2.x
>     bytes32 internal KEY_STAKING;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_PROXY_ADMIN;         // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        92
Source: 
>     bytes32 internal KEY_STAKING;             // 1.2
>     bytes32 internal KEY_PROXY_ADMIN;         // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        95
Source: 
>     // mStable
>     bytes32 internal KEY_ORACLE_HUB;          // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_MANAGER;             // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        96
Source: 
>     bytes32 internal KEY_ORACLE_HUB;          // 1.2
>     bytes32 internal KEY_MANAGER;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        97
Source: 
>     bytes32 internal KEY_MANAGER;             // 1.2
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_META_TOKEN;          // 1.1

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        98
Source: 
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x
>     bytes32 internal KEY_META_TOKEN;          // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_SAVINGS_MANAGER;     // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        99
Source: 
>     bytes32 internal KEY_META_TOKEN;          // 1.1
>     bytes32 internal KEY_SAVINGS_MANAGER;     // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        437
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        445
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        90
Source: 
>     // Governance                             // Phases
>     bytes32 internal KEY_GOVERNANCE;          // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_STAKING;             // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        91
Source: 
>     bytes32 internal KEY_GOVERNANCE;          // 2.x
>     bytes32 internal KEY_STAKING;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_PROXY_ADMIN;         // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        92
Source: 
>     bytes32 internal KEY_STAKING;             // 1.2
>     bytes32 internal KEY_PROXY_ADMIN;         // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        95
Source: 
>     // mStable
>     bytes32 internal KEY_ORACLE_HUB;          // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_MANAGER;             // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        96
Source: 
>     bytes32 internal KEY_ORACLE_HUB;          // 1.2
>     bytes32 internal KEY_MANAGER;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        97
Source: 
>     bytes32 internal KEY_MANAGER;             // 1.2
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_META_TOKEN;          // 1.1

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        98
Source: 
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x
>     bytes32 internal KEY_META_TOKEN;          // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_SAVINGS_MANAGER;     // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        99
Source: 
>     bytes32 internal KEY_META_TOKEN;          // 1.1
>     bytes32 internal KEY_SAVINGS_MANAGER;     // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModule
Line:        136
Source: 
> 
>     INexus public nexus;
>     ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        437
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        445
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        84
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        91
Source: 
>     bytes32 internal KEY_GOVERNANCE;          // 2.x
>     bytes32 internal KEY_STAKING;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_PROXY_ADMIN;         // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        92
Source: 
>     bytes32 internal KEY_STAKING;             // 1.2
>     bytes32 internal KEY_PROXY_ADMIN;         // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        95
Source: 
>     // mStable
>     bytes32 internal KEY_ORACLE_HUB;          // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_MANAGER;             // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        96
Source: 
>     bytes32 internal KEY_ORACLE_HUB;          // 1.2
>     bytes32 internal KEY_MANAGER;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        97
Source: 
>     bytes32 internal KEY_MANAGER;             // 1.2
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_META_TOKEN;          // 1.1

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        98
Source: 
>     bytes32 internal KEY_RECOLLATERALISER;    // 2.x
>     bytes32 internal KEY_META_TOKEN;          // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 internal KEY_SAVINGS_MANAGER;     // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        437
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        445
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    Liquidator
Line:        1163
Source: 
>             address(this),
>             block.timestamp.add(1800)
>             ^^^^^^^^^^^^^^^
>         );

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    Liquidator
Line:        1118
Source: 
> 
>         require(block.timestamp > liquidation.lastTriggered.add(7 days), "Must wait for interval");
>                 ^^^^^^^^^^^^^^^
>         liquidations[_integration].lastTriggered = block.timestamp;

[0m

---------------------------------------------
For contract 0x87a59a9f2c2caf9c7ec3fa62d7496d9fc7449b01.sol
Tool Runtime = 26.618775450000612 seconds
#############################################