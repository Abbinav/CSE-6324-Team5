[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LibNote
Line:        40
Source: 
>         _;
>         assembly {
>         ^^^^^^^^^^
>             // log an 'anonymous' event with a constant 6 words of calldata

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssCdpManager
Line:        143
Source: 
>     // Allow/disallow a usr address to manage the cdp.
>     function cdpAllow(
>     ^^^^^^^^^^^^^^^^^^
>         uint cdp,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssCdpManager
Line:        152
Source: 
>     // Allow/disallow a usr address to quit to the the sender urn.
>     function urnAllow(
>     ^^^^^^^^^^^^^^^^^^
>         address usr,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssCdpManager
Line:        160
Source: 
>     // Open a new cdp for a given usr address.
>     function open(
>     ^^^^^^^^^^^^^^
>         bytes32 ilk,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssCdpManager
Line:        187
Source: 
>     // Give the cdp ownership to a dst address.
>     function give(
>     ^^^^^^^^^^^^^^
>         uint cdp,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssCdpManager
Line:        225
Source: 
>     // Frob the cdp keeping the generated DAI or collateral freed in the cdp urn address.
>     function frob(
>     ^^^^^^^^^^^^^^
>         uint cdp,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssCdpManager
Line:        242
Source: 
>     // Transfer wad amount of cdp collateral from the cdp address to a dst address.
>     function flux(
>     ^^^^^^^^^^^^^^
>         uint cdp,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssCdpManager
Line:        252
Source: 
>     // This function has the purpose to take away collateral from the system that doesn't correspond to the cdp but was sent there wrongly.
>     function flux(
>     ^^^^^^^^^^^^^^
>         bytes32 ilk,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssCdpManager
Line:        262
Source: 
>     // Transfer wad amount of DAI from the cdp address to a dst address.
>     function move(
>     ^^^^^^^^^^^^^^
>         uint cdp,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssCdpManager
Line:        271
Source: 
>     // Quit the system, migrating the cdp (ink, art) to a different dst urn
>     function quit(
>     ^^^^^^^^^^^^^^
>         uint cdp,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssCdpManager
Line:        286
Source: 
>     // Import a position from src urn to the urn owned by cdp
>     function enter(
>     ^^^^^^^^^^^^^^^
>         address src,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssCdpManager
Line:        301
Source: 
>     // Move a position from cdpSrc urn to the cdpDst urn
>     function shift(
>     ^^^^^^^^^^^^^^^
>         uint cdpSrc,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DssCdpManager
Line:        143
Source: 
>     // Allow/disallow a usr address to manage the cdp.
>     function cdpAllow(
>     ^^^^^^^^^^^^^^^^^^
>         uint cdp,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DssCdpManager
Line:        152
Source: 
>     // Allow/disallow a usr address to quit to the the sender urn.
>     function urnAllow(
>     ^^^^^^^^^^^^^^^^^^
>         address usr,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DssCdpManager
Line:        160
Source: 
>     // Open a new cdp for a given usr address.
>     function open(
>     ^^^^^^^^^^^^^^
>         bytes32 ilk,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DssCdpManager
Line:        225
Source: 
>     // Frob the cdp keeping the generated DAI or collateral freed in the cdp urn address.
>     function frob(
>     ^^^^^^^^^^^^^^
>         uint cdp,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DssCdpManager
Line:        242
Source: 
>     // Transfer wad amount of cdp collateral from the cdp address to a dst address.
>     function flux(
>     ^^^^^^^^^^^^^^
>         uint cdp,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DssCdpManager
Line:        252
Source: 
>     // This function has the purpose to take away collateral from the system that doesn't correspond to the cdp but was sent there wrongly.
>     function flux(
>     ^^^^^^^^^^^^^^
>         bytes32 ilk,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DssCdpManager
Line:        262
Source: 
>     // Transfer wad amount of DAI from the cdp address to a dst address.
>     function move(
>     ^^^^^^^^^^^^^^
>         uint cdp,

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        11
Source: 
> //pragma solidity =0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DssCdpManager
Line:        112
Source: 
>     modifier cdpAllowed(
>         uint cdp
>         ^^^^^^^^
>     ) {

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DssCdpManager
Line:        119
Source: 
>     modifier urnAllowed(
>         address urn
>         ^^^^^^^^^^^
>     ) {

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DssCdpManager
Line:        275
Source: 
>     ) public note cdpAllowed(cdp) urnAllowed(dst) {
>         (uint ink, uint art) = VatLike(vat).urns(ilks[cdp], urns[cdp]);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         VatLike(vat).fork(

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DssCdpManager
Line:        290
Source: 
>     ) public note urnAllowed(src) cdpAllowed(cdp) {
>         (uint ink, uint art) = VatLike(vat).urns(ilks[cdp], src);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         VatLike(vat).fork(

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DssCdpManager
Line:        306
Source: 
>         require(ilks[cdpSrc] == ilks[cdpDst], "non-matching-cdps");
>         (uint ink, uint art) = VatLike(vat).urns(ilks[cdpSrc], urns[cdpSrc]);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         VatLike(vat).fork(

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UrnHandler
Line:        74
Source: 
>     constructor(address vat) public {
>         VatLike(vat).hope(msg.sender);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssCdpManager
Line:        231
Source: 
>         address urn = urns[cdp];
>         VatLike(vat).frob(
>         ^^^^^^^^^^^^^^^^^^
>             ilks[cdp],

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssCdpManager
Line:        247
Source: 
>     ) public note cdpAllowed(cdp) {
>         VatLike(vat).flux(ilks[cdp], urns[cdp], dst, wad);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssCdpManager
Line:        258
Source: 
>     ) public note cdpAllowed(cdp) {
>         VatLike(vat).flux(ilk, urns[cdp], dst, wad);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssCdpManager
Line:        267
Source: 
>     ) public note cdpAllowed(cdp) {
>         VatLike(vat).move(urns[cdp], dst, rad);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssCdpManager
Line:        276
Source: 
>         (uint ink, uint art) = VatLike(vat).urns(ilks[cdp], urns[cdp]);
>         VatLike(vat).fork(
>         ^^^^^^^^^^^^^^^^^^
>             ilks[cdp],

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssCdpManager
Line:        291
Source: 
>         (uint ink, uint art) = VatLike(vat).urns(ilks[cdp], src);
>         VatLike(vat).fork(
>         ^^^^^^^^^^^^^^^^^^
>             ilks[cdp],

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssCdpManager
Line:        307
Source: 
>         (uint ink, uint art) = VatLike(vat).urns(ilks[cdpSrc], urns[cdpSrc]);
>         VatLike(vat).fork(
>         ^^^^^^^^^^^^^^^^^^
>             ilks[cdpSrc],

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    DssCdpManager
Line:        130
Source: 
>     function add(uint x, uint y) internal pure returns (uint z) {
>         require((z = x + y) >= x);
>                  ^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    DssCdpManager
Line:        134
Source: 
>     function sub(uint x, uint y) internal pure returns (uint z) {
>         require((z = x - y) <= x);
>                  ^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssCdpManager
Line:        80
Source: 
>     address                   public vat;
>     uint                      public cdpi;      // Auto incremental
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping (uint => address) public urns;      // CDPId => UrnHandler

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssCdpManager
Line:        156
Source: 
>     ) public {
>         urnCan[msg.sender][usr] = ok;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssCdpManager
Line:        166
Source: 
> 
>         cdpi = add(cdpi, 1);
>         ^^^^^^^^^^^^^^^^^^^
>         urns[cdpi] = address(new UrnHandler(vat));

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssCdpManager
Line:        167
Source: 
>         cdpi = add(cdpi, 1);
>         urns[cdpi] = address(new UrnHandler(vat));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owns[cdpi] = usr;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssCdpManager
Line:        168
Source: 
>         urns[cdpi] = address(new UrnHandler(vat));
>         owns[cdpi] = usr;
>         ^^^^^^^^^^^^^^^^
>         ilks[cdpi] = ilk;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssCdpManager
Line:        169
Source: 
>         owns[cdpi] = usr;
>         ilks[cdpi] = ilk;
>         ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssCdpManager
Line:        173
Source: 
>         if (first[usr] == 0) {
>             first[usr] = cdpi;
>             ^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssCdpManager
Line:        176
Source: 
>         if (last[usr] != 0) {
>             list[cdpi].prev = last[usr];
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             list[last[usr]].next = cdpi;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssCdpManager
Line:        177
Source: 
>             list[cdpi].prev = last[usr];
>             list[last[usr]].next = cdpi;
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssCdpManager
Line:        179
Source: 
>         }
>         last[usr] = cdpi;
>         ^^^^^^^^^^^^^^^^
>         count[usr] = add(count[usr], 1);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssCdpManager
Line:        180
Source: 
>         last[usr] = cdpi;
>         count[usr] = add(count[usr], 1);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m

---------------------------------------------
For contract 0xB6BEE379CCeB482160f83e0e5018C81bb3807Ede.sol
Tool Runtime = 79.31255034600008 seconds
#############################################