[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Token
Line:        101
Source: 
>     using SafeMath for uint256;
>     string public symbol = "PBN";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public  name = "Pluton Blogging Network";

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Token
Line:        102
Source: 
>     string public symbol = "PBN";
>     string public  name = "Pluton Blogging Network";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public decimals = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Token
Line:        103
Source: 
>     string public  name = "Pluton Blogging Network";
>     uint256 public decimals = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 _totalSupply = 300000 * 10 ** (decimals);

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Token
Line:        104
Source: 
>     uint256 public decimals = 18;
>     uint256 _totalSupply = 300000 * 10 ** (decimals);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 _deployedOn;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        41
Source: 
> 
>     function transferOwnership(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        129
Source: 
>     // ------------------------------------------------------------------------
>     function balanceOf(address tokenOwner) public  view returns (uint256 balance) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return balances[tokenOwner];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        138
Source: 
>     // ------------------------------------------------------------------------
>     function transfer(address to, uint256 tokens) public  returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // prevent transfer to 0x0, use burn instead

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        156
Source: 
>     // ------------------------------------------------------------------------
>     function approve(address spender, uint256 tokens) public  returns (bool success){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowed[msg.sender][spender] = tokens;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        171
Source: 
>     // ------------------------------------------------------------------------
>     function transferFrom(address from, address to, uint256 tokens) public  returns (bool success){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(tokens <= allowed[from][msg.sender]); //check allowance

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Token
Line:        189
Source: 
>     // ------------------------------------------------------------------------
>     function allowance(address tokenOwner, address spender) public  view returns (uint256 remaining) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return allowed[tokenOwner][spender];

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Owned
Line:        41
Source: 
> 
>     function transferOwnership(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Token
Line:        171
Source: 
>     // ------------------------------------------------------------------------
>     function transferFrom(address from, address to, uint256 tokens) public  returns (bool success){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(tokens <= allowed[from][msg.sender]); //check allowance

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Token
Line:        129
Source: 
>     // ------------------------------------------------------------------------
>     function balanceOf(address tokenOwner) public  view returns (uint256 balance) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return balances[tokenOwner];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Token
Line:        156
Source: 
>     // ------------------------------------------------------------------------
>     function approve(address spender, uint256 tokens) public  returns (bool success){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowed[msg.sender][spender] = tokens;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Token
Line:        189
Source: 
>     // ------------------------------------------------------------------------
>     function allowance(address tokenOwner, address spender) public  view returns (uint256 remaining) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return allowed[tokenOwner][spender];

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> // SPDX-License-Identifier: UNLICENSED

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Token
Line:        104
Source: 
>     uint256 public decimals = 18;
>     uint256 _totalSupply = 300000 * 10 ** (decimals);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 _deployedOn;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Token
Line:        105
Source: 
>     uint256 _totalSupply = 300000 * 10 ** (decimals);
>     uint256 _deployedOn;
>     ^^^^^^^^^^^^^^^^^^^
>    

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Token
Line:        107
Source: 
>    
>     mapping(address => uint256) balances;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => mapping(address => uint256)) allowed;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Token
Line:        108
Source: 
>     mapping(address => uint256) balances;
>     mapping(address => mapping(address => uint256)) allowed;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Token
Line:        104
Source: 
>     uint256 public decimals = 18;
>     uint256 _totalSupply = 300000 * 10 ** (decimals);
>                            ^^^^^^
>     uint256 _deployedOn;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Token
Line:        157
Source: 
>     function approve(address spender, uint256 tokens) public  returns (bool success){
>         allowed[msg.sender][spender] = tokens;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(msg.sender,spender,tokens);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Token
Line:        101
Source: 
>     using SafeMath for uint256;
>     string public symbol = "PBN";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public  name = "Pluton Blogging Network";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Token
Line:        102
Source: 
>     string public symbol = "PBN";
>     string public  name = "Pluton Blogging Network";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public decimals = 18;

[0m

---------------------------------------------
For contract 0x80f7415dac9a37e168047eb56a25032b5fe216cc.sol
Tool Runtime = 3.8902303820013913 seconds
#############################################