[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ChainlinkPriceFeed
Line:        223
Source: 
> 
>     function addPriceFeed(address addr) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == admin.admin(), "Not admin");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ChainlinkPriceFeed
Line:        228
Source: 
> 
>     function getLatestPrice(uint idx) public view returns (uint) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(idx < priceFeed.length, "No price feed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ChainlinkPriceFeed
Line:        223
Source: 
> 
>     function addPriceFeed(address addr) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == admin.admin(), "Not admin");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ChainlinkPriceFeed
Line:        230
Source: 
>         require(idx < priceFeed.length, "No price feed");
>         (,int priceETH,,uint timeStampETH,) = priceFeed[idx].latestRoundData();
>           ^^^^^^^^^^^^
>         (,int priceUSD,,uint timeStampUSD,) = priceFeedETHToUSD.latestRoundData();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ChainlinkPriceFeed
Line:        231
Source: 
>         (,int priceETH,,uint timeStampETH,) = priceFeed[idx].latestRoundData();
>         (,int priceUSD,,uint timeStampUSD,) = priceFeedETHToUSD.latestRoundData();
>           ^^^^^^^^^^^^
>         require(timeStampETH > 0 && timeStampUSD > 0, "Price feed round not complete");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ChainlinkPriceFeed
Line:        230
Source: 
>         require(idx < priceFeed.length, "No price feed");
>         (,int priceETH,,uint timeStampETH,) = priceFeed[idx].latestRoundData();
>           ^^^^^^^^^^^^
>         (,int priceUSD,,uint timeStampUSD,) = priceFeedETHToUSD.latestRoundData();

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ChainlinkPriceFeed
Line:        231
Source: 
>         (,int priceETH,,uint timeStampETH,) = priceFeed[idx].latestRoundData();
>         (,int priceUSD,,uint timeStampUSD,) = priceFeedETHToUSD.latestRoundData();
>           ^^^^^^^^^^^^
>         require(timeStampETH > 0 && timeStampUSD > 0, "Price feed round not complete");

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        7
Source: 
> //pragma solidity ^0.6.0;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        166
Source: 
> //pragma solidity ^0.6.0;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        173
Source: 
> //pragma solidity >=0.6.0;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ChainlinkPriceFeed
Line:        224
Source: 
>     function addPriceFeed(address addr) public {
>         require(msg.sender == admin.admin(), "Not admin");
>                               ^^^^^^^^^^^^^
>         priceFeed.push(AggregatorV3Interface(addr));

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ChainlinkPriceFeed
Line:        230
Source: 
>         require(idx < priceFeed.length, "No price feed");
>         (,int priceETH,,uint timeStampETH,) = priceFeed[idx].latestRoundData();
>                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         (,int priceUSD,,uint timeStampUSD,) = priceFeedETHToUSD.latestRoundData();

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ChainlinkPriceFeed
Line:        231
Source: 
>         (,int priceETH,,uint timeStampETH,) = priceFeed[idx].latestRoundData();
>         (,int priceUSD,,uint timeStampUSD,) = priceFeedETHToUSD.latestRoundData();
>                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(timeStampETH > 0 && timeStampUSD > 0, "Price feed round not complete");

[0m

---------------------------------------------
For contract 0x0d3e8d6a33e7af33b86221ff8c24a74b8dee8583.sol
Tool Runtime = 2.7117417460012803 seconds
#############################################