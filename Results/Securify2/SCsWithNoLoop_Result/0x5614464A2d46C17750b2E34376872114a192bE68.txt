[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    TokenERC20
Line:        18
Source: 
>     string public symbol;
>     uint8 public decimals = 18;
>             ^^^^^^^^^^^^^^^^^^^
>     // 18 decimals is the strongly suggested default, avoid changing it

[0m
[0;31mSeverity:    LOW
Pattern:     ERC20 Indexed Pattern
Description: Events defined by ERC20 specification should use the
             'indexed' keyword.
Type:        Violation
Contract:    TokenERC20
Line:        27
Source: 
>     // This generates a public event on the blockchain that will notify clients
>     event Transfer(address indexed from, address indexed to, uint256 value);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     ERC20 Indexed Pattern
Description: Events defined by ERC20 specification should use the
             'indexed' keyword.
Type:        Violation
Contract:    TokenERC20
Line:        30
Source: 
>     // This generates a public event on the blockchain that will notify clients
>     event Approval(address indexed _owner, address indexed _spender, uint256 _value);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenERC20
Line:        80
Source: 
>      */
>     function transfer(address _to, uint256 _value) public returns (bool success) {
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(msg.sender, _to, _value);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenERC20
Line:        94
Source: 
>      */
>     function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_value <= allowance[_from][msg.sender]);     // Check allowance

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenERC20
Line:        125
Source: 
>      */
>     function approveAndCall(address _spender, uint256 _value, bytes memory _extraData)
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenERC20
Line:        142
Source: 
>      */
>     function burn(uint256 _value) public returns (bool success) {
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenERC20
Line:        158
Source: 
>      */
>     function burnFrom(address _from, uint256 _value) public returns (bool success) {
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(balanceOf[_from] >= _value);                // Check if the targeted balance is enough

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TokenERC20
Line:        80
Source: 
>      */
>     function transfer(address _to, uint256 _value) public returns (bool success) {
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(msg.sender, _to, _value);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TokenERC20
Line:        94
Source: 
>      */
>     function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_value <= allowance[_from][msg.sender]);     // Check allowance

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenERC20
Line:        109
Source: 
>      */
>     function approve(address _spender, uint256 _value) public
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     returns (bool success) {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenERC20
Line:        125
Source: 
>      */
>     function approveAndCall(address _spender, uint256 _value, bytes memory _extraData)
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    tokenRecipient
Line:        10
Source: 
> 
> interface tokenRecipient {
>         ^^^^^^^^^^^^^^^^^^
>     function receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData) external;

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        8
Source: 
> //pragma solidity >=0.4.22 <0.6.0;
> pragma solidity >=0.5 <0.7.17;
>         ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    TokenERC20
Line:        16
Source: 
>     // Public variables of the token
>     string public name;
>             ^^^^^^^^^^^
>     string public symbol;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    TokenERC20
Line:        17
Source: 
>     string public name;
>     string public symbol;
>             ^^^^^^^^^^^^^
>     uint8 public decimals = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    TokenERC20
Line:        18
Source: 
>     string public symbol;
>     uint8 public decimals = 18;
>             ^^^^^^^^^^^^^^^^^^^
>     // 18 decimals is the strongly suggested default, avoid changing it

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenERC20
Line:        130
Source: 
>         if (approve(_spender, _value)) {
>             spender.receiveApproval(msg.sender, _value, address(this), _extraData);
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             return true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenERC20
Line:        64
Source: 
>         // Subtract from the sender
>         balanceOf[_from] -= _value;
>                 ^^^^^^^^^^^^^^^^^^^
>         // Add the same to the recipient

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenERC20
Line:        66
Source: 
>         // Add the same to the recipient
>         balanceOf[_to] += _value;
>                 ^^^^^^^^^^^^^^^^^
>         emit Transfer(_from, _to, _value);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenERC20
Line:        111
Source: 
>     returns (bool success) {
>         allowance[msg.sender][_spender] = _value;
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(msg.sender, _spender, _value);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TokenERC20
Line:        16
Source: 
>     // Public variables of the token
>     string public name;
>             ^^^^^^^^^^^
>     string public symbol;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TokenERC20
Line:        17
Source: 
>     string public name;
>     string public symbol;
>             ^^^^^^^^^^^^^
>     uint8 public decimals = 18;

[0m

---------------------------------------------
For contract 0x5614464A2d46C17750b2E34376872114a192bE68.sol
Tool Runtime = 2.844736824999927 seconds
#############################################