[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    ENFORCEDTRIBUTE
Line:        59
Source: 
>   uint public toSend=10000 ether;
>   uint public SWAP_INTERVAL=12 hours;//5 minutes;//1 days;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public nextSwap=now-1;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ENFORCEDTRIBUTE2
Line:        35
Source: 
>   }
>   function swap() public{
>   ^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.sender==address(s1),"transaction must originate with swap 1 contract");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ENFORCEDTRIBUTE
Line:        73
Source: 
>   }
>   function addAdmin(address newadmin) public isAdmin{
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     admin[newadmin]=true;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ENFORCEDTRIBUTE
Line:        76
Source: 
>   }
>   function changeToSend(uint newsend) public isAdmin{
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     toSend=newsend;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ENFORCEDTRIBUTE
Line:        79
Source: 
>   }
>   function swap() public{
>   ^^^^^^^^^^^^^^^^^^^^^^^
>     require(now>nextSwap,"must wait for next swap time");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ENFORCEDTRIBUTE
Line:        93
Source: 
>   }
>   function canSwapNow() public view returns(bool){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return now>nextSwap;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ENFORCEDTRIBUTE
Line:        76
Source: 
>   }
>   function changeToSend(uint newsend) public isAdmin{
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     toSend=newsend;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ENFORCEDTRIBUTE
Line:        73
Source: 
>   }
>   function addAdmin(address newadmin) public isAdmin{
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     admin[newadmin]=true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    ENFORCEDTRIBUTE
Line:        82
Source: 
>     uint daysToAdd=1+(now-nextSwap)/SWAP_INTERVAL;
>     nextSwap+=SWAP_INTERVAL*daysToAdd;
>               ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ENFORCEDTRIBUTE
Line:        86
Source: 
>     if(swapHere){
>       token.transfer(address(s2),min(token.balanceOf(address(this)),toSend));
>                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ENFORCEDTRIBUTE
Line:        86
Source: 
>     if(swapHere){
>       token.transfer(address(s2),min(token.balanceOf(address(this)),toSend));
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ENFORCEDTRIBUTE
Line:        89
Source: 
>     else{
>       s2.swap();
>       ^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ENFORCEDTRIBUTE
Line:        59
Source: 
>   uint public toSend=10000 ether;
>   uint public SWAP_INTERVAL=12 hours;//5 minutes;//1 days;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint public nextSwap=now-1;

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ENFORCEDTRIBUTE2
Line:        29
Source: 
> contract ENFORCEDTRIBUTE2 {
>   ENFORCEDTRIBUTE s1;
>   ^^^^^^^^^^^^^^^^^^
>   ERC20 public token;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ENFORCEDTRIBUTE2
Line:        37
Source: 
>     require(msg.sender==address(s1),"transaction must originate with swap 1 contract");
>     token.transfer(address(s1),min(token.balanceOf(address(this)),s1.toSend()));
>                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ENFORCEDTRIBUTE2
Line:        37
Source: 
>     require(msg.sender==address(s1),"transaction must originate with swap 1 contract");
>     token.transfer(address(s1),min(token.balanceOf(address(this)),s1.toSend()));
>                                                                   ^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ENFORCEDTRIBUTE
Line:        86
Source: 
>     if(swapHere){
>       token.transfer(address(s2),min(token.balanceOf(address(this)),toSend));
>                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ENFORCEDTRIBUTE2
Line:        37
Source: 
>     require(msg.sender==address(s1),"transaction must originate with swap 1 contract");
>     token.transfer(address(s1),min(token.balanceOf(address(this)),s1.toSend()));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ENFORCEDTRIBUTE
Line:        86
Source: 
>     if(swapHere){
>       token.transfer(address(s2),min(token.balanceOf(address(this)),toSend));
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ENFORCEDTRIBUTE
Line:        89
Source: 
>     else{
>       s2.swap();
>       ^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ENFORCEDTRIBUTE
Line:        82
Source: 
>     uint daysToAdd=1+(now-nextSwap)/SWAP_INTERVAL;
>     nextSwap+=SWAP_INTERVAL*daysToAdd;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ENFORCEDTRIBUTE
Line:        91
Source: 
>     }
>     swapHere=!swapHere;
>     ^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ENFORCEDTRIBUTE2
Line:        37
Source: 
>     require(msg.sender==address(s1),"transaction must originate with swap 1 contract");
>     token.transfer(address(s1),min(token.balanceOf(address(this)),s1.toSend()));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ENFORCEDTRIBUTE
Line:        86
Source: 
>     if(swapHere){
>       token.transfer(address(s2),min(token.balanceOf(address(this)),toSend));
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m

---------------------------------------------
For contract 0x6168F02A691Afe7caba520d4df18665e9c780CC6.sol
Tool Runtime = 2.7715223850000257 seconds
#############################################