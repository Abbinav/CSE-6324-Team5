[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    OXSign
Line:        84
Source: 
>     using SafeMath for uint256;
>     string public symbol = "OXS";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public  name = "OXSign";

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    OXSign
Line:        85
Source: 
>     string public symbol = "OXS";
>     string public  name = "OXSign";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public decimals = 10;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    OXSign
Line:        86
Source: 
>     string public  name = "OXSign";
>     uint256 public decimals = 10;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _totalSupply = 210000000000000;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    OXSign
Line:        87
Source: 
>     uint256 public decimals = 10;
>     uint256 private _totalSupply = 210000000000000;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private last_visit;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        21
Source: 
>   function mul(uint256 a, uint256 b) internal pure returns (uint256) {
>     if (a == 0) {
>         ^^^^^^
>       return 0;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        25
Source: 
>     uint256 c = a * b;
>     assert(c / a == b);
>            ^^^^^^^^^^
>     return c;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        76
Source: 
> 
>     function transferOwnership(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OXSign
Line:        110
Source: 
> 
>     function balanceOf(address tokenOwner) public  view returns (uint256 balance) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return balances[tokenOwner];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OXSign
Line:        115
Source: 
> 
>     function transfer(address to, uint256 tokens) public  returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // prevent transfer to 0x0, use burn instead

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OXSign
Line:        148
Source: 
> 
>     function approve(address spender, uint256 tokens) public  returns (bool success){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowed[msg.sender][spender] = tokens;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OXSign
Line:        155
Source: 
> 
>     function transferFrom(address from, address to, uint256 tokens) public  returns (bool success){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(tokens <= allowed[from][msg.sender]); //check allowance

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OXSign
Line:        172
Source: 
> 
>     function allowance(address tokenOwner, address spender) public  view returns (uint256 remaining) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return allowed[tokenOwner][spender];

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Owned
Line:        76
Source: 
> 
>     function transferOwnership(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    OXSign
Line:        155
Source: 
> 
>     function transferFrom(address from, address to, uint256 tokens) public  returns (bool success){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(tokens <= allowed[from][msg.sender]); //check allowance

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OXSign
Line:        110
Source: 
> 
>     function balanceOf(address tokenOwner) public  view returns (uint256 balance) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return balances[tokenOwner];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OXSign
Line:        148
Source: 
> 
>     function approve(address spender, uint256 tokens) public  returns (bool success){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowed[msg.sender][spender] = tokens;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OXSign
Line:        172
Source: 
> 
>     function allowance(address tokenOwner, address spender) public  view returns (uint256 remaining) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return allowed[tokenOwner][spender];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SafeMath
Line:        24
Source: 
>     }
>     uint256 c = a * b;
>                 ^^^^^
>     assert(c / a == b);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXSign
Line:        88
Source: 
>     uint256 private _totalSupply = 210000000000000;
>     uint256 private last_visit;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private locked_tockens = 0 * 0 ** (decimals);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXSign
Line:        89
Source: 
>     uint256 private last_visit;
>     uint256 private locked_tockens = 0 * 0 ** (decimals);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => uint256) balances;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXSign
Line:        132
Source: 
> 
>     function check_time() private {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if ((now.sub(last_visit)).div(1 weeks) >= 1){

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXSign
Line:        134
Source: 
>         if ((now.sub(last_visit)).div(1 weeks) >= 1){
>             uint256 weeks_spanned;
>             ^^^^^^^^^^^^^^^^^^^^^
>             uint256 released;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXSign
Line:        136
Source: 
>             uint256 released;
>             uint256 week_allowance = 0 * 0 ** (decimals);
>             ^^^^^^^^^^^^^^^^^^^^^^
>             weeks_spanned = (now.sub(last_visit)).div(1 weeks);

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //pragma solidity ^0.6.0;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    OXSign
Line:        90
Source: 
>     uint256 private locked_tockens = 0 * 0 ** (decimals);
>     mapping(address => uint256) balances;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => mapping(address => uint256)) allowed;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    OXSign
Line:        91
Source: 
>     mapping(address => uint256) balances;
>     mapping(address => mapping(address => uint256)) allowed;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    OXSign
Line:        87
Source: 
>     uint256 public decimals = 10;
>     uint256 private _totalSupply = 210000000000000;
>                                    ^^^^^^^^^^^^^^^
>     uint256 private last_visit;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    OXSign
Line:        149
Source: 
>     function approve(address spender, uint256 tokens) public  returns (bool success){
>         allowed[msg.sender][spender] = tokens;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(msg.sender,spender,tokens);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    OXSign
Line:        84
Source: 
>     using SafeMath for uint256;
>     string public symbol = "OXS";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public  name = "OXSign";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    OXSign
Line:        85
Source: 
>     string public symbol = "OXS";
>     string public  name = "OXSign";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public decimals = 10;

[0m

---------------------------------------------
For contract 0xd48a38bad734a7c491e98367321f7abe79bb19a2.sol
Tool Runtime = 4.15297188500017 seconds
#############################################