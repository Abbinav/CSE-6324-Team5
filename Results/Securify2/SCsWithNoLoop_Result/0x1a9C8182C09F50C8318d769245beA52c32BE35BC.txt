[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Timelock
Line:        227
Source: 
> 
>     function setDelay(uint delay_) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == address(this), "Timelock::setDelay: Call must come from Timelock.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Timelock
Line:        236
Source: 
> 
>     function acceptAdmin() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == pendingAdmin, "Timelock::acceptAdmin: Call must come from pendingAdmin.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Timelock
Line:        244
Source: 
> 
>     function setPendingAdmin(address pendingAdmin_) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == address(this), "Timelock::setPendingAdmin: Call must come from Timelock.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Timelock
Line:        251
Source: 
> 
>     function queueTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public returns (bytes32) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == admin, "Timelock::queueTransaction: Call must come from admin.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Timelock
Line:        262
Source: 
> 
>     function cancelTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == admin, "Timelock::cancelTransaction: Call must come from admin.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Timelock
Line:        271
Source: 
> 
>     function executeTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public payable returns (bytes memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == admin, "Timelock::executeTransaction: Call must come from admin.");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Gas-dependent Reentrancy
Description: Calls into external contracts that receive all remaining
             gas and are followed by state changes may be reentrant.
Type:        Warning
Contract:    Timelock
Line:        290
Source: 
>         // solium-disable-next-line security/no-call-value
>         (bool success, bytes memory returnData) = target.call.value(value)(callData);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Timelock::executeTransaction: Transaction execution reverted.");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Timelock
Line:        290
Source: 
>         // solium-disable-next-line security/no-call-value
>         (bool success, bytes memory returnData) = target.call.value(value)(callData);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Timelock::executeTransaction: Transaction execution reverted.");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Timelock
Line:        244
Source: 
> 
>     function setPendingAdmin(address pendingAdmin_) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == address(this), "Timelock::setPendingAdmin: Call must come from Timelock.");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Timelock
Line:        251
Source: 
> 
>     function queueTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public returns (bytes32) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == admin, "Timelock::queueTransaction: Call must come from admin.");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Timelock
Line:        262
Source: 
> 
>     function cancelTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == admin, "Timelock::cancelTransaction: Call must come from admin.");

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        9
Source: 
> 
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    Timelock
Line:        290
Source: 
>         // solium-disable-next-line security/no-call-value
>         (bool success, bytes memory returnData) = target.call.value(value)(callData);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Timelock::executeTransaction: Transaction execution reverted.");

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Timelock
Line:        290
Source: 
>         // solium-disable-next-line security/no-call-value
>         (bool success, bytes memory returnData) = target.call.value(value)(callData);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Timelock::executeTransaction: Transaction execution reverted.");

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Timelock
Line:        211
Source: 
>     address public admin;
>     address public pendingAdmin;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public delay;

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    Timelock
Line:        300
Source: 
>         // solium-disable-next-line security/no-block-members
>         return block.timestamp;
>                ^^^^^^^^^^^^^^^
>     }

[0m

---------------------------------------------
For contract 0x1a9C8182C09F50C8318d769245beA52c32BE35BC.sol
Tool Runtime = 4.462525717999597 seconds
#############################################