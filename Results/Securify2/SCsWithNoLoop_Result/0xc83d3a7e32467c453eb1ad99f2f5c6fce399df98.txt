[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    PickleJar
Line:        147
Source: 
> contract PickleJar {
>     IUniswapV2Router2 router = IUniswapV2Router2(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PickleJar
Line:        232
Source: 
> 
>     function convertWETHPairWithPermit(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address fromLP,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    PickleJar
Line:        151
Source: 
> 
>     function convertWETHPair(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>         address fromLP,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    PickleJar
Line:        232
Source: 
> 
>     function convertWETHPairWithPermit(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address fromLP,

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        162
Source: 
>         // Only for WETH/<TOKEN> pairs
>         if (!(fromPair.token0() == weth || fromPair.token1() == weth)) {
>               ^^^^^^^^^^^^^^^^^
>             revert("!eth-from");

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        162
Source: 
>         // Only for WETH/<TOKEN> pairs
>         if (!(fromPair.token0() == weth || fromPair.token1() == weth)) {
>                                            ^^^^^^^^^^^^^^^^^
>             revert("!eth-from");

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        165
Source: 
>         }
>         if (!(toPair.token0() == weth || toPair.token1() == weth)) {
>               ^^^^^^^^^^^^^^^
>             revert("!eth-to");

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        165
Source: 
>         }
>         if (!(toPair.token0() == weth || toPair.token1() == weth)) {
>                                          ^^^^^^^^^^^^^^^
>             revert("!eth-to");

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        170
Source: 
>         // Get non-eth token from pairs
>         address _from = fromPair.token0() != weth
>                         ^^^^^^^^^^^^^^^^^
>             ? fromPair.token0()

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        171
Source: 
>         address _from = fromPair.token0() != weth
>             ? fromPair.token0()
>               ^^^^^^^^^^^^^^^^^
>             : fromPair.token1();

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        174
Source: 
> 
>         address _to = toPair.token0() != weth
>                       ^^^^^^^^^^^^^^^
>             ? toPair.token0()

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        175
Source: 
>         address _to = toPair.token0() != weth
>             ? toPair.token0()
>               ^^^^^^^^^^^^^^^
>             : toPair.token1();

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        184
Source: 
>         router.removeLiquidity(
>             fromPair.token0(),
>             ^^^^^^^^^^^^^^^^^
>             fromPair.token1(),

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        185
Source: 
>             fromPair.token0(),
>             fromPair.token1(),
>             ^^^^^^^^^^^^^^^^^
>             value,

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        213
Source: 
>             _to,
>             IUniswapV2ERC20(weth).balanceOf(address(this)),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             IUniswapV2ERC20(_to).balanceOf(address(this)),

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        214
Source: 
>             IUniswapV2ERC20(weth).balanceOf(address(this)),
>             IUniswapV2ERC20(_to).balanceOf(address(this)),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             0,

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        224
Source: 
>             msg.sender,
>             IUniswapV2ERC20(weth).balanceOf(address(this))
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         );

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        228
Source: 
>             msg.sender,
>             IUniswapV2ERC20(_to).balanceOf(address(this))
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         );

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        176
Source: 
>             ? toPair.token0()
>             : toPair.token1();
>               ^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    PickleJar
Line:        172
Source: 
>             ? fromPair.token0()
>             : fromPair.token1();
>               ^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IUniswapV2ERC20
Line:        43
Source: 
> 
>     function DOMAIN_SEPARATOR() external view returns (bytes32);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IUniswapV2ERC20
Line:        45
Source: 
> 
>     function PERMIT_TYPEHASH() external pure returns (bytes32);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IUniswapV2Router2
Line:        133
Source: 
> 
>     function WETH() external pure returns (address);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    PickleJar
Line:        170
Source: 
>         // Get non-eth token from pairs
>         address _from = fromPair.token0() != weth
>         ^^^^^^^^^^^^^
>             ? fromPair.token0()

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    PickleJar
Line:        174
Source: 
> 
>         address _to = toPair.token0() != weth
>         ^^^^^^^^^^^
>             ? toPair.token0()

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        8
Source: 
> // SPDX-License-Identifier: MIT
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        62
Source: 
> 
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        72
Source: 
> 
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        138
Source: 
> 
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    PickleJar
Line:        147
Source: 
> contract PickleJar {
>     IUniswapV2Router2 router = IUniswapV2Router2(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    PickleJar
Line:        159
Source: 
> 
>         address weth = router.WETH();
>                        ^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    PickleJar
Line:        162
Source: 
>         // Only for WETH/<TOKEN> pairs
>         if (!(fromPair.token0() == weth || fromPair.token1() == weth)) {
>               ^^^^^^^^^^^^^^^^^
>             revert("!eth-from");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    PickleJar
Line:        162
Source: 
>         // Only for WETH/<TOKEN> pairs
>         if (!(fromPair.token0() == weth || fromPair.token1() == weth)) {
>                                            ^^^^^^^^^^^^^^^^^
>             revert("!eth-from");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    PickleJar
Line:        165
Source: 
>         }
>         if (!(toPair.token0() == weth || toPair.token1() == weth)) {
>               ^^^^^^^^^^^^^^^
>             revert("!eth-to");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    PickleJar
Line:        165
Source: 
>         }
>         if (!(toPair.token0() == weth || toPair.token1() == weth)) {
>                                          ^^^^^^^^^^^^^^^
>             revert("!eth-to");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    PickleJar
Line:        170
Source: 
>         // Get non-eth token from pairs
>         address _from = fromPair.token0() != weth
>                         ^^^^^^^^^^^^^^^^^
>             ? fromPair.token0()

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    PickleJar
Line:        174
Source: 
> 
>         address _to = toPair.token0() != weth
>                       ^^^^^^^^^^^^^^^
>             ? toPair.token0()

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        171
Source: 
>         address _from = fromPair.token0() != weth
>             ? fromPair.token0()
>               ^^^^^^^^^^^^^^^^^
>             : fromPair.token1();

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        175
Source: 
>         address _to = toPair.token0() != weth
>             ? toPair.token0()
>               ^^^^^^^^^^^^^^^
>             : toPair.token1();

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        179
Source: 
>         // Transfer
>         IUniswapV2ERC20(fromLP).transferFrom(msg.sender, address(this), value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        182
Source: 
>         // Remove liquidity
>         IUniswapV2ERC20(fromLP).approve(address(router), value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         router.removeLiquidity(

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        184
Source: 
>         router.removeLiquidity(
>             fromPair.token0(),
>             ^^^^^^^^^^^^^^^^^
>             fromPair.token1(),

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        185
Source: 
>             fromPair.token0(),
>             fromPair.token1(),
>             ^^^^^^^^^^^^^^^^^
>             value,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        183
Source: 
>         IUniswapV2ERC20(fromLP).approve(address(router), value);
>         router.removeLiquidity(
>         ^^^^^^^^^^^^^^^^^^^^^^^
>             fromPair.token0(),

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        198
Source: 
>         path[2] = _to;
>         IUniswapV2ERC20(_from).approve(address(router), uint256(-1));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         router.swapExactTokensForTokens(

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        200
Source: 
>         router.swapExactTokensForTokens(
>             IUniswapV2ERC20(_from).balanceOf(address(this)),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             0,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        199
Source: 
>         IUniswapV2ERC20(_from).approve(address(router), uint256(-1));
>         router.swapExactTokensForTokens(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             IUniswapV2ERC20(_from).balanceOf(address(this)),

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        208
Source: 
>         // Supply liquidity
>         IUniswapV2ERC20(weth).approve(address(router), uint256(-1));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IUniswapV2ERC20(_to).approve(address(router), uint256(-1));

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        209
Source: 
>         IUniswapV2ERC20(weth).approve(address(router), uint256(-1));
>         IUniswapV2ERC20(_to).approve(address(router), uint256(-1));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         router.addLiquidity(

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        213
Source: 
>             _to,
>             IUniswapV2ERC20(weth).balanceOf(address(this)),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             IUniswapV2ERC20(_to).balanceOf(address(this)),

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        214
Source: 
>             IUniswapV2ERC20(weth).balanceOf(address(this)),
>             IUniswapV2ERC20(_to).balanceOf(address(this)),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             0,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        210
Source: 
>         IUniswapV2ERC20(_to).approve(address(router), uint256(-1));
>         router.addLiquidity(
>         ^^^^^^^^^^^^^^^^^^^^
>             weth,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        224
Source: 
>             msg.sender,
>             IUniswapV2ERC20(weth).balanceOf(address(this))
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         );

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        222
Source: 
>         // Refund sender any remaining tokens
>         IUniswapV2ERC20(weth).transfer(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             msg.sender,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        228
Source: 
>             msg.sender,
>             IUniswapV2ERC20(_to).balanceOf(address(this))
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         );

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        226
Source: 
>         );
>         IUniswapV2ERC20(_to).transfer(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             msg.sender,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        176
Source: 
>             ? toPair.token0()
>             : toPair.token1();
>               ^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        172
Source: 
>             ? fromPair.token0()
>             : fromPair.token1();
>               ^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PickleJar
Line:        242
Source: 
>         // Permit
>         IUniswapV2ERC20(fromLP).permit(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             msg.sender,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    PickleJar
Line:        179
Source: 
>         // Transfer
>         IUniswapV2ERC20(fromLP).transferFrom(msg.sender, address(this), value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    PickleJar
Line:        182
Source: 
>         // Remove liquidity
>         IUniswapV2ERC20(fromLP).approve(address(router), value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         router.removeLiquidity(

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    PickleJar
Line:        183
Source: 
>         IUniswapV2ERC20(fromLP).approve(address(router), value);
>         router.removeLiquidity(
>         ^^^^^^^^^^^^^^^^^^^^^^^
>             fromPair.token0(),

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    PickleJar
Line:        198
Source: 
>         path[2] = _to;
>         IUniswapV2ERC20(_from).approve(address(router), uint256(-1));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         router.swapExactTokensForTokens(

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    PickleJar
Line:        199
Source: 
>         IUniswapV2ERC20(_from).approve(address(router), uint256(-1));
>         router.swapExactTokensForTokens(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             IUniswapV2ERC20(_from).balanceOf(address(this)),

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    PickleJar
Line:        208
Source: 
>         // Supply liquidity
>         IUniswapV2ERC20(weth).approve(address(router), uint256(-1));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IUniswapV2ERC20(_to).approve(address(router), uint256(-1));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    PickleJar
Line:        209
Source: 
>         IUniswapV2ERC20(weth).approve(address(router), uint256(-1));
>         IUniswapV2ERC20(_to).approve(address(router), uint256(-1));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         router.addLiquidity(

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    PickleJar
Line:        210
Source: 
>         IUniswapV2ERC20(_to).approve(address(router), uint256(-1));
>         router.addLiquidity(
>         ^^^^^^^^^^^^^^^^^^^^
>             weth,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    PickleJar
Line:        222
Source: 
>         // Refund sender any remaining tokens
>         IUniswapV2ERC20(weth).transfer(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             msg.sender,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    PickleJar
Line:        226
Source: 
>         );
>         IUniswapV2ERC20(_to).transfer(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             msg.sender,

[0m

---------------------------------------------
For contract 0xc83d3a7e32467c453eb1ad99f2f5c6fce399df98.sol
Tool Runtime = 7.335536750999836 seconds
#############################################