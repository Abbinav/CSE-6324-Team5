[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SUSHIPOWAH
Line:        90
Source: 
>   
>   function name() public pure returns(string memory) { return "SUSHIPOWAH"; }
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   function symbol() public pure returns(string memory) { return "SUSHIPOWAH"; }

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SUSHIPOWAH
Line:        91
Source: 
>   function name() public pure returns(string memory) { return "SUSHIPOWAH"; }
>   function symbol() public pure returns(string memory) { return "SUSHIPOWAH"; }
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   function decimals() public pure returns(uint8) { return 18; }  

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SUSHIPOWAH
Line:        92
Source: 
>   function symbol() public pure returns(string memory) { return "SUSHIPOWAH"; }
>   function decimals() public pure returns(uint8) { return 18; }  
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SUSHIPOWAH
Line:        94
Source: 
> 
>   function totalSupply() public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     IPair pair = IPair(0x795065dCc9f64b5614C407a6EFDC400DA6221FB0);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SUSHIPOWAH
Line:        104
Source: 
> 
>   function balanceOf(address owner) public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     IMasterChef chef = IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SUSHIPOWAH
Line:        131
Source: 
> 
>   function allowance(address, address) public pure returns (uint256) { return 0; }
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   function transfer(address, uint256) public pure returns (bool) { return false; }

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SUSHIPOWAH
Line:        132
Source: 
>   function allowance(address, address) public pure returns (uint256) { return 0; }
>   function transfer(address, uint256) public pure returns (bool) { return false; }
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   function approve(address, uint256) public pure returns (bool) { return false; }

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SUSHIPOWAH
Line:        133
Source: 
>   function transfer(address, uint256) public pure returns (bool) { return false; }
>   function approve(address, uint256) public pure returns (bool) { return false; }
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   function transferFrom(address, address, uint256) public pure returns (bool) { return false; }

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SUSHIPOWAH
Line:        134
Source: 
>   function approve(address, uint256) public pure returns (bool) { return false; }
>   function transferFrom(address, address, uint256) public pure returns (bool) { return false; }
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        104
Source: 
> 
>   function balanceOf(address owner) public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     IMasterChef chef = IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        131
Source: 
> 
>   function allowance(address, address) public pure returns (uint256) { return 0; }
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   function transfer(address, uint256) public pure returns (bool) { return false; }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        132
Source: 
>   function allowance(address, address) public pure returns (uint256) { return 0; }
>   function transfer(address, uint256) public pure returns (bool) { return false; }
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   function approve(address, uint256) public pure returns (bool) { return false; }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        133
Source: 
>   function transfer(address, uint256) public pure returns (bool) { return false; }
>   function approve(address, uint256) public pure returns (bool) { return false; }
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   function transferFrom(address, address, uint256) public pure returns (bool) { return false; }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        134
Source: 
>   function approve(address, uint256) public pure returns (bool) { return false; }
>   function transferFrom(address, address, uint256) public pure returns (bool) { return false; }
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SafeMath
Line:        20
Source: 
> 
>     uint256 c = a * b;
>                 ^^^^^
>     require(c / a == b);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        98
Source: 
>     IERC20 sushi = IERC20(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);
>     (uint256 lp_totalSushi, , ) = pair.getReserves();
>      ^^^^^^^^^^^^^^^^^^^^^
>     uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        110
Source: 
>     
>     (uint256 lp_totalSushi, , ) = pair.getReserves();
>      ^^^^^^^^^^^^^^^^^^^^^
>     uint256 lp_total = pair.totalSupply();

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        98
Source: 
>     IERC20 sushi = IERC20(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);
>     (uint256 lp_totalSushi, , ) = pair.getReserves();
>      ^^^^^^^^^^^^^^^^^^^^^
>     uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        99
Source: 
>     (uint256 lp_totalSushi, , ) = pair.getReserves();
>     uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        110
Source: 
>     
>     (uint256 lp_totalSushi, , ) = pair.getReserves();
>      ^^^^^^^^^^^^^^^^^^^^^
>     uint256 lp_total = pair.totalSupply();

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        111
Source: 
>     (uint256 lp_totalSushi, , ) = pair.getReserves();
>     uint256 lp_total = pair.totalSupply();
>     ^^^^^^^^^^^^^^^^
>     uint256 lp_balance = pair.balanceOf(owner);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        112
Source: 
>     uint256 lp_total = pair.totalSupply();
>     uint256 lp_balance = pair.balanceOf(owner);
>     ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        115
Source: 
>     // Add staked balance
>     (uint256 lp_stakedBalance, ) = chef.userInfo(12, owner);
>      ^^^^^^^^^^^^^^^^^^^^^^^^
>     lp_balance = lp_balance.add(lp_stakedBalance);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        119
Source: 
>     // LP voting power is 2x the users SUSHI share in the pool.
>     uint256 lp_powah = lp_totalSushi.mul(lp_balance).div(lp_total).mul(2);
>     ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        121
Source: 
> 
>     uint256 xsushi_balance = bar.balanceOf(owner);
>     ^^^^^^^^^^^^^^^^^^^^^^
>     uint256 xsushi_total = bar.totalSupply();

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        122
Source: 
>     uint256 xsushi_balance = bar.balanceOf(owner);
>     uint256 xsushi_total = bar.totalSupply();
>     ^^^^^^^^^^^^^^^^^^^^
>     uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        123
Source: 
>     uint256 xsushi_total = bar.totalSupply();
>     uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SUSHIPOWAH
Line:        126
Source: 
>     // xSUSHI voting power is the users SUSHI share in the bar
>     uint256 xsushi_powah = xsushi_totalSushi.mul(xsushi_balance).div(xsushi_total);
>     ^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SUSHIPOWAH
Line:        98
Source: 
>     IERC20 sushi = IERC20(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);
>     (uint256 lp_totalSushi, , ) = pair.getReserves();
>                                   ^^^^^^^^^^^^^^^^^^
>     uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SUSHIPOWAH
Line:        99
Source: 
>     (uint256 lp_totalSushi, , ) = pair.getReserves();
>     uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));
>                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SUSHIPOWAH
Line:        110
Source: 
>     
>     (uint256 lp_totalSushi, , ) = pair.getReserves();
>                                   ^^^^^^^^^^^^^^^^^^
>     uint256 lp_total = pair.totalSupply();

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SUSHIPOWAH
Line:        111
Source: 
>     (uint256 lp_totalSushi, , ) = pair.getReserves();
>     uint256 lp_total = pair.totalSupply();
>                        ^^^^^^^^^^^^^^^^^^
>     uint256 lp_balance = pair.balanceOf(owner);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SUSHIPOWAH
Line:        112
Source: 
>     uint256 lp_total = pair.totalSupply();
>     uint256 lp_balance = pair.balanceOf(owner);
>                          ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SUSHIPOWAH
Line:        115
Source: 
>     // Add staked balance
>     (uint256 lp_stakedBalance, ) = chef.userInfo(12, owner);
>                                    ^^^^^^^^^^^^^^^^^^^^^^^^
>     lp_balance = lp_balance.add(lp_stakedBalance);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SUSHIPOWAH
Line:        121
Source: 
> 
>     uint256 xsushi_balance = bar.balanceOf(owner);
>                              ^^^^^^^^^^^^^^^^^^^^
>     uint256 xsushi_total = bar.totalSupply();

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SUSHIPOWAH
Line:        122
Source: 
>     uint256 xsushi_balance = bar.balanceOf(owner);
>     uint256 xsushi_total = bar.totalSupply();
>                            ^^^^^^^^^^^^^^^^^
>     uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SUSHIPOWAH
Line:        123
Source: 
>     uint256 xsushi_total = bar.totalSupply();
>     uint256 xsushi_totalSushi = sushi.balanceOf(address(bar));
>                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m

---------------------------------------------
For contract 0xf0abbbab4a0ed1e8df15717b3513e882310c7290.sol
Tool Runtime = 3.0995271480001065 seconds
#############################################