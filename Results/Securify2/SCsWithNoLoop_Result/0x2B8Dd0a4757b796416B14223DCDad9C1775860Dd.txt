[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    Normalizer
Line:        130
Source: 
>         } else if (compound[token]) {
>             return Compound(token).exchangeRateStored();
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else if (cream[token]) {

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    Normalizer
Line:        132
Source: 
>         } else if (cream[token]) {
>             return Cream(token).exchangeRateStored();
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Curve
Line:        53
Source: 
> interface Curve {
>     function get_virtual_price() external view returns (uint);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Normalizer
Line:        124
Source: 
>         if (yearn[token]) {
>             return Yearn(token).getPricePerFullShare();
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else if (curve[token]) {

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Normalizer
Line:        126
Source: 
>         } else if (curve[token]) {
>             return Curve(curveSwap[token]).get_virtual_price();
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else if (dforce[token]) {

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Normalizer
Line:        128
Source: 
>         } else if (dforce[token]) {
>             return Dforce(token).getExchangeRate();
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else if (compound[token]) {

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Normalizer
Line:        130
Source: 
>         } else if (compound[token]) {
>             return Compound(token).exchangeRateStored();
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else if (cream[token]) {

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Normalizer
Line:        132
Source: 
>         } else if (cream[token]) {
>             return Cream(token).exchangeRateStored();
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Normalizer
Line:        76
Source: 
>     mapping(address => address) public curveSwap;
>     mapping(address => bool) public vaults;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => bool) public dforce;

[0m

---------------------------------------------
For contract 0x2B8Dd0a4757b796416B14223DCDad9C1775860Dd.sol
Tool Runtime = 3.4669372769985785 seconds
#############################################