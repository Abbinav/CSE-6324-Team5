[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SimpleYearnFinance
Line:        87
Source: 
>     using SafeMath for uint256;
>     string public symbol = "SYF";
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public  name = "Simple Yearn Finance";

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SimpleYearnFinance
Line:        88
Source: 
>     string public symbol = "SYF";
>     string public  name = "Simple Yearn Finance";
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public decimals = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SimpleYearnFinance
Line:        89
Source: 
>     string public  name = "Simple Yearn Finance";
>     uint256 public decimals = 18;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 _totalSupply = 50e3* 10 ** uint(decimals);

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SimpleYearnFinance
Line:        90
Source: 
>     uint256 public decimals = 18;
>     uint256 _totalSupply = 50e3* 10 ** uint(decimals);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        75
Source: 
> 
>     function transferOwnership(address _newOwner) public onlyOwner {
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         newOwner = _newOwner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SimpleYearnFinance
Line:        128
Source: 
>     // ------------------------------------------------------------------------
>     function balanceOf(address tokenOwner) public view returns (uint256 balance) {
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return balances[tokenOwner];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SimpleYearnFinance
Line:        137
Source: 
>     // ------------------------------------------------------------------------
>     function transfer(address to, uint256 tokens) public returns (bool success) {
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // prevent transfer to 0x0, use burn instead

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SimpleYearnFinance
Line:        153
Source: 
>     // ------------------------------------------------------------------------
>     function approve(address spender, uint256 tokens) public returns (bool success){
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowed[msg.sender][spender] = tokens;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SimpleYearnFinance
Line:        168
Source: 
>     // ------------------------------------------------------------------------
>     function transferFrom(address payable from, address to, uint256 tokens) public returns (bool success){
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(tokens <= allowed[from][msg.sender]); //check allowance

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SimpleYearnFinance
Line:        183
Source: 
>     // ------------------------------------------------------------------------
>     function allowance(address tokenOwner, address spender) public view returns (uint256 remaining) {
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return allowed[tokenOwner][spender];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SimpleYearnFinance
Line:        187
Source: 
>     
>     function transferFromContract(address to, uint256 tokens) public onlyOwner returns (bool success){
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(to,tokens);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SimpleYearnFinance
Line:        203
Source: 
> 
>     function openLock(address _address) public onlyOwner{
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // open lock and transfer to respective address

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Locked Ether
Description: Contracts that may receive ether must also allow users to
             extract the deposited ether from the contract.
Type:        Violation
Contract:    SimpleYearnFinance
Line:        85
Source: 
> // ----------------------------------------------------------------------------
> contract SimpleYearnFinance is ERC20Interface, Owned {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     using SafeMath for uint256;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SimpleYearnFinance
Line:        168
Source: 
>     // ------------------------------------------------------------------------
>     function transferFrom(address payable from, address to, uint256 tokens) public returns (bool success){
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(tokens <= allowed[from][msg.sender]); //check allowance

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SimpleYearnFinance
Line:        187
Source: 
>     
>     function transferFromContract(address to, uint256 tokens) public onlyOwner returns (bool success){
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(to,tokens);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Owned
Line:        75
Source: 
> 
>     function transferOwnership(address _newOwner) public onlyOwner {
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         newOwner = _newOwner;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SimpleYearnFinance
Line:        128
Source: 
>     // ------------------------------------------------------------------------
>     function balanceOf(address tokenOwner) public view returns (uint256 balance) {
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return balances[tokenOwner];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SimpleYearnFinance
Line:        153
Source: 
>     // ------------------------------------------------------------------------
>     function approve(address spender, uint256 tokens) public returns (bool success){
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowed[msg.sender][spender] = tokens;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SimpleYearnFinance
Line:        183
Source: 
>     // ------------------------------------------------------------------------
>     function allowance(address tokenOwner, address spender) public view returns (uint256 remaining) {
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return allowed[tokenOwner][spender];

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SimpleYearnFinance
Line:        97
Source: 
> 
>     struct walletDetail{
>         ^^^^^^^^^^^^^^^^
>         uint256 tokens;

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SimpleYearnFinance
Line:        90
Source: 
>     uint256 public decimals = 18;
>     uint256 _totalSupply = 50e3* 10 ** uint(decimals);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SimpleYearnFinance
Line:        92
Source: 
>     
>     mapping(address => uint256) balances;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => mapping(address => uint256)) allowed;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SimpleYearnFinance
Line:        93
Source: 
>     mapping(address => uint256) balances;
>     mapping(address => mapping(address => uint256)) allowed;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SimpleYearnFinance
Line:        95
Source: 
>     
>     mapping(address => walletDetail) walletsAllocation;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Owned
Line:        62
Source: 
>     address public owner;
>     address public newOwner;
>         ^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    SimpleYearnFinance
Line:        154
Source: 
>     function approve(address spender, uint256 tokens) public returns (bool success){
>         allowed[msg.sender][spender] = tokens;
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(msg.sender,spender,tokens);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Owned
Line:        62
Source: 
>     address public owner;
>     address public newOwner;
>         ^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SimpleYearnFinance
Line:        87
Source: 
>     using SafeMath for uint256;
>     string public symbol = "SYF";
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public  name = "Simple Yearn Finance";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SimpleYearnFinance
Line:        88
Source: 
>     string public symbol = "SYF";
>     string public  name = "Simple Yearn Finance";
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public decimals = 18;

[0m

---------------------------------------------
For contract 0xeb60d429e02928e494516ce0a81f185ef52f20d4.sol
Tool Runtime = 4.189433593000103 seconds
#############################################