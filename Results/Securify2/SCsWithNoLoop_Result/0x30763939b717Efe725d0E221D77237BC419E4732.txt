[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    TokenLockerII
Line:        57
Source: 
>     
>     uint ONE_DAY = 60*60*24;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>    

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Locked Ether
Description: Contracts that may receive ether must also allow users to
             extract the deposited ether from the contract.
Type:        Violation
Contract:    TokenLockerII
Line:        53
Source: 
> 
> contract TokenLockerII  {
> ^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenLockerII
Line:        70
Source: 
>     
>     function lockToken(address tokenAddress, uint lockDays, uint lockQty) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(ERC20Token(tokenAddress).balanceOf(address(this)) == 0,"tokenAddressUsed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenLockerII
Line:        77
Source: 
>     
>     function unlockToken(address tokenAddress, uint withdrawAmount) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(lockedTokensData[msg.sender][tokenAddress].unlockTime <= now, "timeNotElapsed");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenLockerII
Line:        57
Source: 
>     
>     uint ONE_DAY = 60*60*24;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>    

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenLockerII
Line:        61
Source: 
> 
>     struct lockedTokenSlot {
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         address tokenAddress;

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        9
Source: 
> 
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    TokenLockerII
Line:        57
Source: 
>     
>     uint ONE_DAY = 60*60*24;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>    

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenLockerII
Line:        71
Source: 
>     function lockToken(address tokenAddress, uint lockDays, uint lockQty) external {
>         require(ERC20Token(tokenAddress).balanceOf(address(this)) == 0,"tokenAddressUsed");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ERC20Token(tokenAddress).transferFrom(address(msg.sender), address(this), lockQty);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenLockerII
Line:        72
Source: 
>         require(ERC20Token(tokenAddress).balanceOf(address(this)) == 0,"tokenAddressUsed");
>         ERC20Token(tokenAddress).transferFrom(address(msg.sender), address(this), lockQty);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint finishTime = now + (lockDays*ONE_DAY);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenLockerII
Line:        79
Source: 
>         require(lockedTokensData[msg.sender][tokenAddress].unlockTime <= now, "timeNotElapsed");
>         ERC20Token(lockedTokensData[msg.sender][tokenAddress].tokenAddress).approve(address(this),withdrawAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ERC20Token(lockedTokensData[msg.sender][tokenAddress].tokenAddress).transferFrom(address(this),address(msg.sender),withdrawAmount);        

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenLockerII
Line:        80
Source: 
>         ERC20Token(lockedTokensData[msg.sender][tokenAddress].tokenAddress).approve(address(this),withdrawAmount);
>         ERC20Token(lockedTokensData[msg.sender][tokenAddress].tokenAddress).transferFrom(address(this),address(msg.sender),withdrawAmount);        
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenLockerII
Line:        74
Source: 
>         uint finishTime = now + (lockDays*ONE_DAY);
>         lockedTokensData[msg.sender][tokenAddress] = lockedTokenSlot(tokenAddress, finishTime);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TokenLockerII
Line:        72
Source: 
>         require(ERC20Token(tokenAddress).balanceOf(address(this)) == 0,"tokenAddressUsed");
>         ERC20Token(tokenAddress).transferFrom(address(msg.sender), address(this), lockQty);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint finishTime = now + (lockDays*ONE_DAY);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TokenLockerII
Line:        79
Source: 
>         require(lockedTokensData[msg.sender][tokenAddress].unlockTime <= now, "timeNotElapsed");
>         ERC20Token(lockedTokensData[msg.sender][tokenAddress].tokenAddress).approve(address(this),withdrawAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ERC20Token(lockedTokensData[msg.sender][tokenAddress].tokenAddress).transferFrom(address(this),address(msg.sender),withdrawAmount);        

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TokenLockerII
Line:        80
Source: 
>         ERC20Token(lockedTokensData[msg.sender][tokenAddress].tokenAddress).approve(address(this),withdrawAmount);
>         ERC20Token(lockedTokensData[msg.sender][tokenAddress].tokenAddress).transferFrom(address(this),address(msg.sender),withdrawAmount);        
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeMath
Line:        40
Source: 
>     uint d = sub(c,1);
>     return mul(div(d,m),m);
>                ^^^^^^^^
>   }

[0m

---------------------------------------------
For contract 0x30763939b717Efe725d0E221D77237BC419E4732.sol
Tool Runtime = 2.6337729670003682 seconds
#############################################