[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GovActions
Line:        35
Source: 
> contract GovActions {
>     function file(address who, bytes32 what, address data) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).file(what, data);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GovActions
Line:        39
Source: 
> 
>     function file(address who, bytes32 what, uint data) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).file(what, data);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GovActions
Line:        43
Source: 
> 
>     function file(address who, bytes32 ilk, bytes32 what, uint data) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).file(ilk, what, data);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GovActions
Line:        47
Source: 
> 
>     function file(address who, bytes32 ilk, bytes32 what, address data) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).file(ilk, what, data);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GovActions
Line:        51
Source: 
> 
>     function dripAndFile(address who, bytes32 what, uint data) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).drip();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GovActions
Line:        56
Source: 
> 
>     function dripAndFile(address who, bytes32 ilk, bytes32 what, uint data) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).drip(ilk);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GovActions
Line:        61
Source: 
> 
>     function rely(address who, address to) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).rely(to);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GovActions
Line:        65
Source: 
> 
>     function deny(address who, address to) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).deny(to);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GovActions
Line:        69
Source: 
> 
>     function init(address who, bytes32 ilk) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).init(ilk);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GovActions
Line:        73
Source: 
> 
>     function cage(address end) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         EndLike(end).cage();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GovActions
Line:        77
Source: 
> 
>     function setAuthority(address pause, address newAuthority) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         PauseLike(pause).setAuthority(newAuthority);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GovActions
Line:        81
Source: 
> 
>     function setDelay(address pause, uint newDelay) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         PauseLike(pause).setDelay(newDelay);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GovActions
Line:        85
Source: 
> 
>     function setAuthorityAndDelay(address pause, address newAuthority, uint newDelay) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         PauseLike(pause).setAuthority(newAuthority);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GovActions
Line:        35
Source: 
> contract GovActions {
>     function file(address who, bytes32 what, address data) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).file(what, data);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GovActions
Line:        39
Source: 
> 
>     function file(address who, bytes32 what, uint data) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).file(what, data);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GovActions
Line:        43
Source: 
> 
>     function file(address who, bytes32 ilk, bytes32 what, uint data) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).file(ilk, what, data);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GovActions
Line:        47
Source: 
> 
>     function file(address who, bytes32 ilk, bytes32 what, address data) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).file(ilk, what, data);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GovActions
Line:        51
Source: 
> 
>     function dripAndFile(address who, bytes32 what, uint data) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).drip();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GovActions
Line:        56
Source: 
> 
>     function dripAndFile(address who, bytes32 ilk, bytes32 what, uint data) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).drip(ilk);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GovActions
Line:        61
Source: 
> 
>     function rely(address who, address to) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).rely(to);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GovActions
Line:        65
Source: 
> 
>     function deny(address who, address to) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).deny(to);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GovActions
Line:        69
Source: 
> 
>     function init(address who, bytes32 ilk) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).init(ilk);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GovActions
Line:        73
Source: 
> 
>     function cage(address end) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         EndLike(end).cage();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GovActions
Line:        77
Source: 
> 
>     function setAuthority(address pause, address newAuthority) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         PauseLike(pause).setAuthority(newAuthority);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GovActions
Line:        81
Source: 
> 
>     function setDelay(address pause, uint newDelay) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         PauseLike(pause).setDelay(newDelay);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GovActions
Line:        85
Source: 
> 
>     function setAuthorityAndDelay(address pause, address newAuthority, uint newDelay) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         PauseLike(pause).setAuthority(newAuthority);

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        7
Source: 
> //pragma solidity =0.5.12 >0.4.13 >0.4.20 >=0.4.23 >=0.5.0 <0.6.0 >=0.5.6 <0.6.0;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        36
Source: 
>     function file(address who, bytes32 what, address data) public {
>         Setter(who).file(what, data);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        40
Source: 
>     function file(address who, bytes32 what, uint data) public {
>         Setter(who).file(what, data);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        44
Source: 
>     function file(address who, bytes32 ilk, bytes32 what, uint data) public {
>         Setter(who).file(ilk, what, data);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        48
Source: 
>     function file(address who, bytes32 ilk, bytes32 what, address data) public {
>         Setter(who).file(ilk, what, data);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        52
Source: 
>     function dripAndFile(address who, bytes32 what, uint data) public {
>         Setter(who).drip();
>         ^^^^^^^^^^^^^^^^^^
>         Setter(who).file(what, data);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        53
Source: 
>         Setter(who).drip();
>         Setter(who).file(what, data);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        57
Source: 
>     function dripAndFile(address who, bytes32 ilk, bytes32 what, uint data) public {
>         Setter(who).drip(ilk);
>         ^^^^^^^^^^^^^^^^^^^^^
>         Setter(who).file(ilk, what, data);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        58
Source: 
>         Setter(who).drip(ilk);
>         Setter(who).file(ilk, what, data);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        62
Source: 
>     function rely(address who, address to) public {
>         Setter(who).rely(to);
>         ^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        66
Source: 
>     function deny(address who, address to) public {
>         Setter(who).deny(to);
>         ^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        70
Source: 
>     function init(address who, bytes32 ilk) public {
>         Setter(who).init(ilk);
>         ^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        74
Source: 
>     function cage(address end) public {
>         EndLike(end).cage();
>         ^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        78
Source: 
>     function setAuthority(address pause, address newAuthority) public {
>         PauseLike(pause).setAuthority(newAuthority);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        82
Source: 
>     function setDelay(address pause, uint newDelay) public {
>         PauseLike(pause).setDelay(newDelay);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        86
Source: 
>     function setAuthorityAndDelay(address pause, address newAuthority, uint newDelay) public {
>         PauseLike(pause).setAuthority(newAuthority);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         PauseLike(pause).setDelay(newDelay);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GovActions
Line:        87
Source: 
>         PauseLike(pause).setAuthority(newAuthority);
>         PauseLike(pause).setDelay(newDelay);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m

---------------------------------------------
For contract 0x88C2C56A55Ae64cAE81248B34C21C03F1a2B0329.sol
Tool Runtime = 2.427886897999997 seconds
#############################################