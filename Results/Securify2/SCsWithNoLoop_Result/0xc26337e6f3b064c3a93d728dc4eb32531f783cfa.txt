pragma directive defines a prior version to 0.5.12. Changing pragma version to 0.5.12....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SafeMath
Line:        75
Source: 
> 
>     constructor() public {
>                    ^^^^^^^
>         tokenname = "LPFINANCE";

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SafeMath
Line:        79
Source: 
>         decimals = 18;
>         _totalSupply = 1050 * 10**18;
>                                  ^^^^
>         balances[msg.sender] = _totalSupply;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SafeMath
Line:        82
Source: 
>         emit Transfer(address(0), msg.sender, _totalSupply);
>     }
> ^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SafeMath
Line:        84
Source: 
>     
>         function totalSupply() public view returns (uint) {        return _totalSupply  - balances[address(0)];
>                                                                                                           ^^^^^
>     }   function balanceOf(address tokenOwner) public view returns (uint balance) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SafeMath
Line:        82
Source: 
>         emit Transfer(address(0), msg.sender, _totalSupply);
>     }
> ^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SafeMath
Line:        84
Source: 
>     
>         function totalSupply() public view returns (uint) {        return _totalSupply  - balances[address(0)];
>                                                                                                           ^^^^^
>     }   function balanceOf(address tokenOwner) public view returns (uint balance) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    LPFfinance
Line:        101
Source: 
>         balances[to] = safeAdd(balances[to], tokens);
>         emit Transfer(msg.sender, to, tokens);
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true; } 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    LPFfinance
Line:        104
Source: 
>         
>         function transferFrom(address from, address to, uint tokens) public returns (bool success) {
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balances[from] = safeSub(balances[from], tokens);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    LPFfinance
Line:        106
Source: 
>         balances[from] = safeSub(balances[from], tokens);
>         allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balances[to] = safeAdd(balances[to], tokens);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    LPFfinance
Line:        109
Source: 
>         emit Transfer(from, to, tokens);
>         return true;
>                 ^^^^
>     }

[0m
Traceback (most recent call last):
  File "securify/__main__.py", line 286, in <module>
    main()
  File "securify/__main__.py", line 282, in main
    exclude_contracts=args.exclude_contracts)
  File "/sec/securify/analyses/analysis.py", line 148, in print_pattern_matches
    msg = format_match(analysis_context, pattern, match, include_contracts=include_contracts, exclude_contracts=exclude_contracts)
  File "/sec/securify/analyses/analysis.py", line 211, in format_match
    "^" * min(location.length, len(src_lines[line]) - indicator_offset - 2)
IndexError: list index out of range

---------------------------------------------
For contract 0xc26337e6f3b064c3a93d728dc4eb32531f783cfa.sol
Tool Runtime = 2.8850699559998247 seconds
#############################################