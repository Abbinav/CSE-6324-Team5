[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LibNote
Line:        40
Source: 
>         _;
>         assembly {
>         ^^^^^^^^^^
>             // log an 'anonymous' event with a constant 6 words of calldata

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Jug
Line:        100
Source: 
>     function rpow(uint x, uint n, uint b) internal pure returns (uint z) {
>       assembly {
>       ^^^^^^^^^^
>         switch x case 0 {switch n case 0 {z := b} default {z := 0}}

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Jug
Line:        145
Source: 
>     function file(bytes32 ilk, bytes32 what, uint data) external note auth {
>         require(now == ilks[ilk].rho, "Jug/rho-not-updated");
>                 ^^^^^^^^^^^^^^^^^^^^
>         if (what == "duty") ilks[ilk].duty = data;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Jug
Line:        153
Source: 
>     }
>     function file(bytes32 what, address data) external note auth {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (what == "vow") vow = data;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Jug
Line:        74
Source: 
>     mapping (address => uint) public wards;
>     function rely(address usr) external note auth { wards[usr] = 1; }
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function deny(address usr) external note auth { wards[usr] = 0; }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Jug
Line:        75
Source: 
>     function rely(address usr) external note auth { wards[usr] = 1; }
>     function deny(address usr) external note auth { wards[usr] = 0; }
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     modifier auth {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Jug
Line:        144
Source: 
>     }
>     function file(bytes32 ilk, bytes32 what, uint data) external note auth {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(now == ilks[ilk].rho, "Jug/rho-not-updated");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Jug
Line:        149
Source: 
>     }
>     function file(bytes32 what, uint data) external note auth {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (what == "base") base = data;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Jug
Line:        161
Source: 
>         require(now >= ilks[ilk].rho, "Jug/invalid-now");
>         (, uint prev) = vat.ilks(ilk);
>            ^^^^^^^^^
>         rate = rmul(rpow(add(base, ilks[ilk].duty), now - ilks[ilk].rho, ONE), prev);

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        11
Source: 
> //pragma solidity =0.5.12;
> pragma solidity >=0.5 <0.7.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Jug
Line:        122
Source: 
>     }
>     uint256 constant ONE = 10 ** 27;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function add(uint x, uint y) internal pure returns (uint z) {

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Jug
Line:        161
Source: 
>         require(now >= ilks[ilk].rho, "Jug/invalid-now");
>         (, uint prev) = vat.ilks(ilk);
>                         ^^^^^^^^^^^^^
>         rate = rmul(rpow(add(base, ilks[ilk].duty), now - ilks[ilk].rho, ONE), prev);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Jug
Line:        163
Source: 
>         rate = rmul(rpow(add(base, ilks[ilk].duty), now - ilks[ilk].rho, ONE), prev);
>         vat.fold(ilk, vow, diff(rate, prev));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ilks[ilk].rho = now;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Jug
Line:        89
Source: 
>     VatLike                  public vat;
>     address                  public vow;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256                  public base;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Jug
Line:        90
Source: 
>     address                  public vow;
>     uint256                  public base;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Jug
Line:        164
Source: 
>         vat.fold(ilk, vow, diff(rate, prev));
>         ilks[ilk].rho = now;
>         ^^^^^^^^^^^^^^^^^^^
>     }

[0m

---------------------------------------------
For contract 0xE85993AD2da1Ffd357190F5bCeAAF4233C0F441a.sol
Tool Runtime = 3.4215093190005064 seconds
#############################################