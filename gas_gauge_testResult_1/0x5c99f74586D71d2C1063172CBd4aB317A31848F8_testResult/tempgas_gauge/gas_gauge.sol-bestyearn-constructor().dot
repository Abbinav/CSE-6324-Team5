digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
info.admin = msg.sender

IRs:
REF_0(address) -> info.admin
REF_0 (->info) := msg.sender(address)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
info.totalSupply = INITIAL_SUPPLY

IRs:
REF_1(uint256) -> info.totalSupply
REF_1 (->info) := INITIAL_SUPPLY(uint256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
info.users[msg.sender].balance = INITIAL_SUPPLY

IRs:
REF_2(mapping(address => bestyearn.User)) -> info.users
REF_3(bestyearn.User) -> REF_2[msg.sender]
REF_4(uint256) -> REF_3.balance
REF_4 (->info) := INITIAL_SUPPLY(uint256)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
Transfer(address(0x0),msg.sender,INITIAL_SUPPLY)

IRs:
TMP_0 = CONVERT 0 to address
Emit Transfer(TMP_0.msg.sender.INITIAL_SUPPLY)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
whitelist(msg.sender,true)

IRs:
INTERNAL_CALL, bestyearn.whitelist(address,bool)(msg.sender,True)"];
}
