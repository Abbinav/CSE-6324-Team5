digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(frozenOf(msg.sender) >= _amount)

IRs:
TMP_98(uint256) = INTERNAL_CALL, bestyearn.frozenOf(address)(msg.sender)
TMP_99(bool) = TMP_98 >= _amount
TMP_100(None) = SOLIDITY_CALL require(bool)(TMP_99)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
_burnedAmount = _amount * BURN_RATE / 100

IRs:
TMP_101(uint256) = _amount (c)* BURN_RATE
TMP_102(uint256) = TMP_101 (c)/ 100
_burnedAmount(uint256) := TMP_102(uint256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
info.scaledPayoutPerToken += _burnedAmount * FLOAT_SCALAR / info.totalFrozen

IRs:
REF_87(uint256) -> info.scaledPayoutPerToken
TMP_103(uint256) = _burnedAmount (c)* FLOAT_SCALAR
REF_88(uint256) -> info.totalFrozen
TMP_104(uint256) = TMP_103 (c)/ REF_88
REF_87(-> info) = REF_87 (c)+ TMP_104"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
info.totalFrozen -= _amount

IRs:
REF_89(uint256) -> info.totalFrozen
REF_89(-> info) = REF_89 (c)- _amount"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
info.users[msg.sender].balance -= _burnedAmount

IRs:
REF_90(mapping(address => bestyearn.User)) -> info.users
REF_91(bestyearn.User) -> REF_90[msg.sender]
REF_92(uint256) -> REF_91.balance
REF_92(-> info) = REF_92 (c)- _burnedAmount"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
info.users[msg.sender].frozen -= _amount

IRs:
REF_93(mapping(address => bestyearn.User)) -> info.users
REF_94(bestyearn.User) -> REF_93[msg.sender]
REF_95(uint256) -> REF_94.frozen
REF_95(-> info) = REF_95 (c)- _amount"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
info.users[msg.sender].scaledPayout -= int256(_amount * info.scaledPayoutPerToken)

IRs:
REF_96(mapping(address => bestyearn.User)) -> info.users
REF_97(bestyearn.User) -> REF_96[msg.sender]
REF_98(int256) -> REF_97.scaledPayout
REF_99(uint256) -> info.scaledPayoutPerToken
TMP_105(uint256) = _amount (c)* REF_99
TMP_106 = CONVERT TMP_105 to int256
REF_98(-> info) = REF_98 (c)- TMP_106"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
Transfer(address(this),msg.sender,_amount - _burnedAmount)

IRs:
TMP_107 = CONVERT this to address
TMP_108(uint256) = _amount (c)- _burnedAmount
Emit Transfer(TMP_107.msg.sender.TMP_108)"];
8->9;
9[label="Node Type: EXPRESSION 9

EXPRESSION:
Unfreeze(msg.sender,_amount)

IRs:
Emit Unfreeze(msg.sender._amount)"];
}
